#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:3.78rad)
cetz.draw.content((0.07, 0.91),angle:3.78rad,[k(1)+k(3)])
cetz.draw.hobby((0.02, -0.60),(-0.23, 0.39),(0.57, 1.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.04, -0.43),angle:2.02rad,[1/2*p+1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.44, -0.79),(-0.97, -0.44),(-0.99, 0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.01rad)
cetz.draw.content((-0.62, 0.89),angle:4.01rad,[k(3)])
cetz.draw.hobby((-0.77, -0.13),(0.32, 1.22),(1.13, -0.32),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[1/2*p-1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((0.29, 0.36),angle:0.54rad,[1/2*p-1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.84, 0.64),angle:-2.44rad,[1/2*p+1/2*k(1)+1/2*k(3)])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[1/2*p+1/2*k(1)+1/2*k(3)])
cetz.draw.hobby((-0.55, 0.37),(-0.27, -0.58),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.45, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.49rad)
cetz.draw.content((0.60, -0.63),angle:1.49rad,[k(1)])
cetz.draw.hobby((-0.61, -0.11),(0.08, 0.07),(0.54, -0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.15, 0.81),node5.pos,decoration:"arrow",angle:3.77rad)
cetz.draw.content((0.08, 0.91),angle:3.77rad,[k(1)+k(3)])
cetz.draw.hobby((0.03, -0.61),(-0.23, 0.39),(0.56, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.80rad)
cetz.draw.content((-1.05, -0.37),angle:4.80rad,[p-k(1)-2*k(3)])
cetz.draw.hobby((-0.97, -0.53),(0.78, -1.55),(1.66, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node3.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[p-2*k(3)])
cetz.draw.hobby((0.48, -0.73),(0.93, 0.63),(-0.46, 0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:3.93rad)
cetz.draw.content((0.10, -0.27),angle:3.93rad,[k(3)])
cetz.draw.hobby((-0.11, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.11, -0.48),angle:2.48rad,[k(3)])
cetz.draw.hobby((-0.45, -0.14),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.84, 0.64),angle:-2.44rad,[p-k(3)])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p-k(3)])
cetz.draw.hobby((-0.55, 0.37),(-0.27, -0.58),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.45, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.60, -0.63),angle:1.50rad,[k(1)])
cetz.draw.hobby((-0.61, -0.11),(0.07, 0.06),(0.54, -0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.15, 0.81),node5.pos,decoration:"arrow",angle:3.77rad)
cetz.draw.content((0.08, 0.91),angle:3.77rad,[k(1)+k(3)])
cetz.draw.hobby((0.03, -0.61),(-0.23, 0.39),(0.56, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.80rad)
cetz.draw.content((-1.05, -0.37),angle:4.80rad,[p-k(1)-k(3)])
cetz.draw.hobby((-0.97, -0.53),(0.78, -1.55),(1.66, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node3.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[p-k(3)])
cetz.draw.hobby((0.49, -0.72),(0.92, 0.63),(-0.46, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.43),node2.pos,decoration:"arrow",angle:1.65rad)
cetz.draw.content((0.71, -0.42),angle:1.65rad,[k(3)])
cetz.draw.hobby((-0.30, -0.44),(0.22, 0.01),(0.64, -0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.84, 0.64),angle:-2.44rad,[p])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:5.00rad)
cetz.draw.content((-0.46, -0.12),angle:5.00rad,[p])
cetz.draw.hobby((-0.55, 0.37),(-0.26, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:3.78rad)
cetz.draw.content((0.07, 0.91),angle:3.78rad,[k(1)+k(3)])
cetz.draw.hobby((0.02, -0.60),(-0.23, 0.39),(0.57, 1.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.39),node3.pos,decoration:"arrow",angle:2.04rad)
cetz.draw.content((-1.04, -0.45),angle:2.04rad,[p+k(1)-k(3)])
cetz.draw.hobby((-0.44, -0.80),(-0.97, -0.44),(-1.00, 0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.82),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.62, 0.89),angle:4.06rad,[p+k(1)])
cetz.draw.hobby((0.56, 1.24),(-0.59, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[p-k(3)])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((0.29, 0.36),angle:0.54rad,[p-k(3)])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.19rad)
cetz.draw.content((0.08, -0.03),angle:4.19rad,[k(3)])
cetz.draw.hobby((-0.15, -0.55),(0.41, 0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[k(3)])
cetz.draw.hobby((-0.49, 0.38),(0.29, -0.69),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[p])
cetz.draw.hobby((-0.57, 0.58),(0.05, 0.85),(0.71, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.04, -0.43),angle:2.02rad,[p+k(1)])
cetz.draw.hobby((-0.44, -0.79),(-0.97, -0.44),(-0.99, 0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.01rad)
cetz.draw.content((-0.62, 0.89),angle:4.01rad,[k(3)])
cetz.draw.hobby((-0.77, -0.13),(0.32, 1.22),(1.13, -0.32),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.46, -0.14),(0.28, -0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.04rad)
cetz.draw.content((0.88, 0.41),angle:-2.04rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.99, 0.76),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.84, 0.64),angle:-2.44rad,[p+k(1)+k(3)])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.55, 0.37),(-0.27, -0.58),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.37rad)
cetz.draw.content((0.60, -0.64),angle:1.37rad,[k(1)])
cetz.draw.hobby((-0.64, -0.08),(0.09, 0.14),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[p+k(3)])
cetz.draw.hobby((-0.57, 0.58),(0.05, 0.85),(0.71, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.39),node2.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-1.00, -0.49),angle:5.71rad,[k(3)])
cetz.draw.hobby((-1.84, 0.56),(0.59, 4.02),(2.31, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.82),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.62, 0.89),angle:4.06rad,[p+k(1)+2*k(3)])
cetz.draw.hobby((0.56, 1.24),(-0.59, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.46, -0.14),(0.28, -0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.04rad)
cetz.draw.content((0.88, 0.41),angle:-2.04rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.99, 0.76),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.08, -0.03),angle:1.05rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.15, -0.55),(0.41, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.69rad)
cetz.draw.content((-0.72, 0.56),angle:3.69rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.69, 0.51),(-0.69, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:3.78rad)
cetz.draw.content((0.07, 0.91),angle:3.78rad,[p+k(1)])
cetz.draw.hobby((0.02, -0.60),(-0.23, 0.39),(0.57, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.39),angle:4.82rad,[k(2)])
cetz.draw.hobby((-0.97, -0.54),(0.78, -1.56),(1.66, 0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.01rad)
cetz.draw.content((-0.62, 0.89),angle:4.01rad,[p])
cetz.draw.hobby((-0.77, -0.13),(0.32, 1.22),(1.13, -0.32),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.04rad)
cetz.draw.content((-0.46, -0.41),angle:2.04rad,[-(k(1)+k(2))])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.09, 0.31),angle:2.86rad,[-(k(1)+k(2))])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.84, 0.64),angle:-2.44rad,[p+k(1)+k(2)])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+k(1)+k(2)])
cetz.draw.hobby((-0.55, 0.37),(-0.27, -0.58),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[-p+k(3)])
cetz.draw.hobby((-0.57, 0.58),(0.05, 0.85),(0.71, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.39),node2.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-1.00, -0.49),angle:5.71rad,[k(3)])
cetz.draw.hobby((-1.84, 0.56),(0.59, 4.02),(2.31, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.82),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.62, 0.89),angle:4.06rad,[-p+k(1)+2*k(3)])
cetz.draw.hobby((0.56, 1.24),(-0.59, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.58rad)
cetz.draw.content((0.37, -0.37),angle:4.58rad,[k(1)+k(3)])
cetz.draw.hobby((0.39, -0.61),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[k(1)+k(3)])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.47, -0.12),angle:1.85rad,[-(-p+k(1)+k(3))])
cetz.draw.hobby((-0.55, 0.37),(-0.27, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.26rad)
cetz.draw.content((-0.14, 0.58),angle:3.26rad,[-(-p+k(1)+k(3))])
cetz.draw.hobby((-0.64, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.81),node3.pos,decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.18, 0.93),angle:2.86rad,[p+2*k(1)+k(3)])
cetz.draw.hobby((0.35, -0.66),(0.66, 0.47),(-0.47, 0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.39),node2.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-1.00, -0.49),angle:5.71rad,[k(3)])
cetz.draw.hobby((-1.84, 0.56),(0.59, 4.02),(2.31, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.82),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.62, 0.89),angle:4.06rad,[p+2*k(1)+2*k(3)])
cetz.draw.hobby((0.56, 1.24),(-0.59, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.46, -0.14),(0.28, -0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.04rad)
cetz.draw.content((0.88, 0.41),angle:-2.04rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.99, 0.76),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:0.12rad)
cetz.draw.content((-0.14, 0.58),angle:0.12rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.64, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.26, 0.61),angle:0.25rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.38, 0.51),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[k(2)])
cetz.draw.hobby((-0.57, 0.58),(0.05, 0.85),(0.71, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.04, -0.43),angle:2.02rad,[k(1)+k(2)])
cetz.draw.hobby((-0.44, -0.79),(-0.97, -0.44),(-0.99, 0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.01rad)
cetz.draw.content((-0.62, 0.89),angle:4.01rad,[-p-k(1)])
cetz.draw.hobby((-0.77, -0.13),(0.32, 1.22),(1.13, -0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.52),angle:-2.46rad,[-p+k(2)])
cetz.draw.hobby((1.12, 0.58),(0.87, -0.22),(0.19, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.15, -0.19),angle:5.35rad,[p])
cetz.draw.hobby((-0.49, 0.38),(0.29, -0.69),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.84, 0.64),angle:-2.44rad,[p])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:3.78rad)
cetz.draw.content((0.07, 0.91),angle:3.78rad,[k(1)+k(3)])
cetz.draw.hobby((0.02, -0.60),(-0.23, 0.39),(0.57, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.39),angle:4.82rad,[-p-k(1)+k(3)])
cetz.draw.hobby((-0.97, -0.54),(0.78, -1.56),(1.66, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.82),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.62, 0.89),angle:4.06rad,[-p+2*k(3)])
cetz.draw.hobby((0.56, 1.24),(-0.59, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.04rad)
cetz.draw.content((-0.46, -0.41),angle:2.04rad,[-(-p+k(3))])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.09, 0.31),angle:2.86rad,[-(-p+k(3))])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.19rad)
cetz.draw.content((0.08, -0.03),angle:4.19rad,[k(3)])
cetz.draw.hobby((-0.15, -0.55),(0.41, 0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[k(3)])
cetz.draw.hobby((-0.49, 0.38),(0.29, -0.69),stroke:stroke,mark: (end: ">"))
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.45, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.49rad)
cetz.draw.content((0.60, -0.63),angle:1.49rad,[k(1)])
cetz.draw.hobby((-0.61, -0.11),(0.08, 0.07),(0.54, -0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.15, 0.81),node5.pos,decoration:"arrow",angle:3.77rad)
cetz.draw.content((0.08, 0.91),angle:3.77rad,[k(1)+k(3)])
cetz.draw.hobby((0.03, -0.61),(-0.23, 0.39),(0.56, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.80rad)
cetz.draw.content((-1.05, -0.37),angle:4.80rad,[-p-k(1)])
cetz.draw.hobby((-0.97, -0.53),(0.78, -1.55),(1.66, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.03rad)
cetz.draw.content((-0.62, 0.89),angle:4.03rad,[k(3)])
cetz.draw.hobby((-0.76, -0.13),(0.33, 1.23),(1.15, -0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.52),angle:-2.46rad,[-p+k(3)])
cetz.draw.hobby((1.12, 0.58),(0.87, -0.21),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.86rad)
cetz.draw.content((-0.46, -0.12),angle:1.86rad,[p])
cetz.draw.hobby((-0.55, 0.37),(-0.26, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.26rad)
cetz.draw.content((-0.14, 0.58),angle:3.26rad,[p])
cetz.draw.hobby((-0.64, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.45, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.61, 0.77),angle:0.34rad,[k(0)+k(1)])
cetz.draw.hobby((1.79, 0.87),(3.80, -3.67),(-1.10, -2.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.60, -0.63),angle:1.50rad,[k(1)])
cetz.draw.hobby((-0.61, -0.11),(0.07, 0.06),(0.54, -0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.15, 0.81),node5.pos,decoration:"arrow",angle:3.77rad)
cetz.draw.content((0.08, 0.91),angle:3.77rad,[k(1)+k(3)])
cetz.draw.hobby((0.03, -0.61),(-0.23, 0.39),(0.56, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.80rad)
cetz.draw.content((-1.05, -0.37),angle:4.80rad,[-p-k(1)-k(3)])
cetz.draw.hobby((-0.97, -0.53),(0.78, -1.55),(1.66, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node3.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[-p-k(3)])
cetz.draw.hobby((0.49, -0.72),(0.92, 0.63),(-0.46, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.43),node2.pos,decoration:"arrow",angle:1.65rad)
cetz.draw.content((0.71, -0.42),angle:1.65rad,[k(3)])
cetz.draw.hobby((-0.30, -0.44),(0.22, 0.01),(0.64, -0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.61),angle:-2.89rad,[p])
cetz.draw.hobby((-0.38, 0.51),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.43),stroke:stroke,mark: (end: ">"))
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.37rad)
cetz.draw.content((0.60, -0.64),angle:1.37rad,[k(1)])
cetz.draw.hobby((-0.64, -0.08),(0.09, 0.14),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[-p-2*k(1)-k(3)])
cetz.draw.hobby((-0.57, 0.58),(0.05, 0.85),(0.71, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.39),node2.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-1.00, -0.49),angle:5.71rad,[k(3)])
cetz.draw.hobby((-1.84, 0.56),(0.59, 4.02),(2.31, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.82),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.62, 0.89),angle:4.06rad,[-p-k(1)])
cetz.draw.hobby((0.56, 1.24),(-0.59, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.46, -0.14),(0.28, -0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.04rad)
cetz.draw.content((0.88, 0.41),angle:-2.04rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.99, 0.76),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.47, -0.12),angle:1.85rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.55, 0.37),(-0.27, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.26rad)
cetz.draw.content((-0.14, 0.58),angle:3.26rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.64, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((0.60, -0.64),angle:1.38rad,[k(1)])
cetz.draw.hobby((-0.63, -0.08),(0.09, 0.13),(0.55, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.81),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[-p-2*k(1)-2*k(3)])
cetz.draw.hobby((-0.57, 0.58),(0.05, 0.85),(0.71, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.04, -0.43),angle:2.02rad,[-p-k(1)-2*k(3)])
cetz.draw.hobby((-0.44, -0.79),(-0.97, -0.44),(-0.99, 0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.01rad)
cetz.draw.content((-0.62, 0.89),angle:4.01rad,[k(3)])
cetz.draw.hobby((-0.77, -0.13),(0.32, 1.22),(1.13, -0.32),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.46, -0.14),(0.28, -0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.04rad)
cetz.draw.content((0.88, 0.41),angle:-2.04rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.99, 0.76),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.61),angle:-2.89rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.38, 0.51),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.19rad)
cetz.draw.content((0.08, -0.03),angle:4.19rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.15, -0.55),(0.41, 0.43),stroke:stroke,mark: (end: ">"))
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.40))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.45, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.38))
node(node3.pos)
let node4= (pos:(-0.17, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.92))
node(node5.pos)
edge(node1.pos,(0.65, 0.66),node0.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.61, 0.77),angle:0.33rad,[k(0)+k(1)])
cetz.draw.hobby((1.72, 0.85),(3.70, -3.54),(-1.07, -2.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[k(1)])
cetz.draw.hobby((-0.67, 0.87),(0.40, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.60, -0.63),angle:1.50rad,[k(1)])
cetz.draw.hobby((-0.61, -0.11),(0.07, 0.06),(0.54, -0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.15, 0.81),node5.pos,decoration:"arrow",angle:3.77rad)
cetz.draw.content((0.08, 0.91),angle:3.77rad,[k(1)+k(3)])
cetz.draw.hobby((0.03, -0.61),(-0.23, 0.39),(0.56, 1.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.80rad)
cetz.draw.content((-1.05, -0.37),angle:4.80rad,[-1/2*p-k(1)-1/2*k(3)])
cetz.draw.hobby((-0.97, -0.53),(0.78, -1.55),(1.66, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.82),node2.pos,decoration:"arrow",angle:4.02rad)
cetz.draw.content((-0.62, 0.89),angle:4.02rad,[k(3)])
cetz.draw.hobby((-0.77, -0.13),(0.32, 1.22),(1.14, -0.31),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((-0.55, -0.37),angle:-0.65rad,[-k(0)])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k(0)])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.04rad)
cetz.draw.content((-0.46, -0.41),angle:2.04rad,[-(-1/2*p-1/2*k(3))])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.09, 0.31),angle:2.86rad,[-(-1/2*p-1/2*k(3))])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.61),angle:-2.89rad,[-(-1/2*p+1/2*k(3))])
cetz.draw.hobby((-0.38, 0.51),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.19rad)
cetz.draw.content((0.08, -0.03),angle:4.19rad,[-(-1/2*p+1/2*k(3))])
cetz.draw.hobby((-0.15, -0.55),(0.41, 0.43),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [1, -1, -2, -1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,1/2 p+1/2 q+1/2 k[3]] prop[0,1/2 p+1/2 q-1/2 k[3]] prop[0,1/2 p-1/2 q-1/2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding1i0,)
[= embedding 2 [1, -1, -1, -2] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,p-k[3]] prop[0,p-2 k[3]] prop[0,p-q-2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding2i0,)
[= embedding 3 [1, -1, -1, -1] initial
Denominator:
```mathematica
prop[0,p] prop[0,k[3]] prop[0,q+k[3]] prop[0,p-k[3]] prop[0,p-q-k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding3i0,)
[= embedding 4 [1, 0, -1, -1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,p+q] prop[0,q+k[3]] prop[0,p-k[3]] prop[0,p+q-k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding4i0,)
[= embedding 5 [1, 0, -1, 0] initial
Denominator:
```mathematica
prop[0,p] prop[0,k[3]] prop[0,p+q] prop[0,q+k[3]] prop[0,p+q+k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding5i0,)
[= embedding 6 [1, 0, -1, 1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,p+k[3]] prop[0,q+k[3]] prop[0,p+q+k[3]] prop[0,p+q+2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding6i0,)
[= embedding 7 [1, 0, 0, -1] initial
Denominator:
```mathematica
prop[0,p] prop[0,k[2]] prop[0,p+q] prop[0,q+k[2]] prop[0,p+q+k[2]]
```]
grid(columns: cols,gutter: 20pt,embedding7i0,)
[= embedding 8 [1, 0, 1, -1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,-p+k[3]] prop[0,-p+q+k[3]] prop[0,-p+q+2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding8i0,)
[= embedding 9 [1, 1, -1, 1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,p+q+k[3]] prop[0,p+2 q+k[3]] prop[0,p+2 q+2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding9i0,)
[= embedding 10 [1, 1, 0, 1] initial
Denominator:
```mathematica
prop[0,k[2]] prop[0,-p] prop[0,q+k[2]] prop[0,-p+k[2]] prop[0,-p-q]
```]
grid(columns: cols,gutter: 20pt,embedding10i0,)
[= embedding 11 [1, 1, 1, -1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,-p+k[3]] prop[0,-p+2 k[3]] prop[0,-p-q+k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding11i0,)
[= embedding 12 [1, 1, 1, 0] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,-p] prop[0,q+k[3]] prop[0,-p+k[3]] prop[0,-p-q]
```]
grid(columns: cols,gutter: 20pt,embedding12i0,)
[= embedding 13 [1, 1, 1, 1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,-p] prop[0,q+k[3]] prop[0,-p-k[3]] prop[0,-p-q-k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding13i0,)
[= embedding 14 [1, 2, 1, 1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,-p-q] prop[0,-p-q-k[3]] prop[0,-p-2 q-k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding14i0,)
[= embedding 15 [1, 2, 1, 2] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,-p-q-k[3]] prop[0,-p-q-2 k[3]] prop[0,-p-2 q-2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding15i0,)
[= embedding 16 [1, 2, 2, 1] initial
Denominator:
```mathematica
prop[0,k[3]] prop[0,q+k[3]] prop[0,-1/2 p+1/2 k[3]] prop[0,-1/2 p-1/2 k[3]] prop[0,-1/2 p-q-1/2 k[3]]
```]
grid(columns: cols,gutter: 20pt,embedding16i0,)
}