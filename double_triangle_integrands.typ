#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.82))
node(node0.pos)
let node1= (pos:(0.54, -0.81))
node(node1.pos)
let node2= (pos:(-0.46, -0.02))
node(node2.pos)
let node3= (pos:(0.56, -0.03))
node(node3.pos)
let node4= (pos:(-0.53, 0.61))
node(node4.pos)
let node5= (pos:(-0.03, 0.52))
node(node5.pos)
edge(node1.pos,(0.01, -0.84),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.02, -0.96),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.88),(0.01, -0.90),(-0.41, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, -0.43),node1.pos,decoration:"wave",angle:-1.59rad)
cetz.draw.content((0.69, -0.43),angle:-1.59rad,[q])
cetz.draw.hobby((0.62, -0.10),(0.63, -0.42),(0.61, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.43),node2.pos,decoration:"wave",angle:4.64rad)
cetz.draw.content((-0.62, -0.42),angle:4.64rad,[q])
cetz.draw.hobby((-0.57, -0.74),(-0.56, -0.41),(-0.53, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.24),node5.pos,decoration:"arrow",angle:-2.23rad)
cetz.draw.content((-0.12, 0.16),angle:-2.23rad,[q+k[3]])
cetz.draw.hobby((-0.36, -0.02),(-0.17, 0.20),(-0.01, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.06, 0.24),node3.pos,decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.01, 0.14),angle:5.76rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.46, 0.49),(-0.03, 0.22),(0.42, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.58, 0.29),node2.pos,decoration:"arrow",angle:1.68rad)
cetz.draw.content((-0.70, 0.28),angle:1.68rad,[k[3]])
cetz.draw.hobby((-0.61, 0.56),(-0.64, 0.28),(-0.54, 0.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.71, -1.02),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.58, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.82, -0.79),angle:2.75rad,[-k[0]])
cetz.draw.hobby((0.66, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.77, 0.10),angle:0.07rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.65, 0.04),(0.90, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.46, 0.16),angle:0.50rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.09, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.43rad)
cetz.draw.content((0.43, 0.87),angle:0.43rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.03, 0.62),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.58rad)
cetz.draw.content((-0.84, 0.71),angle:5.58rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.65, 0.63),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.81))
node(node0.pos)
let node1= (pos:(0.51, -0.81))
node(node1.pos)
let node2= (pos:(-0.56, -0.03))
node(node2.pos)
let node3= (pos:(0.46, -0.02))
node(node3.pos)
let node4= (pos:(0.03, 0.53))
node(node4.pos)
let node5= (pos:(0.53, 0.61))
node(node5.pos)
edge(node1.pos,(-0.02, -0.84),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.02, -0.96),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.88),(-0.02, -0.90),(-0.44, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.51, -0.42),node1.pos,decoration:"wave",angle:-1.51rad)
cetz.draw.content((0.63, -0.42),angle:-1.51rad,[q])
cetz.draw.hobby((0.53, -0.09),(0.56, -0.41),(0.57, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.57, -0.42),node2.pos,decoration:"wave",angle:4.73rad)
cetz.draw.content((-0.69, -0.43),angle:4.73rad,[q])
cetz.draw.hobby((-0.61, -0.74),(-0.63, -0.42),(-0.62, -0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.05, 0.25),node5.pos,decoration:"arrow",angle:-2.62rad)
cetz.draw.content((0.01, 0.14),angle:-2.62rad,[q+k[3]])
cetz.draw.hobby((-0.42, -0.02),(0.03, 0.23),(0.46, 0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.30),node5.pos,decoration:"arrow",angle:1.46rad)
cetz.draw.content((0.70, 0.28),angle:1.46rad,[p-q-2 k[3]])
cetz.draw.hobby((0.55, 0.01),(0.64, 0.28),(0.61, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.22, 0.24),node3.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((0.12, 0.17),angle:5.38rad,[p-2 k[3]])
cetz.draw.hobby((0.01, 0.44),(0.17, 0.20),(0.36, -0.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.72, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.61, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((0.80, -0.79),angle:2.78rad,[-k[0]])
cetz.draw.hobby((0.63, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((0.57, 0.37),angle:2.64rad,[k[3]])
cetz.draw.hobby((0.15, 0.53),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.08rad)
cetz.draw.content((-0.79, -0.13),angle:3.08rad,[k[3]])
cetz.draw.hobby((-0.90, -0.07),(-0.66, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.70rad)
cetz.draw.content((0.69, 0.90),angle:0.70rad,[p-k[3]])
cetz.draw.hobby((0.57, 0.72),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.85rad)
cetz.draw.content((-0.54, 0.65),angle:5.85rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.90),(-0.09, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.69, -0.64))
node(node0.pos)
let node1= (pos:(0.31, -0.78))
node(node1.pos)
let node2= (pos:(-0.78, 0.53))
node(node2.pos)
let node3= (pos:(-0.42, -0.13))
node(node3.pos)
let node4= (pos:(0.86, 0.51))
node(node4.pos)
let node5= (pos:(-0.01, 0.44))
node(node5.pos)
edge(node1.pos,(-0.20, -0.76),node0.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.21, -0.88),angle:3.00rad,[q+k[0]])
cetz.draw.hobby((0.21, -0.84),(-0.21, -0.82),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.03, -0.45),node1.pos,decoration:"wave",angle:-0.73rad)
cetz.draw.content((0.05, -0.36),angle:-0.73rad,[q])
cetz.draw.hobby((-0.30, -0.14),(-0.00, -0.40),(0.28, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.06),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.91, -0.06),angle:4.79rad,[q])
cetz.draw.hobby((-0.77, -0.53),(-0.85, -0.06),(-0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.40, 0.54),node5.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.39, 0.66),angle:3.04rad,[q+k[3]])
cetz.draw.hobby((-0.71, 0.60),(-0.38, 0.60),(-0.07, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.15),node5.pos,decoration:"arrow",angle:0.96rad)
cetz.draw.content((-0.10, 0.08),angle:0.96rad,[p-q-k[3]])
cetz.draw.hobby((-0.32, -0.12),(-0.15, 0.11),(0.00, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.43, 0.49),node4.pos,decoration:"coil",angle:0.08rad)
cetz.draw.content((0.42, 0.61),angle:0.08rad,[p])
cetz.draw.hobby((0.07, 0.51),(0.42, 0.55),(0.77, 0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.28rad)
cetz.draw.content((-0.75, -0.90),angle:-2.28rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.96),(-0.71, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.69, -0.77),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.42, -0.75),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.29rad)
cetz.draw.content((1.04, 0.29),angle:-1.29rad,[p-k[3]])
cetz.draw.hobby((0.94, 0.43),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.74, -0.18),angle:6.06rad,[p-k[3]])
cetz.draw.hobby((-0.92, -0.08),(-0.53, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.43rad)
cetz.draw.content((0.81, 0.79),angle:4.43rad,[k[3]])
cetz.draw.hobby((0.83, 0.62),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-1.00, 0.71),angle:2.00rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.88, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.64))
node(node0.pos)
let node1= (pos:(0.52, -0.78))
node(node1.pos)
let node2= (pos:(-0.93, 0.49))
node(node2.pos)
let node3= (pos:(0.74, -0.05))
node(node3.pos)
let node4= (pos:(0.57, 0.67))
node(node4.pos)
let node5= (pos:(-0.48, 0.29))
node(node5.pos)
edge(node1.pos,(-0.05, -0.72),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.07, -0.84),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.83),(-0.06, -0.78),(-0.52, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.43),node1.pos,decoration:"wave",angle:-1.87rad)
cetz.draw.content((0.76, -0.46),angle:-1.87rad,[q])
cetz.draw.hobby((0.78, -0.14),(0.70, -0.44),(0.60, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node2.pos,decoration:"wave",angle:4.98rad)
cetz.draw.content((-0.91, -0.13),angle:4.98rad,[q])
cetz.draw.hobby((-0.72, -0.55),(-0.86, -0.10),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.67, 0.47),node5.pos,decoration:"arrow",angle:2.73rad)
cetz.draw.content((-0.62, 0.58),angle:2.73rad,[q+k[3]])
cetz.draw.hobby((-0.88, 0.56),(-0.64, 0.52),(-0.46, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.67, 0.32),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.78, 0.35),angle:-1.34rad,[p+q-k[3]])
cetz.draw.hobby((0.65, 0.61),(0.73, 0.32),(0.79, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.05, 0.49),node4.pos,decoration:"coil",angle:0.35rad)
cetz.draw.content((0.01, 0.61),angle:0.35rad,[p+q])
cetz.draw.hobby((-0.40, 0.39),(0.02, 0.55),(0.45, 0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.38rad)
cetz.draw.content((-0.73, -0.90),angle:-2.38rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.65, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.81, -0.78),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.64, -0.76),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.20rad)
cetz.draw.content((0.85, 0.09),angle:0.20rad,[p-k[3]])
cetz.draw.hobby((0.83, 0.03),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.68, 0.04),angle:0.50rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.54, 0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.80rad)
cetz.draw.content((0.71, 0.93),angle:3.80rad,[k[3]])
cetz.draw.hobby((0.61, 0.78),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.71rad)
cetz.draw.content((-1.08, 0.73),angle:1.71rad,[k[3]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.81))
node(node0.pos)
let node1= (pos:(0.46, -0.74))
node(node1.pos)
let node2= (pos:(-0.77, -0.09))
node(node2.pos)
let node3= (pos:(0.23, 0.16))
node(node3.pos)
let node4= (pos:(-0.65, 0.63))
node(node4.pos)
let node5= (pos:(0.91, 0.48))
node(node5.pos)
edge(node1.pos,(-0.05, -0.80),node0.pos,decoration:"arrow",angle:-3.07rad)
cetz.draw.content((-0.05, -0.92),angle:-3.07rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.82),(-0.05, -0.86),(-0.47, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, -0.30),node1.pos,decoration:"wave",angle:-1.32rad)
cetz.draw.content((0.47, -0.27),angle:-1.32rad,[q])
cetz.draw.hobby((0.31, 0.09),(0.41, -0.27),(0.50, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.68, -0.46),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.80, -0.49),angle:4.97rad,[q])
cetz.draw.hobby((-0.66, -0.76),(-0.74, -0.47),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, 0.34),node5.pos,decoration:"arrow",angle:0.44rad)
cetz.draw.content((0.52, 0.45),angle:0.44rad,[p])
cetz.draw.hobby((0.26, 0.25),(0.54, 0.39),(0.82, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.42),node3.pos,decoration:"arrow",angle:-0.50rad)
cetz.draw.content((-0.14, 0.52),angle:-0.50rad,[p+q])
cetz.draw.hobby((-0.53, 0.65),(-0.17, 0.47),(0.18, 0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.72, 0.29),node2.pos,decoration:"arrow",angle:1.40rad)
cetz.draw.content((-0.84, 0.31),angle:1.40rad,[k[3]])
cetz.draw.hobby((-0.72, 0.58),(-0.78, 0.28),(-0.82, -0.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.74, -1.02),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.64, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.78, -0.76),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.58, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.93, -0.16),angle:5.91rad,[-q-k[3]])
cetz.draw.hobby((-0.93, -0.09),(-0.88, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.39rad)
cetz.draw.content((1.07, 0.26),angle:-1.39rad,[-q-k[3]])
cetz.draw.hobby((0.99, 0.39),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[p+q+k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.48rad)
cetz.draw.content((-0.91, 0.73),angle:5.48rad,[p+q+k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.76, 0.66),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.76))
node(node0.pos)
let node1= (pos:(0.33, -0.65))
node(node1.pos)
let node2= (pos:(-0.55, 0.03))
node(node2.pos)
let node3= (pos:(-0.34, 0.47))
node(node3.pos)
let node4= (pos:(0.54, 0.73))
node(node4.pos)
let node5= (pos:(0.63, 0.22))
node(node5.pos)
edge(node1.pos,(-0.12, -0.74),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((-0.11, -0.86),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.26, -0.73),(-0.12, -0.80),(-0.50, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, -0.10),node1.pos,decoration:"wave",angle:5.26rad)
cetz.draw.content((-0.10, -0.17),angle:5.26rad,[q])
cetz.draw.hobby((-0.33, 0.33),(-0.06, -0.12),(0.21, -0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.59, -0.37),node2.pos,decoration:"wave",angle:4.67rad)
cetz.draw.content((-0.71, -0.36),angle:4.67rad,[q])
cetz.draw.hobby((-0.66, -0.68),(-0.65, -0.36),(-0.62, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, 0.35),node5.pos,decoration:"arrow",angle:-0.25rad)
cetz.draw.content((0.19, 0.46),angle:-0.25rad,[p+k[3]])
cetz.draw.hobby((-0.23, 0.50),(0.16, 0.41),(0.55, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.40),node2.pos,decoration:"arrow",angle:0.57rad)
cetz.draw.content((-0.07, 0.50),angle:0.57rad,[k[3]])
cetz.draw.hobby((0.40, 0.72),(-0.05, 0.44),(-0.48, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, 0.49),node4.pos,decoration:"coil",angle:1.76rad)
cetz.draw.content((0.78, 0.52),angle:1.76rad,[p+q+2 k[3]])
cetz.draw.hobby((0.71, 0.25),(0.72, 0.50),(0.62, 0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((-0.73, -0.98),angle:-2.60rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.00),(-0.65, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.72, -0.72),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.45, -0.64),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.08rad)
cetz.draw.content((-0.77, -0.10),angle:0.08rad,[-q-k[3]])
cetz.draw.hobby((-0.90, -0.05),(-0.65, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.53rad)
cetz.draw.content((0.88, 0.21),angle:-0.53rad,[-q-k[3]])
cetz.draw.hobby((0.75, 0.22),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.71, 0.97),angle:0.52rad,[p+q+k[3]])
cetz.draw.hobby((0.59, 0.84),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.60rad)
cetz.draw.content((-0.75, 0.64),angle:5.60rad,[p+q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.46, 0.49),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.60))
node(node0.pos)
let node1= (pos:(0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.74, 0.51))
node(node2.pos)
let node3= (pos:(0.54, 0.06))
node(node3.pos)
let node4= (pos:(0.74, 0.75))
node(node4.pos)
let node5= (pos:(0.06, 0.55))
node(node5.pos)
edge(node1.pos,(-0.06, -0.69),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.07, -0.81),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.51, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, -0.35),node1.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((0.66, -0.35),angle:-1.62rad,[q])
cetz.draw.hobby((0.61, -0.01),(0.61, -0.34),(0.58, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.05),node2.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.81, -0.07),angle:4.83rad,[q])
cetz.draw.hobby((-0.68, -0.50),(-0.76, -0.06),(-0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.35, 0.55),node5.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.36, 0.67),angle:3.20rad,[p+q])
cetz.draw.hobby((-0.67, 0.58),(-0.35, 0.61),(-0.02, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, 0.28),node5.pos,decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.19, 0.20),angle:2.35rad,[k[2]])
cetz.draw.hobby((0.45, 0.05),(0.23, 0.24),(0.04, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.70, 0.40),node3.pos,decoration:"arrow",angle:-1.85rad)
cetz.draw.content((0.82, 0.36),angle:-1.85rad,[q+k[2]])
cetz.draw.hobby((0.80, 0.68),(0.76, 0.37),(0.63, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.72),node4.pos,decoration:"coil",angle:0.27rad)
cetz.draw.content((0.35, 0.83),angle:0.27rad,[p+q+k[2]])
cetz.draw.hobby((0.08, 0.65),(0.36, 0.77),(0.67, 0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
cetz.draw.content((-0.72, -0.88),angle:-2.35rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.63, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.81, -0.76),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.62, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.91rad)
cetz.draw.content((0.79, 0.96),angle:3.91rad,[p])
cetz.draw.hobby((0.77, 0.86),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.06rad)
cetz.draw.content((-0.98, 0.70),angle:2.06rad,[p])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.28, -0.00))
node(node2.pos)
let node3= (pos:(0.60, 0.47))
node(node3.pos)
let node4= (pos:(-0.60, 0.73))
node(node4.pos)
let node5= (pos:(-0.55, 0.21))
node(node5.pos)
edge(node1.pos,(0.16, -0.74),node0.pos,decoration:"arrow",angle:-3.03rad)
cetz.draw.content((0.17, -0.86),angle:-3.03rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.73),(0.16, -0.80),(-0.24, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.68, -0.09),node1.pos,decoration:"wave",angle:-1.54rad)
cetz.draw.content((0.80, -0.09),angle:-1.54rad,[q])
cetz.draw.hobby((0.69, 0.37),(0.74, -0.08),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.38),node2.pos,decoration:"wave",angle:4.02rad)
cetz.draw.content((-0.14, -0.30),angle:4.02rad,[q])
cetz.draw.hobby((-0.33, -0.64),(-0.08, -0.33),(0.17, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, 0.38),node5.pos,decoration:"arrow",angle:3.36rad)
cetz.draw.content((0.02, 0.49),angle:3.36rad,[-p+k[3]])
cetz.draw.hobby((0.48, 0.52),(0.01, 0.43),(-0.45, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.15, 0.39),node2.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.08, 0.48),angle:2.45rad,[k[3]])
cetz.draw.hobby((-0.47, 0.71),(-0.11, 0.43),(0.24, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.65, 0.47),node4.pos,decoration:"coil",angle:1.67rad)
cetz.draw.content((-0.77, 0.46),angle:1.67rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.63, 0.22),(-0.71, 0.45),(-0.68, 0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.63, -0.99),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.41, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((0.90, -0.74),angle:2.36rad,[-k[0]])
cetz.draw.hobby((0.75, -0.67),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.64, 0.12),angle:3.14rad,[q+k[3]])
cetz.draw.hobby((0.38, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.72, -0.00),angle:-2.70rad,[q+k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.61, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.54rad)
cetz.draw.content((-0.87, 0.76),angle:2.54rad,[p-q-k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.72, 0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.07rad)
cetz.draw.content((0.71, 0.81),angle:4.07rad,[p-q-k[3]])
cetz.draw.hobby((0.62, 0.59),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.66))
node(node1.pos)
let node2= (pos:(-0.70, -0.17))
node(node2.pos)
let node3= (pos:(0.76, 0.44))
node(node3.pos)
let node4= (pos:(0.01, 0.16))
node(node4.pos)
let node5= (pos:(-0.02, 0.60))
node(node5.pos)
edge(node1.pos,(0.04, -0.77),node0.pos,decoration:"arrow",angle:-2.99rad)
cetz.draw.content((0.06, -0.89),angle:-2.99rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.75),(0.05, -0.83),(-0.40, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, -0.13),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.14),angle:-1.72rad,[q])
cetz.draw.hobby((0.81, 0.32),(0.76, -0.13),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.51),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.75, -0.55),angle:4.97rad,[q])
cetz.draw.hobby((-0.61, -0.79),(-0.69, -0.52),(-0.75, -0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.40, 0.30),node3.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.45, 0.19),angle:0.36rad,[p+2 q+k[3]])
cetz.draw.hobby((0.11, 0.13),(0.41, 0.24),(0.71, 0.35),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, -0.01),node2.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((-0.30, -0.12),angle:0.43rad,[k[3]])
cetz.draw.hobby((-0.03, 0.07),(-0.32, -0.06),(-0.60, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, 0.38),node4.pos,decoration:"coil",angle:4.74rad)
cetz.draw.content((-0.24, 0.38),angle:4.74rad,[p+2 q+2 k[3]])
cetz.draw.hobby((-0.10, 0.60),(-0.18, 0.37),(-0.07, 0.15),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.72, -1.03),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.60, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.45rad)
cetz.draw.content((0.87, -0.74),angle:2.45rad,[-k[0]])
cetz.draw.hobby((0.71, -0.68),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.91, -0.19),angle:5.78rad,[-q-k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.53rad)
cetz.draw.content((0.55, 0.40),angle:-0.53rad,[-q-k[3]])
cetz.draw.hobby((0.10, 0.60),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.16rad)
cetz.draw.content((0.77, 0.77),angle:1.16rad,[p+q+k[3]])
cetz.draw.hobby((0.74, 0.55),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.55, 0.69),angle:5.89rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.13, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.60))
node(node0.pos)
let node1= (pos:(0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.74, 0.51))
node(node2.pos)
let node3= (pos:(0.54, 0.07))
node(node3.pos)
let node4= (pos:(0.06, 0.56))
node(node4.pos)
let node5= (pos:(0.74, 0.75))
node(node5.pos)
edge(node1.pos,(-0.06, -0.69),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.07, -0.81),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.50, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, -0.34),node1.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((0.66, -0.35),angle:-1.62rad,[q])
cetz.draw.hobby((0.61, -0.01),(0.60, -0.34),(0.58, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.05),node2.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.81, -0.07),angle:4.83rad,[q])
cetz.draw.hobby((-0.68, -0.50),(-0.75, -0.06),(-0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, 0.40),node5.pos,decoration:"arrow",angle:1.29rad)
cetz.draw.content((0.82, 0.36),angle:1.29rad,[k[2]])
cetz.draw.hobby((0.63, 0.09),(0.76, 0.37),(0.81, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, 0.29),node3.pos,decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.19, 0.20),angle:5.49rad,[q+k[2]])
cetz.draw.hobby((0.04, 0.46),(0.23, 0.24),(0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.55),node2.pos,decoration:"arrow",angle:0.06rad)
cetz.draw.content((-0.36, 0.67),angle:0.06rad,[-p-q])
cetz.draw.hobby((-0.02, 0.62),(-0.35, 0.61),(-0.67, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.72),node4.pos,decoration:"coil",angle:3.41rad)
cetz.draw.content((0.35, 0.83),angle:3.41rad,[-p+k[2]])
cetz.draw.hobby((0.67, 0.81),(0.37, 0.77),(0.08, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
cetz.draw.content((-0.72, -0.88),angle:-2.35rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.63, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.81, -0.76),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.62, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((-0.97, 0.70),angle:5.20rad,[p])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((0.79, 0.96),angle:0.77rad,[p])
cetz.draw.hobby((0.77, 0.86),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.66))
node(node0.pos)
let node1= (pos:(0.52, -0.83))
node(node1.pos)
let node2= (pos:(-0.76, 0.44))
node(node2.pos)
let node3= (pos:(0.70, -0.17))
node(node3.pos)
let node4= (pos:(0.02, 0.60))
node(node4.pos)
let node5= (pos:(-0.01, 0.16))
node(node5.pos)
edge(node1.pos,(-0.04, -0.77),node0.pos,decoration:"arrow",angle:2.99rad)
cetz.draw.content((-0.06, -0.89),angle:2.99rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.89),(-0.05, -0.83),(-0.50, -0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.52),node1.pos,decoration:"wave",angle:-1.83rad)
cetz.draw.content((0.75, -0.55),angle:-1.83rad,[q])
cetz.draw.hobby((0.75, -0.24),(0.70, -0.52),(0.61, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.12),node2.pos,decoration:"wave",angle:4.86rad)
cetz.draw.content((-0.82, -0.14),angle:4.86rad,[q])
cetz.draw.hobby((-0.68, -0.57),(-0.76, -0.12),(-0.81, 0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.40, 0.30),node5.pos,decoration:"arrow",angle:2.79rad)
cetz.draw.content((-0.45, 0.19),angle:2.79rad,[q+k[3]])
cetz.draw.hobby((-0.71, 0.35),(-0.41, 0.24),(-0.11, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, -0.01),node5.pos,decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.30, -0.12),angle:2.71rad,[-p-q+k[3]])
cetz.draw.hobby((0.60, -0.19),(0.32, -0.06),(0.03, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, 0.39),node4.pos,decoration:"coil",angle:1.56rad)
cetz.draw.content((0.24, 0.39),angle:1.56rad,[-p+2 k[3]])
cetz.draw.hobby((0.07, 0.15),(0.18, 0.37),(0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((-0.72, -0.92),angle:-2.44rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.98),(-0.63, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.80, -0.80),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.64, -0.81),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.61rad)
cetz.draw.content((-0.43, 0.20),angle:-2.61rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.04, 0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.79, 0.02),angle:3.64rad,[p-k[3]])
cetz.draw.hobby((0.76, -0.07),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.53rad)
cetz.draw.content((0.46, 0.91),angle:3.53rad,[k[3]])
cetz.draw.hobby((0.09, 0.69),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.98rad)
cetz.draw.content((-0.99, 0.67),angle:1.98rad,[k[3]])
cetz.draw.hobby((-1.02, 0.88),(-0.85, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.81))
node(node0.pos)
let node1= (pos:(0.46, -0.74))
node(node1.pos)
let node2= (pos:(-0.77, -0.09))
node(node2.pos)
let node3= (pos:(0.23, 0.16))
node(node3.pos)
let node4= (pos:(0.91, 0.48))
node(node4.pos)
let node5= (pos:(-0.65, 0.64))
node(node5.pos)
edge(node1.pos,(-0.05, -0.80),node0.pos,decoration:"arrow",angle:-3.07rad)
cetz.draw.content((-0.04, -0.92),angle:-3.07rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.82),(-0.05, -0.86),(-0.47, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, -0.30),node1.pos,decoration:"wave",angle:-1.32rad)
cetz.draw.content((0.47, -0.27),angle:-1.32rad,[q])
cetz.draw.hobby((0.31, 0.09),(0.41, -0.27),(0.50, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.68, -0.46),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.80, -0.49),angle:4.97rad,[q])
cetz.draw.hobby((-0.66, -0.76),(-0.74, -0.47),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.72, 0.29),node5.pos,decoration:"arrow",angle:4.54rad)
cetz.draw.content((-0.84, 0.31),angle:4.54rad,[q+k[3]])
cetz.draw.hobby((-0.82, -0.01),(-0.78, 0.29),(-0.72, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.42),node5.pos,decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.14, 0.53),angle:2.64rad,[-p-q])
cetz.draw.hobby((0.18, 0.27),(-0.17, 0.47),(-0.53, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.34),node3.pos,decoration:"arrow",angle:3.58rad)
cetz.draw.content((0.52, 0.45),angle:3.58rad,[-p])
cetz.draw.hobby((0.82, 0.51),(0.54, 0.39),(0.27, 0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
cetz.draw.content((-0.74, -1.01),angle:-2.72rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.64, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.78, -0.76),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.58, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:1.75rad)
cetz.draw.content((1.07, 0.26),angle:1.75rad,[k[3]])
cetz.draw.hobby((0.99, 0.39),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.79rad)
cetz.draw.content((-0.92, -0.16),angle:2.79rad,[k[3]])
cetz.draw.hobby((-0.93, -0.09),(-0.88, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.35rad)
cetz.draw.content((-0.91, 0.74),angle:2.35rad,[p-k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.76, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.54rad)
cetz.draw.content((0.84, 0.76),angle:4.54rad,[p-k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.63))
node(node0.pos)
let node1= (pos:(0.61, -0.81))
node(node1.pos)
let node2= (pos:(0.52, 0.54))
node(node2.pos)
let node3= (pos:(0.68, -0.11))
node(node3.pos)
let node4= (pos:(-0.87, 0.50))
node(node4.pos)
let node5= (pos:(-0.03, 0.39))
node(node5.pos)
edge(node1.pos,(0.14, -0.76),node0.pos,decoration:"arrow",angle:2.94rad)
cetz.draw.content((0.12, -0.87),angle:2.94rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.87),(0.14, -0.82),(-0.23, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, -0.47),node1.pos,decoration:"wave",angle:-1.68rad)
cetz.draw.content((0.79, -0.49),angle:-1.68rad,[q])
cetz.draw.hobby((0.75, -0.18),(0.73, -0.47),(0.68, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.09, -0.07),node2.pos,decoration:"wave",angle:-2.18rad)
cetz.draw.content((0.19, -0.14),angle:-2.18rad,[q])
cetz.draw.hobby((-0.17, -0.55),(0.16, -0.08),(0.49, 0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.23, 0.55),node5.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((0.20, 0.66),angle:0.26rad,[q+k[3]])
cetz.draw.hobby((0.47, 0.61),(0.21, 0.60),(-0.03, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.32, 0.12),node5.pos,decoration:"arrow",angle:2.53rad)
cetz.draw.content((0.25, 0.02),angle:2.53rad,[-p-q-k[3]])
cetz.draw.hobby((0.58, -0.12),(0.28, 0.07),(-0.00, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, 0.46),node4.pos,decoration:"coil",angle:3.01rad)
cetz.draw.content((-0.44, 0.58),angle:3.01rad,[-p])
cetz.draw.hobby((-0.10, 0.46),(-0.44, 0.51),(-0.78, 0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
cetz.draw.content((-0.59, -0.92),angle:-2.66rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.36, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.86, -0.80),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.72, -0.80),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.83rad)
cetz.draw.content((-0.82, 0.22),angle:-1.83rad,[p+k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.84, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.80, 0.06),angle:3.49rad,[p+k[3]])
cetz.draw.hobby((0.76, -0.02),(0.89, 0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.97rad)
cetz.draw.content((-1.05, 0.72),angle:4.97rad,[-k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.95, 0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.76rad)
cetz.draw.content((0.68, 0.86),angle:0.76rad,[-k[3]])
cetz.draw.hobby((0.55, 0.65),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.78))
node(node0.pos)
let node1= (pos:(0.62, -0.64))
node(node1.pos)
let node2= (pos:(-0.74, -0.05))
node(node2.pos)
let node3= (pos:(0.93, 0.49))
node(node3.pos)
let node4= (pos:(-0.57, 0.67))
node(node4.pos)
let node5= (pos:(0.48, 0.29))
node(node5.pos)
edge(node1.pos,(0.05, -0.72),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.07, -0.84),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.52, -0.72),(0.06, -0.78),(-0.40, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.79, -0.10),node1.pos,decoration:"wave",angle:-1.84rad)
cetz.draw.content((0.91, -0.13),angle:-1.84rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.10),(0.72, -0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.42),node2.pos,decoration:"wave",angle:5.01rad)
cetz.draw.content((-0.76, -0.46),angle:5.01rad,[q])
cetz.draw.hobby((-0.60, -0.72),(-0.70, -0.43),(-0.78, -0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.47),node5.pos,decoration:"arrow",angle:3.56rad)
cetz.draw.content((0.62, 0.58),angle:3.56rad,[-p-2 q-k[3]])
cetz.draw.hobby((0.88, 0.56),(0.64, 0.52),(0.46, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.32),node2.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.79, 0.35),angle:1.34rad,[k[3]])
cetz.draw.hobby((-0.65, 0.61),(-0.73, 0.32),(-0.79, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, 0.49),node4.pos,decoration:"coil",angle:2.80rad)
cetz.draw.content((-0.00, 0.60),angle:2.80rad,[-p-q])
cetz.draw.hobby((0.40, 0.38),(-0.02, 0.55),(-0.45, 0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.71, -1.00),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.59, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((0.89, -0.73),angle:2.38rad,[-k[0]])
cetz.draw.hobby((0.73, -0.66),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.08rad)
cetz.draw.content((-0.89, -0.14),angle:6.08rad,[-q-k[3]])
cetz.draw.hobby((-0.91, -0.08),(-0.85, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.50rad)
cetz.draw.content((0.80, 0.25),angle:-0.50rad,[-q-k[3]])
cetz.draw.hobby((0.60, 0.29),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.86, 0.74),angle:2.48rad,[p+q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.69, 0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.84, 0.76),angle:4.57rad,[p+q+k[3]])
cetz.draw.hobby((0.88, 0.60),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.80))
node(node0.pos)
let node1= (pos:(0.51, -0.81))
node(node1.pos)
let node2= (pos:(-0.56, -0.03))
node(node2.pos)
let node3= (pos:(0.46, -0.01))
node(node3.pos)
let node4= (pos:(0.54, 0.61))
node(node4.pos)
let node5= (pos:(0.03, 0.53))
node(node5.pos)
edge(node1.pos,(-0.02, -0.84),node0.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.02, -0.96),angle:3.13rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.88),(-0.02, -0.90),(-0.44, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.51, -0.42),node1.pos,decoration:"wave",angle:-1.51rad)
cetz.draw.content((0.63, -0.41),angle:-1.51rad,[q])
cetz.draw.hobby((0.53, -0.08),(0.57, -0.41),(0.57, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.57, -0.42),node2.pos,decoration:"wave",angle:4.73rad)
cetz.draw.content((-0.69, -0.42),angle:4.73rad,[q])
cetz.draw.hobby((-0.61, -0.73),(-0.63, -0.42),(-0.62, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, 0.24),node5.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((0.12, 0.17),angle:2.24rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((0.36, -0.01),(0.17, 0.20),(0.01, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.58, 0.30),node3.pos,decoration:"arrow",angle:-1.68rad)
cetz.draw.content((0.70, 0.28),angle:-1.68rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.61, 0.57),(0.64, 0.28),(0.55, 0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.05, 0.25),node2.pos,decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.01, 0.14),angle:0.52rad,[k[3]])
cetz.draw.hobby((0.46, 0.49),(0.03, 0.22),(-0.42, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.72, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.61, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.80, -0.79),angle:2.77rad,[-k[0]])
cetz.draw.hobby((0.63, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.22rad)
cetz.draw.content((-0.79, -0.13),angle:6.22rad,[-q-k[3]])
cetz.draw.hobby((-0.90, -0.07),(-0.66, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.50rad)
cetz.draw.content((0.57, 0.37),angle:-0.50rad,[-q-k[3]])
cetz.draw.hobby((0.15, 0.53),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.71rad)
cetz.draw.content((-0.54, 0.66),angle:2.71rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.90),(-0.09, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.84rad)
cetz.draw.content((0.69, 0.90),angle:3.84rad,[p+q+k[3]])
cetz.draw.hobby((0.57, 0.72),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.82))
node(node0.pos)
let node1= (pos:(0.54, -0.81))
node(node1.pos)
let node2= (pos:(-0.45, -0.02))
node(node2.pos)
let node3= (pos:(0.56, -0.03))
node(node3.pos)
let node4= (pos:(-0.03, 0.53))
node(node4.pos)
let node5= (pos:(-0.53, 0.60))
node(node5.pos)
edge(node1.pos,(0.02, -0.84),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.02, -0.96),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.88),(0.02, -0.90),(-0.41, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, -0.43),node1.pos,decoration:"wave",angle:-1.59rad)
cetz.draw.content((0.69, -0.43),angle:-1.59rad,[q])
cetz.draw.hobby((0.62, -0.11),(0.63, -0.42),(0.61, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.43),node2.pos,decoration:"wave",angle:4.64rad)
cetz.draw.content((-0.62, -0.42),angle:4.64rad,[q])
cetz.draw.hobby((-0.57, -0.74),(-0.56, -0.41),(-0.52, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.57, 0.29),node5.pos,decoration:"arrow",angle:4.83rad)
cetz.draw.content((-0.69, 0.28),angle:4.83rad,[q+k[3]])
cetz.draw.hobby((-0.54, 0.00),(-0.63, 0.27),(-0.61, 0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.06, 0.24),node5.pos,decoration:"arrow",angle:2.62rad)
cetz.draw.content((-0.00, 0.14),angle:2.62rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.42, -0.03),(-0.03, 0.22),(-0.46, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.24),node2.pos,decoration:"arrow",angle:0.92rad)
cetz.draw.content((-0.11, 0.16),angle:0.92rad,[k[3]])
cetz.draw.hobby((-0.01, 0.44),(-0.16, 0.19),(-0.36, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.71, -1.02),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.58, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.82, -0.79),angle:2.75rad,[-k[0]])
cetz.draw.hobby((0.66, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.46, 0.16),angle:-2.65rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.09, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.21rad)
cetz.draw.content((0.77, 0.10),angle:3.21rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.65, 0.04),(0.90, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.44rad)
cetz.draw.content((-0.84, 0.71),angle:2.44rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.65, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.57rad)
cetz.draw.content((0.44, 0.87),angle:3.57rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.04, 0.62),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [1, -1, -2, -1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding1i0,)
[= embedding 2 [1, -1, -1, -2] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding2i0,)
[= embedding 3 [1, -1, -1, -1] initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding3i0,)
[= embedding 4 [1, 0, -1, -1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding4i0,)
[= embedding 5 [1, 0, -1, 0] initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding5i0,)
[= embedding 6 [1, 0, -1, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding6i0,)
[= embedding 7 [1, 0, 0, -1] initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,q+k[2]]^-1 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding7i0,)
[= embedding 8 [1, 0, 1, -1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding8i0,)
[= embedding 9 [1, 1, -1, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding9i0,)
[= embedding 10 [1, 1, 0, 1] initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-1 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,embedding10i0,)
[= embedding 11 [1, 1, 1, -1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding11i0,)
[= embedding 12 [1, 1, 1, 0] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,embedding12i0,)
[= embedding 13 [1, 1, 1, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding13i0,)
[= embedding 14 [1, 2, 1, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding14i0,)
[= embedding 15 [1, 2, 1, 2] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding15i0,)
[= embedding 16 [1, 2, 2, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding16i0,)
}