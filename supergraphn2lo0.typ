#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, 0.02))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(-0.36, 0.78))
node(node4.pos)
let node5= (pos:(0.36, 0.78))
node(node5.pos)
edge(node1.pos,(0.00, -0.81),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -0.93),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.85),(0.00, -0.87),(-0.43, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.68, -0.40),angle:4.76rad,[q])
cetz.draw.hobby((-0.60, -0.71),(-0.62, -0.39),(-0.63, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:1.53rad)
cetz.draw.content((0.68, -0.39),angle:1.53rad,[q])
cetz.draw.hobby((0.63, -0.06),(0.62, -0.38),(0.60, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.11, 0.38),node5.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((-0.04, 0.29),angle:0.69rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.44, 0.04),(-0.06, 0.34),(0.31, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.11, 0.38),node3.pos,decoration:"arrow",angle:5.60rad)
cetz.draw.content((0.04, 0.29),angle:5.60rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.31, 0.65),(0.06, 0.34),(0.44, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.84),node5.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.96),angle:3.14rad,[k[3]])
cetz.draw.hobby((-0.30, 0.86),(0.00, 0.90),(0.31, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -1.00),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.60, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.82, -0.78),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.65, -0.77),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.04rad)
cetz.draw.content((0.79, 0.13),angle:-0.04rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.67, 0.07),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.04rad)
cetz.draw.content((-0.78, -0.11),angle:0.04rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.67, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.64, 1.00),angle:0.33rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.43, 0.87),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.95rad)
cetz.draw.content((-0.72, 0.78),angle:5.95rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.47, 0.75),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.88))
node(node0.pos)
let node1= (pos:(-0.47, -0.85))
node(node1.pos)
let node2= (pos:(0.64, -0.19))
node(node2.pos)
let node3= (pos:(-0.22, -0.11))
node(node3.pos)
let node4= (pos:(-0.67, 0.69))
node(node4.pos)
let node5= (pos:(-0.05, 0.58))
node(node5.pos)
edge(node0.pos,(0.04, -0.90),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.63, -0.55),node2.pos,decoration:"wave",angle:-1.70rad)
edge(node3.pos,(-0.37, -0.48),node1.pos,decoration:"wave",angle:1.24rad)
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:-0.10rad)
edge(node4.pos,(-0.48, 0.27),node3.pos,decoration:"arrow",angle:5.23rad)
edge(node4.pos,(-0.35, 0.70),node5.pos,decoration:"coil",angle:2.98rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.50rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.55rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.38rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
})
let embedding1f1=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.85))
node(node0.pos)
let node1= (pos:(-0.56, -0.88))
node(node1.pos)
let node2= (pos:(0.21, -0.11))
node(node2.pos)
let node3= (pos:(-0.65, -0.20))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node0.pos,(-0.04, -0.90),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.36, -0.48),node2.pos,decoration:"wave",angle:-1.24rad)
edge(node3.pos,(-0.64, -0.55),node1.pos,decoration:"wave",angle:1.70rad)
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:0.10rad)
edge(node2.pos,(0.48, 0.27),node5.pos,decoration:"arrow",angle:1.05rad)
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"coil",angle:3.30rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.76rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.78))
node(node1.pos)
let node2= (pos:(-0.73, -0.00))
node(node2.pos)
let node3= (pos:(0.73, -0.00))
node(node3.pos)
let node4= (pos:(0.55, 0.78))
node(node4.pos)
let node5= (pos:(-0.55, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.80),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.92),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.85),(-0.00, -0.86),(-0.44, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.40),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.76, -0.43),angle:4.94rad,[q])
cetz.draw.hobby((-0.63, -0.72),(-0.71, -0.41),(-0.77, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.40),node1.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.76, -0.43),angle:1.34rad,[q])
cetz.draw.hobby((0.77, -0.09),(0.70, -0.41),(0.63, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.40),node5.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.76, 0.43),angle:1.34rad,[p+q-k[3]])
cetz.draw.hobby((-0.77, 0.09),(-0.71, 0.41),(-0.63, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.40),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.77, 0.43),angle:-1.34rad,[p+q-k[3]])
cetz.draw.hobby((0.63, 0.72),(0.71, 0.41),(0.77, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, 0.80),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, 0.92),angle:0.00rad,[p+q])
cetz.draw.hobby((-0.44, 0.85),(-0.00, 0.86),(0.44, 0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.72, -1.00),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.61, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.66, -0.77),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.86, 0.12),angle:0.00rad,[p-k[3]])
cetz.draw.hobby((0.83, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.86, -0.12),angle:6.28rad,[p-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.83, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.59rad)
cetz.draw.content((0.72, 1.00),angle:3.59rad,[k[3]])
cetz.draw.hobby((0.61, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.69rad)
cetz.draw.content((-0.83, 0.78),angle:2.69rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.67, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.90))
node(node0.pos)
let node1= (pos:(-0.40, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.25))
node(node2.pos)
let node3= (pos:(0.13, -0.07))
node(node3.pos)
let node4= (pos:(0.37, 0.74))
node(node4.pos)
let node5= (pos:(-0.76, 0.56))
node(node5.pos)
edge(node0.pos,(0.09, -0.90),node1.pos,decoration:"arrow",angle:3.05rad)
edge(node0.pos,(0.72, -0.59),node2.pos,decoration:"wave",angle:-1.85rad)
edge(node3.pos,(-0.16, -0.44),node1.pos,decoration:"wave",angle:0.95rad)
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:-0.27rad)
edge(node4.pos,(0.25, 0.35),node3.pos,decoration:"arrow",angle:4.42rad)
edge(node5.pos,(-0.20, 0.68),node4.pos,decoration:"arrow",angle:0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.84rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.16rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.54rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.08rad)
})
let embedding2f1=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.81))
node(node0.pos)
let node1= (pos:(-0.59, -0.90))
node(node1.pos)
let node2= (pos:(-0.13, -0.07))
node(node2.pos)
let node3= (pos:(-0.78, -0.25))
node(node3.pos)
let node4= (pos:(0.76, 0.56))
node(node4.pos)
let node5= (pos:(-0.37, 0.74))
node(node5.pos)
edge(node0.pos,(-0.09, -0.90),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.16, -0.44),node2.pos,decoration:"wave",angle:-0.95rad)
edge(node3.pos,(-0.72, -0.59),node1.pos,decoration:"wave",angle:1.85rad)
edge(node3.pos,(-0.46, -0.15),node2.pos,decoration:"arrow",angle:0.27rad)
edge(node2.pos,(-0.25, 0.35),node5.pos,decoration:"arrow",angle:1.86rad)
edge(node5.pos,(0.20, 0.68),node4.pos,decoration:"arrow",angle:-0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.16rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.45rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.20rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
})
let embedding2f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.80))
node(node0.pos)
let node1= (pos:(-0.52, -0.79))
node(node1.pos)
let node2= (pos:(0.35, -0.00))
node(node2.pos)
let node3= (pos:(-0.37, -0.00))
node(node3.pos)
let node4= (pos:(-0.52, 0.79))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node0.pos,(-0.00, -0.83),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.46, -0.40),node2.pos,decoration:"wave",angle:-1.38rad)
edge(node3.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.01, -0.00),node2.pos,decoration:"arrow",angle:6.28rad)
edge(node2.pos,(0.46, 0.40),node5.pos,decoration:"arrow",angle:1.38rad)
edge(node4.pos,(-0.47, 0.40),node3.pos,decoration:"arrow",angle:4.90rad)
edge(node4.pos,(-0.00, 0.83),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.41rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.56))
node(node0.pos)
let node1= (pos:(0.59, -0.56))
node(node1.pos)
let node2= (pos:(-0.83, 0.52))
node(node2.pos)
let node3= (pos:(0.85, 0.51))
node(node3.pos)
let node4= (pos:(0.28, 0.81))
node(node4.pos)
let node5= (pos:(-0.24, 0.80))
node(node5.pos)
edge(node1.pos,(0.00, -0.58),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.70),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.03),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.84, -0.06),angle:4.94rad,[q])
cetz.draw.hobby((-0.68, -0.47),(-0.79, -0.04),(-0.87, 0.40),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.04),node1.pos,decoration:"wave",angle:1.33rad)
cetz.draw.content((0.86, -0.06),angle:1.33rad,[q])
cetz.draw.hobby((0.89, 0.39),(0.80, -0.04),(0.69, -0.48),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.67),node5.pos,decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.60, 0.78),angle:0.45rad,[p+q])
cetz.draw.hobby((-0.80, 0.60),(-0.57, 0.73),(-0.32, 0.84),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, 0.67),node3.pos,decoration:"arrow",angle:-0.48rad)
cetz.draw.content((0.64, 0.78),angle:-0.48rad,[p+q])
cetz.draw.hobby((0.37, 0.84),(0.61, 0.73),(0.83, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.02, 0.68),node5.pos,decoration:"coil",angle:0.01rad)
cetz.draw.content((0.03, 0.56),angle:0.01rad,[k[3]])
cetz.draw.hobby((0.28, 0.72),(0.02, 0.62),(-0.24, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.02, 0.97),node4.pos,decoration:"arrow",angle:0.01rad)
cetz.draw.content((0.02, 1.09),angle:0.01rad,[p+q+k[3]])
cetz.draw.hobby((-0.25, 0.90),(0.02, 1.03),(0.29, 0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.71, -0.86),angle:-2.33rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.61, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.32rad)
cetz.draw.content((0.89, -0.70),angle:2.32rad,[-k[0]])
cetz.draw.hobby((0.71, -0.60),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.28rad)
cetz.draw.content((0.81, 0.79),angle:1.28rad,[p])
cetz.draw.hobby((0.83, 0.63),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.05rad)
cetz.draw.content((-1.03, 0.72),angle:5.05rad,[p])
cetz.draw.hobby((-1.02, 0.89),(-0.92, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.40, -0.74))
node(node1.pos)
let node2= (pos:(0.76, 0.40))
node(node2.pos)
let node3= (pos:(-0.00, 0.03))
node(node3.pos)
let node4= (pos:(-0.42, 0.58))
node(node4.pos)
let node5= (pos:(-0.76, 0.93))
node(node5.pos)
edge(node0.pos,(0.13, -0.72),node1.pos,decoration:"arrow",angle:-3.04rad)
edge(node0.pos,(0.73, -0.13),node2.pos,decoration:"wave",angle:-1.68rad)
edge(node3.pos,(-0.22, -0.36),node1.pos,decoration:"wave",angle:1.09rad)
edge(node3.pos,(0.39, 0.23),node2.pos,decoration:"arrow",angle:0.45rad)
edge(node4.pos,(-0.21, 0.30),node3.pos,decoration:"arrow",angle:5.37rad)
edge(node4.pos,(-0.70, 0.65),node5.pos,decoration:"coil",angle:5.46rad)
edge(node5.pos,(-0.48, 0.87),node4.pos,decoration:"arrow",angle:-0.77rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.19rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:6.00rad)
})
let embedding3f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.85))
node(node1.pos)
let node2= (pos:(0.39, -0.11))
node(node2.pos)
let node3= (pos:(-0.39, -0.11))
node(node3.pos)
let node4= (pos:(-0.92, 0.45))
node(node4.pos)
let node5= (pos:(0.93, 0.45))
node(node5.pos)
edge(node0.pos,(-0.00, -0.89),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.47, -0.49),node2.pos,decoration:"wave",angle:-1.41rad)
edge(node3.pos,(-0.48, -0.49),node1.pos,decoration:"wave",angle:1.41rad)
edge(node3.pos,(-0.00, -0.09),node2.pos,decoration:"arrow",angle:-0.00rad)
edge(node2.pos,(0.65, 0.19),node5.pos,decoration:"arrow",angle:0.80rad)
edge(node4.pos,(-0.65, 0.19),node3.pos,decoration:"arrow",angle:-0.81rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
edge(node4.pos,(-1.00, 0.00),decoration:"coil",angle:1.41rad)
edge(node5.pos,(1.00, 0.00),decoration:"coil",angle:-1.41rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.44rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.85rad)
})
let embedding3f2=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.02, 0.00))
node(node2.pos)
let node3= (pos:(-0.75, 0.40))
node(node3.pos)
let node4= (pos:(0.89, 0.78))
node(node4.pos)
let node5= (pos:(0.54, 0.44))
node(node5.pos)
edge(node0.pos,(-0.13, -0.73),node1.pos,decoration:"arrow",angle:3.03rad)
edge(node0.pos,(0.22, -0.38),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.73, -0.13),node1.pos,decoration:"wave",angle:1.67rad)
edge(node3.pos,(-0.37, 0.22),node2.pos,decoration:"arrow",angle:-0.48rad)
edge(node2.pos,(0.28, 0.23),node5.pos,decoration:"arrow",angle:0.70rad)
edge(node4.pos,(0.83, 0.50),node5.pos,decoration:"coil",angle:0.79rad)
edge(node5.pos,(0.61, 0.73),node4.pos,decoration:"arrow",angle:0.74rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.76rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.11rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.11rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, 0.02))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(-0.36, 0.78))
node(node4.pos)
let node5= (pos:(0.36, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.81),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.93),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.85),(-0.00, -0.87),(-0.43, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.68, -0.39),angle:4.76rad,[q])
cetz.draw.hobby((-0.60, -0.71),(-0.62, -0.39),(-0.63, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:1.52rad)
cetz.draw.content((0.68, -0.40),angle:1.52rad,[q])
cetz.draw.hobby((0.63, -0.06),(0.62, -0.39),(0.60, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.11, 0.38),node5.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((-0.04, 0.29),angle:0.69rad,[p+q+k[3]])
cetz.draw.hobby((-0.44, 0.04),(-0.06, 0.35),(0.31, 0.66),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.11, 0.38),node3.pos,decoration:"arrow",angle:5.60rad)
cetz.draw.content((0.04, 0.29),angle:5.60rad,[p+q+k[3]])
cetz.draw.hobby((-0.31, 0.66),(0.06, 0.34),(0.44, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, 0.84),node4.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.96),angle:3.14rad,[p+q+2 k[3]])
cetz.draw.hobby((0.30, 0.86),(-0.00, 0.90),(-0.31, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -1.00),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.60, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.81, -0.78),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.65, -0.77),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.04rad)
cetz.draw.content((0.79, 0.13),angle:-0.04rad,[p+k[3]])
cetz.draw.hobby((0.67, 0.07),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.04rad)
cetz.draw.content((-0.78, -0.11),angle:0.04rad,[p+k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.67, -0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.95rad)
cetz.draw.content((-0.72, 0.78),angle:5.95rad,[-k[3]])
cetz.draw.hobby((-0.92, 0.91),(-0.47, 0.76),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.33rad)
cetz.draw.content((0.64, 1.00),angle:0.33rad,[-k[3]])
cetz.draw.hobby((0.43, 0.87),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.89))
node(node0.pos)
let node1= (pos:(-0.47, -0.85))
node(node1.pos)
let node2= (pos:(0.65, -0.20))
node(node2.pos)
let node3= (pos:(-0.22, -0.11))
node(node3.pos)
let node4= (pos:(-0.67, 0.69))
node(node4.pos)
let node5= (pos:(-0.05, 0.59))
node(node5.pos)
edge(node0.pos,(0.04, -0.90),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.63, -0.55),node2.pos,decoration:"wave",angle:-1.69rad)
edge(node3.pos,(-0.37, -0.48),node1.pos,decoration:"wave",angle:1.24rad)
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:-0.10rad)
edge(node4.pos,(-0.48, 0.28),node3.pos,decoration:"arrow",angle:5.23rad)
edge(node5.pos,(-0.35, 0.70),node4.pos,decoration:"arrow",angle:2.98rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.51rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.55rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.52rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.38rad)
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.85))
node(node0.pos)
let node1= (pos:(-0.56, -0.88))
node(node1.pos)
let node2= (pos:(0.22, -0.11))
node(node2.pos)
let node3= (pos:(-0.65, -0.20))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node0.pos,(-0.04, -0.90),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.37, -0.48),node2.pos,decoration:"wave",angle:-1.24rad)
edge(node3.pos,(-0.64, -0.55),node1.pos,decoration:"wave",angle:1.69rad)
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:0.11rad)
edge(node2.pos,(0.48, 0.27),node5.pos,decoration:"arrow",angle:1.05rad)
edge(node5.pos,(0.35, 0.70),node4.pos,decoration:"arrow",angle:3.30rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.77rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.91rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.76rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.52, -0.79))
node(node1.pos)
let node2= (pos:(-0.35, 0.00))
node(node2.pos)
let node3= (pos:(0.37, 0.00))
node(node3.pos)
let node4= (pos:(0.52, 0.80))
node(node4.pos)
let node5= (pos:(-0.51, 0.79))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -0.95),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.86),(0.00, -0.89),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.40),node2.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.38),angle:4.52rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:1.75rad)
cetz.draw.content((0.59, -0.38),angle:1.75rad,[q])
cetz.draw.hobby((0.45, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.00),node2.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.01, -0.12),angle:-3.14rad,[k[2]])
cetz.draw.hobby((0.29, -0.06),(0.01, -0.06),(-0.28, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, 0.40),node5.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.58, 0.38),angle:1.76rad,[q+k[2]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.47, 0.40),node3.pos,decoration:"arrow",angle:-1.75rad)
cetz.draw.content((0.59, 0.38),angle:-1.75rad,[q+k[2]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.83),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.95),angle:0.00rad,[p+q+k[2]])
cetz.draw.hobby((-0.42, 0.87),(0.00, 0.89),(0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.58, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.80, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.63, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.54rad)
cetz.draw.content((0.71, 1.01),angle:3.54rad,[p])
cetz.draw.hobby((0.59, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
cetz.draw.content((-0.80, 0.79),angle:2.74rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.81))
node(node0.pos)
let node1= (pos:(0.59, -0.90))
node(node1.pos)
let node2= (pos:(0.13, -0.07))
node(node2.pos)
let node3= (pos:(0.78, -0.25))
node(node3.pos)
let node4= (pos:(-0.76, 0.56))
node(node4.pos)
let node5= (pos:(0.37, 0.74))
node(node5.pos)
edge(node1.pos,(0.09, -0.89),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.08, -1.01),angle:3.05rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.97),(0.09, -0.95),(-0.32, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.43),node2.pos,decoration:"wave",angle:4.09rad)
cetz.draw.content((-0.26, -0.36),angle:4.09rad,[q])
cetz.draw.hobby((-0.41, -0.70),(-0.20, -0.39),(0.03, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.59),node1.pos,decoration:"wave",angle:1.28rad)
cetz.draw.content((0.83, -0.62),angle:1.28rad,[q])
cetz.draw.hobby((0.83, -0.32),(0.78, -0.60),(0.67, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.49, -0.03),angle:2.87rad,[k[2]])
cetz.draw.hobby((0.74, -0.17),(0.48, -0.09),(0.21, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.25, 0.35),node5.pos,decoration:"arrow",angle:1.28rad)
cetz.draw.content((0.14, 0.38),angle:1.28rad,[q+k[2]])
cetz.draw.hobby((0.10, 0.03),(0.19, 0.35),(0.29, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.68),node5.pos,decoration:"coil",angle:3.29rad)
cetz.draw.content((-0.22, 0.79),angle:3.29rad,[p])
cetz.draw.hobby((-0.66, 0.65),(-0.21, 0.74),(0.25, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.66, -1.02),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.48, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
cetz.draw.content((0.82, -0.83),angle:2.91rad,[-k[0]])
cetz.draw.hobby((0.70, -0.87),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.98rad)
cetz.draw.content((-0.77, 0.23),angle:-1.98rad,[-q-k[2]])
cetz.draw.hobby((-0.91, 0.07),(-0.74, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.99rad)
cetz.draw.content((0.80, -0.04),angle:3.99rad,[-q-k[2]])
cetz.draw.hobby((0.80, -0.13),(0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((0.64, 0.98),angle:0.40rad,[p+q+k[2]])
cetz.draw.hobby((0.44, 0.83),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.98, 0.72),angle:5.22rad,[p+q+k[2]])
cetz.draw.hobby((-1.00, 0.88),(-0.86, 0.62),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.90))
node(node0.pos)
let node1= (pos:(0.40, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.25))
node(node2.pos)
let node3= (pos:(-0.14, -0.07))
node(node3.pos)
let node4= (pos:(-0.37, 0.73))
node(node4.pos)
let node5= (pos:(0.76, 0.56))
node(node5.pos)
edge(node1.pos,(-0.09, -0.89),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.08, -1.01),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.89),(-0.09, -0.95),(-0.49, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.59),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.84, -0.62),angle:5.00rad,[q])
cetz.draw.hobby((-0.68, -0.86),(-0.78, -0.60),(-0.84, -0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.44),node1.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.25, -0.37),angle:2.19rad,[q])
cetz.draw.hobby((-0.03, -0.10),(0.20, -0.39),(0.40, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, -0.15),node2.pos,decoration:"arrow",angle:3.41rad)
cetz.draw.content((-0.49, -0.03),angle:3.41rad,[k[2]])
cetz.draw.hobby((-0.22, -0.02),(-0.48, -0.09),(-0.74, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.25, 0.35),node3.pos,decoration:"arrow",angle:-1.28rad)
cetz.draw.content((-0.14, 0.38),angle:-1.28rad,[q+k[2]])
cetz.draw.hobby((-0.29, 0.67),(-0.19, 0.35),(-0.10, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.20, 0.67),node5.pos,decoration:"coil",angle:2.99rad)
cetz.draw.content((0.22, 0.79),angle:2.99rad,[p])
cetz.draw.hobby((-0.25, 0.79),(0.21, 0.73),(0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((-0.77, -1.07),angle:-2.90rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.67, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.73, -0.79),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.51, -0.79),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.30rad)
cetz.draw.content((-0.98, -0.20),angle:2.30rad,[-q-k[2]])
cetz.draw.hobby((-0.98, -0.11),(-0.89, -0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.98rad)
cetz.draw.content((0.99, 0.33),angle:1.98rad,[-q-k[2]])
cetz.draw.hobby((0.85, 0.49),(1.02, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.77, 0.84),angle:1.06rad,[p+q+k[2]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.73, 0.76),angle:5.88rad,[p+q+k[2]])
cetz.draw.hobby((-0.93, 0.91),(-0.49, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.78))
node(node0.pos)
let node1= (pos:(-0.55, -0.78))
node(node1.pos)
let node2= (pos:(0.73, 0.00))
node(node2.pos)
let node3= (pos:(-0.73, -0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.78))
node(node4.pos)
let node5= (pos:(0.55, 0.78))
node(node5.pos)
edge(node0.pos,(-0.00, -0.80),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.64, -0.40),node2.pos,decoration:"wave",angle:-1.80rad)
edge(node3.pos,(-0.65, -0.40),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(0.64, 0.40),node5.pos,decoration:"arrow",angle:1.80rad)
edge(node4.pos,(-0.64, 0.40),node3.pos,decoration:"arrow",angle:4.48rad)
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.45rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.84rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.78))
node(node1.pos)
let node2= (pos:(-0.73, -0.00))
node(node2.pos)
let node3= (pos:(0.73, 0.00))
node(node3.pos)
let node4= (pos:(0.55, 0.78))
node(node4.pos)
let node5= (pos:(-0.55, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.80),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.92),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.85),(-0.00, -0.86),(-0.44, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.40),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.76, -0.43),angle:4.94rad,[q])
cetz.draw.hobby((-0.63, -0.72),(-0.71, -0.41),(-0.77, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.40),node1.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.76, -0.43),angle:1.34rad,[q])
cetz.draw.hobby((0.77, -0.09),(0.71, -0.41),(0.63, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.40),node5.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.76, 0.43),angle:1.34rad,[q+k[2]])
cetz.draw.hobby((-0.77, 0.09),(-0.71, 0.41),(-0.63, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.40),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.76, 0.43),angle:-1.34rad,[q+k[2]])
cetz.draw.hobby((0.63, 0.72),(0.71, 0.41),(0.77, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.92),angle:0.00rad,[-p-q])
cetz.draw.hobby((0.44, 0.85),(0.00, 0.86),(-0.44, 0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.72, -1.00),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.61, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.66, -0.77),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.87, 0.12),angle:-0.00rad,[k[2]])
cetz.draw.hobby((0.83, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.86, -0.12),angle:6.28rad,[k[2]])
cetz.draw.hobby((-0.90, -0.06),(-0.83, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((-0.83, 0.78),angle:2.69rad,[p-k[2]])
cetz.draw.hobby((-0.94, 0.90),(-0.66, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.59rad)
cetz.draw.content((0.72, 1.00),angle:3.59rad,[p-k[2]])
cetz.draw.hobby((0.61, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.90))
node(node0.pos)
let node1= (pos:(-0.40, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.25))
node(node2.pos)
let node3= (pos:(0.13, -0.07))
node(node3.pos)
let node4= (pos:(0.37, 0.74))
node(node4.pos)
let node5= (pos:(-0.76, 0.56))
node(node5.pos)
edge(node0.pos,(0.09, -0.89),node1.pos,decoration:"arrow",angle:3.05rad)
edge(node0.pos,(0.72, -0.59),node2.pos,decoration:"wave",angle:-1.85rad)
edge(node3.pos,(-0.16, -0.44),node1.pos,decoration:"wave",angle:0.95rad)
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:-0.27rad)
edge(node4.pos,(0.25, 0.35),node3.pos,decoration:"arrow",angle:4.42rad)
edge(node4.pos,(-0.20, 0.68),node5.pos,decoration:"coil",angle:0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.84rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.16rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.08rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.82))
node(node0.pos)
let node1= (pos:(-0.59, -0.90))
node(node1.pos)
let node2= (pos:(-0.13, -0.07))
node(node2.pos)
let node3= (pos:(-0.78, -0.25))
node(node3.pos)
let node4= (pos:(0.76, 0.56))
node(node4.pos)
let node5= (pos:(-0.37, 0.74))
node(node5.pos)
edge(node0.pos,(-0.09, -0.90),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.16, -0.44),node2.pos,decoration:"wave",angle:-0.96rad)
edge(node3.pos,(-0.71, -0.59),node1.pos,decoration:"wave",angle:1.85rad)
edge(node3.pos,(-0.45, -0.15),node2.pos,decoration:"arrow",angle:0.27rad)
edge(node2.pos,(-0.25, 0.35),node5.pos,decoration:"arrow",angle:1.86rad)
edge(node4.pos,(0.21, 0.68),node5.pos,decoration:"coil",angle:-0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.16rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.45rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.21rad)
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.79))
node(node0.pos)
let node1= (pos:(-0.52, -0.80))
node(node1.pos)
let node2= (pos:(0.35, -0.00))
node(node2.pos)
let node3= (pos:(-0.37, -0.00))
node(node3.pos)
let node4= (pos:(-0.52, 0.79))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node0.pos,(-0.00, -0.83),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.46, -0.40),node2.pos,decoration:"wave",angle:-1.38rad)
edge(node3.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.01, -0.00),node2.pos,decoration:"arrow",angle:6.28rad)
edge(node2.pos,(0.46, 0.40),node5.pos,decoration:"arrow",angle:1.38rad)
edge(node4.pos,(-0.47, 0.40),node3.pos,decoration:"arrow",angle:4.90rad)
edge(node5.pos,(-0.00, 0.83),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.88rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.20))
node(node2.pos)
let node3= (pos:(0.22, -0.11))
node(node3.pos)
let node4= (pos:(0.68, 0.69))
node(node4.pos)
let node5= (pos:(0.05, 0.59))
node(node5.pos)
edge(node1.pos,(-0.05, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.92),(-0.04, -0.96),(-0.46, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.55),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.75, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.64, -0.83),(-0.69, -0.55),(-0.71, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.48),node1.pos,decoration:"wave",angle:1.90rad)
cetz.draw.content((0.48, -0.44),angle:1.90rad,[q])
cetz.draw.hobby((0.30, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.23, -0.02),angle:3.25rad,[-p-q+k[3]])
cetz.draw.hobby((0.13, -0.05),(-0.22, -0.08),(-0.57, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.28),node3.pos,decoration:"arrow",angle:-2.09rad)
cetz.draw.content((0.58, 0.22),angle:-2.09rad,[-p+k[3]])
cetz.draw.hobby((0.70, 0.58),(0.53, 0.24),(0.32, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.35, 0.70),node4.pos,decoration:"arrow",angle:0.16rad)
cetz.draw.content((0.33, 0.82),angle:0.16rad,[-p+2 k[3]])
cetz.draw.hobby((0.08, 0.67),(0.34, 0.76),(0.62, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.77, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.88, -0.20),angle:2.64rad,[p-k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
cetz.draw.content((0.59, 0.40),angle:2.59rad,[p-k[3]])
cetz.draw.hobby((0.17, 0.59),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.90rad)
cetz.draw.content((0.75, 0.93),angle:3.90rad,[k[3]])
cetz.draw.hobby((0.71, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.77rad)
cetz.draw.content((-0.52, 0.68),angle:2.77rad,[k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.85))
node(node0.pos)
let node1= (pos:(0.56, -0.88))
node(node1.pos)
let node2= (pos:(-0.22, -0.10))
node(node2.pos)
let node3= (pos:(0.65, -0.20))
node(node3.pos)
let node4= (pos:(-0.05, 0.59))
node(node4.pos)
let node5= (pos:(-0.67, 0.69))
node(node5.pos)
edge(node1.pos,(0.05, -0.90),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.04, -1.02),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.95),(0.04, -0.96),(-0.38, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.37, -0.48),node2.pos,decoration:"wave",angle:4.38rad)
cetz.draw.content((-0.48, -0.44),angle:4.38rad,[q])
cetz.draw.hobby((-0.51, -0.76),(-0.42, -0.45),(-0.30, -0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.55),node1.pos,decoration:"wave",angle:1.44rad)
cetz.draw.content((0.75, -0.56),angle:1.44rad,[q])
cetz.draw.hobby((0.71, -0.26),(0.69, -0.55),(0.64, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((0.24, -0.02),angle:3.03rad,[-p-q+k[3]])
cetz.draw.hobby((0.57, -0.12),(0.22, -0.08),(-0.12, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.48, 0.27),node5.pos,decoration:"arrow",angle:2.10rad)
cetz.draw.content((-0.58, 0.21),angle:2.10rad,[-p+k[3]])
cetz.draw.hobby((-0.32, -0.07),(-0.53, 0.24),(-0.70, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.35, 0.70),node4.pos,decoration:"arrow",angle:-0.16rad)
cetz.draw.content((-0.33, 0.82),angle:-0.16rad,[-p+2 k[3]])
cetz.draw.hobby((-0.62, 0.76),(-0.34, 0.76),(-0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.70, -1.04),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.55, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.81, -0.83),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.67, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.59rad)
cetz.draw.content((-0.46, 0.19),angle:-2.59rad,[p-k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.10, 0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.65rad)
cetz.draw.content((0.77, 0.01),angle:3.65rad,[p-k[3]])
cetz.draw.hobby((0.71, -0.09),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.52rad)
cetz.draw.content((0.43, 0.91),angle:3.52rad,[k[3]])
cetz.draw.hobby((0.02, 0.68),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.38rad)
cetz.draw.content((-0.92, 0.76),angle:2.38rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.79, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.78))
node(node0.pos)
let node1= (pos:(-0.53, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.02))
node(node2.pos)
let node3= (pos:(-0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.36, 0.78))
node(node4.pos)
let node5= (pos:(-0.36, 0.78))
node(node5.pos)
edge(node0.pos,(0.00, -0.81),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.56, -0.39),node2.pos,decoration:"wave",angle:-1.61rad)
edge(node3.pos,(-0.56, -0.39),node1.pos,decoration:"wave",angle:1.62rad)
edge(node2.pos,(0.11, 0.38),node5.pos,decoration:"arrow",angle:2.45rad)
edge(node4.pos,(-0.11, 0.38),node3.pos,decoration:"arrow",angle:-2.46rad)
edge(node5.pos,(0.00, 0.84),node4.pos,decoration:"arrow",angle:-0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.10rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.10rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.47rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.81rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.65))
node(node1.pos)
let node2= (pos:(-0.00, 0.01))
node(node2.pos)
let node3= (pos:(0.76, 0.40))
node(node3.pos)
let node4= (pos:(-0.79, 0.86))
node(node4.pos)
let node5= (pos:(-0.46, 0.51))
node(node5.pos)
edge(node1.pos,(0.13, -0.73),node0.pos,decoration:"arrow",angle:-3.04rad)
cetz.draw.content((0.14, -0.85),angle:-3.04rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.73),(0.13, -0.79),(-0.30, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.38),node2.pos,decoration:"wave",angle:4.23rad)
cetz.draw.content((-0.32, -0.32),angle:4.23rad,[q])
cetz.draw.hobby((-0.42, -0.65),(-0.26, -0.34),(-0.10, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.73, -0.13),node1.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.85, -0.15),angle:1.46rad,[q])
cetz.draw.hobby((0.82, 0.29),(0.79, -0.14),(0.73, -0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.22),node2.pos,decoration:"arrow",angle:3.61rad)
cetz.draw.content((0.33, 0.32),angle:3.61rad,[-p-q])
cetz.draw.hobby((0.66, 0.42),(0.35, 0.26),(0.04, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.23, 0.26),node5.pos,decoration:"arrow",angle:2.31rad)
cetz.draw.content((-0.32, 0.18),angle:2.31rad,[-p])
cetz.draw.hobby((-0.09, 0.02),(-0.28, 0.22),(-0.46, 0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.51, 0.80),node5.pos,decoration:"coil",angle:2.37rad)
cetz.draw.content((-0.43, 0.89),angle:2.37rad,[k[3]])
cetz.draw.hobby((-0.74, 0.94),(-0.46, 0.84),(-0.38, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.74, 0.58),node4.pos,decoration:"arrow",angle:2.31rad)
cetz.draw.content((-0.83, 0.50),angle:2.31rad,[-p+k[3]])
cetz.draw.hobby((-0.51, 0.44),(-0.78, 0.54),(-0.87, 0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.65, -0.99),angle:-2.75rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.47, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((0.91, -0.74),angle:2.36rad,[-k[0]])
cetz.draw.hobby((0.76, -0.67),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.96, 0.83),angle:2.55rad,[p])
cetz.draw.hobby((-0.95, 0.89),(-0.91, 0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.33rad)
cetz.draw.content((0.77, 0.74),angle:4.33rad,[p])
cetz.draw.hobby((0.74, 0.51),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding8i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.64))
node(node0.pos)
let node1= (pos:(0.40, -0.76))
node(node1.pos)
let node2= (pos:(-0.75, 0.40))
node(node2.pos)
let node3= (pos:(0.01, 0.01))
node(node3.pos)
let node4= (pos:(0.53, 0.45))
node(node4.pos)
let node5= (pos:(0.89, 0.78))
node(node5.pos)
edge(node1.pos,(-0.13, -0.73),node0.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((-0.15, -0.85),angle:3.03rad,[q+k[0]])
cetz.draw.hobby((0.29, -0.82),(-0.13, -0.79),(-0.55, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.13),node2.pos,decoration:"wave",angle:4.82rad)
cetz.draw.content((-0.85, -0.14),angle:4.82rad,[q])
cetz.draw.hobby((-0.73, -0.55),(-0.79, -0.13),(-0.81, 0.30),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, -0.38),node1.pos,decoration:"wave",angle:2.04rad)
cetz.draw.content((0.33, -0.33),angle:2.04rad,[q])
cetz.draw.hobby((0.11, -0.04),(0.27, -0.34),(0.42, -0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.38, 0.22),node2.pos,decoration:"arrow",angle:2.67rad)
cetz.draw.content((-0.32, 0.33),angle:2.67rad,[-p-q])
cetz.draw.hobby((-0.03, 0.10),(-0.34, 0.27),(-0.65, 0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, 0.23),node3.pos,decoration:"arrow",angle:3.85rad)
cetz.draw.content((0.19, 0.32),angle:3.85rad,[-p])
cetz.draw.hobby((0.44, 0.45),(0.23, 0.28),(0.02, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.61, 0.73),node5.pos,decoration:"coil",angle:3.86rad)
cetz.draw.content((0.53, 0.82),angle:3.86rad,[k[3]])
cetz.draw.hobby((0.46, 0.51),(0.57, 0.77),(0.84, 0.85),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.83, 0.50),node4.pos,decoration:"arrow",angle:-2.36rad)
cetz.draw.content((0.91, 0.42),angle:-2.36rad,[-p+k[3]])
cetz.draw.hobby((0.96, 0.72),(0.86, 0.45),(0.58, 0.37),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
cetz.draw.content((-0.74, -0.91),angle:-2.35rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.67, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.74, -0.77),angle:2.76rad,[-k[0]])
cetz.draw.hobby((0.51, -0.74),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.96rad)
cetz.draw.content((-0.99, 0.65),angle:1.96rad,[p])
cetz.draw.hobby((-1.02, 0.88),(-0.85, 0.47),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.24rad)
cetz.draw.content((0.84, 0.94),angle:4.24rad,[p])
cetz.draw.hobby((0.88, 0.89),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding8i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.86))
node(node0.pos)
let node1= (pos:(0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.38, -0.12))
node(node2.pos)
let node3= (pos:(0.39, -0.12))
node(node3.pos)
let node4= (pos:(0.93, 0.45))
node(node4.pos)
let node5= (pos:(-0.93, 0.45))
node(node5.pos)
edge(node1.pos,(0.00, -0.89),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -1.01),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.49),node2.pos,decoration:"wave",angle:4.54rad)
cetz.draw.content((-0.59, -0.47),angle:4.54rad,[q])
cetz.draw.hobby((-0.57, -0.78),(-0.53, -0.47),(-0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.48, -0.49),node1.pos,decoration:"wave",angle:1.73rad)
cetz.draw.content((0.60, -0.47),angle:1.73rad,[q])
cetz.draw.hobby((0.47, -0.17),(0.54, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, -0.10),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.01, 0.02),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.32, -0.05),(0.01, -0.04),(-0.31, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.19),node5.pos,decoration:"arrow",angle:2.34rad)
cetz.draw.content((-0.56, 0.27),angle:2.34rad,[-p])
cetz.draw.hobby((-0.38, -0.02),(-0.60, 0.22),(-0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.66, 0.19),node3.pos,decoration:"arrow",angle:3.96rad)
cetz.draw.content((0.57, 0.27),angle:3.96rad,[-p])
cetz.draw.hobby((0.83, 0.44),(0.60, 0.22),(0.40, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.72, -1.04),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.59, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.79, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.63, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"coil",angle:1.73rad)
cetz.draw.content((1.08, 0.25),angle:1.73rad,[k[3]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"coil",angle:-1.74rad)
cetz.draw.content((-0.84, 0.21),angle:-1.74rad,[k[3]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.71rad)
cetz.draw.content((-1.08, 0.71),angle:1.71rad,[p-k[3]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.58rad)
cetz.draw.content((0.84, 0.74),angle:4.58rad,[p-k[3]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.57))
node(node0.pos)
let node1= (pos:(-0.59, -0.56))
node(node1.pos)
let node2= (pos:(0.85, 0.51))
node(node2.pos)
let node3= (pos:(-0.84, 0.52))
node(node3.pos)
let node4= (pos:(-0.24, 0.81))
node(node4.pos)
let node5= (pos:(0.28, 0.81))
node(node5.pos)
edge(node0.pos,(0.00, -0.58),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.74, -0.04),node2.pos,decoration:"wave",angle:-1.81rad)
edge(node3.pos,(-0.73, -0.04),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(0.58, 0.67),node5.pos,decoration:"arrow",angle:2.65rad)
edge(node4.pos,(-0.56, 0.67),node3.pos,decoration:"arrow",angle:3.60rad)
edge(node4.pos,(0.02, 0.97),node5.pos,decoration:"coil",angle:3.15rad)
edge(node5.pos,(0.02, 0.68),node4.pos,decoration:"arrow",angle:-3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.32rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.89rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.42rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.90))
node(node0.pos)
let node1= (pos:(0.40, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.25))
node(node2.pos)
let node3= (pos:(-0.14, -0.07))
node(node3.pos)
let node4= (pos:(-0.37, 0.74))
node(node4.pos)
let node5= (pos:(0.76, 0.56))
node(node5.pos)
edge(node1.pos,(-0.09, -0.90),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.08, -1.02),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.90),(-0.09, -0.96),(-0.49, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.59),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.83, -0.63),angle:5.00rad,[q])
cetz.draw.hobby((-0.67, -0.87),(-0.78, -0.60),(-0.83, -0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.44),node1.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.26, -0.37),angle:2.19rad,[q])
cetz.draw.hobby((-0.03, -0.10),(0.20, -0.39),(0.41, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, -0.15),node2.pos,decoration:"arrow",angle:3.42rad)
cetz.draw.content((-0.49, -0.03),angle:3.42rad,[-p-q-k[3]])
cetz.draw.hobby((-0.21, -0.02),(-0.48, -0.09),(-0.74, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.25, 0.35),node3.pos,decoration:"arrow",angle:-1.28rad)
cetz.draw.content((-0.14, 0.38),angle:-1.28rad,[-p-k[3]])
cetz.draw.hobby((-0.29, 0.67),(-0.19, 0.35),(-0.10, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.20, 0.68),node4.pos,decoration:"arrow",angle:2.99rad)
cetz.draw.content((0.22, 0.79),angle:2.99rad,[-p])
cetz.draw.hobby((0.66, 0.65),(0.21, 0.74),(-0.25, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.77, -1.07),angle:-2.91rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.67, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.74, -0.79),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.51, -0.79),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.29rad)
cetz.draw.content((-0.98, -0.20),angle:2.29rad,[p+k[3]])
cetz.draw.hobby((-0.98, -0.11),(-0.89, -0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.98rad)
cetz.draw.content((0.99, 0.33),angle:1.98rad,[p+k[3]])
cetz.draw.hobby((0.85, 0.50),(1.02, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.89rad)
cetz.draw.content((-0.73, 0.76),angle:5.89rad,[-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.49, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.06rad)
cetz.draw.content((0.77, 0.84),angle:1.06rad,[-k[3]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding9i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.52, -0.80))
node(node1.pos)
let node2= (pos:(-0.35, 0.00))
node(node2.pos)
let node3= (pos:(0.37, -0.00))
node(node3.pos)
let node4= (pos:(0.52, 0.80))
node(node4.pos)
let node5= (pos:(-0.51, 0.79))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.95),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.87),(0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.40),node2.pos,decoration:"wave",angle:4.51rad)
cetz.draw.content((-0.58, -0.38),angle:4.51rad,[q])
cetz.draw.hobby((-0.56, -0.71),(-0.51, -0.38),(-0.43, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:1.75rad)
cetz.draw.content((0.59, -0.38),angle:1.75rad,[q])
cetz.draw.hobby((0.45, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.00),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.01, 0.12),angle:3.14rad,[-p-q-k[3]])
cetz.draw.hobby((0.30, 0.06),(0.01, 0.06),(-0.28, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, 0.40),node5.pos,decoration:"arrow",angle:1.77rad)
cetz.draw.content((-0.58, 0.38),angle:1.77rad,[-p-k[3]])
cetz.draw.hobby((-0.43, 0.06),(-0.52, 0.38),(-0.56, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.47, 0.40),node3.pos,decoration:"arrow",angle:-1.75rad)
cetz.draw.content((0.59, 0.38),angle:-1.75rad,[-p-k[3]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.83),node5.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.95),angle:0.00rad,[k[3]])
cetz.draw.hobby((0.42, 0.87),(0.00, 0.89),(-0.41, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.58, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.81, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.63, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((-0.80, 0.79),angle:2.74rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
cetz.draw.content((0.71, 1.01),angle:3.54rad,[p])
cetz.draw.hobby((0.59, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding9i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.81))
node(node0.pos)
let node1= (pos:(0.59, -0.90))
node(node1.pos)
let node2= (pos:(0.13, -0.07))
node(node2.pos)
let node3= (pos:(0.78, -0.25))
node(node3.pos)
let node4= (pos:(-0.76, 0.56))
node(node4.pos)
let node5= (pos:(0.37, 0.73))
node(node5.pos)
edge(node1.pos,(0.09, -0.89),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.08, -1.01),angle:3.05rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.97),(0.09, -0.95),(-0.32, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.44),node2.pos,decoration:"wave",angle:4.09rad)
cetz.draw.content((-0.26, -0.37),angle:4.09rad,[q])
cetz.draw.hobby((-0.41, -0.70),(-0.20, -0.39),(0.03, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.59),node1.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.83, -0.62),angle:1.29rad,[q])
cetz.draw.hobby((0.83, -0.32),(0.78, -0.60),(0.67, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.49, -0.03),angle:2.87rad,[-p-q-k[3]])
cetz.draw.hobby((0.73, -0.17),(0.47, -0.09),(0.21, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.25, 0.35),node5.pos,decoration:"arrow",angle:1.28rad)
cetz.draw.content((0.14, 0.38),angle:1.28rad,[-p-k[3]])
cetz.draw.hobby((0.10, 0.03),(0.19, 0.35),(0.29, 0.67),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.20, 0.67),node4.pos,decoration:"arrow",angle:3.29rad)
cetz.draw.content((-0.22, 0.79),angle:3.29rad,[-p])
cetz.draw.hobby((0.25, 0.79),(-0.20, 0.74),(-0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.66, -1.02),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.48, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
cetz.draw.content((0.82, -0.83),angle:2.91rad,[-k[0]])
cetz.draw.hobby((0.70, -0.87),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.98rad)
cetz.draw.content((-0.77, 0.23),angle:-1.98rad,[p+k[3]])
cetz.draw.hobby((-0.91, 0.07),(-0.74, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.98rad)
cetz.draw.content((0.80, -0.04),angle:3.98rad,[p+k[3]])
cetz.draw.hobby((0.80, -0.13),(0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.22rad)
cetz.draw.content((-0.98, 0.72),angle:5.22rad,[-k[3]])
cetz.draw.hobby((-1.00, 0.88),(-0.86, 0.62),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
cetz.draw.content((0.64, 0.98),angle:0.40rad,[-k[3]])
cetz.draw.hobby((0.44, 0.83),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.78))
node(node0.pos)
let node1= (pos:(-0.55, -0.78))
node(node1.pos)
let node2= (pos:(0.73, -0.00))
node(node2.pos)
let node3= (pos:(-0.73, -0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.78))
node(node4.pos)
let node5= (pos:(0.55, 0.78))
node(node5.pos)
edge(node0.pos,(-0.00, -0.80),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.64, -0.40),node2.pos,decoration:"wave",angle:-1.80rad)
edge(node3.pos,(-0.65, -0.40),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(0.65, 0.40),node5.pos,decoration:"arrow",angle:1.80rad)
edge(node4.pos,(-0.65, 0.40),node3.pos,decoration:"arrow",angle:4.48rad)
edge(node5.pos,(0.00, 0.80),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.15rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.83rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.45rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.85))
node(node0.pos)
let node1= (pos:(0.56, -0.88))
node(node1.pos)
let node2= (pos:(-0.21, -0.11))
node(node2.pos)
let node3= (pos:(0.65, -0.20))
node(node3.pos)
let node4= (pos:(-0.05, 0.59))
node(node4.pos)
let node5= (pos:(-0.67, 0.69))
node(node5.pos)
edge(node1.pos,(0.04, -0.90),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.04, -1.02),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.95),(0.04, -0.96),(-0.38, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.36, -0.48),node2.pos,decoration:"wave",angle:4.38rad)
cetz.draw.content((-0.48, -0.44),angle:4.38rad,[q])
cetz.draw.hobby((-0.51, -0.76),(-0.42, -0.45),(-0.30, -0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.55),node1.pos,decoration:"wave",angle:1.44rad)
cetz.draw.content((0.75, -0.56),angle:1.44rad,[q])
cetz.draw.hobby((0.71, -0.27),(0.69, -0.55),(0.64, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((0.24, -0.03),angle:3.04rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.57, -0.13),(0.22, -0.08),(-0.12, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.48, 0.27),node5.pos,decoration:"arrow",angle:2.09rad)
cetz.draw.content((-0.58, 0.21),angle:2.09rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.32, -0.07),(-0.53, 0.24),(-0.69, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.70),node5.pos,decoration:"coil",angle:-0.16rad)
cetz.draw.content((-0.33, 0.82),angle:-0.16rad,[k[3]])
cetz.draw.hobby((-0.07, 0.67),(-0.34, 0.76),(-0.62, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.70, -1.04),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.55, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.81, -0.83),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.67, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.59rad)
cetz.draw.content((-0.46, 0.19),angle:-2.59rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.10, 0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.65rad)
cetz.draw.content((0.77, 0.01),angle:3.65rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.71, -0.10),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.92, 0.76),angle:2.38rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.78, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((0.43, 0.90),angle:3.52rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.02, 0.68),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding10i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.20))
node(node2.pos)
let node3= (pos:(0.21, -0.11))
node(node3.pos)
let node4= (pos:(0.67, 0.69))
node(node4.pos)
let node5= (pos:(0.05, 0.59))
node(node5.pos)
edge(node1.pos,(-0.04, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.93),(-0.04, -0.96),(-0.46, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.55),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.76, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.64, -0.83),(-0.70, -0.55),(-0.71, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, -0.48),node1.pos,decoration:"wave",angle:1.90rad)
cetz.draw.content((0.48, -0.44),angle:1.90rad,[q])
cetz.draw.hobby((0.30, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.24, -0.02),angle:3.25rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.12, -0.05),(-0.22, -0.08),(-0.57, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.27),node3.pos,decoration:"arrow",angle:-2.09rad)
cetz.draw.content((0.58, 0.21),angle:-2.09rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.70, 0.58),(0.53, 0.24),(0.32, -0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"coil",angle:0.16rad)
cetz.draw.content((0.33, 0.82),angle:0.16rad,[k[3]])
cetz.draw.hobby((0.62, 0.76),(0.34, 0.76),(0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.77, -0.81),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.63rad)
cetz.draw.content((-0.88, -0.20),angle:2.63rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
cetz.draw.content((0.59, 0.40),angle:2.59rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.16, 0.59),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((-0.52, 0.68),angle:2.77rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.91rad)
cetz.draw.content((0.75, 0.93),angle:3.91rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.70, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.78))
node(node0.pos)
let node1= (pos:(-0.53, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.02))
node(node2.pos)
let node3= (pos:(-0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.36, 0.78))
node(node4.pos)
let node5= (pos:(-0.36, 0.78))
node(node5.pos)
edge(node0.pos,(0.00, -0.81),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.56, -0.39),node2.pos,decoration:"wave",angle:-1.62rad)
edge(node3.pos,(-0.56, -0.39),node1.pos,decoration:"wave",angle:1.62rad)
edge(node2.pos,(0.11, 0.38),node5.pos,decoration:"arrow",angle:2.45rad)
edge(node4.pos,(-0.11, 0.38),node3.pos,decoration:"arrow",angle:-2.46rad)
edge(node4.pos,(0.00, 0.84),node5.pos,decoration:"coil",angle:-0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.10rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.10rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.81rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.47rad)
})
[= embedding 1 [1, -1, -2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding1i0,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding1f0,embedding1f1,)
pagebreak()
[= embedding 2 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-2
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-2
```]
grid(columns: cols,gutter: 20pt,embedding2i0,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding2f0,embedding2f1,embedding2f2,)
pagebreak()
[= embedding 3 [1, 0, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-2 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,embedding3i0,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding3f0,embedding3f1,embedding3f2,)
pagebreak()
[= embedding 4 [1, 0, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2
	-2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding4i0,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding4f0,embedding4f1,)
pagebreak()
[= embedding 5 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,embedding5i0,embedding5i1,embedding5i2,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding5f0,)
pagebreak()
[= embedding 6 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding6i0,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding6f0,embedding6f1,embedding6f2,)
pagebreak()
[= embedding 7 [1, 1, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p+k[3]]^-2 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-1 prop[0,-p+k[3]]^-2 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-2
	+2 prop[0,-p+k[3]]^-2 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
	+4 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,embedding7i0,embedding7i1,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding7f0,)
pagebreak()
[= embedding 8 [1, 1, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-2 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,embedding8i0,embedding8i1,embedding8i2,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding8f0,)
pagebreak()
[= embedding 9 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p-k[3]]^-2 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p-k[3]]^-2 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,embedding9i0,embedding9i1,embedding9i2,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding9f0,)
pagebreak()
[= embedding 10 [1, 2, 2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
4 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	+4 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
	-prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,embedding10i0,embedding10i1,)
pagebreak()
[== final]
grid(columns: cols,gutter: 20pt,embedding10f0,)
pagebreak()
}