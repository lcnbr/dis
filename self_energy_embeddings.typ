#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node5.pos,decoration:"arrow",angle:3.68rad)
cetz.draw.content((0.09, 0.92),angle:3.68rad,[p-2 k[3]])
cetz.draw.hobby((-0.39, -0.37),(-0.22, 0.56),(0.60, 1.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((0.10, -0.27),angle:0.79rad,[k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.62rad)
cetz.draw.content((-0.12, -0.48),angle:5.62rad,[k[3]])
cetz.draw.hobby((-0.46, -0.14),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p-k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:5.00rad)
cetz.draw.content((-0.47, -0.12),angle:5.00rad,[p-k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.26, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.13, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(0.98, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[p-2 k[3]])
cetz.draw.hobby((-0.91, -0.48),(-1.12, 1.21),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[k[3]])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((0.29, 0.36),angle:0.54rad,[k[3]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p-k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p-k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.13, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(0.98, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.91, -0.48),(-1.12, 1.21),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[k[3]])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:1.43rad)
cetz.draw.content((0.36, -0.37),angle:1.43rad,[q+k[3]])
cetz.draw.hobby((0.39, -0.62),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:2.15rad)
cetz.draw.content((-0.56, 0.26),angle:2.15rad,[q+k[3]])
cetz.draw.hobby((-0.57, 0.16),(-0.66, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p-q-k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p-q-k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.14, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(1.00, -0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:5.48rad)
cetz.draw.content((-1.02, -0.44),angle:5.48rad,[p-k[3]])
cetz.draw.hobby((-0.90, -0.47),(-1.09, 1.18),(0.54, 1.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[k[3]])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.59, -0.43),node3.pos,decoration:"arrow",angle:1.41rad)
cetz.draw.content((0.71, -0.45),angle:1.41rad,[q+k[3]])
cetz.draw.hobby((0.65, -0.45),(0.37, 0.38),(-0.48, 0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[k[3]])
cetz.draw.hobby((-0.58, 0.59),(0.05, 0.85),(0.71, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.07rad)
cetz.draw.content((-0.63, 0.89),angle:4.07rad,[p])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.61, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((0.10, -0.27),angle:0.79rad,[k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[k[3]])
cetz.draw.hobby((-0.46, -0.14),(0.27, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p-k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p-k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding2i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.07rad)
cetz.draw.content((-0.63, 0.89),angle:4.07rad,[p])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.61, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:3.94rad)
cetz.draw.content((0.10, -0.27),angle:3.94rad,[p-k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[p-k[3]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:0.11rad)
cetz.draw.content((-0.14, 0.58),angle:0.11rad,[k[3]])
cetz.draw.hobby((-0.65, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.26, 0.62),angle:0.25rad,[k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.07rad)
cetz.draw.content((-0.63, 0.89),angle:4.07rad,[p-q])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.61, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:3.94rad)
cetz.draw.content((0.10, -0.27),angle:3.94rad,[p-q-k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[p-q-k[3]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.51rad)
cetz.draw.content((0.38, -0.11),angle:1.51rad,[q+k[3]])
cetz.draw.hobby((0.41, -0.62),(0.47, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
cetz.draw.content((-0.73, 0.57),angle:3.68rad,[q+k[3]])
cetz.draw.hobby((-0.70, 0.51),(-0.69, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((2.02, 0.90),(4.10, -4.11),(-1.22, -3.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.66, 0.88),(0.41, 0.75),(-0.01, -0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[p])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[k[2]])
cetz.draw.hobby((-0.90, -0.49),(-1.13, 1.20),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[p+q])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[p+k[2]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.12),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:0.11rad)
cetz.draw.content((-0.14, 0.58),angle:0.11rad,[p])
cetz.draw.hobby((-0.65, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.26, 0.62),angle:0.25rad,[p])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.14, 0.94),angle:0.07rad,[p])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(1.00, -0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[p])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[p+q])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:5.18rad)
cetz.draw.content((-0.47, -0.41),angle:5.18rad,[-k[2]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.03rad)
cetz.draw.content((0.88, 0.41),angle:-2.03rad,[-k[2]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p+k[2]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+k[2]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node5.pos,decoration:"arrow",angle:3.68rad)
cetz.draw.content((0.09, 0.92),angle:3.68rad,[k[2]])
cetz.draw.hobby((-0.39, -0.37),(-0.22, 0.56),(0.60, 1.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[p])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[p+q])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[p+k[2]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.08, -0.03),angle:1.06rad,[p])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:5.36rad)
cetz.draw.content((-0.14, -0.19),angle:5.36rad,[p])
cetz.draw.hobby((-0.50, 0.38),(0.32, -0.69),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.62, 0.77),angle:3.50rad,[k[0]])
cetz.draw.hobby((-1.22, -3.06),(4.10, -4.11),(2.02, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.66, 0.88),(0.41, 0.75),(-0.01, -0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[p-q])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:5.48rad)
cetz.draw.content((-1.02, -0.44),angle:5.48rad,[k[2]])
cetz.draw.hobby((-0.89, -0.48),(-1.10, 1.18),(0.54, 1.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[p-q])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[p-q+k[2]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.51rad)
cetz.draw.content((0.38, -0.11),angle:1.51rad,[p])
cetz.draw.hobby((0.41, -0.62),(0.47, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
cetz.draw.content((-0.73, 0.57),angle:3.68rad,[p])
cetz.draw.hobby((-0.70, 0.51),(-0.69, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[k[3]])
cetz.draw.hobby((-0.58, 0.59),(0.05, 0.85),(0.71, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[-p+2 k[3]])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((0.10, -0.27),angle:0.78rad,[k[3]])
cetz.draw.hobby((-0.11, -0.57),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[k[3]])
cetz.draw.hobby((-0.46, -0.14),(0.27, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p-k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p-k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.13, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(0.98, -0.38),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[-p+2 k[3]])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:5.18rad)
cetz.draw.content((-0.47, -0.41),angle:5.18rad,[p-k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.03rad)
cetz.draw.content((0.88, 0.41),angle:-2.03rad,[p-k[3]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:0.11rad)
cetz.draw.content((-0.14, 0.58),angle:0.11rad,[k[3]])
cetz.draw.hobby((-0.65, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.26, 0.62),angle:0.25rad,[k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.62, 0.77),angle:3.50rad,[k[0]])
cetz.draw.hobby((-1.22, -3.06),(4.10, -4.11),(2.02, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.66, 0.88),(0.41, 0.75),(-0.01, -0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.14, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(1.00, -0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:5.18rad)
cetz.draw.content((-0.47, -0.41),angle:5.18rad,[p-q-k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.03rad)
cetz.draw.content((0.88, 0.41),angle:-2.03rad,[p-q-k[3]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.51rad)
cetz.draw.content((0.38, -0.11),angle:1.51rad,[q+k[3]])
cetz.draw.hobby((0.41, -0.62),(0.47, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
cetz.draw.content((-0.73, 0.57),angle:3.68rad,[q+k[3]])
cetz.draw.hobby((-0.70, 0.51),(-0.69, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[-p+k[3]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:5.00rad)
cetz.draw.content((-0.47, -0.12),angle:5.00rad,[p])
cetz.draw.hobby((-0.55, 0.38),(-0.26, -0.59),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((2.02, 0.90),(4.10, -4.11),(-1.22, -3.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.66, 0.88),(0.41, 0.75),(-0.01, -0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node5.pos,decoration:"arrow",angle:3.69rad)
cetz.draw.content((0.08, 0.92),angle:3.69rad,[-p])
cetz.draw.hobby((-0.39, -0.37),(-0.22, 0.56),(0.60, 1.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:4.83rad)
cetz.draw.content((-1.05, -0.40),angle:4.83rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.77, -1.54),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.12),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((0.10, -0.27),angle:0.79rad,[k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[k[3]])
cetz.draw.hobby((-0.46, -0.14),(0.27, -0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p-k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p-k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[-p])
cetz.draw.hobby((-0.90, -0.49),(-1.13, 1.20),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[k[3]])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((0.29, 0.36),angle:0.54rad,[k[3]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p-k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p-k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:5.48rad)
cetz.draw.content((-1.02, -0.44),angle:5.48rad,[-p+q])
cetz.draw.hobby((-0.89, -0.48),(-1.10, 1.18),(0.54, 1.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[k[3]])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:1.46rad)
cetz.draw.content((0.38, -0.37),angle:1.46rad,[q+k[3]])
cetz.draw.hobby((0.41, -0.62),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:2.15rad)
cetz.draw.content((-0.56, 0.26),angle:2.15rad,[q+k[3]])
cetz.draw.hobby((-0.57, 0.16),(-0.66, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p-q-k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p-q-k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.13, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(0.98, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[p+q])
cetz.draw.hobby((-0.91, -0.48),(-1.12, 1.21),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[k[3]])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.13, -0.48),angle:2.47rad,[-q-k[3]])
cetz.draw.hobby((-0.46, -0.14),(0.27, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.09, 0.31),angle:2.86rad,[-q-k[3]])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p+q+k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+q+k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[p+k[3]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.33rad)
cetz.draw.content((0.60, -0.65),angle:1.33rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.16),(0.57, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.13, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(0.98, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[p])
cetz.draw.hobby((-0.91, -0.48),(-1.12, 1.21),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[-k[3]])
cetz.draw.hobby((-0.57, 0.16),(-0.66, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:1.11rad)
cetz.draw.content((0.88, 0.41),angle:1.11rad,[-k[3]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p+k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node5.pos,decoration:"arrow",angle:3.68rad)
cetz.draw.content((0.09, 0.92),angle:3.68rad,[p])
cetz.draw.hobby((-0.40, -0.37),(-0.22, 0.56),(0.60, 1.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.04rad)
cetz.draw.content((-0.47, -0.41),angle:2.04rad,[-k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.38, -0.37),angle:4.61rad,[-k[3]])
cetz.draw.hobby((0.41, -0.62),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"coil",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p+k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"coil",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.07rad)
cetz.draw.content((-0.63, 0.89),angle:4.07rad,[p+q+2 k[3]])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.61, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:3.94rad)
cetz.draw.content((0.10, -0.27),angle:3.94rad,[p+q+k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[p+q+k[3]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.22rad)
cetz.draw.content((-0.14, -0.19),angle:2.22rad,[-q-k[3]])
cetz.draw.hobby((-0.50, 0.38),(0.32, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[-q-k[3]])
cetz.draw.hobby((-0.65, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[k[3]])
cetz.draw.hobby((-0.58, 0.59),(0.05, 0.85),(0.71, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[p+2 k[3]])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.04rad)
cetz.draw.content((-0.47, -0.41),angle:2.04rad,[-k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.36, -0.37),angle:4.57rad,[-k[3]])
cetz.draw.hobby((0.39, -0.62),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.19rad)
cetz.draw.content((0.08, -0.03),angle:4.19rad,[p+k[3]])
cetz.draw.hobby((-0.16, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p+k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.07rad)
cetz.draw.content((-0.63, 0.89),angle:4.07rad,[p+2 k[3]])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.61, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:3.94rad)
cetz.draw.content((0.10, -0.27),angle:3.94rad,[p+k[3]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[p+k[3]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.73, 0.57),angle:0.54rad,[-k[3]])
cetz.draw.hobby((-0.70, 0.51),(-0.69, 0.52),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.85, 0.64),angle:0.70rad,[-k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[-p-q])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[k[2]])
cetz.draw.hobby((-0.90, -0.49),(-1.13, 1.20),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[-p-q])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[-p-q+k[2]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[p])
cetz.draw.hobby((-0.50, 0.38),(0.29, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[p])
cetz.draw.hobby((-0.65, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[-p])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:4.83rad)
cetz.draw.content((-1.05, -0.40),angle:4.83rad,[-p])
cetz.draw.hobby((-0.97, -0.52),(0.77, -1.54),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[-p+q])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.00),decoration:"arrow",angle:3.94rad)
cetz.draw.content((0.10, -0.27),angle:3.94rad,[k[2]])
cetz.draw.hobby((-0.10, -0.56),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[k[2]])
cetz.draw.hobby((-0.38, 0.03),(0.90, 0.80),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p-k[2]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p-k[2]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[-p])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[k[2]])
cetz.draw.hobby((-0.90, -0.49),(-1.13, 1.20),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[-p+q])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[-p+k[2]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.73, 0.57),angle:0.54rad,[p])
cetz.draw.hobby((-0.70, 0.51),(-0.69, 0.52),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.85, 0.64),angle:0.70rad,[p])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node5.pos,decoration:"arrow",angle:3.68rad)
cetz.draw.content((0.09, 0.92),angle:3.68rad,[k[2]])
cetz.draw.hobby((-0.39, -0.37),(-0.22, 0.56),(0.60, 1.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[-p])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[-p+q])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, -0.43),node4.pos,decoration:"coil",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[-p+k[2]])
cetz.draw.hobby((1.12, 0.59),(0.87, -0.22),(0.20, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.86rad)
cetz.draw.content((-0.47, -0.12),angle:1.86rad,[p])
cetz.draw.hobby((-0.55, 0.38),(-0.26, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:4.65rad)
cetz.draw.content((0.38, -0.11),angle:4.65rad,[p])
cetz.draw.hobby((0.41, -0.62),(0.47, 0.39),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.14, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(1.00, -0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[-p-q])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:5.18rad)
cetz.draw.content((-0.47, -0.41),angle:5.18rad,[p+q+k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.03rad)
cetz.draw.content((0.88, 0.41),angle:-2.03rad,[p+q+k[3]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.22rad)
cetz.draw.content((-0.14, -0.19),angle:2.22rad,[-q-k[3]])
cetz.draw.hobby((-0.50, 0.38),(0.32, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[-q-k[3]])
cetz.draw.hobby((-0.65, 0.46),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.14, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(1.01, -0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:5.48rad)
cetz.draw.content((-1.02, -0.44),angle:5.48rad,[-p-k[3]])
cetz.draw.hobby((-0.89, -0.48),(-1.10, 1.18),(0.54, 1.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[k[3]])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.59, -0.43),node3.pos,decoration:"arrow",angle:1.41rad)
cetz.draw.content((0.71, -0.45),angle:1.41rad,[q+k[3]])
cetz.draw.hobby((0.65, -0.45),(0.37, 0.38),(-0.48, 0.60),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node5.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((0.11, 0.93),angle:0.27rad,[k[3]])
cetz.draw.hobby((-0.58, 0.59),(0.05, 0.85),(0.71, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[-p])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.04rad)
cetz.draw.content((-0.47, -0.41),angle:2.04rad,[-k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.36, -0.37),angle:4.57rad,[-k[3]])
cetz.draw.hobby((0.39, -0.62),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[p+k[3]])
cetz.draw.hobby((-0.55, 0.38),(-0.28, -0.59),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p+k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.13, 0.94),angle:0.07rad,[k[3]])
cetz.draw.hobby((-0.64, -0.22),(0.29, 0.87),(0.98, -0.38),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"arrow",angle:1.87rad)
cetz.draw.content((-1.05, -0.42),angle:1.87rad,[q+k[3]])
cetz.draw.hobby((0.12, -1.01),(-0.75, -0.79),(-1.01, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node4.pos,decoration:"coil",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[-p])
cetz.draw.hobby((0.56, 1.24),(-0.60, 0.83),(-0.62, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:5.18rad)
cetz.draw.content((-0.47, -0.41),angle:5.18rad,[p+k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.30, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:-2.03rad)
cetz.draw.content((0.88, 0.41),angle:-2.03rad,[p+k[3]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.73, 0.57),angle:0.54rad,[-k[3]])
cetz.draw.hobby((-0.70, 0.51),(-0.69, 0.52),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.85, 0.64),angle:0.70rad,[-k[3]])
cetz.draw.hobby((0.92, 0.78),(0.69, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.35rad)
cetz.draw.content((0.62, 0.77),angle:0.35rad,[q+k[0]])
cetz.draw.hobby((1.91, 0.88),(3.94, -3.91),(-1.17, -2.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.90, -0.49),(-1.13, 1.20),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.62, 0.90),angle:0.81rad,[k[3]])
cetz.draw.hobby((-0.69, 0.71),(-0.05, 1.18),(0.74, 1.14),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.62, -0.40),(-0.56, -0.44),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.21),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.11),(0.42, -0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.13, -0.48),angle:2.47rad,[-q-k[3]])
cetz.draw.hobby((-0.46, -0.14),(0.27, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.09, 0.31),angle:2.86rad,[-q-k[3]])
cetz.draw.hobby((-0.63, 0.40),(0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p+q+k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p+q+k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.60, -0.65),angle:1.35rad,[q])
cetz.draw.hobby((-0.64, -0.06),(0.10, 0.15),(0.56, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:0.08rad)
cetz.draw.content((0.13, 0.94),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.63, -0.22),(0.30, 0.88),(0.99, -0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.93, -0.38),node5.pos,decoration:"arrow",angle:5.52rad)
cetz.draw.content((-1.02, -0.47),angle:5.52rad,[-p-2 k[3]])
cetz.draw.hobby((-0.90, -0.49),(-1.13, 1.20),(0.54, 1.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.94, -0.47),(0.82, 0.86),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[-k[3]])
cetz.draw.hobby((-0.57, 0.16),(-0.66, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.00),decoration:"arrow",angle:1.11rad)
cetz.draw.content((0.88, 0.41),angle:1.11rad,[-k[3]])
cetz.draw.hobby((0.99, 0.77),(0.66, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p+k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p+k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.11))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.62, 0.77),angle:3.49rad,[k[0]])
cetz.draw.hobby((-1.17, -2.96),(3.94, -3.91),(1.91, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.83),node1.pos,decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.37, 0.91),angle:-0.83rad,[q])
cetz.draw.hobby((-0.67, 0.88),(0.41, 0.76),(-0.01, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.49, -0.62),node2.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.61, -0.63),angle:1.50rad,[q])
cetz.draw.hobby((-0.61, -0.10),(0.08, 0.06),(0.54, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.82),node5.pos,decoration:"arrow",angle:3.68rad)
cetz.draw.content((0.09, 0.92),angle:3.68rad,[-p-2 k[3]])
cetz.draw.hobby((-0.39, -0.37),(-0.22, 0.56),(0.60, 1.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.05, -0.37),angle:4.82rad,[k[3]])
cetz.draw.hobby((-0.97, -0.52),(0.76, -1.53),(1.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.81),node3.pos,decoration:"arrow",angle:3.90rad)
cetz.draw.content((-0.61, 0.90),angle:3.90rad,[q+k[3]])
cetz.draw.hobby((0.96, -0.46),(0.82, 0.87),(-0.51, 0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.40, -0.34),angle:-1.67rad,[-q-k[0]])
cetz.draw.hobby((-0.46, -0.40),(-0.45, -0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.08, -0.35),angle:3.02rad,[-q-k[0]])
cetz.draw.hobby((-0.56, -0.35),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.00),decoration:"arrow",angle:2.05rad)
cetz.draw.content((-0.46, -0.41),angle:2.05rad,[-k[3]])
cetz.draw.hobby((-0.52, -0.16),(-0.29, -0.61),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.38, -0.37),angle:4.61rad,[-k[3]])
cetz.draw.hobby((0.41, -0.62),(0.46, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.54),decoration:"coil",angle:-2.89rad)
cetz.draw.content((0.26, 0.62),angle:-2.89rad,[p+k[3]])
cetz.draw.hobby((-0.38, 0.52),(0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.54),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.08, -0.03),angle:4.20rad,[p+k[3]])
cetz.draw.hobby((-0.14, -0.55),(0.41, 0.44),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [1, 0, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding1i0,embedding1i1,)
[== final]
grid(columns: cols,gutter: 20pt,embedding1f0,)
[= embedding 2 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding2i0,embedding2i1,embedding2i2,)
[== final]
grid(columns: cols,gutter: 20pt,embedding2f0,)
[= embedding 3 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding3i0,embedding3i1,embedding3i2,)
[== final]
grid(columns: cols,gutter: 20pt,embedding3f0,)
[= embedding 4 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding4i0,embedding4i1,)
[== final]
grid(columns: cols,gutter: 20pt,embedding4f0,)
[= embedding 5 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding5i0,embedding5i1,embedding5i2,)
[== final]
grid(columns: cols,gutter: 20pt,embedding5f0,)
[= embedding 6 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding6i0,)
[== final]
grid(columns: cols,gutter: 20pt,embedding6f0,embedding6f1,embedding6f2,)
[= embedding 7 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding7i0,)
[== final]
grid(columns: cols,gutter: 20pt,embedding7f0,embedding7f1,)
[= embedding 8 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding8i0,)
[== final]
grid(columns: cols,gutter: 20pt,embedding8f0,embedding8f1,embedding8f2,)
[= embedding 9 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding9i0,)
[== final]
grid(columns: cols,gutter: 20pt,embedding9f0,embedding9f1,embedding9f2,)
[= embedding 10 [1, 1, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding10i0,)
[== final]
grid(columns: cols,gutter: 20pt,embedding10f0,embedding10f1,)
}