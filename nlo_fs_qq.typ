#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let graph1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, 0.74))
node(node0.pos)
let node1= (pos:(-0.63, 0.22))
node(node1.pos)
let node2= (pos:(-0.33, -0.64))
node(node2.pos)
let node3= (pos:(0.34, 0.47))
node(node3.pos)
let node4= (pos:(0.55, 0.03))
node(node4.pos)
let node5= (pos:(0.59, -0.76))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.83, 0.76),angle:5.76rad,[])
cetz.draw.hobby((-0.94, 0.90),(-0.65, 0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.53rad)
cetz.draw.content((-0.75, 0.00),angle:0.53rad,[])
cetz.draw.hobby((-0.88, -0.00),(-0.69, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.61, -0.93),angle:0.49rad,[])
cetz.draw.hobby((-0.88, -1.01),(-0.39, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.60, 0.83),angle:0.68rad,[])
cetz.draw.hobby((0.38, 0.58),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.07rad)
cetz.draw.content((0.79, 0.14),angle:-0.07rad,[])
cetz.draw.hobby((0.66, 0.09),(0.90, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -1.00),decoration:"arrow",angle:-0.54rad)
cetz.draw.content((0.86, -0.77),angle:-0.54rad,[])
cetz.draw.hobby((0.71, -0.76),(0.95, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.16, 0.34),node3.pos,decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.19, 0.46),angle:0.25rad,[])
cetz.draw.hobby((-0.55, 0.30),(-0.16, 0.40),(0.23, 0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, -0.10),node2.pos,decoration:"wave",angle:-2.12rad)
cetz.draw.content((0.10, -0.17),angle:-2.12rad,[])
cetz.draw.hobby((0.33, 0.33),(0.06, -0.12),(-0.21, -0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.37),node5.pos,decoration:"wave",angle:-1.52rad)
cetz.draw.content((0.71, -0.36),angle:-1.52rad,[])
cetz.draw.hobby((0.62, -0.04),(0.65, -0.36),(0.66, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, 0.40),node4.pos,decoration:"arrow",angle:-0.57rad)
cetz.draw.content((0.07, 0.50),angle:-0.57rad,[])
cetz.draw.hobby((-0.39, 0.72),(0.05, 0.44),(0.48, 0.16),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.12, -0.73),node5.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((0.11, -0.85),angle:6.16rad,[])
cetz.draw.hobby((-0.26, -0.73),(0.12, -0.79),(0.50, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, 0.49),node1.pos,decoration:"coil",angle:4.52rad)
cetz.draw.content((-0.78, 0.52),angle:4.52rad,[])
cetz.draw.hobby((-0.62, 0.73),(-0.72, 0.50),(-0.71, 0.25),stroke:stroke,mark: (end: ">"))
})
let graph2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, 0.49))
node(node0.pos)
let node1= (pos:(-0.35, 0.15))
node(node1.pos)
let node2= (pos:(-0.57, -0.62))
node(node2.pos)
let node3= (pos:(0.65, 0.49))
node(node3.pos)
let node4= (pos:(0.35, 0.15))
node(node4.pos)
let node5= (pos:(0.57, -0.62))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.92, 0.68),angle:5.32rad,[])
cetz.draw.hobby((-0.99, 0.88),(-0.75, 0.54),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.22rad)
cetz.draw.content((-0.65, -0.04),angle:0.22rad,[])
cetz.draw.hobby((-0.89, -0.04),(-0.43, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.71, -0.90),angle:0.72rad,[])
cetz.draw.hobby((-0.89, -0.98),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.97rad)
cetz.draw.content((0.72, 0.81),angle:0.97rad,[])
cetz.draw.hobby((0.65, 0.61),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.22rad)
cetz.draw.content((0.70, 0.19),angle:-0.22rad,[])
cetz.draw.hobby((0.46, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -1.00),decoration:"arrow",angle:-0.72rad)
cetz.draw.content((0.86, -0.72),angle:-0.72rad,[])
cetz.draw.hobby((0.69, -0.64),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, -0.09),node5.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.78, -0.10),angle:-1.65rad,[])
cetz.draw.hobby((0.72, 0.38),(0.72, -0.07),(0.66, -0.53),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.14, 0.40),node3.pos,decoration:"arrow",angle:0.32rad)
cetz.draw.content((0.10, 0.52),angle:0.32rad,[])
cetz.draw.hobby((-0.29, 0.26),(0.10, 0.46),(0.54, 0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.13, 0.40),node4.pos,decoration:"arrow",angle:-0.33rad)
cetz.draw.content((-0.10, 0.52),angle:-0.33rad,[])
cetz.draw.hobby((-0.54, 0.55),(-0.10, 0.46),(0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.08),node1.pos,decoration:"coil",angle:-3.14rad)
cetz.draw.content((0.00, -0.04),angle:-3.14rad,[])
cetz.draw.hobby((0.30, 0.07),(0.00, 0.02),(-0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, -0.65),node5.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.77),angle:6.28rad,[])
cetz.draw.hobby((-0.46, -0.69),(0.00, -0.71),(0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[])
cetz.draw.hobby((-0.72, 0.38),(-0.72, -0.07),(-0.65, -0.52),stroke:stroke,mark: (end: ">"))
})
let graph3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.10, 0.53))
node(node0.pos)
let node1= (pos:(-0.67, 0.15))
node(node1.pos)
let node2= (pos:(-0.41, -0.83))
node(node2.pos)
let node3= (pos:(0.72, 0.38))
node(node3.pos)
let node4= (pos:(0.63, -0.68))
node(node4.pos)
let node5= (pos:(-0.05, -0.13))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.60, 0.66),angle:5.81rad,[])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.78, -0.03),angle:0.42rad,[])
cetz.draw.hobby((-0.88, -0.01),(-0.73, 0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[])
cetz.draw.hobby((-0.89, -1.03),(-0.49, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.75, 0.74),angle:1.15rad,[])
cetz.draw.hobby((0.71, 0.50),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.45rad)
cetz.draw.content((0.50, 0.37),angle:-0.45rad,[])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.72rad)
cetz.draw.content((0.89, -0.75),angle:-0.72rad,[])
cetz.draw.hobby((0.75, -0.70),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.34, 0.13),node3.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((0.28, 0.23),angle:0.58rad,[])
cetz.draw.hobby((-0.01, -0.03),(0.30, 0.18),(0.61, 0.38),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.38, -0.01),node5.pos,decoration:"arrow",angle:5.85rad)
cetz.draw.content((-0.43, -0.12),angle:5.85rad,[])
cetz.draw.hobby((-0.64, 0.06),(-0.40, -0.07),(-0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, -0.49),node2.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.35, -0.44),angle:4.24rad,[])
cetz.draw.hobby((-0.14, -0.17),(-0.28, -0.45),(-0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, -0.16),node4.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((0.83, -0.17),angle:-1.66rad,[])
cetz.draw.hobby((0.78, 0.27),(0.77, -0.16),(0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.12, -0.79),node4.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[])
cetz.draw.hobby((-0.30, -0.89),(0.13, -0.85),(0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, 0.40),node1.pos,decoration:"coil",angle:3.72rad)
cetz.draw.content((-0.48, 0.50),angle:3.72rad,[])
cetz.draw.hobby((-0.18, 0.57),(-0.45, 0.44),(-0.67, 0.24),stroke:stroke,mark: (end: ">"))
})
let graph4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.12, 0.32))
node(node0.pos)
let node1= (pos:(-0.41, 0.21))
node(node1.pos)
let node2= (pos:(-0.47, -0.71))
node(node2.pos)
let node3= (pos:(0.57, 0.69))
node(node3.pos)
let node4= (pos:(0.52, -0.81))
node(node4.pos)
let node5= (pos:(0.34, -0.05))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.64, 0.57),angle:5.63rad,[])
cetz.draw.hobby((-0.96, 0.89),(-0.24, 0.34),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.67, -0.01),angle:0.34rad,[])
cetz.draw.hobby((-0.89, -0.02),(-0.49, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.68, -0.96),angle:0.50rad,[])
cetz.draw.hobby((-0.88, -1.00),(-0.53, -0.81),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.63rad)
cetz.draw.content((0.71, 0.94),angle:0.63rad,[])
cetz.draw.hobby((0.61, 0.79),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((0.47, 0.28),angle:-0.28rad,[])
cetz.draw.hobby((-0.01, 0.35),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.38rad)
cetz.draw.content((0.80, -0.79),angle:-0.38rad,[])
cetz.draw.hobby((0.63, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.51, 0.32),node3.pos,decoration:"arrow",angle:1.29rad)
cetz.draw.content((0.62, 0.28),angle:1.29rad,[])
cetz.draw.hobby((0.44, -0.01),(0.56, 0.29),(0.62, 0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, -0.43),node4.pos,decoration:"wave",angle:-1.35rad)
cetz.draw.content((0.58, -0.41),angle:-1.35rad,[])
cetz.draw.hobby((0.43, -0.10),(0.52, -0.41),(0.57, -0.72),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.04, 0.01),node5.pos,decoration:"arrow",angle:5.97rad)
cetz.draw.content((-0.08, -0.10),angle:5.97rad,[])
cetz.draw.hobby((-0.38, 0.11),(-0.07, -0.04),(0.26, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.10, 0.53),node1.pos,decoration:"coil",angle:3.57rad)
cetz.draw.content((0.05, 0.64),angle:3.57rad,[])
cetz.draw.hobby((0.44, 0.72),(0.02, 0.56),(-0.37, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.02, -0.80),node4.pos,decoration:"arrow",angle:6.19rad)
cetz.draw.content((0.01, -0.92),angle:6.19rad,[])
cetz.draw.hobby((-0.39, -0.79),(0.01, -0.86),(0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.32, -0.22),node2.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((-0.43, -0.18),angle:4.39rad,[])
cetz.draw.hobby((-0.22, 0.24),(-0.36, -0.17),(-0.50, -0.59),stroke:stroke,mark: (end: ">"))
})
let graph5i0=cetz.canvas(length:50%,{
let node0= (pos:(0.05, 0.59))
node(node0.pos)
let node1= (pos:(-0.65, -0.20))
node(node1.pos)
let node2= (pos:(-0.56, -0.88))
node(node2.pos)
let node3= (pos:(0.67, 0.69))
node(node3.pos)
let node4= (pos:(0.47, -0.85))
node(node4.pos)
let node5= (pos:(0.22, -0.11))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.52, 0.68),angle:5.91rad,[])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.88, -0.20),angle:5.78rad,[])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.75, -1.06),angle:0.26rad,[])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((0.75, 0.93),angle:0.77rad,[])
cetz.draw.hobby((0.70, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
cetz.draw.content((0.59, 0.40),angle:-0.55rad,[])
cetz.draw.hobby((0.16, 0.59),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((0.77, -0.81),angle:-0.28rad,[])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, 0.27),node3.pos,decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.58, 0.21),angle:1.05rad,[])
cetz.draw.hobby((0.32, -0.07),(0.53, 0.24),(0.70, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.37, -0.48),node4.pos,decoration:"wave",angle:-1.24rad)
cetz.draw.content((0.48, -0.44),angle:-1.24rad,[])
cetz.draw.hobby((0.31, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.22, -0.14),node5.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((-0.23, -0.02),angle:0.10rad,[])
cetz.draw.hobby((-0.57, -0.12),(-0.22, -0.08),(0.13, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, 0.70),node0.pos,decoration:"coil",angle:3.30rad)
cetz.draw.content((0.33, 0.82),angle:3.30rad,[])
cetz.draw.hobby((0.62, 0.76),(0.34, 0.76),(0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.04, -0.90),node4.pos,decoration:"arrow",angle:0.03rad)
cetz.draw.content((-0.04, -1.02),angle:0.03rad,[])
cetz.draw.hobby((-0.46, -0.95),(-0.04, -0.96),(0.38, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.63, -0.55),node2.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.75, -0.56),angle:4.83rad,[])
cetz.draw.hobby((-0.71, -0.26),(-0.69, -0.55),(-0.64, -0.83),stroke:stroke,mark: (end: ">"))
})
let graph6i0=cetz.canvas(length:50%,{
let node0= (pos:(0.17, 0.23))
node(node0.pos)
let node1= (pos:(-0.65, 0.35))
node(node1.pos)
let node2= (pos:(-0.49, -0.78))
node(node2.pos)
let node3= (pos:(0.33, 0.77))
node(node3.pos)
let node4= (pos:(0.49, -0.71))
node(node4.pos)
let node5= (pos:(-0.24, 0.04))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.70rad)
cetz.draw.content((-0.48, 0.52),angle:5.70rad,[])
cetz.draw.hobby((-0.95, 0.90),(0.06, 0.24),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.74, 0.09),angle:0.78rad,[])
cetz.draw.hobby((-0.89, 0.03),(-0.68, 0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.69, -1.00),angle:0.41rad,[])
cetz.draw.hobby((-0.88, -1.02),(-0.55, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.63, 1.00),angle:0.34rad,[])
cetz.draw.hobby((0.40, 0.86),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.27rad)
cetz.draw.content((0.62, 0.23),angle:-0.27rad,[])
cetz.draw.hobby((0.29, 0.26),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.51rad)
cetz.draw.content((0.80, -0.75),angle:-0.51rad,[])
cetz.draw.hobby((0.61, -0.71),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, 0.47),node3.pos,decoration:"arrow",angle:0.89rad)
cetz.draw.content((-0.06, 0.55),angle:0.89rad,[])
cetz.draw.hobby((-0.25, 0.16),(-0.04, 0.47),(0.22, 0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.49, 0.16),node5.pos,decoration:"arrow",angle:5.64rad)
cetz.draw.content((-0.56, 0.06),angle:5.64rad,[])
cetz.draw.hobby((-0.67, 0.27),(-0.51, 0.10),(-0.30, -0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, -0.38),node2.pos,decoration:"wave",angle:4.42rad)
cetz.draw.content((-0.49, -0.35),angle:4.42rad,[])
cetz.draw.hobby((-0.32, -0.02),(-0.43, -0.35),(-0.52, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.63),node1.pos,decoration:"coil",angle:3.55rad)
cetz.draw.content((-0.25, 0.74),angle:3.55rad,[])
cetz.draw.hobby((0.21, 0.81),(-0.22, 0.69),(-0.61, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.36, -0.25),node0.pos,decoration:"wave",angle:1.89rad)
cetz.draw.content((0.47, -0.21),angle:1.89rad,[])
cetz.draw.hobby((0.52, -0.60),(0.41, -0.21),(0.27, 0.16),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.01, -0.79),node4.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.02, -0.90),angle:0.07rad,[])
cetz.draw.hobby((-0.39, -0.84),(0.01, -0.85),(0.41, -0.79),stroke:stroke,mark: (end: ">"))
})
let graph7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, 0.47))
node(node0.pos)
let node1= (pos:(-0.28, -0.00))
node(node1.pos)
let node2= (pos:(-0.64, -0.64))
node(node2.pos)
let node3= (pos:(0.60, 0.73))
node(node3.pos)
let node4= (pos:(0.55, 0.21))
node(node4.pos)
let node5= (pos:(0.34, -0.75))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.36rad)
cetz.draw.content((-0.90, 0.67),angle:5.36rad,[])
cetz.draw.hobby((-0.99, 0.88),(-0.71, 0.52),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.64, -0.12),angle:6.28rad,[])
cetz.draw.hobby((-0.90, -0.06),(-0.38, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.73, -0.90),angle:0.78rad,[])
cetz.draw.hobby((-0.89, -0.97),(-0.67, -0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.60rad)
cetz.draw.content((0.73, 0.96),angle:0.60rad,[])
cetz.draw.hobby((0.65, 0.83),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.44rad)
cetz.draw.content((0.82, 0.22),angle:-0.44rad,[])
cetz.draw.hobby((0.66, 0.23),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -1.00),decoration:"arrow",angle:-0.36rad)
cetz.draw.content((0.71, -0.76),angle:-0.36rad,[])
cetz.draw.hobby((0.45, -0.73),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, 0.47),node4.pos,decoration:"coil",angle:-1.66rad)
cetz.draw.content((0.78, 0.46),angle:-1.66rad,[])
cetz.draw.hobby((0.68, 0.70),(0.72, 0.45),(0.63, 0.22),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.15, 0.39),node3.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.08, 0.48),angle:0.69rad,[])
cetz.draw.hobby((-0.24, 0.12),(0.11, 0.43),(0.47, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, 0.38),node4.pos,decoration:"arrow",angle:-0.22rad)
cetz.draw.content((-0.02, 0.50),angle:-0.22rad,[])
cetz.draw.hobby((-0.48, 0.52),(-0.01, 0.43),(0.45, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, -0.38),node1.pos,decoration:"wave",angle:2.26rad)
cetz.draw.content((0.14, -0.30),angle:2.26rad,[])
cetz.draw.hobby((0.33, -0.64),(0.08, -0.33),(-0.17, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.16, -0.74),node5.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.17, -0.86),angle:6.17rad,[])
cetz.draw.hobby((-0.56, -0.73),(-0.16, -0.80),(0.24, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.67, -0.09),node2.pos,decoration:"wave",angle:4.68rad)
cetz.draw.content((-0.79, -0.09),angle:4.68rad,[])
cetz.draw.hobby((-0.68, 0.38),(-0.73, -0.08),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
})
let graph8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.05, 0.25))
node(node0.pos)
let node1= (pos:(-0.78, 0.32))
node(node1.pos)
let node2= (pos:(-0.40, -0.68))
node(node2.pos)
let node3= (pos:(0.68, 0.56))
node(node3.pos)
let node4= (pos:(0.62, -0.59))
node(node4.pos)
let node5= (pos:(-0.23, 0.63))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.60, 0.53),angle:5.61rad,[])
cetz.draw.hobby((-0.96, 0.89),(-0.16, 0.26),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.95rad)
cetz.draw.content((-0.79, 0.09),angle:0.95rad,[])
cetz.draw.hobby((-0.89, 0.05),(-0.78, 0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.64, -0.94),angle:0.50rad,[])
cetz.draw.hobby((-0.88, -1.01),(-0.46, -0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.95rad)
cetz.draw.content((0.74, 0.85),angle:0.95rad,[])
cetz.draw.hobby((0.69, 0.67),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.23rad)
cetz.draw.content((0.50, 0.24),angle:-0.23rad,[])
cetz.draw.hobby((0.06, 0.28),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.82rad)
cetz.draw.content((0.90, -0.71),angle:-0.82rad,[])
cetz.draw.hobby((0.73, -0.62),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.25, 0.64),node3.pos,decoration:"arrow",angle:-0.08rad)
cetz.draw.content((0.26, 0.75),angle:-0.08rad,[])
cetz.draw.hobby((-0.14, 0.70),(0.23, 0.70),(0.61, 0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.58, 0.61),node5.pos,decoration:"arrow",angle:0.52rad)
cetz.draw.content((-0.64, 0.72),angle:0.52rad,[])
cetz.draw.hobby((-0.82, 0.41),(-0.61, 0.67),(-0.28, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, 0.39),node1.pos,decoration:"coil",angle:-2.65rad)
cetz.draw.content((-0.41, 0.29),angle:-2.65rad,[])
cetz.draw.hobby((-0.22, 0.54),(-0.43, 0.35),(-0.70, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, -0.02),node4.pos,decoration:"wave",angle:-1.63rad)
cetz.draw.content((0.79, -0.03),angle:-1.63rad,[])
cetz.draw.hobby((0.74, 0.44),(0.73, -0.02),(0.69, -0.48),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.11, -0.66),node4.pos,decoration:"arrow",angle:0.09rad)
cetz.draw.content((0.12, -0.78),angle:0.09rad,[])
cetz.draw.hobby((-0.30, -0.74),(0.12, -0.72),(0.53, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.23, -0.23),node2.pos,decoration:"wave",angle:4.35rad)
cetz.draw.content((-0.34, -0.18),angle:4.35rad,[])
cetz.draw.hobby((-0.14, 0.18),(-0.28, -0.19),(-0.42, -0.56),stroke:stroke,mark: (end: ">"))
})
let graph9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.02, 0.60))
node(node0.pos)
let node1= (pos:(-0.69, -0.16))
node(node1.pos)
let node2= (pos:(-0.52, -0.83))
node(node2.pos)
let node3= (pos:(0.76, 0.44))
node(node3.pos)
let node4= (pos:(0.60, -0.66))
node(node4.pos)
let node5= (pos:(0.02, 0.16))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((-0.55, 0.69),angle:5.90rad,[])
cetz.draw.hobby((-0.93, 0.91),(-0.13, 0.58),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((-0.90, -0.19),angle:5.79rad,[])
cetz.draw.hobby((-0.94, -0.10),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.72, -1.03),angle:0.34rad,[])
cetz.draw.hobby((-0.89, -1.02),(-0.59, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.17rad)
cetz.draw.content((0.77, 0.77),angle:1.17rad,[])
cetz.draw.hobby((0.75, 0.55),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.53rad)
cetz.draw.content((0.55, 0.40),angle:-0.53rad,[])
cetz.draw.hobby((0.10, 0.60),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.70rad)
cetz.draw.content((0.88, -0.74),angle:-0.70rad,[])
cetz.draw.hobby((0.71, -0.68),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.41, 0.30),node3.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.46, 0.19),angle:0.36rad,[])
cetz.draw.hobby((0.12, 0.13),(0.42, 0.23),(0.71, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.11, 0.38),node0.pos,decoration:"coil",angle:1.61rad)
cetz.draw.content((-0.23, 0.38),angle:1.61rad,[])
cetz.draw.hobby((-0.06, 0.14),(-0.17, 0.36),(-0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.34, -0.01),node5.pos,decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.29, -0.12),angle:0.42rad,[])
cetz.draw.hobby((-0.60, -0.19),(-0.31, -0.06),(-0.02, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, -0.13),node4.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.14),angle:-1.72rad,[])
cetz.draw.hobby((0.82, 0.32),(0.77, -0.13),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.05, -0.77),node4.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((0.06, -0.89),angle:0.15rad,[])
cetz.draw.hobby((-0.40, -0.88),(0.05, -0.83),(0.50, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.63, -0.51),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.75, -0.54),angle:4.97rad,[])
cetz.draw.hobby((-0.74, -0.24),(-0.69, -0.52),(-0.60, -0.79),stroke:stroke,mark: (end: ">"))
})
let graph10i0=cetz.canvas(length:50%,{
let node0= (pos:(0.08, 0.42))
node(node0.pos)
let node1= (pos:(-0.79, 0.18))
node(node1.pos)
let node2= (pos:(-0.31, -0.66))
node(node2.pos)
let node3= (pos:(0.52, 0.42))
node(node3.pos)
let node4= (pos:(0.53, -0.64))
node(node4.pos)
let node5= (pos:(-0.26, 0.27))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((-0.52, 0.61),angle:5.79rad,[])
cetz.draw.hobby((-0.94, 0.90),(-0.04, 0.42),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.82, 0.00),angle:0.72rad,[])
cetz.draw.hobby((-0.89, 0.02),(-0.82, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.60, -0.94),angle:0.46rad,[])
cetz.draw.hobby((-0.88, -1.01),(-0.37, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.88rad)
cetz.draw.content((0.67, 0.79),angle:0.88rad,[])
cetz.draw.hobby((0.53, 0.54),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.43rad)
cetz.draw.content((0.59, 0.32),angle:-0.43rad,[])
cetz.draw.hobby((0.20, 0.44),(0.93, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.65rad)
cetz.draw.content((0.84, -0.73),angle:-0.65rad,[])
cetz.draw.hobby((0.65, -0.66),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.20, 0.24),node3.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((0.23, 0.13),angle:0.26rad,[])
cetz.draw.hobby((-0.20, 0.19),(0.16, 0.17),(0.49, 0.32),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.56, 0.38),node5.pos,decoration:"arrow",angle:0.21rad)
cetz.draw.content((-0.59, 0.50),angle:0.21rad,[])
cetz.draw.hobby((-0.81, 0.27),(-0.56, 0.45),(-0.27, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.51, 0.10),node1.pos,decoration:"coil",angle:-3.00rad)
cetz.draw.content((-0.50, -0.02),angle:-3.00rad,[])
cetz.draw.hobby((-0.25, 0.18),(-0.49, 0.05),(-0.77, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.10, -0.15),node2.pos,decoration:"wave",angle:-2.23rad)
cetz.draw.content((0.20, -0.23),angle:-2.23rad,[])
cetz.draw.hobby((0.49, 0.27),(0.17, -0.17),(-0.17, -0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, -0.12),node0.pos,decoration:"wave",angle:1.97rad)
cetz.draw.content((0.45, -0.08),angle:1.97rad,[])
cetz.draw.hobby((0.55, -0.51),(0.38, -0.08),(0.19, 0.35),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.11, -0.70),node4.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((0.12, -0.82),angle:0.02rad,[])
cetz.draw.hobby((-0.23, -0.73),(0.11, -0.76),(0.46, -0.72),stroke:stroke,mark: (end: ">"))
})
let graph11i0=cetz.canvas(length:50%,{
let node0= (pos:(0.10, 0.25))
node(node0.pos)
let node1= (pos:(-0.66, 0.03))
node(node1.pos)
let node2= (pos:(-0.57, -0.76))
node(node2.pos)
let node3= (pos:(0.62, 0.97))
node(node3.pos)
let node4= (pos:(0.44, -0.69))
node(node4.pos)
let node5= (pos:(0.04, 0.73))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.69rad)
cetz.draw.content((-0.52, 0.53),angle:5.69rad,[])
cetz.draw.hobby((-0.95, 0.89),(-0.02, 0.26),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.10rad)
cetz.draw.content((-0.82, -0.10),angle:0.10rad,[])
cetz.draw.hobby((-0.89, -0.05),(-0.75, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.51rad)
cetz.draw.content((-0.73, -0.98),angle:0.51rad,[])
cetz.draw.hobby((-0.88, -1.00),(-0.63, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.80, 1.11),angle:0.07rad,[])
cetz.draw.hobby((0.72, 1.04),(0.90, 1.05),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.27rad)
cetz.draw.content((0.58, 0.24),angle:-0.27rad,[])
cetz.draw.hobby((0.21, 0.28),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.50rad)
cetz.draw.content((0.78, -0.74),angle:-0.50rad,[])
cetz.draw.hobby((0.55, -0.69),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.76),node3.pos,decoration:"arrow",angle:0.41rad)
cetz.draw.content((0.43, 0.65),angle:0.41rad,[])
cetz.draw.hobby((0.10, 0.66),(0.39, 0.70),(0.63, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, 0.99),node3.pos,decoration:"coil",angle:0.37rad)
cetz.draw.content((0.24, 1.11),angle:0.37rad,[])
cetz.draw.hobby((0.01, 0.83),(0.25, 1.05),(0.58, 1.06),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.34, 0.41),node5.pos,decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.43, 0.49),angle:0.79rad,[])
cetz.draw.hobby((-0.65, 0.15),(-0.38, 0.45),(-0.08, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.28, -0.22),node0.pos,decoration:"wave",angle:1.92rad)
cetz.draw.content((0.39, -0.18),angle:1.92rad,[])
cetz.draw.hobby((0.47, -0.58),(0.34, -0.20),(0.19, 0.18),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.06, -0.76),node4.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((-0.06, -0.88),angle:0.07rad,[])
cetz.draw.hobby((-0.47, -0.82),(-0.06, -0.82),(0.35, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.63, -0.37),node2.pos,decoration:"wave",angle:4.82rad)
cetz.draw.content((-0.75, -0.39),angle:4.82rad,[])
cetz.draw.hobby((-0.72, -0.05),(-0.69, -0.37),(-0.65, -0.69),stroke:stroke,mark: (end: ">"))
})
let graph12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.18, 0.31))
node(node0.pos)
let node1= (pos:(-0.33, -0.04))
node(node1.pos)
let node2= (pos:(-0.54, -0.74))
node(node2.pos)
let node3= (pos:(0.77, 0.84))
node(node3.pos)
let node4= (pos:(0.36, -0.78))
node(node4.pos)
let node5= (pos:(0.38, 0.46))
node(node5.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.59rad)
cetz.draw.content((-0.67, 0.56),angle:5.59rad,[])
cetz.draw.hobby((-0.96, 0.89),(-0.30, 0.33),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:6.23rad)
cetz.draw.content((-0.67, -0.14),angle:6.23rad,[])
cetz.draw.hobby((-0.90, -0.07),(-0.44, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((-0.71, -0.97),angle:0.52rad,[])
cetz.draw.hobby((-0.88, -1.00),(-0.60, -0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.62rad)
cetz.draw.content((0.82, 1.02),angle:0.62rad,[])
cetz.draw.hobby((0.82, 0.94),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.26rad)
cetz.draw.content((0.44, 0.27),angle:-0.26rad,[])
cetz.draw.hobby((-0.07, 0.35),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -1.00),decoration:"arrow",angle:-0.33rad)
cetz.draw.content((0.72, -0.78),angle:-0.33rad,[])
cetz.draw.hobby((0.48, -0.76),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.68, 0.55),node3.pos,decoration:"arrow",angle:0.79rad)
cetz.draw.content((0.77, 0.47),angle:0.79rad,[])
cetz.draw.hobby((0.44, 0.40),(0.72, 0.50),(0.84, 0.77),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, 0.76),node3.pos,decoration:"coil",angle:0.73rad)
cetz.draw.content((0.40, 0.85),angle:0.73rad,[])
cetz.draw.hobby((0.32, 0.53),(0.44, 0.80),(0.71, 0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.08, 0.17),node5.pos,decoration:"arrow",angle:0.63rad)
cetz.draw.content((0.15, 0.07),angle:0.63rad,[])
cetz.draw.hobby((-0.23, -0.06),(0.10, 0.11),(0.37, 0.36),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.03, -0.41),node1.pos,decoration:"wave",angle:2.32rad)
cetz.draw.content((0.12, -0.33),angle:2.32rad,[])
cetz.draw.hobby((0.34, -0.66),(0.07, -0.36),(-0.22, -0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.09, -0.81),node4.pos,decoration:"arrow",angle:6.24rad)
cetz.draw.content((-0.09, -0.93),angle:6.24rad,[])
cetz.draw.hobby((-0.46, -0.82),(-0.09, -0.87),(0.28, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.40, -0.28),node2.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((-0.52, -0.25),angle:4.39rad,[])
cetz.draw.hobby((-0.28, 0.23),(-0.43, -0.19),(-0.57, -0.61),stroke:stroke,mark: (end: ">"))
})
[= graph 1 ]
grid(columns: cols,gutter: 20pt,box[#graph1i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 2 ]
grid(columns: cols,gutter: 20pt,box[#graph2i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 3 ]
grid(columns: cols,gutter: 20pt,box[#graph3i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 4 ]
grid(columns: cols,gutter: 20pt,box[#graph4i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 5 ]
grid(columns: cols,gutter: 20pt,box[#graph5i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 6 ]
grid(columns: cols,gutter: 20pt,box[#graph6i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 7 ]
grid(columns: cols,gutter: 20pt,box[#graph7i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 8 ]
grid(columns: cols,gutter: 20pt,box[#graph8i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 9 ]
grid(columns: cols,gutter: 20pt,box[#graph9i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 10 ]
grid(columns: cols,gutter: 20pt,box[#graph10i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 11 ]
grid(columns: cols,gutter: 20pt,box[#graph11i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 12 ]
grid(columns: cols,gutter: 20pt,box[#graph12i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 11 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
}