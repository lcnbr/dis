#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.87))
node(node0.pos)
let node1= (pos:(0.45, -0.86))
node(node1.pos)
let node2= (pos:(-0.54, -0.14))
node(node2.pos)
let node3= (pos:(0.10, -0.15))
node(node3.pos)
let node4= (pos:(0.00, 0.74))
node(node4.pos)
let node5= (pos:(0.48, 0.69))
node(node5.pos)
edge(node1.pos,(-0.05, -0.90),node0.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((-0.05, -1.02),angle:-3.13rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(-0.05, -0.96),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.51),node2.pos,decoration:"wave",angle:4.71rad)
cetz.draw.content((-0.68, -0.51),angle:4.71rad,[q])
cetz.draw.hobby((-0.61, -0.80),(-0.62, -0.51),(-0.61, -0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, -0.50),node1.pos,decoration:"wave",angle:2.03rad)
cetz.draw.content((0.40, -0.45),angle:2.03rad,[q])
cetz.draw.hobby((0.19, -0.19),(0.34, -0.47),(0.48, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.04, 0.28),node5.pos,decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.12, 0.37),angle:0.68rad,[1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((-0.48, -0.01),(-0.08, 0.33),(0.34, 0.66),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.25, 0.83),node5.pos,decoration:"coil",angle:3.04rad)
cetz.draw.content((0.26, 0.95),angle:3.04rad,[k[3]])
cetz.draw.hobby((0.01, 0.83),(0.26, 0.89),(0.49, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.74, -1.05),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.63, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.76, -0.81),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.56, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.57, -0.12),angle:-0.20rad,[1/3 p-2/3 q-1/3 k[3]])
cetz.draw.hobby((0.21, -0.11),(0.91, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.73, -0.35),angle:0.39rad,[1/3 p-2/3 q-1/3 k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.61, -0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.39rad)
cetz.draw.content((0.55, 0.65),angle:-0.39rad,[1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((0.12, 0.76),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.50, -0.02),angle:5.87rad,[1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((-0.93, 0.24),(-0.02, -0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((0.68, 0.95),angle:0.54rad,[1/3 p+1/3 q+2/3 k[3]])
cetz.draw.hobby((0.54, 0.79),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((-0.53, 0.75),angle:6.03rad,[1/3 p+1/3 q+2/3 k[3]])
cetz.draw.hobby((-0.92, 0.92),(-0.11, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.45, -0.85))
node(node0.pos)
let node1= (pos:(0.55, -0.87))
node(node1.pos)
let node2= (pos:(-0.10, -0.15))
node(node2.pos)
let node3= (pos:(0.55, -0.15))
node(node3.pos)
let node4= (pos:(-0.48, 0.69))
node(node4.pos)
let node5= (pos:(-0.00, 0.74))
node(node5.pos)
edge(node1.pos,(0.05, -0.90),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.04, -1.02),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.45, -0.94),(0.05, -0.96),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, -0.50),node2.pos,decoration:"wave",angle:4.25rad)
cetz.draw.content((-0.40, -0.45),angle:4.25rad,[q])
cetz.draw.hobby((-0.48, -0.76),(-0.34, -0.47),(-0.19, -0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.51),node1.pos,decoration:"wave",angle:1.57rad)
cetz.draw.content((0.68, -0.51),angle:1.57rad,[q])
cetz.draw.hobby((0.61, -0.21),(0.62, -0.51),(0.61, -0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.05, 0.28),node3.pos,decoration:"arrow",angle:-0.68rad)
cetz.draw.content((0.12, 0.37),angle:-0.68rad,[1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((-0.34, 0.66),(0.08, 0.33),(0.49, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.26, 0.82),node5.pos,decoration:"coil",angle:3.25rad)
cetz.draw.content((-0.27, 0.94),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.49, 0.77),(-0.26, 0.88),(-0.01, 0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.69, -1.04),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.53, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.81, -0.82),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.66, -0.84),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.39rad)
cetz.draw.content((0.82, -0.13),angle:-0.39rad,[1/3 p-2/3 q-1/3 k[3]])
cetz.draw.hobby((0.66, -0.13),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.20rad)
cetz.draw.content((-0.52, -0.36),angle:0.20rad,[1/3 p-2/3 q-1/3 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.18, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.41rad)
cetz.draw.content((0.40, 0.20),angle:0.41rad,[1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((-0.03, -0.05),(0.88, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.46, 0.43),angle:0.39rad,[1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((-0.88, 0.32),(-0.07, 0.65),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.47, 0.99),angle:0.25rad,[1/3 p+1/3 q+2/3 k[3]])
cetz.draw.hobby((0.08, 0.82),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((-0.80, 0.74),angle:5.74rad,[1/3 p+1/3 q+2/3 k[3]])
cetz.draw.hobby((-0.95, 0.90),(-0.60, 0.69),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, -0.86))
node(node0.pos)
let node1= (pos:(0.49, -0.86))
node(node1.pos)
let node2= (pos:(0.55, -0.22))
node(node2.pos)
let node3= (pos:(-0.01, -0.07))
node(node3.pos)
let node4= (pos:(-0.64, 0.69))
node(node4.pos)
let node5= (pos:(-0.04, 0.60))
node(node5.pos)
edge(node1.pos,(0.06, -0.93),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.06, -1.05),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.95),(0.07, -0.99),(-0.28, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.07, -0.55),node2.pos,decoration:"wave",angle:3.77rad)
cetz.draw.content((-0.00, -0.46),angle:3.77rad,[q])
cetz.draw.hobby((-0.30, -0.75),(0.06, -0.48),(0.42, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.25, -0.49),node1.pos,decoration:"wave",angle:2.13rad)
cetz.draw.content((0.14, -0.55),angle:2.13rad,[q])
cetz.draw.hobby((-0.01, -0.18),(0.18, -0.50),(0.39, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, -0.08),node2.pos,decoration:"arrow",angle:-0.26rad)
cetz.draw.content((0.32, 0.04),angle:-0.26rad,[1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.04, -0.00),(0.30, -0.02),(0.54, -0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.28),node3.pos,decoration:"arrow",angle:5.40rad)
cetz.draw.content((-0.45, 0.20),angle:5.40rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.64, 0.57),(-0.40, 0.24),(-0.12, -0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.71),node5.pos,decoration:"coil",angle:3.00rad)
cetz.draw.content((-0.31, 0.83),angle:3.00rad,[k[3]])
cetz.draw.hobby((-0.59, 0.76),(-0.32, 0.77),(-0.06, 0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
cetz.draw.content((-0.65, -1.05),angle:-2.93rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.44, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.78, -0.82),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.60, -0.83),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((0.72, 0.00),angle:0.45rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.61, -0.12),(0.88, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.56rad)
cetz.draw.content((-0.46, 0.20),angle:0.56rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.09, 0.49),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.44, 0.91),angle:0.37rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.03, 0.69),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((-0.90, 0.75),angle:5.57rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.75, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.86))
node(node0.pos)
let node1= (pos:(0.35, -0.86))
node(node1.pos)
let node2= (pos:(0.00, -0.07))
node(node2.pos)
let node3= (pos:(-0.55, -0.22))
node(node3.pos)
let node4= (pos:(0.04, 0.60))
node(node4.pos)
let node5= (pos:(0.64, 0.69))
node(node5.pos)
edge(node1.pos,(-0.07, -0.93),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.07, -1.05),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.28, -0.94),(-0.07, -0.99),(-0.42, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.25, -0.48),node2.pos,decoration:"wave",angle:-2.13rad)
cetz.draw.content((-0.15, -0.55),angle:-2.13rad,[q])
cetz.draw.hobby((-0.39, -0.82),(-0.19, -0.50),(0.00, -0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.07, -0.55),node1.pos,decoration:"wave",angle:2.52rad)
cetz.draw.content((0.00, -0.45),angle:2.52rad,[q])
cetz.draw.hobby((-0.43, -0.23),(-0.06, -0.48),(0.30, -0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.30, -0.07),node2.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.33, 0.04),angle:0.27rad,[1/2 p-q-1/2 k[3]])
cetz.draw.hobby((-0.54, -0.13),(-0.31, -0.01),(-0.05, 0.00),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.36, 0.28),node5.pos,decoration:"arrow",angle:0.87rad)
cetz.draw.content((0.45, 0.20),angle:0.87rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.12, -0.05),(0.40, 0.24),(0.64, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.33, 0.71),node5.pos,decoration:"coil",angle:3.28rad)
cetz.draw.content((0.32, 0.83),angle:3.28rad,[k[3]])
cetz.draw.hobby((0.07, 0.68),(0.32, 0.77),(0.59, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.71, -1.05),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.57, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
cetz.draw.content((0.70, -0.81),angle:2.93rad,[-k[0]])
cetz.draw.hobby((0.46, -0.82),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.56rad)
cetz.draw.content((0.58, 0.40),angle:-0.56rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.16, 0.60),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((-0.83, -0.22),angle:5.83rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.67, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.74, 0.93),angle:0.71rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.67, 0.80),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.52, 0.69),angle:5.91rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, -0.84))
node(node0.pos)
let node1= (pos:(0.32, -0.83))
node(node1.pos)
let node2= (pos:(0.59, -0.20))
node(node2.pos)
let node3= (pos:(-0.73, -0.12))
node(node3.pos)
let node4= (pos:(0.06, 0.72))
node(node4.pos)
let node5= (pos:(0.72, 0.70))
node(node5.pos)
edge(node1.pos,(-0.03, -0.90),node0.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((-0.03, -1.02),angle:-3.13rad,[q+k[0]])
cetz.draw.hobby((0.27, -0.91),(-0.03, -0.96),(-0.33, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.10, -0.49),node2.pos,decoration:"wave",angle:3.72rad)
cetz.draw.content((0.03, -0.39),angle:3.72rad,[q])
cetz.draw.hobby((-0.32, -0.72),(0.05, -0.44),(0.46, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, -0.44),node1.pos,decoration:"wave",angle:2.55rad)
cetz.draw.content((-0.14, -0.34),angle:2.55rad,[q])
cetz.draw.hobby((-0.59, -0.13),(-0.16, -0.40),(0.25, -0.70),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.67, 0.24),node5.pos,decoration:"arrow",angle:1.43rad)
cetz.draw.content((0.79, 0.23),angle:1.43rad,[p-q-k[3]])
cetz.draw.hobby((0.66, -0.13),(0.73, 0.23),(0.77, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.38, 0.75),node5.pos,decoration:"coil",angle:3.11rad)
cetz.draw.content((0.39, 0.87),angle:3.11rad,[k[3]])
cetz.draw.hobby((0.11, 0.79),(0.39, 0.81),(0.67, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.66, -1.04),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.46, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.69, -0.80),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.43, -0.79),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.48rad)
cetz.draw.content((-0.79, -0.32),angle:-2.48rad,[-p+2 q+k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.77, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.83, -0.15),angle:2.84rad,[-p+2 q+k[3]])
cetz.draw.hobby((0.70, -0.18),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.39rad)
cetz.draw.content((0.57, 0.64),angle:-0.39rad,[p-q-k[3]])
cetz.draw.hobby((0.17, 0.73),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.25rad)
cetz.draw.content((-0.97, 0.04),angle:5.25rad,[p-q-k[3]])
cetz.draw.hobby((-1.00, 0.22),(-0.83, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.83rad)
cetz.draw.content((0.77, 0.93),angle:0.83rad,[p-q])
cetz.draw.hobby((0.74, 0.81),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:6.02rad)
cetz.draw.content((-0.50, 0.74),angle:6.02rad,[p-q])
cetz.draw.hobby((-0.92, 0.92),(-0.05, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.82))
node(node0.pos)
let node1= (pos:(0.38, -0.84))
node(node1.pos)
let node2= (pos:(0.73, -0.12))
node(node2.pos)
let node3= (pos:(-0.59, -0.21))
node(node3.pos)
let node4= (pos:(-0.72, 0.70))
node(node4.pos)
let node5= (pos:(-0.06, 0.72))
node(node5.pos)
edge(node1.pos,(0.03, -0.90),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.03, -1.02),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.33, -0.92),(0.03, -0.96),(-0.27, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.21, -0.44),node2.pos,decoration:"wave",angle:3.73rad)
cetz.draw.content((0.15, -0.34),angle:3.73rad,[q])
cetz.draw.hobby((-0.25, -0.70),(0.16, -0.40),(0.59, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.10, -0.49),node1.pos,decoration:"wave",angle:2.56rad)
cetz.draw.content((-0.03, -0.39),angle:2.56rad,[q])
cetz.draw.hobby((-0.46, -0.20),(-0.05, -0.44),(0.32, -0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.24),node3.pos,decoration:"arrow",angle:4.86rad)
cetz.draw.content((-0.78, 0.22),angle:4.86rad,[p-q-k[3]])
cetz.draw.hobby((-0.77, 0.60),(-0.72, 0.23),(-0.66, -0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.38, 0.74),node5.pos,decoration:"coil",angle:3.17rad)
cetz.draw.content((-0.39, 0.86),angle:3.17rad,[k[3]])
cetz.draw.hobby((-0.67, 0.77),(-0.39, 0.80),(-0.12, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.63, -1.03),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.40, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.72, -0.80),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.49, -0.80),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.76, -0.38),angle:-2.84rad,[-p+2 q+k[3]])
cetz.draw.hobby((-0.89, -0.36),(-0.66, -0.29),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.47rad)
cetz.draw.content((0.94, -0.13),angle:2.47rad,[-p+2 q+k[3]])
cetz.draw.hobby((0.85, -0.13),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.03rad)
cetz.draw.content((0.76, 0.17),angle:1.03rad,[p-q-k[3]])
cetz.draw.hobby((0.73, -0.00),(0.90, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.48, 0.41),angle:0.39rad,[p-q-k[3]])
cetz.draw.hobby((-0.88, 0.32),(-0.13, 0.62),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.26rad)
cetz.draw.content((0.44, 0.97),angle:0.26rad,[p-q])
cetz.draw.hobby((0.02, 0.80),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.95, 0.77),angle:5.46rad,[p-q])
cetz.draw.hobby((-0.98, 0.89),(-0.83, 0.73),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.38, -0.86))
node(node0.pos)
let node1= (pos:(-0.49, -0.88))
node(node1.pos)
let node2= (pos:(-0.36, -0.16))
node(node2.pos)
let node3= (pos:(-0.05, -0.14))
node(node3.pos)
let node4= (pos:(0.01, 0.74))
node(node4.pos)
let node5= (pos:(0.54, 0.69))
node(node5.pos)
edge(node0.pos,(-0.05, -0.93),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node0.pos,(0.03, -0.53),node2.pos,decoration:"wave",angle:-0.75rad)
edge(node3.pos,(-0.28, -0.53),node1.pos,decoration:"wave",angle:1.03rad)
edge(node2.pos,(0.10, 0.27),node5.pos,decoration:"arrow",angle:0.76rad)
edge(node4.pos,(0.28, 0.80),node5.pos,decoration:"coil",angle:3.04rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.18rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.26rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.39rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.82rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.59rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:6.03rad)
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.88))
node(node0.pos)
let node1= (pos:(-0.38, -0.86))
node(node1.pos)
let node2= (pos:(0.05, -0.14))
node(node2.pos)
let node3= (pos:(0.36, -0.16))
node(node3.pos)
let node4= (pos:(-0.54, 0.69))
node(node4.pos)
let node5= (pos:(-0.01, 0.74))
node(node5.pos)
edge(node0.pos,(0.05, -0.94),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.28, -0.54),node2.pos,decoration:"wave",angle:5.25rad)
edge(node3.pos,(-0.04, -0.53),node1.pos,decoration:"wave",angle:0.75rad)
edge(node4.pos,(-0.10, 0.27),node3.pos,decoration:"arrow",angle:5.52rad)
edge(node4.pos,(-0.28, 0.80),node5.pos,decoration:"coil",angle:3.24rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.26rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.18rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.46rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.39rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.25rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.70rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.89))
node(node0.pos)
let node1= (pos:(0.53, -0.89))
node(node1.pos)
let node2= (pos:(-0.68, -0.20))
node(node2.pos)
let node3= (pos:(0.68, -0.20))
node(node3.pos)
let node4= (pos:(0.17, 0.56))
node(node4.pos)
let node5= (pos:(-0.17, 0.56))
node(node5.pos)
edge(node1.pos,(0.00, -0.91),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -1.03),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.96),(-0.00, -0.97),(-0.43, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.61, -0.55),node2.pos,decoration:"wave",angle:4.93rad)
cetz.draw.content((-0.73, -0.58),angle:4.93rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.67, -0.56),(-0.73, -0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.61, -0.55),node1.pos,decoration:"wave",angle:1.36rad)
cetz.draw.content((0.73, -0.57),angle:1.36rad,[q])
cetz.draw.hobby((0.72, -0.28),(0.67, -0.56),(0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.43, 0.19),node5.pos,decoration:"arrow",angle:0.97rad)
cetz.draw.content((-0.53, 0.26),angle:0.97rad,[1/2 p+1/2 q-k[3]])
cetz.draw.hobby((-0.68, -0.09),(-0.48, 0.22),(-0.27, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.43, 0.19),node3.pos,decoration:"arrow",angle:-0.98rad)
cetz.draw.content((0.53, 0.26),angle:-0.98rad,[1/2 p+1/2 q-k[3]])
cetz.draw.hobby((0.27, 0.52),(0.48, 0.22),(0.68, -0.09),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.74, -1.06),angle:-2.91rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.61, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
cetz.draw.content((0.79, -0.83),angle:2.91rad,[-k[0]])
cetz.draw.hobby((0.64, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.40rad)
cetz.draw.content((0.89, -0.15),angle:-0.40rad,[1/2 p-1/2 q-k[3]])
cetz.draw.hobby((0.79, -0.18),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.79, -0.37),angle:0.41rad,[1/2 p-1/2 q-k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.75, -0.29),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:2.88rad)
cetz.draw.content((0.61, 0.56),angle:2.88rad,[k[3]])
cetz.draw.hobby((0.28, 0.59),(0.92, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-2.88rad)
cetz.draw.content((-0.55, 0.33),angle:-2.88rad,[k[3]])
cetz.draw.hobby((-0.89, 0.30),(-0.25, 0.47),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.37, 0.89),angle:0.36rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.09, 0.65),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.46, 0.67),angle:5.92rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.93, 0.91),(0.05, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, -0.84))
node(node0.pos)
let node1= (pos:(0.57, -0.86))
node(node1.pos)
let node2= (pos:(-0.09, -0.12))
node(node2.pos)
let node3= (pos:(0.76, -0.14))
node(node3.pos)
let node4= (pos:(0.51, 0.73))
node(node4.pos)
let node5= (pos:(-0.69, 0.71))
node(node5.pos)
edge(node1.pos,(0.06, -0.88),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.06, -1.00),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.93),(0.06, -0.94),(-0.35, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.47),node2.pos,decoration:"wave",angle:4.26rad)
cetz.draw.content((-0.39, -0.42),angle:4.26rad,[q])
cetz.draw.hobby((-0.47, -0.74),(-0.33, -0.44),(-0.18, -0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, -0.51),node1.pos,decoration:"wave",angle:1.31rad)
cetz.draw.content((0.78, -0.54),angle:1.31rad,[q])
cetz.draw.hobby((0.80, -0.23),(0.73, -0.52),(0.65, -0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.64, 0.30),node3.pos,decoration:"arrow",angle:-1.29rad)
cetz.draw.content((0.76, 0.34),angle:-1.29rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.59, 0.66),(0.70, 0.31),(0.80, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.09, 0.74),node4.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((-0.10, 0.86),angle:0.02rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.58, 0.78),(-0.09, 0.80),(0.39, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.69, -1.03),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.52, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.82, -0.82),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.68, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.67rad)
cetz.draw.content((0.96, -0.14),angle:-0.67rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.88, -0.16),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.52, -0.34),angle:0.23rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.17, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.40rad)
cetz.draw.content((0.41, 0.22),angle:0.40rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.02, -0.03),(0.88, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.88rad)
cetz.draw.content((-0.75, 0.44),angle:0.88rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, 0.37),(-0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.65rad)
cetz.draw.content((0.70, 0.97),angle:3.65rad,[k[3]])
cetz.draw.hobby((0.57, 0.83),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.38rad)
cetz.draw.content((-0.93, 0.77),angle:2.38rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.81, 0.73),stroke:stroke,mark: (end: ">"))
})
let embedding6i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.86))
node(node0.pos)
let node1= (pos:(0.44, -0.84))
node(node1.pos)
let node2= (pos:(-0.76, -0.14))
node(node2.pos)
let node3= (pos:(0.09, -0.12))
node(node3.pos)
let node4= (pos:(0.69, 0.71))
node(node4.pos)
let node5= (pos:(-0.51, 0.73))
node(node5.pos)
edge(node1.pos,(-0.06, -0.89),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.06, -1.01),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.91),(-0.06, -0.95),(-0.48, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.67, -0.51),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.78, -0.54),angle:4.97rad,[q])
cetz.draw.hobby((-0.65, -0.81),(-0.73, -0.52),(-0.80, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.47),node1.pos,decoration:"wave",angle:2.03rad)
cetz.draw.content((0.39, -0.42),angle:2.03rad,[q])
cetz.draw.hobby((0.18, -0.16),(0.33, -0.45),(0.47, -0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.64, 0.31),node5.pos,decoration:"arrow",angle:1.29rad)
cetz.draw.content((-0.76, 0.34),angle:1.29rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.80, -0.04),(-0.70, 0.31),(-0.59, 0.66),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.09, 0.74),node4.pos,decoration:"arrow",angle:-0.02rad)
cetz.draw.content((0.10, 0.86),angle:-0.02rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.39, 0.79),(0.09, 0.80),(0.58, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.75, -1.04),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.65, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.75, -0.80),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.55, -0.81),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.23rad)
cetz.draw.content((0.57, -0.11),angle:-0.23rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.20, -0.09),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.81, -0.33),angle:0.68rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.80, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.88rad)
cetz.draw.content((0.94, 0.60),angle:-0.88rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.80, 0.67),(0.98, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.50, -0.01),angle:5.89rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.93, 0.24),(-0.03, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.90rad)
cetz.draw.content((0.76, 0.94),angle:3.90rad,[k[3]])
cetz.draw.hobby((0.72, 0.82),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.64rad)
cetz.draw.content((-0.81, 0.76),angle:2.64rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.63, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding6i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, 0.02))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(-0.36, 0.78))
node(node4.pos)
let node5= (pos:(0.36, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.81),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.93),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.85),(-0.00, -0.87),(-0.43, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.68, -0.39),angle:4.76rad,[q])
cetz.draw.hobby((-0.60, -0.71),(-0.62, -0.39),(-0.63, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:1.53rad)
cetz.draw.content((0.68, -0.40),angle:1.53rad,[q])
cetz.draw.hobby((0.63, -0.06),(0.62, -0.39),(0.60, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.11, 0.38),node5.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((-0.04, 0.29),angle:0.69rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.44, 0.04),(-0.06, 0.34),(0.31, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.11, 0.38),node3.pos,decoration:"arrow",angle:5.60rad)
cetz.draw.content((0.04, 0.29),angle:5.60rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.31, 0.66),(0.06, 0.35),(0.44, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.84),node5.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.96),angle:3.14rad,[k[3]])
cetz.draw.hobby((-0.30, 0.86),(0.00, 0.90),(0.31, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -1.00),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.60, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.82, -0.78),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.65, -0.77),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.04rad)
cetz.draw.content((0.79, 0.13),angle:-0.04rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.67, 0.07),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.04rad)
cetz.draw.content((-0.78, -0.11),angle:0.04rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.67, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.64, 1.00),angle:0.33rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.43, 0.87),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.95rad)
cetz.draw.content((-0.72, 0.78),angle:5.95rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.92, 0.91),(-0.47, 0.76),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.88))
node(node0.pos)
let node1= (pos:(-0.47, -0.85))
node(node1.pos)
let node2= (pos:(0.65, -0.20))
node(node2.pos)
let node3= (pos:(-0.22, -0.10))
node(node3.pos)
let node4= (pos:(-0.67, 0.69))
node(node4.pos)
let node5= (pos:(-0.05, 0.59))
node(node5.pos)
edge(node0.pos,(0.04, -0.90),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.63, -0.55),node2.pos,decoration:"wave",angle:-1.70rad)
edge(node3.pos,(-0.37, -0.48),node1.pos,decoration:"wave",angle:1.24rad)
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:-0.11rad)
edge(node4.pos,(-0.48, 0.28),node3.pos,decoration:"arrow",angle:5.23rad)
edge(node4.pos,(-0.35, 0.70),node5.pos,decoration:"coil",angle:2.97rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.50rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.55rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.38rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.53rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.85))
node(node0.pos)
let node1= (pos:(-0.56, -0.88))
node(node1.pos)
let node2= (pos:(0.21, -0.10))
node(node2.pos)
let node3= (pos:(-0.65, -0.20))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node0.pos,(-0.05, -0.90),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.36, -0.48),node2.pos,decoration:"wave",angle:-1.24rad)
edge(node3.pos,(-0.64, -0.55),node1.pos,decoration:"wave",angle:1.70rad)
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:0.11rad)
edge(node2.pos,(0.48, 0.27),node5.pos,decoration:"arrow",angle:1.05rad)
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"coil",angle:3.30rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.76rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.76))
node(node0.pos)
let node1= (pos:(0.44, -0.70))
node(node1.pos)
let node2= (pos:(-0.66, 0.03))
node(node2.pos)
let node3= (pos:(0.10, 0.25))
node(node3.pos)
let node4= (pos:(0.62, 0.97))
node(node4.pos)
let node5= (pos:(0.04, 0.74))
node(node5.pos)
edge(node1.pos,(-0.07, -0.76),node0.pos,decoration:"arrow",angle:-3.08rad)
cetz.draw.content((-0.06, -0.88),angle:-3.08rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.77),(-0.06, -0.82),(-0.47, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.37),node2.pos,decoration:"wave",angle:4.82rad)
cetz.draw.content((-0.75, -0.39),angle:4.82rad,[q])
cetz.draw.hobby((-0.65, -0.69),(-0.69, -0.37),(-0.72, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.22),node1.pos,decoration:"wave",angle:1.91rad)
cetz.draw.content((0.39, -0.18),angle:1.91rad,[q])
cetz.draw.hobby((0.19, 0.18),(0.33, -0.20),(0.46, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.34, 0.41),node5.pos,decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.43, 0.49),angle:0.79rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.65, 0.15),(-0.38, 0.46),(-0.07, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.38, 0.76),node5.pos,decoration:"coil",angle:0.41rad)
cetz.draw.content((0.43, 0.65),angle:0.41rad,[k[3]])
cetz.draw.hobby((0.63, 0.88),(0.39, 0.70),(0.10, 0.66),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, 1.00),node4.pos,decoration:"arrow",angle:0.38rad)
cetz.draw.content((0.24, 1.11),angle:0.38rad,[1/2 p+1/2 q+k[3]])
cetz.draw.hobby((0.02, 0.83),(0.25, 1.05),(0.58, 1.06),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.63rad)
cetz.draw.content((-0.73, -0.99),angle:-2.63rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.00),(-0.63, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.77, -0.74),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.55, -0.69),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.27rad)
cetz.draw.content((0.58, 0.24),angle:-0.27rad,[1/2 p-1/2 q])
cetz.draw.hobby((0.21, 0.28),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.10rad)
cetz.draw.content((-0.82, -0.10),angle:0.10rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.89, -0.05),(-0.75, -0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.80, 1.11),angle:0.07rad,[1/2 p+1/2 q])
cetz.draw.hobby((0.72, 1.04),(0.90, 1.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.69rad)
cetz.draw.content((-0.52, 0.53),angle:5.69rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.95, 0.89),(-0.02, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.89))
node(node0.pos)
let node1= (pos:(0.51, -0.89))
node(node1.pos)
let node2= (pos:(-0.47, -0.19))
node(node2.pos)
let node3= (pos:(0.47, -0.19))
node(node3.pos)
let node4= (pos:(-0.69, 0.55))
node(node4.pos)
let node5= (pos:(0.69, 0.55))
node(node5.pos)
edge(node1.pos,(0.00, -0.93),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -1.05),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.96),(0.00, -0.99),(-0.42, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.55),node2.pos,decoration:"wave",angle:4.65rad)
cetz.draw.content((-0.62, -0.54),angle:4.65rad,[q])
cetz.draw.hobby((-0.57, -0.82),(-0.56, -0.54),(-0.54, -0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.50, -0.55),node1.pos,decoration:"wave",angle:1.64rad)
cetz.draw.content((0.62, -0.54),angle:1.64rad,[q])
cetz.draw.hobby((0.54, -0.25),(0.56, -0.54),(0.57, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.12, 0.20),node5.pos,decoration:"arrow",angle:0.57rad)
cetz.draw.content((0.05, 0.31),angle:0.57rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.39, -0.06),(0.07, 0.25),(0.54, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.12, 0.20),node3.pos,decoration:"arrow",angle:-0.57rad)
cetz.draw.content((-0.05, 0.31),angle:-0.57rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.54, 0.53),(-0.07, 0.25),(0.39, -0.06),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
cetz.draw.content((-0.73, -1.06),angle:-2.93rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.60, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
cetz.draw.content((0.78, -0.83),angle:2.93rad,[-k[0]])
cetz.draw.hobby((0.62, -0.86),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.26rad)
cetz.draw.content((0.77, -0.15),angle:-0.26rad,[1/2 p-1/2 q])
cetz.draw.hobby((0.58, -0.16),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.70, -0.38),angle:0.26rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.89, -0.37),(-0.55, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:0.62rad)
cetz.draw.content((-0.78, 0.34),angle:0.62rad,[-k[3]])
cetz.draw.hobby((-0.88, 0.34),(-0.74, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-0.62rad)
cetz.draw.content((0.91, 0.54),angle:-0.62rad,[-k[3]])
cetz.draw.hobby((0.81, 0.54),(0.95, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.97rad)
cetz.draw.content((0.75, 0.84),angle:0.97rad,[1/2 p+1/2 q+k[3]])
cetz.draw.hobby((0.70, 0.67),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.94, 0.71),angle:5.32rad,[1/2 p+1/2 q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.80, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding7i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, -0.70))
node(node0.pos)
let node1= (pos:(0.57, -0.76))
node(node1.pos)
let node2= (pos:(-0.10, 0.25))
node(node2.pos)
let node3= (pos:(0.66, 0.03))
node(node3.pos)
let node4= (pos:(-0.03, 0.74))
node(node4.pos)
let node5= (pos:(-0.62, 0.97))
node(node5.pos)
edge(node1.pos,(0.06, -0.76),node0.pos,decoration:"arrow",angle:3.08rad)
cetz.draw.content((0.06, -0.88),angle:3.08rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.83),(0.06, -0.82),(-0.35, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.22),node2.pos,decoration:"wave",angle:4.37rad)
cetz.draw.content((-0.39, -0.18),angle:4.37rad,[q])
cetz.draw.hobby((-0.46, -0.58),(-0.34, -0.20),(-0.19, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.37),node1.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.75, -0.39),angle:1.46rad,[q])
cetz.draw.hobby((0.72, -0.05),(0.69, -0.37),(0.65, -0.69),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.41),node3.pos,decoration:"arrow",angle:-0.80rad)
cetz.draw.content((0.44, 0.49),angle:-0.80rad,[1/2 p+1/2 q])
cetz.draw.hobby((0.08, 0.73),(0.39, 0.46),(0.65, 0.15),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.28, 1.00),node5.pos,decoration:"coil",angle:-0.36rad)
cetz.draw.content((-0.24, 1.11),angle:-0.36rad,[k[3]])
cetz.draw.hobby((-0.01, 0.83),(-0.25, 1.05),(-0.57, 1.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, 0.77),node4.pos,decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.42, 0.66),angle:5.88rad,[1/2 p+1/2 q+k[3]])
cetz.draw.hobby((-0.63, 0.88),(-0.39, 0.70),(-0.09, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.66, -0.95),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.50, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.63rad)
cetz.draw.content((0.85, -0.78),angle:2.63rad,[-k[0]])
cetz.draw.hobby((0.69, -0.76),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.10rad)
cetz.draw.content((0.84, 0.14),angle:-0.10rad,[1/2 p-1/2 q])
cetz.draw.hobby((0.77, 0.08),(0.91, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.52, 0.01),angle:0.28rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.89, -0.03),(-0.18, 0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.60rad)
cetz.draw.content((0.38, 0.73),angle:0.60rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.05, 0.36),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:6.21rad)
cetz.draw.content((-0.82, 0.87),angle:6.21rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.90, 0.93),(-0.72, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.45, -0.85))
node(node0.pos)
let node1= (pos:(0.55, -0.87))
node(node1.pos)
let node2= (pos:(-0.10, -0.15))
node(node2.pos)
let node3= (pos:(0.55, -0.15))
node(node3.pos)
let node4= (pos:(-0.48, 0.69))
node(node4.pos)
let node5= (pos:(-0.00, 0.74))
node(node5.pos)
edge(node1.pos,(0.05, -0.90),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.05, -1.02),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.45, -0.94),(0.05, -0.96),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, -0.50),node2.pos,decoration:"wave",angle:4.25rad)
cetz.draw.content((-0.40, -0.45),angle:4.25rad,[q])
cetz.draw.hobby((-0.47, -0.76),(-0.34, -0.47),(-0.19, -0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.51),node1.pos,decoration:"wave",angle:1.57rad)
cetz.draw.content((0.68, -0.51),angle:1.57rad,[q])
cetz.draw.hobby((0.61, -0.21),(0.62, -0.51),(0.61, -0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.05, 0.28),node3.pos,decoration:"arrow",angle:-0.68rad)
cetz.draw.content((0.12, 0.37),angle:-0.68rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.34, 0.66),(0.08, 0.33),(0.49, -0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.25, 0.83),node4.pos,decoration:"arrow",angle:3.24rad)
cetz.draw.content((-0.26, 0.95),angle:3.24rad,[1/2 p+1/2 q+3/2 k[3]])
cetz.draw.hobby((-0.01, 0.82),(-0.26, 0.89),(-0.49, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.69, -1.04),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.53, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.81, -0.82),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.66, -0.84),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.39rad)
cetz.draw.content((0.82, -0.13),angle:-0.39rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.66, -0.13),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.20rad)
cetz.draw.content((-0.52, -0.36),angle:0.20rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.18, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.41rad)
cetz.draw.content((0.40, 0.20),angle:0.41rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.03, -0.05),(0.88, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.46, 0.43),angle:0.39rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.88, 0.32),(-0.07, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.74rad)
cetz.draw.content((-0.80, 0.74),angle:5.74rad,[-k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.60, 0.69),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.25rad)
cetz.draw.content((0.47, 0.99),angle:0.25rad,[-k[3]])
cetz.draw.hobby((0.08, 0.82),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
})
let embedding8i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.87))
node(node0.pos)
let node1= (pos:(0.45, -0.85))
node(node1.pos)
let node2= (pos:(-0.55, -0.15))
node(node2.pos)
let node3= (pos:(0.09, -0.15))
node(node3.pos)
let node4= (pos:(0.00, 0.74))
node(node4.pos)
let node5= (pos:(0.48, 0.69))
node(node5.pos)
edge(node1.pos,(-0.05, -0.90),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.05, -1.02),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(-0.05, -0.96),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.51),node2.pos,decoration:"wave",angle:4.71rad)
cetz.draw.content((-0.68, -0.51),angle:4.71rad,[q])
cetz.draw.hobby((-0.61, -0.80),(-0.62, -0.51),(-0.61, -0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, -0.50),node1.pos,decoration:"wave",angle:2.04rad)
cetz.draw.content((0.40, -0.44),angle:2.04rad,[q])
cetz.draw.hobby((0.19, -0.19),(0.34, -0.47),(0.47, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.05, 0.28),node5.pos,decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.12, 0.37),angle:0.68rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.49, -0.01),(-0.08, 0.33),(0.34, 0.66),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.25, 0.83),node4.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((0.27, 0.95),angle:3.03rad,[1/2 p+1/2 q+3/2 k[3]])
cetz.draw.hobby((0.49, 0.77),(0.26, 0.89),(0.01, 0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.74, -1.05),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.63, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.76, -0.81),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.56, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.57, -0.12),angle:-0.20rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.20, -0.11),(0.91, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.73, -0.35),angle:0.39rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.62, -0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.39rad)
cetz.draw.content((0.55, 0.65),angle:-0.39rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.12, 0.76),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.50, -0.02),angle:5.87rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.93, 0.24),(-0.02, -0.16),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:6.03rad)
cetz.draw.content((-0.53, 0.76),angle:6.03rad,[-k[3]])
cetz.draw.hobby((-0.92, 0.92),(-0.11, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.54rad)
cetz.draw.content((0.68, 0.95),angle:0.54rad,[-k[3]])
cetz.draw.hobby((0.53, 0.79),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.92))
node(node0.pos)
let node1= (pos:(0.51, -0.92))
node(node1.pos)
let node2= (pos:(-0.32, -0.24))
node(node2.pos)
let node3= (pos:(0.31, -0.24))
node(node3.pos)
let node4= (pos:(0.14, 0.47))
node(node4.pos)
let node5= (pos:(-0.14, 0.46))
node(node5.pos)
edge(node1.pos,(-0.00, -0.96),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -1.08),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.99),(-0.00, -1.02),(-0.42, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.58),node2.pos,decoration:"wave",angle:4.44rad)
cetz.draw.content((-0.57, -0.55),angle:4.44rad,[q])
cetz.draw.hobby((-0.57, -0.84),(-0.51, -0.55),(-0.40, -0.27),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.45, -0.58),node1.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((0.57, -0.54),angle:1.85rad,[q])
cetz.draw.hobby((0.40, -0.27),(0.50, -0.55),(0.56, -0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, -0.27),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.39),angle:3.14rad,[p-q-2 k[3]])
cetz.draw.hobby((0.26, -0.31),(-0.00, -0.33),(-0.26, -0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.28, 0.13),node5.pos,decoration:"arrow",angle:1.32rad)
cetz.draw.content((-0.40, 0.16),angle:1.32rad,[p-2 k[3]])
cetz.draw.hobby((-0.38, -0.16),(-0.34, 0.14),(-0.23, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.28, 0.13),node3.pos,decoration:"arrow",angle:-1.33rad)
cetz.draw.content((0.40, 0.16),angle:-1.33rad,[p-2 k[3]])
cetz.draw.hobby((0.23, 0.43),(0.34, 0.14),(0.37, -0.16),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.98rad)
cetz.draw.content((-0.74, -1.08),angle:-2.98rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.60, -1.00),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.98rad)
cetz.draw.content((0.78, -0.84),angle:2.98rad,[-k[0]])
cetz.draw.hobby((0.62, -0.88),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"coil",angle:2.64rad)
cetz.draw.content((0.63, 0.34),angle:2.64rad,[k[3]])
cetz.draw.hobby((0.26, 0.47),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"coil",angle:-2.65rad)
cetz.draw.content((-0.51, 0.13),angle:-2.65rad,[k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.20, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((0.38, 0.84),angle:0.44rad,[p-k[3]])
cetz.draw.hobby((-0.08, 0.56),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.85rad)
cetz.draw.content((-0.48, 0.62),angle:5.85rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.90),(0.03, 0.45),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, -0.85))
node(node0.pos)
let node1= (pos:(0.54, -0.86))
node(node1.pos)
let node2= (pos:(0.66, -0.27))
node(node2.pos)
let node3= (pos:(0.37, 0.00))
node(node3.pos)
let node4= (pos:(0.41, 0.77))
node(node4.pos)
let node5= (pos:(-0.74, 0.56))
node(node5.pos)
edge(node1.pos,(0.10, -0.92),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.10, -1.04),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.94),(0.11, -0.98),(-0.24, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.55),node2.pos,decoration:"wave",angle:3.68rad)
cetz.draw.content((0.08, -0.45),angle:3.68rad,[q])
cetz.draw.hobby((-0.26, -0.73),(0.13, -0.49),(0.53, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, -0.47),node1.pos,decoration:"wave",angle:1.77rad)
cetz.draw.content((0.30, -0.49),angle:1.77rad,[q])
cetz.draw.hobby((0.31, -0.09),(0.35, -0.45),(0.45, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.62, -0.02),node2.pos,decoration:"arrow",angle:-0.76rad)
cetz.draw.content((0.70, 0.06),angle:-0.76rad,[p-q-k[3]])
cetz.draw.hobby((0.41, 0.08),(0.66, 0.02),(0.74, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.39, 0.40),node3.pos,decoration:"arrow",angle:4.66rad)
cetz.draw.content((0.27, 0.41),angle:4.66rad,[p-k[3]])
cetz.draw.hobby((0.35, 0.70),(0.33, 0.39),(0.32, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.18, 0.69),node4.pos,decoration:"arrow",angle:0.18rad)
cetz.draw.content((-0.20, 0.81),angle:0.18rad,[p])
cetz.draw.hobby((-0.64, 0.65),(-0.18, 0.75),(0.29, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.63, -1.04),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.40, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
cetz.draw.content((0.80, -0.82),angle:2.85rad,[-k[0]])
cetz.draw.hobby((0.65, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.76, -0.04),angle:0.67rad,[p-k[3]])
cetz.draw.hobby((0.70, -0.16),(0.88, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((-0.76, 0.23),angle:1.14rad,[p-k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.73, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.52rad)
cetz.draw.content((0.66, 1.00),angle:3.52rad,[k[3]])
cetz.draw.hobby((0.48, 0.86),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.10rad)
cetz.draw.content((-0.98, 0.72),angle:2.10rad,[k[3]])
cetz.draw.hobby((-1.00, 0.88),(-0.85, 0.62),stroke:stroke,mark: (end: ">"))
})
let embedding10i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.85))
node(node0.pos)
let node1= (pos:(0.31, -0.84))
node(node1.pos)
let node2= (pos:(-0.37, 0.01))
node(node2.pos)
let node3= (pos:(-0.66, -0.27))
node(node3.pos)
let node4= (pos:(0.75, 0.57))
node(node4.pos)
let node5= (pos:(-0.41, 0.77))
node(node5.pos)
edge(node1.pos,(-0.10, -0.91),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.10, -1.03),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.24, -0.92),(-0.11, -0.97),(-0.47, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, -0.46),node2.pos,decoration:"wave",angle:-1.77rad)
cetz.draw.content((-0.29, -0.48),angle:-1.77rad,[q])
cetz.draw.hobby((-0.45, -0.80),(-0.35, -0.44),(-0.31, -0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.14, -0.54),node1.pos,decoration:"wave",angle:2.60rad)
cetz.draw.content((-0.08, -0.44),angle:2.60rad,[q])
cetz.draw.hobby((-0.53, -0.26),(-0.13, -0.48),(0.26, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.62, -0.02),node2.pos,decoration:"arrow",angle:0.76rad)
cetz.draw.content((-0.70, 0.07),angle:0.76rad,[p-q-k[3]])
cetz.draw.hobby((-0.74, -0.23),(-0.66, 0.02),(-0.41, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.39, 0.41),node5.pos,decoration:"arrow",angle:1.63rad)
cetz.draw.content((-0.27, 0.42),angle:1.63rad,[p-k[3]])
cetz.draw.hobby((-0.32, 0.09),(-0.33, 0.40),(-0.35, 0.70),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.18, 0.69),node4.pos,decoration:"arrow",angle:-0.18rad)
cetz.draw.content((0.20, 0.81),angle:-0.18rad,[p])
cetz.draw.hobby((-0.29, 0.82),(0.18, 0.75),(0.65, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.73, -1.04),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.62, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.68, -0.80),angle:2.92rad,[-k[0]])
cetz.draw.hobby((0.42, -0.81),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.15rad)
cetz.draw.content((0.98, 0.33),angle:-1.15rad,[p-k[3]])
cetz.draw.hobby((0.84, 0.50),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.62rad)
cetz.draw.content((-0.91, -0.23),angle:5.62rad,[p-k[3]])
cetz.draw.hobby((-0.96, -0.11),(-0.78, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.18rad)
cetz.draw.content((0.77, 0.84),angle:4.18rad,[k[3]])
cetz.draw.hobby((0.74, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.77rad)
cetz.draw.content((-0.75, 0.77),angle:2.77rad,[k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.53, 0.75),stroke:stroke,mark: (end: ">"))
})
let embedding10i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, -0.80))
node(node0.pos)
let node1= (pos:(0.43, -0.80))
node(node1.pos)
let node2= (pos:(0.19, -0.00))
node(node2.pos)
let node3= (pos:(-0.20, -0.01))
node(node3.pos)
let node4= (pos:(-0.50, 0.79))
node(node4.pos)
let node5= (pos:(0.50, 0.79))
node(node5.pos)
edge(node1.pos,(-0.00, -0.86),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.98),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.88),(-0.00, -0.92),(-0.36, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.14, -0.43),node2.pos,decoration:"wave",angle:4.05rad)
cetz.draw.content((-0.24, -0.35),angle:4.05rad,[q])
cetz.draw.hobby((-0.42, -0.69),(-0.17, -0.37),(0.08, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, -0.43),node1.pos,decoration:"wave",angle:2.24rad)
cetz.draw.content((0.04, -0.50),angle:2.24rad,[q])
cetz.draw.hobby((-0.19, -0.12),(0.07, -0.44),(0.32, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, 0.14),node2.pos,decoration:"arrow",angle:0.01rad)
cetz.draw.content((-0.01, 0.26),angle:0.01rad,[p-q-k[3]])
cetz.draw.hobby((-0.23, 0.07),(-0.01, 0.20),(0.22, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.38, 0.40),node5.pos,decoration:"arrow",angle:1.21rad)
cetz.draw.content((0.49, 0.36),angle:1.21rad,[p-k[3]])
cetz.draw.hobby((0.28, 0.04),(0.43, 0.36),(0.53, 0.69),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.39, 0.40),node3.pos,decoration:"arrow",angle:5.06rad)
cetz.draw.content((-0.50, 0.36),angle:5.06rad,[p-k[3]])
cetz.draw.hobby((-0.54, 0.70),(-0.44, 0.36),(-0.30, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.83),node5.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[k[3]])
cetz.draw.hobby((-0.41, 0.87),(-0.00, 0.89),(0.40, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.68, -1.02),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.51, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.75, -0.79),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.54, -0.78),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.39rad)
cetz.draw.content((0.70, 1.01),angle:0.39rad,[p])
cetz.draw.hobby((0.57, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.80, 0.79),angle:5.89rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.61, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.85))
node(node0.pos)
let node1= (pos:(-0.57, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.16))
node(node2.pos)
let node3= (pos:(-0.91, -0.08))
node(node3.pos)
let node4= (pos:(0.07, 0.71))
node(node4.pos)
let node5= (pos:(0.75, 0.71))
node(node5.pos)
edge(node0.pos,(-0.02, -0.85),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.64, -0.51),node2.pos,decoration:"wave",angle:4.36rad)
edge(node3.pos,(-0.72, -0.45),node1.pos,decoration:"wave",angle:2.01rad)
edge(node2.pos,(0.77, 0.27),node5.pos,decoration:"arrow",angle:1.61rad)
edge(node4.pos,(0.40, 0.74),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.90rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.47rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.38rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.92rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.86rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:6.02rad)
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.81))
node(node0.pos)
let node1= (pos:(-0.53, -0.85))
node(node1.pos)
let node2= (pos:(0.91, -0.08))
node(node2.pos)
let node3= (pos:(-0.78, -0.16))
node(node3.pos)
let node4= (pos:(-0.75, 0.71))
node(node4.pos)
let node5= (pos:(-0.07, 0.71))
node(node5.pos)
edge(node0.pos,(0.02, -0.85),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.72, -0.45),node2.pos,decoration:"wave",angle:4.28rad)
edge(node3.pos,(-0.64, -0.51),node1.pos,decoration:"wave",angle:1.92rad)
edge(node4.pos,(-0.77, 0.27),node3.pos,decoration:"arrow",angle:4.67rad)
edge(node4.pos,(-0.40, 0.74),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.46rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.92rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.35rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.38rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.27rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.43rad)
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.64))
node(node0.pos)
let node1= (pos:(0.57, -0.76))
node(node1.pos)
let node2= (pos:(0.60, 0.47))
node(node2.pos)
let node3= (pos:(0.39, 0.01))
node(node3.pos)
let node4= (pos:(-0.28, 0.55))
node(node4.pos)
let node5= (pos:(-0.73, 0.87))
node(node5.pos)
edge(node1.pos,(0.12, -0.74),node0.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((0.10, -0.86),angle:3.00rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.83),(0.11, -0.80),(-0.25, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.10),node2.pos,decoration:"wave",angle:4.03rad)
cetz.draw.content((-0.01, -0.03),angle:4.03rad,[q])
cetz.draw.hobby((-0.28, -0.49),(0.07, -0.02),(0.45, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.51, -0.38),node1.pos,decoration:"wave",angle:1.79rad)
cetz.draw.content((0.62, -0.36),angle:1.79rad,[q])
cetz.draw.hobby((0.47, -0.05),(0.56, -0.36),(0.62, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.59, 0.21),node2.pos,decoration:"arrow",angle:1.19rad)
cetz.draw.content((0.70, 0.17),angle:1.19rad,[p-q])
cetz.draw.hobby((0.47, -0.02),(0.64, 0.18),(0.67, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.04, 0.28),node3.pos,decoration:"arrow",angle:5.60rad)
cetz.draw.content((-0.03, 0.19),angle:5.60rad,[p])
cetz.draw.hobby((-0.25, 0.45),(0.01, 0.23),(0.29, 0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.59, 0.60),node5.pos,decoration:"coil",angle:5.64rad)
cetz.draw.content((-0.66, 0.50),angle:5.64rad,[k[3]])
cetz.draw.hobby((-0.33, 0.48),(-0.62, 0.55),(-0.78, 0.79),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.43, 0.83),node4.pos,decoration:"arrow",angle:-0.59rad)
cetz.draw.content((-0.36, 0.93),angle:-0.59rad,[p+k[3]])
cetz.draw.hobby((-0.68, 0.94),(-0.39, 0.87),(-0.23, 0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.60, -0.92),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.38, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((0.84, -0.78),angle:2.64rad,[-k[0]])
cetz.draw.hobby((0.69, -0.76),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.92rad)
cetz.draw.content((0.70, 0.81),angle:0.92rad,[p])
cetz.draw.hobby((0.61, 0.59),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((-0.92, 0.83),angle:5.83rad,[p])
cetz.draw.hobby((-0.94, 0.90),(-0.85, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding11i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.77))
node(node0.pos)
let node1= (pos:(0.32, -0.64))
node(node1.pos)
let node2= (pos:(-0.38, -0.00))
node(node2.pos)
let node3= (pos:(-0.59, 0.47))
node(node3.pos)
let node4= (pos:(0.76, 0.83))
node(node4.pos)
let node5= (pos:(0.32, 0.50))
node(node5.pos)
edge(node1.pos,(-0.11, -0.75),node0.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((-0.10, -0.86),angle:-3.00rad,[q+k[0]])
cetz.draw.hobby((0.25, -0.73),(-0.11, -0.81),(-0.48, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.39),node2.pos,decoration:"wave",angle:4.47rad)
cetz.draw.content((-0.62, -0.36),angle:4.47rad,[q])
cetz.draw.hobby((-0.62, -0.68),(-0.56, -0.37),(-0.46, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.08, -0.11),node1.pos,decoration:"wave",angle:2.25rad)
cetz.draw.content((0.02, -0.03),angle:2.25rad,[q])
cetz.draw.hobby((-0.44, 0.41),(-0.06, -0.03),(0.29, -0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.57, 0.21),node2.pos,decoration:"arrow",angle:5.09rad)
cetz.draw.content((-0.68, 0.17),angle:5.09rad,[p-q])
cetz.draw.hobby((-0.66, 0.42),(-0.62, 0.17),(-0.46, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.02, 0.25),node5.pos,decoration:"arrow",angle:0.63rad)
cetz.draw.content((0.05, 0.16),angle:0.63rad,[p])
cetz.draw.hobby((-0.28, -0.00),(0.01, 0.20),(0.29, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.63, 0.56),node5.pos,decoration:"coil",angle:0.66rad)
cetz.draw.content((0.70, 0.46),angle:0.66rad,[k[3]])
cetz.draw.hobby((0.82, 0.76),(0.66, 0.50),(0.37, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, 0.78),node4.pos,decoration:"arrow",angle:0.62rad)
cetz.draw.content((0.39, 0.88),angle:0.62rad,[p+k[3]])
cetz.draw.hobby((0.26, 0.58),(0.42, 0.83),(0.70, 0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.73, -0.99),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.63, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.72, -0.71),angle:2.66rad,[-k[0]])
cetz.draw.hobby((0.44, -0.63),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.62rad)
cetz.draw.content((0.81, 1.01),angle:0.62rad,[p])
cetz.draw.hobby((0.81, 0.94),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.37rad)
cetz.draw.content((-0.89, 0.66),angle:5.37rad,[p])
cetz.draw.hobby((-0.99, 0.88),(-0.70, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding11i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, -0.85))
node(node0.pos)
let node1= (pos:(0.42, -0.85))
node(node1.pos)
let node2= (pos:(0.23, -0.10))
node(node2.pos)
let node3= (pos:(-0.24, -0.10))
node(node3.pos)
let node4= (pos:(-0.90, 0.44))
node(node4.pos)
let node5= (pos:(0.90, 0.44))
node(node5.pos)
edge(node1.pos,(-0.00, -0.92),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -1.04),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(-0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.50),node2.pos,decoration:"wave",angle:-2.29rad)
cetz.draw.content((-0.02, -0.58),angle:-2.29rad,[q])
cetz.draw.hobby((-0.32, -0.82),(-0.05, -0.52),(0.21, -0.22),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.11, -0.50),node1.pos,decoration:"wave",angle:2.30rad)
cetz.draw.content((0.02, -0.58),angle:2.30rad,[q])
cetz.draw.hobby((-0.22, -0.22),(0.04, -0.52),(0.31, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, 0.01),node2.pos,decoration:"arrow",angle:0.01rad)
cetz.draw.content((-0.01, 0.13),angle:0.01rad,[p-q])
cetz.draw.hobby((-0.25, -0.02),(-0.01, 0.07),(0.23, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.57, 0.19),node5.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.49, 0.28),angle:0.69rad,[p])
cetz.draw.hobby((0.26, 0.00),(0.52, 0.22),(0.79, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.58, 0.19),node3.pos,decoration:"arrow",angle:-0.70rad)
cetz.draw.content((-0.50, 0.28),angle:-0.70rad,[p])
cetz.draw.hobby((-0.79, 0.44),(-0.53, 0.22),(-0.27, -0.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.68, -1.04),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.51, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.74, -0.81),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.53, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"coil",angle:1.35rad)
cetz.draw.content((-0.83, 0.20),angle:1.35rad,[-k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.86, 0.33),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"coil",angle:-1.34rad)
cetz.draw.content((1.06, 0.25),angle:-1.34rad,[-k[3]])
cetz.draw.hobby((0.98, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.39rad)
cetz.draw.content((0.83, 0.74),angle:1.39rad,[p+k[3]])
cetz.draw.hobby((0.86, 0.55),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.89rad)
cetz.draw.content((-1.07, 0.70),angle:4.89rad,[p+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.98, 0.53),stroke:stroke,mark: (end: ">"))
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, -0.86))
node(node0.pos)
let node1= (pos:(0.49, -0.86))
node(node1.pos)
let node2= (pos:(0.55, -0.22))
node(node2.pos)
let node3= (pos:(-0.00, -0.07))
node(node3.pos)
let node4= (pos:(-0.64, 0.69))
node(node4.pos)
let node5= (pos:(-0.04, 0.60))
node(node5.pos)
edge(node1.pos,(0.06, -0.93),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.06, -1.05),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.95),(0.07, -0.99),(-0.28, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.07, -0.55),node2.pos,decoration:"wave",angle:3.77rad)
cetz.draw.content((-0.00, -0.46),angle:3.77rad,[q])
cetz.draw.hobby((-0.30, -0.75),(0.06, -0.49),(0.42, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.25, -0.49),node1.pos,decoration:"wave",angle:2.13rad)
cetz.draw.content((0.15, -0.55),angle:2.13rad,[q])
cetz.draw.hobby((-0.01, -0.18),(0.19, -0.50),(0.39, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.30, -0.08),node2.pos,decoration:"arrow",angle:-0.26rad)
cetz.draw.content((0.33, 0.04),angle:-0.26rad,[p-q+k[3]])
cetz.draw.hobby((0.05, -0.00),(0.31, -0.02),(0.54, -0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.28),node3.pos,decoration:"arrow",angle:5.40rad)
cetz.draw.content((-0.45, 0.20),angle:5.40rad,[p+k[3]])
cetz.draw.hobby((-0.64, 0.57),(-0.40, 0.24),(-0.12, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.33, 0.71),node4.pos,decoration:"arrow",angle:2.99rad)
cetz.draw.content((-0.31, 0.83),angle:2.99rad,[p+2 k[3]])
cetz.draw.hobby((-0.06, 0.68),(-0.32, 0.77),(-0.59, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
cetz.draw.content((-0.65, -1.05),angle:-2.93rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.44, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.78, -0.82),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.60, -0.83),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((0.72, 0.00),angle:0.45rad,[p+k[3]])
cetz.draw.hobby((0.61, -0.12),(0.88, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.56rad)
cetz.draw.content((-0.46, 0.20),angle:0.56rad,[p+k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.09, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.57rad)
cetz.draw.content((-0.90, 0.75),angle:5.57rad,[-k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.75, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.37rad)
cetz.draw.content((0.44, 0.91),angle:0.37rad,[-k[3]])
cetz.draw.hobby((0.03, 0.69),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding12i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.86))
node(node0.pos)
let node1= (pos:(0.35, -0.86))
node(node1.pos)
let node2= (pos:(0.00, -0.07))
node(node2.pos)
let node3= (pos:(-0.55, -0.22))
node(node3.pos)
let node4= (pos:(0.04, 0.60))
node(node4.pos)
let node5= (pos:(0.64, 0.69))
node(node5.pos)
edge(node1.pos,(-0.07, -0.93),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.06, -1.05),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.28, -0.94),(-0.07, -0.99),(-0.42, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.25, -0.48),node2.pos,decoration:"wave",angle:-2.13rad)
cetz.draw.content((-0.15, -0.55),angle:-2.13rad,[q])
cetz.draw.hobby((-0.39, -0.81),(-0.19, -0.50),(0.00, -0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.07, -0.55),node1.pos,decoration:"wave",angle:2.52rad)
cetz.draw.content((-0.00, -0.45),angle:2.52rad,[q])
cetz.draw.hobby((-0.43, -0.23),(-0.06, -0.48),(0.30, -0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.30, -0.07),node2.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.33, 0.04),angle:0.27rad,[p-q+k[3]])
cetz.draw.hobby((-0.55, -0.13),(-0.31, -0.01),(-0.05, 0.00),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.36, 0.28),node5.pos,decoration:"arrow",angle:0.87rad)
cetz.draw.content((0.45, 0.21),angle:0.87rad,[p+k[3]])
cetz.draw.hobby((0.12, -0.05),(0.40, 0.24),(0.64, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.33, 0.71),node4.pos,decoration:"arrow",angle:3.28rad)
cetz.draw.content((0.32, 0.83),angle:3.28rad,[p+2 k[3]])
cetz.draw.hobby((0.59, 0.76),(0.32, 0.77),(0.07, 0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.71, -1.05),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.57, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
cetz.draw.content((0.70, -0.81),angle:2.93rad,[-k[0]])
cetz.draw.hobby((0.46, -0.82),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.56rad)
cetz.draw.content((0.58, 0.40),angle:-0.56rad,[p+k[3]])
cetz.draw.hobby((0.16, 0.60),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((-0.83, -0.22),angle:5.83rad,[p+k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.67, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.92rad)
cetz.draw.content((-0.52, 0.69),angle:5.92rad,[-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.71rad)
cetz.draw.content((0.74, 0.94),angle:0.71rad,[-k[3]])
cetz.draw.hobby((0.67, 0.80),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.88))
node(node0.pos)
let node1= (pos:(0.37, -0.88))
node(node1.pos)
let node2= (pos:(0.51, -0.24))
node(node2.pos)
let node3= (pos:(-0.51, -0.24))
node(node3.pos)
let node4= (pos:(-0.16, 0.56))
node(node4.pos)
let node5= (pos:(0.16, 0.56))
node(node5.pos)
edge(node1.pos,(0.00, -0.96),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -1.08),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.97),(-0.00, -1.02),(-0.32, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.09, -0.55),node2.pos,decoration:"wave",angle:3.77rad)
cetz.draw.content((0.02, -0.45),angle:3.77rad,[q])
cetz.draw.hobby((-0.32, -0.77),(0.04, -0.51),(0.39, -0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.09, -0.54),node1.pos,decoration:"wave",angle:2.51rad)
cetz.draw.content((-0.02, -0.45),angle:2.51rad,[q])
cetz.draw.hobby((-0.39, -0.25),(-0.04, -0.51),(0.32, -0.77),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.36, 0.17),node5.pos,decoration:"arrow",angle:1.99rad)
cetz.draw.content((0.47, 0.22),angle:1.99rad,[q+k[2]])
cetz.draw.hobby((0.54, -0.14),(0.41, 0.20),(0.25, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.17),node3.pos,decoration:"arrow",angle:4.29rad)
cetz.draw.content((-0.47, 0.22),angle:4.29rad,[q+k[2]])
cetz.draw.hobby((-0.25, 0.51),(-0.41, 0.20),(-0.54, -0.14),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.96rad)
cetz.draw.content((-0.66, -1.06),angle:-2.96rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.46, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.96rad)
cetz.draw.content((0.71, -0.82),angle:2.96rad,[-k[0]])
cetz.draw.hobby((0.48, -0.84),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.95rad)
cetz.draw.content((-0.73, -0.40),angle:-2.95rad,[-k[2]])
cetz.draw.hobby((-0.89, -0.37),(-0.60, -0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.95rad)
cetz.draw.content((0.78, -0.17),angle:2.95rad,[-k[2]])
cetz.draw.hobby((0.62, -0.20),(0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:2.95rad)
cetz.draw.content((0.45, 0.56),angle:2.95rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.05, 0.60),(0.91, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-2.95rad)
cetz.draw.content((-0.40, 0.33),angle:-2.95rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.89, 0.29),(0.07, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.52, 0.89),angle:0.48rad,[1/2 p+1/2 q+k[2]])
cetz.draw.hobby((0.22, 0.66),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.63, 0.67),angle:5.80rad,[1/2 p+1/2 q+k[2]])
cetz.draw.hobby((-0.94, 0.90),(-0.27, 0.55),stroke:stroke,mark: (end: ">"))
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.82))
node(node0.pos)
let node1= (pos:(0.42, -0.85))
node(node1.pos)
let node2= (pos:(0.74, -0.12))
node(node2.pos)
let node3= (pos:(-0.38, -0.18))
node(node3.pos)
let node4= (pos:(0.27, 0.71))
node(node4.pos)
let node5= (pos:(-0.75, 0.71))
node(node5.pos)
edge(node1.pos,(0.05, -0.90),node0.pos,decoration:"arrow",angle:3.10rad)
cetz.draw.content((0.05, -1.02),angle:3.10rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(0.05, -0.96),(-0.25, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.45),node2.pos,decoration:"wave",angle:3.73rad)
cetz.draw.content((0.17, -0.35),angle:3.73rad,[q])
cetz.draw.hobby((-0.24, -0.70),(0.18, -0.41),(0.60, -0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.02, -0.50),node1.pos,decoration:"wave",angle:2.44rad)
cetz.draw.content((0.10, -0.41),angle:2.44rad,[q])
cetz.draw.hobby((-0.26, -0.20),(0.07, -0.46),(0.38, -0.74),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.05, 0.27),node3.pos,decoration:"arrow",angle:-2.20rad)
cetz.draw.content((0.04, 0.20),angle:-2.20rad,[q+k[2]])
cetz.draw.hobby((0.25, 0.58),(-0.01, 0.23),(-0.27, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, 0.74),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.24, 0.86),angle:0.00rad,[p+k[2]])
cetz.draw.hobby((-0.66, 0.78),(-0.24, 0.80),(0.17, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.62, -1.03),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.39, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.74, -0.81),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.53, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((-0.66, -0.37),angle:-2.90rad,[-k[2]])
cetz.draw.hobby((-0.89, -0.37),(-0.46, -0.26),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.46rad)
cetz.draw.content((0.95, -0.13),angle:2.46rad,[-k[2]])
cetz.draw.hobby((0.86, -0.14),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.77, 0.16),angle:1.05rad,[q+k[2]])
cetz.draw.hobby((0.74, -0.01),(0.90, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.98rad)
cetz.draw.content((-0.78, 0.45),angle:0.98rad,[q+k[2]])
cetz.draw.hobby((-0.89, 0.38),(-0.76, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.52rad)
cetz.draw.content((0.59, 0.97),angle:3.52rad,[p-q])
cetz.draw.hobby((0.34, 0.80),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.27rad)
cetz.draw.content((-0.97, 0.78),angle:2.27rad,[p-q])
cetz.draw.hobby((-0.98, 0.88),(-0.86, 0.74),stroke:stroke,mark: (end: ">"))
})
let embedding14i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.85))
node(node0.pos)
let node1= (pos:(0.30, -0.82))
node(node1.pos)
let node2= (pos:(0.38, -0.18))
node(node2.pos)
let node3= (pos:(-0.74, -0.12))
node(node3.pos)
let node4= (pos:(0.75, 0.71))
node(node4.pos)
let node5= (pos:(-0.27, 0.71))
node(node5.pos)
edge(node1.pos,(-0.05, -0.90),node0.pos,decoration:"arrow",angle:-3.10rad)
cetz.draw.content((-0.05, -1.02),angle:-3.10rad,[q+k[0]])
cetz.draw.hobby((0.25, -0.91),(-0.05, -0.96),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.02, -0.50),node2.pos,decoration:"wave",angle:3.84rad)
cetz.draw.content((-0.09, -0.41),angle:3.84rad,[q])
cetz.draw.hobby((-0.38, -0.74),(-0.07, -0.46),(0.26, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.23, -0.45),node1.pos,decoration:"wave",angle:2.55rad)
cetz.draw.content((-0.17, -0.35),angle:2.55rad,[q])
cetz.draw.hobby((-0.60, -0.14),(-0.18, -0.41),(0.24, -0.70),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.05, 0.27),node5.pos,decoration:"arrow",angle:2.20rad)
cetz.draw.content((-0.04, 0.20),angle:2.20rad,[q+k[2]])
cetz.draw.hobby((0.27, -0.13),(0.01, 0.23),(-0.25, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, 0.74),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.24, 0.86),angle:0.00rad,[p+k[2]])
cetz.draw.hobby((-0.17, 0.78),(0.24, 0.80),(0.65, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.68, -1.04),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.50, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.68, -0.80),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.41, -0.79),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.46rad)
cetz.draw.content((-0.79, -0.32),angle:-2.46rad,[-k[2]])
cetz.draw.hobby((-0.88, -0.32),(-0.78, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.90rad)
cetz.draw.content((0.72, -0.14),angle:2.90rad,[-k[2]])
cetz.draw.hobby((0.49, -0.15),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.98rad)
cetz.draw.content((0.97, 0.59),angle:-0.98rad,[q+k[2]])
cetz.draw.hobby((0.86, 0.66),(0.99, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.23rad)
cetz.draw.content((-0.97, 0.05),angle:5.23rad,[q+k[2]])
cetz.draw.hobby((-1.00, 0.22),(-0.84, -0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.01rad)
cetz.draw.content((0.78, 0.93),angle:4.01rad,[p-q])
cetz.draw.hobby((0.77, 0.82),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.76rad)
cetz.draw.content((-0.68, 0.74),angle:2.76rad,[p-q])
cetz.draw.hobby((-0.93, 0.91),(-0.38, 0.69),stroke:stroke,mark: (end: ">"))
})
let embedding14i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.36, -0.78))
node(node0.pos)
let node1= (pos:(0.36, -0.78))
node(node1.pos)
let node2= (pos:(0.57, -0.02))
node(node2.pos)
let node3= (pos:(-0.57, -0.02))
node(node3.pos)
let node4= (pos:(-0.53, 0.79))
node(node4.pos)
let node5= (pos:(0.53, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.84),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.96),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.86),(-0.00, -0.90),(-0.31, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.38),node2.pos,decoration:"wave",angle:3.83rad)
cetz.draw.content((0.03, -0.29),angle:3.83rad,[q])
cetz.draw.hobby((-0.31, -0.66),(0.06, -0.34),(0.43, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, -0.38),node1.pos,decoration:"wave",angle:2.45rad)
cetz.draw.content((-0.04, -0.29),angle:2.45rad,[q])
cetz.draw.hobby((-0.44, -0.05),(-0.06, -0.35),(0.31, -0.66),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.56, 0.39),node5.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((0.68, 0.39),angle:1.61rad,[q+k[2]])
cetz.draw.hobby((0.63, 0.06),(0.62, 0.39),(0.60, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.56, 0.39),node3.pos,decoration:"arrow",angle:4.67rad)
cetz.draw.content((-0.68, 0.39),angle:4.67rad,[q+k[2]])
cetz.draw.hobby((-0.60, 0.71),(-0.62, 0.39),(-0.63, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.81),node5.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.93),angle:3.14rad,[p-q])
cetz.draw.hobby((-0.43, 0.85),(0.00, 0.87),(0.43, 0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.64, -1.00),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.43, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.72, -0.78),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.47, -0.76),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.10rad)
cetz.draw.content((-0.79, -0.13),angle:3.10rad,[-k[2]])
cetz.draw.hobby((-0.90, -0.06),(-0.67, -0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.18rad)
cetz.draw.content((0.78, 0.11),angle:3.18rad,[-k[2]])
cetz.draw.hobby((0.66, 0.05),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.43rad)
cetz.draw.content((0.72, 1.00),angle:0.43rad,[p+k[2]])
cetz.draw.hobby((0.60, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.85rad)
cetz.draw.content((-0.82, 0.78),angle:5.85rad,[p+k[2]])
cetz.draw.hobby((-0.93, 0.90),(-0.65, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.77))
node(node0.pos)
let node1= (pos:(0.30, -0.70))
node(node1.pos)
let node2= (pos:(0.54, -0.13))
node(node2.pos)
let node3= (pos:(-0.75, 0.31))
node(node3.pos)
let node4= (pos:(0.76, 0.97))
node(node4.pos)
let node5= (pos:(0.60, 0.52))
node(node5.pos)
edge(node1.pos,(-0.06, -0.79),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.04, -0.91),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.25, -0.78),(-0.04, -0.85),(-0.34, -0.84),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.04, -0.41),node2.pos,decoration:"wave",angle:3.74rad)
cetz.draw.content((-0.02, -0.32),angle:3.74rad,[q])
cetz.draw.hobby((-0.36, -0.65),(0.01, -0.36),(0.41, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.24, -0.18),node1.pos,decoration:"wave",angle:2.37rad)
cetz.draw.content((-0.16, -0.09),angle:2.37rad,[q])
cetz.draw.hobby((-0.60, 0.25),(-0.18, -0.15),(0.23, -0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.56, 0.19),node5.pos,decoration:"arrow",angle:1.48rad)
cetz.draw.content((0.44, 0.20),angle:1.48rad,[q+k[2]])
cetz.draw.hobby((0.48, -0.06),(0.50, 0.20),(0.53, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.53, 0.81),node5.pos,decoration:"coil",angle:1.19rad)
cetz.draw.content((0.42, 0.85),angle:1.19rad,[k[3]])
cetz.draw.hobby((0.68, 1.02),(0.47, 0.82),(0.51, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.82, 0.69),node4.pos,decoration:"arrow",angle:1.23rad)
cetz.draw.content((0.94, 0.65),angle:1.23rad,[q+k[2]+k[3]])
cetz.draw.hobby((0.68, 0.48),(0.88, 0.67),(0.85, 0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.77rad)
cetz.draw.content((-0.66, -1.00),angle:-2.77rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.48, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.70, -0.74),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.41, -0.68),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.25rad)
cetz.draw.content((-0.78, 0.08),angle:-2.25rad,[-k[2]])
cetz.draw.hobby((-0.89, 0.04),(-0.77, 0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.42rad)
cetz.draw.content((0.74, 0.05),angle:3.42rad,[-k[2]])
cetz.draw.hobby((0.62, -0.04),(0.89, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.13rad)
cetz.draw.content((0.86, 1.10),angle:0.13rad,[q+k[2]])
cetz.draw.hobby((0.85, 1.04),(0.89, 1.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.06rad)
cetz.draw.content((-0.99, 0.61),angle:5.06rad,[q+k[2]])
cetz.draw.hobby((-1.02, 0.89),(-0.84, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding15i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, -0.86))
node(node0.pos)
let node1= (pos:(0.35, -0.86))
node(node1.pos)
let node2= (pos:(0.61, -0.23))
node(node2.pos)
let node3= (pos:(-0.61, -0.23))
node(node3.pos)
let node4= (pos:(-0.91, 0.59))
node(node4.pos)
let node5= (pos:(0.91, 0.59))
node(node5.pos)
edge(node1.pos,(-0.00, -0.93),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -1.05),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.94),(-0.00, -0.99),(-0.30, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.13, -0.51),node2.pos,decoration:"wave",angle:3.72rad)
cetz.draw.content((0.06, -0.41),angle:3.72rad,[q])
cetz.draw.hobby((-0.30, -0.74),(0.08, -0.47),(0.48, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.13, -0.51),node1.pos,decoration:"wave",angle:2.56rad)
cetz.draw.content((-0.06, -0.41),angle:2.56rad,[q])
cetz.draw.hobby((-0.48, -0.23),(-0.08, -0.47),(0.30, -0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.74, 0.18),node5.pos,decoration:"arrow",angle:1.22rad)
cetz.draw.content((0.62, 0.23),angle:1.22rad,[q+k[2]])
cetz.draw.hobby((0.58, -0.13),(0.68, 0.21),(0.82, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.74, 0.18),node3.pos,decoration:"arrow",angle:-1.22rad)
cetz.draw.content((-0.62, 0.22),angle:-1.22rad,[q+k[2]])
cetz.draw.hobby((-0.82, 0.53),(-0.68, 0.21),(-0.58, -0.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
cetz.draw.content((-0.65, -1.05),angle:-2.93rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.44, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
cetz.draw.content((0.70, -0.81),angle:2.93rad,[-k[0]])
cetz.draw.hobby((0.46, -0.82),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.77, -0.40),angle:-2.87rad,[-k[2]])
cetz.draw.hobby((-0.89, -0.36),(-0.69, -0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.84, -0.16),angle:2.87rad,[-k[2]])
cetz.draw.hobby((0.72, -0.20),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:1.22rad)
cetz.draw.content((-0.84, 0.42),angle:1.22rad,[-k[3]])
cetz.draw.hobby((-0.91, 0.41),(-0.88, 0.47),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-1.22rad)
cetz.draw.content((1.07, 0.50),angle:-1.22rad,[-k[3]])
cetz.draw.hobby((1.00, 0.51),(1.02, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.35rad)
cetz.draw.content((0.84, 0.82),angle:1.35rad,[q+k[2]+k[3]])
cetz.draw.hobby((0.87, 0.70),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.93rad)
cetz.draw.content((-1.07, 0.77),angle:4.93rad,[q+k[2]+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.67),stroke:stroke,mark: (end: ">"))
})
let embedding15i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.70))
node(node0.pos)
let node1= (pos:(0.40, -0.76))
node(node1.pos)
let node2= (pos:(0.75, 0.31))
node(node2.pos)
let node3= (pos:(-0.54, -0.12))
node(node3.pos)
let node4= (pos:(-0.59, 0.53))
node(node4.pos)
let node5= (pos:(-0.75, 0.98))
node(node5.pos)
edge(node1.pos,(0.06, -0.79),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.04, -0.91),angle:3.05rad,[q+k[0]])
cetz.draw.hobby((0.34, -0.84),(0.04, -0.85),(-0.25, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.18),node2.pos,decoration:"wave",angle:3.91rad)
cetz.draw.content((0.16, -0.09),angle:3.91rad,[q])
cetz.draw.hobby((-0.23, -0.55),(0.18, -0.15),(0.60, 0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.04, -0.41),node1.pos,decoration:"wave",angle:2.54rad)
cetz.draw.content((0.02, -0.31),angle:2.54rad,[q])
cetz.draw.hobby((-0.41, -0.12),(-0.01, -0.36),(0.36, -0.64),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.20),node3.pos,decoration:"arrow",angle:-1.49rad)
cetz.draw.content((-0.43, 0.21),angle:-1.49rad,[q+k[2]])
cetz.draw.hobby((-0.52, 0.48),(-0.49, 0.21),(-0.48, -0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.52, 0.83),node5.pos,decoration:"coil",angle:-1.16rad)
cetz.draw.content((-0.41, 0.87),angle:-1.16rad,[k[3]])
cetz.draw.hobby((-0.50, 0.54),(-0.46, 0.84),(-0.68, 1.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.81, 0.70),node4.pos,decoration:"arrow",angle:5.07rad)
cetz.draw.content((-0.93, 0.66),angle:5.07rad,[q+k[2]+k[3]])
cetz.draw.hobby((-0.84, 0.96),(-0.87, 0.68),(-0.66, 0.49),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.60, -0.96),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.36, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.75, -0.77),angle:2.77rad,[-k[0]])
cetz.draw.hobby((0.52, -0.75),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((-0.80, -0.18),angle:2.88rad,[-k[2]])
cetz.draw.hobby((-0.92, -0.08),(-0.65, -0.15),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.25rad)
cetz.draw.content((0.97, 0.23),angle:2.25rad,[-k[2]])
cetz.draw.hobby((0.86, 0.27),(0.98, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.22rad)
cetz.draw.content((0.76, 0.70),angle:1.22rad,[q+k[2]])
cetz.draw.hobby((0.73, 0.43),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:6.19rad)
cetz.draw.content((-0.89, 0.87),angle:6.19rad,[q+k[2]])
cetz.draw.hobby((-0.91, 0.93),(-0.86, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.83))
node(node0.pos)
let node1= (pos:(0.37, -0.84))
node(node1.pos)
let node2= (pos:(0.73, -0.12))
node(node2.pos)
let node3= (pos:(-0.59, -0.21))
node(node3.pos)
let node4= (pos:(-0.72, 0.69))
node(node4.pos)
let node5= (pos:(-0.06, 0.71))
node(node5.pos)
edge(node1.pos,(0.03, -0.90),node0.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((0.03, -1.02),angle:3.13rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.92),(0.03, -0.96),(-0.27, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.21, -0.44),node2.pos,decoration:"wave",angle:3.73rad)
cetz.draw.content((0.14, -0.34),angle:3.73rad,[q])
cetz.draw.hobby((-0.25, -0.70),(0.16, -0.40),(0.59, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.10, -0.49),node1.pos,decoration:"wave",angle:2.56rad)
cetz.draw.content((-0.03, -0.39),angle:2.56rad,[q])
cetz.draw.hobby((-0.46, -0.21),(-0.05, -0.44),(0.32, -0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.24),node3.pos,decoration:"arrow",angle:4.86rad)
cetz.draw.content((-0.79, 0.22),angle:4.86rad,[q+k[2]])
cetz.draw.hobby((-0.77, 0.60),(-0.73, 0.23),(-0.66, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, 0.74),node4.pos,decoration:"arrow",angle:3.17rad)
cetz.draw.content((-0.39, 0.86),angle:3.17rad,[-p+2 q+k[2]])
cetz.draw.hobby((-0.12, 0.79),(-0.39, 0.80),(-0.67, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.63, -1.03),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.40, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.72, -0.80),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.49, -0.81),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.76, -0.38),angle:-2.84rad,[-k[2]])
cetz.draw.hobby((-0.89, -0.36),(-0.67, -0.29),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.48rad)
cetz.draw.content((0.94, -0.13),angle:2.48rad,[-k[2]])
cetz.draw.hobby((0.84, -0.14),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.03rad)
cetz.draw.content((0.76, 0.17),angle:1.03rad,[q+k[2]])
cetz.draw.hobby((0.73, -0.00),(0.90, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.49, 0.41),angle:0.39rad,[q+k[2]])
cetz.draw.hobby((-0.88, 0.32),(-0.13, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.45rad)
cetz.draw.content((-0.95, 0.77),angle:5.45rad,[p-q])
cetz.draw.hobby((-0.98, 0.89),(-0.83, 0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.26rad)
cetz.draw.content((0.44, 0.97),angle:0.26rad,[p-q])
cetz.draw.hobby((0.02, 0.80),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
})
let embedding16i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, -0.84))
node(node0.pos)
let node1= (pos:(0.32, -0.83))
node(node1.pos)
let node2= (pos:(0.59, -0.21))
node(node2.pos)
let node3= (pos:(-0.73, -0.12))
node(node3.pos)
let node4= (pos:(0.06, 0.72))
node(node4.pos)
let node5= (pos:(0.72, 0.69))
node(node5.pos)
edge(node1.pos,(-0.03, -0.90),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.03, -1.02),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.27, -0.91),(-0.03, -0.96),(-0.32, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.10, -0.49),node2.pos,decoration:"wave",angle:3.72rad)
cetz.draw.content((0.03, -0.39),angle:3.72rad,[q])
cetz.draw.hobby((-0.32, -0.72),(0.06, -0.45),(0.46, -0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, -0.44),node1.pos,decoration:"wave",angle:2.55rad)
cetz.draw.content((-0.14, -0.34),angle:2.55rad,[q])
cetz.draw.hobby((-0.59, -0.13),(-0.16, -0.40),(0.25, -0.70),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.67, 0.24),node5.pos,decoration:"arrow",angle:1.42rad)
cetz.draw.content((0.79, 0.22),angle:1.42rad,[q+k[2]])
cetz.draw.hobby((0.66, -0.13),(0.73, 0.23),(0.77, 0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.74),node4.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.39, 0.86),angle:3.11rad,[-p+2 q+k[2]])
cetz.draw.hobby((0.67, 0.77),(0.39, 0.80),(0.12, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.66, -1.04),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.46, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.69, -0.80),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.43, -0.79),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.47rad)
cetz.draw.content((-0.79, -0.32),angle:-2.47rad,[-k[2]])
cetz.draw.hobby((-0.88, -0.32),(-0.77, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.83, -0.16),angle:2.84rad,[-k[2]])
cetz.draw.hobby((0.70, -0.18),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.39rad)
cetz.draw.content((0.58, 0.64),angle:-0.39rad,[q+k[2]])
cetz.draw.hobby((0.18, 0.73),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.25rad)
cetz.draw.content((-0.97, 0.05),angle:5.25rad,[q+k[2]])
cetz.draw.hobby((-1.00, 0.22),(-0.83, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:6.02rad)
cetz.draw.content((-0.50, 0.74),angle:6.02rad,[p-q])
cetz.draw.hobby((-0.92, 0.92),(-0.05, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.83rad)
cetz.draw.content((0.77, 0.93),angle:0.83rad,[p-q])
cetz.draw.hobby((0.74, 0.81),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding17f0=cetz.canvas(length:50%,{
let node0= (pos:(0.37, -0.88))
node(node0.pos)
let node1= (pos:(-0.37, -0.88))
node(node1.pos)
let node2= (pos:(-0.51, -0.24))
node(node2.pos)
let node3= (pos:(0.51, -0.24))
node(node3.pos)
let node4= (pos:(0.15, 0.56))
node(node4.pos)
let node5= (pos:(-0.15, 0.56))
node(node5.pos)
edge(node0.pos,(-0.00, -0.96),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(-0.09, -0.55),node2.pos,decoration:"wave",angle:-0.63rad)
edge(node3.pos,(0.09, -0.55),node1.pos,decoration:"wave",angle:0.63rad)
edge(node2.pos,(-0.35, 0.17),node5.pos,decoration:"arrow",angle:1.15rad)
edge(node4.pos,(0.35, 0.17),node3.pos,decoration:"arrow",angle:-1.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.96rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.96rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.19rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.19rad)
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:2.88rad)
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-2.88rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.36rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.92rad)
})
let embedding18f0=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.87))
node(node0.pos)
let node1= (pos:(-0.34, -0.85))
node(node1.pos)
let node2= (pos:(0.05, -0.12))
node(node2.pos)
let node3= (pos:(0.57, -0.18))
node(node3.pos)
let node4= (pos:(0.47, 0.73))
node(node4.pos)
let node5= (pos:(-0.70, 0.71))
node(node5.pos)
edge(node0.pos,(0.07, -0.92),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.28, -0.50),node2.pos,decoration:"wave",angle:-1.04rad)
edge(node3.pos,(0.08, -0.53),node1.pos,decoration:"wave",angle:0.63rad)
edge(node4.pos,(0.54, 0.29),node3.pos,decoration:"arrow",angle:-1.47rad)
edge(node5.pos,(-0.12, 0.74),node4.pos,decoration:"arrow",angle:0.02rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.34rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.20rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.44rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.89rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.62rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.36rad)
})
let embedding18f1=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.85))
node(node0.pos)
let node1= (pos:(-0.50, -0.87))
node(node1.pos)
let node2= (pos:(-0.57, -0.18))
node(node2.pos)
let node3= (pos:(-0.05, -0.12))
node(node3.pos)
let node4= (pos:(0.70, 0.71))
node(node4.pos)
let node5= (pos:(-0.48, 0.73))
node(node5.pos)
edge(node0.pos,(-0.07, -0.93),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(-0.08, -0.53),node2.pos,decoration:"wave",angle:-0.63rad)
edge(node3.pos,(-0.28, -0.50),node1.pos,decoration:"wave",angle:1.04rad)
edge(node2.pos,(-0.54, 0.29),node5.pos,decoration:"arrow",angle:1.46rad)
edge(node5.pos,(0.12, 0.74),node4.pos,decoration:"arrow",angle:-0.02rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.20rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.33rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.89rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.84rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.92rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.66rad)
})
let embedding18f2=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.41, -0.79))
node(node1.pos)
let node2= (pos:(-0.34, 0.00))
node(node2.pos)
let node3= (pos:(0.34, -0.00))
node(node3.pos)
let node4= (pos:(-0.41, 0.79))
node(node4.pos)
let node5= (pos:(0.41, 0.79))
node(node5.pos)
edge(node0.pos,(0.00, -0.85),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.07, -0.40),node2.pos,decoration:"wave",angle:-0.82rad)
edge(node3.pos,(-0.07, -0.40),node1.pos,decoration:"wave",angle:0.81rad)
edge(node2.pos,(0.08, 0.40),node5.pos,decoration:"arrow",angle:0.82rad)
edge(node4.pos,(-0.07, 0.40),node3.pos,decoration:"arrow",angle:5.47rad)
edge(node4.pos,(0.00, 0.85),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.80rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.00rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.00rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.34rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.94rad)
})
let embedding19f0=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.89))
node(node0.pos)
let node1= (pos:(-0.42, -0.89))
node(node1.pos)
let node2= (pos:(-0.28, -0.21))
node(node2.pos)
let node3= (pos:(0.28, -0.21))
node(node3.pos)
let node4= (pos:(-0.73, 0.56))
node(node4.pos)
let node5= (pos:(0.73, 0.56))
node(node5.pos)
edge(node0.pos,(-0.00, -0.96),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.09, -0.56),node2.pos,decoration:"wave",angle:-0.77rad)
edge(node3.pos,(-0.09, -0.56),node1.pos,decoration:"wave",angle:0.77rad)
edge(node2.pos,(0.22, 0.22),node5.pos,decoration:"arrow",angle:0.65rad)
edge(node4.pos,(-0.22, 0.22),node3.pos,decoration:"arrow",angle:-0.65rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.95rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.95rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.17rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.17rad)
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:0.69rad)
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-0.70rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.02rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.26rad)
})
let embedding19f1=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.74))
node(node0.pos)
let node1= (pos:(-0.36, -0.78))
node(node1.pos)
let node2= (pos:(0.18, 0.31))
node(node2.pos)
let node3= (pos:(0.35, -0.03))
node(node3.pos)
let node4= (pos:(-0.35, 0.51))
node(node4.pos)
let node5= (pos:(-0.74, 0.87))
node(node5.pos)
edge(node0.pos,(0.08, -0.81),node1.pos,decoration:"arrow",angle:-3.10rad)
edge(node0.pos,(0.38, -0.28),node2.pos,decoration:"wave",angle:-1.25rad)
edge(node3.pos,(-0.02, -0.40),node1.pos,decoration:"wave",angle:0.81rad)
edge(node4.pos,(-0.07, 0.20),node3.pos,decoration:"arrow",angle:5.60rad)
edge(node4.pos,(-0.45, 0.81),node5.pos,decoration:"coil",angle:-0.70rad)
edge(node5.pos,(-0.65, 0.60),node4.pos,decoration:"arrow",angle:5.51rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.63rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.04rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.26rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.70rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.83rad)
})
let embedding19f2=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.79))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.42, -0.05))
node(node2.pos)
let node3= (pos:(-0.14, 0.33))
node(node3.pos)
let node4= (pos:(0.76, 0.82))
node(node4.pos)
let node5= (pos:(0.34, 0.43))
node(node5.pos)
edge(node0.pos,(-0.07, -0.82),node1.pos,decoration:"arrow",angle:3.08rad)
edge(node0.pos,(-0.01, -0.42),node2.pos,decoration:"wave",angle:-0.76rad)
edge(node3.pos,(-0.29, -0.27),node1.pos,decoration:"wave",angle:1.23rad)
edge(node2.pos,(0.01, 0.12),node5.pos,decoration:"arrow",angle:0.57rad)
edge(node4.pos,(0.65, 0.53),node5.pos,decoration:"coil",angle:0.77rad)
edge(node5.pos,(0.47, 0.74),node4.pos,decoration:"arrow",angle:0.71rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.28rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.19rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.64rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.62rad)
})
let embedding20f0=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.88))
node(node0.pos)
let node1= (pos:(-0.38, -0.86))
node(node1.pos)
let node2= (pos:(0.05, -0.14))
node(node2.pos)
let node3= (pos:(0.36, -0.16))
node(node3.pos)
let node4= (pos:(-0.53, 0.69))
node(node4.pos)
let node5= (pos:(-0.01, 0.74))
node(node5.pos)
edge(node0.pos,(0.05, -0.94),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.28, -0.54),node2.pos,decoration:"wave",angle:5.25rad)
edge(node3.pos,(-0.04, -0.53),node1.pos,decoration:"wave",angle:0.75rad)
edge(node4.pos,(-0.10, 0.27),node3.pos,decoration:"arrow",angle:5.52rad)
edge(node5.pos,(-0.28, 0.81),node4.pos,decoration:"arrow",angle:3.23rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.26rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.18rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.46rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.39rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.70rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.25rad)
})
let embedding20f1=cetz.canvas(length:50%,{
let node0= (pos:(0.38, -0.86))
node(node0.pos)
let node1= (pos:(-0.49, -0.88))
node(node1.pos)
let node2= (pos:(-0.36, -0.16))
node(node2.pos)
let node3= (pos:(-0.05, -0.14))
node(node3.pos)
let node4= (pos:(0.01, 0.74))
node(node4.pos)
let node5= (pos:(0.53, 0.69))
node(node5.pos)
edge(node0.pos,(-0.05, -0.94),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.04, -0.53),node2.pos,decoration:"wave",angle:-0.75rad)
edge(node3.pos,(-0.28, -0.54),node1.pos,decoration:"wave",angle:1.03rad)
edge(node2.pos,(0.10, 0.27),node5.pos,decoration:"arrow",angle:0.76rad)
edge(node5.pos,(0.28, 0.80),node4.pos,decoration:"arrow",angle:3.04rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.18rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.27rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.39rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.82rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:6.03rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.59rad)
})
let embedding21f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.92))
node(node0.pos)
let node1= (pos:(-0.52, -0.92))
node(node1.pos)
let node2= (pos:(0.31, -0.24))
node(node2.pos)
let node3= (pos:(-0.32, -0.24))
node(node3.pos)
let node4= (pos:(-0.14, 0.46))
node(node4.pos)
let node5= (pos:(0.14, 0.46))
node(node5.pos)
edge(node0.pos,(-0.00, -0.97),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.45, -0.58),node2.pos,decoration:"wave",angle:-1.29rad)
edge(node3.pos,(-0.46, -0.58),node1.pos,decoration:"wave",angle:1.30rad)
edge(node3.pos,(-0.01, -0.27),node2.pos,decoration:"arrow",angle:6.27rad)
edge(node2.pos,(0.28, 0.12),node5.pos,decoration:"arrow",angle:1.81rad)
edge(node4.pos,(-0.29, 0.13),node3.pos,decoration:"arrow",angle:4.46rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.98rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.98rad)
edge(node4.pos,(1.00, 0.00),decoration:"coil",angle:2.76rad)
edge(node5.pos,(-1.00, 0.00),decoration:"coil",angle:-2.76rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.57rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.72rad)
})
let embedding22i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.86))
node(node0.pos)
let node1= (pos:(0.58, -0.82))
node(node1.pos)
let node2= (pos:(-0.57, -0.16))
node(node2.pos)
let node3= (pos:(0.92, -0.08))
node(node3.pos)
let node4= (pos:(-0.76, 0.71))
node(node4.pos)
let node5= (pos:(0.23, 0.70))
node(node5.pos)
edge(node1.pos,(0.04, -0.86),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((0.05, -0.98),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.89),(0.04, -0.92),(-0.39, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.52),node2.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.65, -0.53),angle:4.81rad,[q])
cetz.draw.hobby((-0.57, -0.80),(-0.59, -0.52),(-0.62, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.73, -0.46),node1.pos,decoration:"wave",angle:1.14rad)
cetz.draw.content((0.62, -0.41),angle:1.14rad,[q])
cetz.draw.hobby((0.83, -0.13),(0.68, -0.42),(0.55, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.16, 0.26),node5.pos,decoration:"arrow",angle:0.82rad)
cetz.draw.content((-0.07, 0.18),angle:0.82rad,[p+q-k[3]])
cetz.draw.hobby((-0.44, -0.12),(-0.12, 0.22),(0.20, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.26, 0.73),node5.pos,decoration:"coil",angle:3.13rad)
cetz.draw.content((-0.26, 0.85),angle:3.13rad,[k[3]])
cetz.draw.hobby((-0.66, 0.78),(-0.26, 0.79),(0.14, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.72, -1.05),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.58, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.84, -0.80),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.69, -0.81),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.26rad)
cetz.draw.content((1.07, -0.17),angle:-1.26rad,[p-k[3]])
cetz.draw.hobby((1.01, -0.16),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.74, -0.36),angle:0.38rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.64, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.14rad)
cetz.draw.content((-0.78, 0.46),angle:-2.14rad,[-p-q+k[3]])
cetz.draw.hobby((-0.90, 0.38),(-0.76, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.52rad)
cetz.draw.content((0.84, 0.15),angle:4.52rad,[-p-q+k[3]])
cetz.draw.hobby((0.88, 0.03),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.57, 0.96),angle:0.37rad,[p+q])
cetz.draw.hobby((0.30, 0.79),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.40rad)
cetz.draw.content((-0.97, 0.78),angle:5.40rad,[p+q])
cetz.draw.hobby((-0.98, 0.88),(-0.87, 0.75),stroke:stroke,mark: (end: ">"))
})
let embedding22i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.82))
node(node0.pos)
let node1= (pos:(0.50, -0.86))
node(node1.pos)
let node2= (pos:(-0.92, -0.08))
node(node2.pos)
let node3= (pos:(0.57, -0.16))
node(node3.pos)
let node4= (pos:(-0.23, 0.70))
node(node4.pos)
let node5= (pos:(0.76, 0.71))
node(node5.pos)
edge(node1.pos,(-0.04, -0.86),node0.pos,decoration:"arrow",angle:3.10rad)
cetz.draw.content((-0.05, -0.98),angle:3.10rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.92),(-0.04, -0.92),(-0.48, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.46),node2.pos,decoration:"wave",angle:-1.14rad)
cetz.draw.content((-0.62, -0.41),angle:-1.14rad,[q])
cetz.draw.hobby((-0.55, -0.72),(-0.68, -0.42),(-0.83, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.51),node1.pos,decoration:"wave",angle:1.48rad)
cetz.draw.content((0.65, -0.53),angle:1.48rad,[q])
cetz.draw.hobby((0.62, -0.23),(0.59, -0.52),(0.57, -0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.16, 0.26),node3.pos,decoration:"arrow",angle:5.46rad)
cetz.draw.content((0.07, 0.18),angle:5.46rad,[p+q-k[3]])
cetz.draw.hobby((-0.20, 0.57),(0.12, 0.22),(0.44, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.26, 0.73),node5.pos,decoration:"coil",angle:3.15rad)
cetz.draw.content((0.26, 0.85),angle:3.15rad,[k[3]])
cetz.draw.hobby((-0.14, 0.77),(0.26, 0.79),(0.67, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.74, -1.02),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.65, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.78, -0.81),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.61, -0.83),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.38rad)
cetz.draw.content((0.83, -0.13),angle:-0.38rad,[p-k[3]])
cetz.draw.hobby((0.68, -0.14),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.26rad)
cetz.draw.content((-0.85, -0.24),angle:1.26rad,[p-k[3]])
cetz.draw.hobby((-0.91, -0.26),(-0.89, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:1.76rad)
cetz.draw.content((-1.08, 0.10),angle:1.76rad,[-p-q+k[3]])
cetz.draw.hobby((-1.04, 0.22),(-1.00, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.15rad)
cetz.draw.content((0.98, 0.59),angle:2.15rad,[-p-q+k[3]])
cetz.draw.hobby((0.86, 0.65),(1.00, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.88rad)
cetz.draw.content((0.79, 0.93),angle:0.88rad,[p+q])
cetz.draw.hobby((0.78, 0.82),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.66, 0.74),angle:5.91rad,[p+q])
cetz.draw.hobby((-0.93, 0.91),(-0.34, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding22i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.78))
node(node1.pos)
let node2= (pos:(-0.73, -0.00))
node(node2.pos)
let node3= (pos:(0.73, 0.00))
node(node3.pos)
let node4= (pos:(0.55, 0.78))
node(node4.pos)
let node5= (pos:(-0.55, 0.78))
node(node5.pos)
edge(node1.pos,(0.00, -0.80),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -0.92),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.85),(0.00, -0.86),(-0.44, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.40),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.76, -0.43),angle:4.94rad,[q])
cetz.draw.hobby((-0.63, -0.72),(-0.71, -0.41),(-0.77, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.40),node1.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.76, -0.43),angle:1.34rad,[q])
cetz.draw.hobby((0.77, -0.09),(0.71, -0.41),(0.63, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.40),node5.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.76, 0.43),angle:1.34rad,[p+q-k[3]])
cetz.draw.hobby((-0.77, 0.09),(-0.71, 0.41),(-0.63, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.40),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.76, 0.43),angle:-1.34rad,[p+q-k[3]])
cetz.draw.hobby((0.63, 0.72),(0.71, 0.41),(0.77, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.80),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.92),angle:0.00rad,[p+q])
cetz.draw.hobby((-0.44, 0.85),(0.00, 0.86),(0.44, 0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.72, -1.00),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.61, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.66, -0.77),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.86, 0.12),angle:-0.00rad,[p-k[3]])
cetz.draw.hobby((0.83, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.87, -0.12),angle:6.28rad,[p-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.83, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.59rad)
cetz.draw.content((0.72, 1.00),angle:3.59rad,[k[3]])
cetz.draw.hobby((0.61, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.69rad)
cetz.draw.content((-0.83, 0.78),angle:2.69rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.66, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding22f0=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.81))
node(node0.pos)
let node1= (pos:(-0.59, -0.90))
node(node1.pos)
let node2= (pos:(-0.13, -0.07))
node(node2.pos)
let node3= (pos:(-0.78, -0.25))
node(node3.pos)
let node4= (pos:(0.76, 0.56))
node(node4.pos)
let node5= (pos:(-0.37, 0.73))
node(node5.pos)
edge(node0.pos,(-0.09, -0.90),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.16, -0.44),node2.pos,decoration:"wave",angle:-0.95rad)
edge(node3.pos,(-0.72, -0.59),node1.pos,decoration:"wave",angle:1.85rad)
edge(node3.pos,(-0.45, -0.15),node2.pos,decoration:"arrow",angle:0.27rad)
edge(node2.pos,(-0.25, 0.35),node5.pos,decoration:"arrow",angle:1.86rad)
edge(node5.pos,(0.20, 0.68),node4.pos,decoration:"arrow",angle:-0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.16rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.45rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.20rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
})
let embedding22f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.90))
node(node0.pos)
let node1= (pos:(-0.40, -0.82))
node(node1.pos)
let node2= (pos:(0.78, -0.25))
node(node2.pos)
let node3= (pos:(0.13, -0.07))
node(node3.pos)
let node4= (pos:(0.37, 0.74))
node(node4.pos)
let node5= (pos:(-0.75, 0.56))
node(node5.pos)
edge(node0.pos,(0.09, -0.90),node1.pos,decoration:"arrow",angle:3.05rad)
edge(node0.pos,(0.72, -0.59),node2.pos,decoration:"wave",angle:-1.86rad)
edge(node3.pos,(-0.16, -0.44),node1.pos,decoration:"wave",angle:0.95rad)
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:-0.27rad)
edge(node4.pos,(0.25, 0.35),node3.pos,decoration:"arrow",angle:4.42rad)
edge(node5.pos,(-0.20, 0.68),node4.pos,decoration:"arrow",angle:0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.85rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.16rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.54rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.08rad)
})
let embedding22f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.80))
node(node0.pos)
let node1= (pos:(-0.52, -0.80))
node(node1.pos)
let node2= (pos:(0.35, -0.00))
node(node2.pos)
let node3= (pos:(-0.37, -0.01))
node(node3.pos)
let node4= (pos:(-0.52, 0.79))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node0.pos,(-0.00, -0.83),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.46, -0.40),node2.pos,decoration:"wave",angle:-1.38rad)
edge(node3.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.01, -0.00),node2.pos,decoration:"arrow",angle:0.00rad)
edge(node2.pos,(0.46, 0.40),node5.pos,decoration:"arrow",angle:1.37rad)
edge(node4.pos,(-0.47, 0.40),node3.pos,decoration:"arrow",angle:4.90rad)
edge(node4.pos,(-0.00, 0.82),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.41rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
})
let embedding23i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.56))
node(node0.pos)
let node1= (pos:(0.59, -0.56))
node(node1.pos)
let node2= (pos:(-0.83, 0.52))
node(node2.pos)
let node3= (pos:(0.85, 0.51))
node(node3.pos)
let node4= (pos:(0.28, 0.81))
node(node4.pos)
let node5= (pos:(-0.24, 0.80))
node(node5.pos)
edge(node1.pos,(0.00, -0.58),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -0.70),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.03),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.84, -0.06),angle:4.94rad,[q])
cetz.draw.hobby((-0.67, -0.47),(-0.79, -0.04),(-0.87, 0.40),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.03),node1.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.86, -0.06),angle:1.34rad,[q])
cetz.draw.hobby((0.89, 0.39),(0.80, -0.04),(0.68, -0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.67),node5.pos,decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.60, 0.78),angle:0.45rad,[p+q])
cetz.draw.hobby((-0.81, 0.60),(-0.57, 0.73),(-0.32, 0.84),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.58, 0.67),node3.pos,decoration:"arrow",angle:-0.48rad)
cetz.draw.content((0.64, 0.78),angle:-0.48rad,[p+q])
cetz.draw.hobby((0.36, 0.84),(0.60, 0.73),(0.83, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.02, 0.68),node5.pos,decoration:"coil",angle:0.01rad)
cetz.draw.content((0.02, 0.56),angle:0.01rad,[k[3]])
cetz.draw.hobby((0.28, 0.72),(0.02, 0.62),(-0.24, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.02, 0.97),node4.pos,decoration:"arrow",angle:0.01rad)
cetz.draw.content((0.02, 1.09),angle:0.01rad,[p+q+k[3]])
cetz.draw.hobby((-0.25, 0.90),(0.02, 1.03),(0.29, 0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.71, -0.86),angle:-2.33rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.61, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.32rad)
cetz.draw.content((0.89, -0.70),angle:2.32rad,[-k[0]])
cetz.draw.hobby((0.71, -0.60),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.27rad)
cetz.draw.content((0.81, 0.79),angle:1.27rad,[p])
cetz.draw.hobby((0.82, 0.63),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.05rad)
cetz.draw.content((-1.03, 0.72),angle:5.05rad,[p])
cetz.draw.hobby((-1.02, 0.89),(-0.92, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding23f0=cetz.canvas(length:50%,{
let node0= (pos:(0.65, -0.64))
node(node0.pos)
let node1= (pos:(-0.40, -0.74))
node(node1.pos)
let node2= (pos:(0.76, 0.40))
node(node2.pos)
let node3= (pos:(0.00, 0.03))
node(node3.pos)
let node4= (pos:(-0.42, 0.58))
node(node4.pos)
let node5= (pos:(-0.76, 0.93))
node(node5.pos)
edge(node0.pos,(0.13, -0.73),node1.pos,decoration:"arrow",angle:-3.04rad)
edge(node0.pos,(0.74, -0.13),node2.pos,decoration:"wave",angle:-1.68rad)
edge(node3.pos,(-0.22, -0.36),node1.pos,decoration:"wave",angle:1.10rad)
edge(node3.pos,(0.39, 0.23),node2.pos,decoration:"arrow",angle:0.45rad)
edge(node4.pos,(-0.21, 0.31),node3.pos,decoration:"arrow",angle:5.36rad)
edge(node4.pos,(-0.70, 0.65),node5.pos,decoration:"coil",angle:5.47rad)
edge(node5.pos,(-0.48, 0.88),node4.pos,decoration:"arrow",angle:-0.75rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.19rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.99rad)
})
let embedding23f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.86))
node(node1.pos)
let node2= (pos:(0.38, -0.11))
node(node2.pos)
let node3= (pos:(-0.39, -0.12))
node(node3.pos)
let node4= (pos:(-0.93, 0.45))
node(node4.pos)
let node5= (pos:(0.92, 0.45))
node(node5.pos)
edge(node0.pos,(0.00, -0.89),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.47, -0.49),node2.pos,decoration:"wave",angle:-1.40rad)
edge(node3.pos,(-0.48, -0.49),node1.pos,decoration:"wave",angle:1.41rad)
edge(node3.pos,(-0.00, -0.10),node2.pos,decoration:"arrow",angle:0.00rad)
edge(node2.pos,(0.65, 0.19),node5.pos,decoration:"arrow",angle:0.81rad)
edge(node4.pos,(-0.65, 0.19),node3.pos,decoration:"arrow",angle:-0.81rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
edge(node4.pos,(-1.00, 0.00),decoration:"coil",angle:1.41rad)
edge(node5.pos,(1.00, 0.00),decoration:"coil",angle:-1.40rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.43rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.85rad)
})
let embedding23f2=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.02, 0.00))
node(node2.pos)
let node3= (pos:(-0.75, 0.40))
node(node3.pos)
let node4= (pos:(0.89, 0.78))
node(node4.pos)
let node5= (pos:(0.54, 0.45))
node(node5.pos)
edge(node0.pos,(-0.13, -0.73),node1.pos,decoration:"arrow",angle:3.03rad)
edge(node0.pos,(0.22, -0.38),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.73, -0.13),node1.pos,decoration:"wave",angle:1.67rad)
edge(node3.pos,(-0.37, 0.22),node2.pos,decoration:"arrow",angle:-0.48rad)
edge(node2.pos,(0.28, 0.23),node5.pos,decoration:"arrow",angle:0.71rad)
edge(node4.pos,(0.83, 0.50),node5.pos,decoration:"coil",angle:0.79rad)
edge(node5.pos,(0.61, 0.73),node4.pos,decoration:"arrow",angle:0.74rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.76rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.10rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.11rad)
})
let embedding24i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.86))
node(node0.pos)
let node1= (pos:(0.44, -0.84))
node(node1.pos)
let node2= (pos:(-0.76, -0.14))
node(node2.pos)
let node3= (pos:(0.09, -0.12))
node(node3.pos)
let node4= (pos:(0.69, 0.71))
node(node4.pos)
let node5= (pos:(-0.51, 0.73))
node(node5.pos)
edge(node1.pos,(-0.07, -0.88),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.06, -1.00),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.91),(-0.06, -0.94),(-0.48, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.67, -0.51),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.78, -0.54),angle:4.97rad,[q])
cetz.draw.hobby((-0.65, -0.80),(-0.73, -0.52),(-0.80, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.47),node1.pos,decoration:"wave",angle:2.03rad)
cetz.draw.content((0.39, -0.42),angle:2.03rad,[q])
cetz.draw.hobby((0.18, -0.16),(0.33, -0.44),(0.46, -0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.64, 0.31),node5.pos,decoration:"arrow",angle:1.29rad)
cetz.draw.content((-0.76, 0.34),angle:1.29rad,[p+q+k[3]])
cetz.draw.hobby((-0.80, -0.04),(-0.70, 0.32),(-0.60, 0.66),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.09, 0.74),node5.pos,decoration:"coil",angle:-0.02rad)
cetz.draw.content((0.10, 0.86),angle:-0.02rad,[k[3]])
cetz.draw.hobby((0.58, 0.78),(0.09, 0.80),(-0.39, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.75, -1.04),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.65, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.75, -0.80),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.55, -0.81),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.23rad)
cetz.draw.content((0.57, -0.11),angle:-0.23rad,[p+k[3]])
cetz.draw.hobby((0.20, -0.09),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.81, -0.33),angle:0.68rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.80, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.88rad)
cetz.draw.content((0.94, 0.60),angle:-0.88rad,[p+q+k[3]])
cetz.draw.hobby((0.80, 0.67),(0.98, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.50, -0.00),angle:5.89rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.24),(-0.03, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.81, 0.76),angle:2.64rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.63, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.90rad)
cetz.draw.content((0.76, 0.94),angle:3.90rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.72, 0.82),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding24i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, -0.84))
node(node0.pos)
let node1= (pos:(0.57, -0.86))
node(node1.pos)
let node2= (pos:(-0.09, -0.12))
node(node2.pos)
let node3= (pos:(0.76, -0.14))
node(node3.pos)
let node4= (pos:(0.51, 0.73))
node(node4.pos)
let node5= (pos:(-0.69, 0.70))
node(node5.pos)
edge(node1.pos,(0.06, -0.88),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.06, -1.00),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.93),(0.06, -0.94),(-0.35, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.47),node2.pos,decoration:"wave",angle:4.25rad)
cetz.draw.content((-0.39, -0.42),angle:4.25rad,[q])
cetz.draw.hobby((-0.47, -0.74),(-0.33, -0.44),(-0.18, -0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, -0.51),node1.pos,decoration:"wave",angle:1.31rad)
cetz.draw.content((0.78, -0.54),angle:1.31rad,[q])
cetz.draw.hobby((0.80, -0.23),(0.73, -0.52),(0.65, -0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.64, 0.31),node3.pos,decoration:"arrow",angle:-1.29rad)
cetz.draw.content((0.76, 0.34),angle:-1.29rad,[p+q+k[3]])
cetz.draw.hobby((0.59, 0.66),(0.70, 0.31),(0.80, -0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.10, 0.74),node5.pos,decoration:"coil",angle:0.02rad)
cetz.draw.content((-0.10, 0.86),angle:0.02rad,[k[3]])
cetz.draw.hobby((0.39, 0.80),(-0.09, 0.80),(-0.58, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.69, -1.03),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.52, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.82, -0.82),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.68, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((0.96, -0.14),angle:-0.68rad,[p+k[3]])
cetz.draw.hobby((0.88, -0.16),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.52, -0.34),angle:0.23rad,[p+k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.17, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.40rad)
cetz.draw.content((0.41, 0.22),angle:0.40rad,[p+q+k[3]])
cetz.draw.hobby((-0.02, -0.03),(0.88, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.88rad)
cetz.draw.content((-0.75, 0.44),angle:0.88rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, 0.37),(-0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.93, 0.77),angle:2.38rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.80, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.70, 0.97),angle:3.64rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.57, 0.83),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
})
let embedding24i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, 0.02))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(-0.36, 0.78))
node(node4.pos)
let node5= (pos:(0.36, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.81),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.93),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.85),(-0.00, -0.87),(-0.43, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.68, -0.39),angle:4.76rad,[q])
cetz.draw.hobby((-0.60, -0.71),(-0.62, -0.39),(-0.63, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:1.53rad)
cetz.draw.content((0.68, -0.39),angle:1.53rad,[q])
cetz.draw.hobby((0.63, -0.06),(0.62, -0.39),(0.60, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.11, 0.38),node5.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((-0.04, 0.29),angle:0.69rad,[p+q+k[3]])
cetz.draw.hobby((-0.44, 0.04),(-0.06, 0.34),(0.31, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.11, 0.38),node3.pos,decoration:"arrow",angle:5.60rad)
cetz.draw.content((0.04, 0.29),angle:5.60rad,[p+q+k[3]])
cetz.draw.hobby((-0.31, 0.66),(0.06, 0.35),(0.43, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, 0.84),node4.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.96),angle:3.14rad,[p+q+2 k[3]])
cetz.draw.hobby((0.31, 0.86),(0.00, 0.90),(-0.31, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -1.00),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.60, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.82, -0.78),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.65, -0.77),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.04rad)
cetz.draw.content((0.79, 0.13),angle:-0.04rad,[p+k[3]])
cetz.draw.hobby((0.67, 0.07),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.04rad)
cetz.draw.content((-0.78, -0.11),angle:0.04rad,[p+k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.67, -0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.95rad)
cetz.draw.content((-0.72, 0.78),angle:5.95rad,[-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.47, 0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.33rad)
cetz.draw.content((0.64, 1.00),angle:0.33rad,[-k[3]])
cetz.draw.hobby((0.43, 0.87),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding24f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.85))
node(node0.pos)
let node1= (pos:(-0.56, -0.88))
node(node1.pos)
let node2= (pos:(0.22, -0.10))
node(node2.pos)
let node3= (pos:(-0.65, -0.20))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node0.pos,(-0.04, -0.90),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.37, -0.48),node2.pos,decoration:"wave",angle:-1.24rad)
edge(node3.pos,(-0.63, -0.55),node1.pos,decoration:"wave",angle:1.69rad)
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:0.11rad)
edge(node2.pos,(0.48, 0.28),node5.pos,decoration:"arrow",angle:1.05rad)
edge(node5.pos,(0.35, 0.70),node4.pos,decoration:"arrow",angle:3.30rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.91rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.76rad)
})
let embedding24f1=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.89))
node(node0.pos)
let node1= (pos:(-0.47, -0.85))
node(node1.pos)
let node2= (pos:(0.65, -0.20))
node(node2.pos)
let node3= (pos:(-0.22, -0.11))
node(node3.pos)
let node4= (pos:(-0.67, 0.69))
node(node4.pos)
let node5= (pos:(-0.05, 0.59))
node(node5.pos)
edge(node0.pos,(0.04, -0.90),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.63, -0.55),node2.pos,decoration:"wave",angle:-1.70rad)
edge(node3.pos,(-0.37, -0.48),node1.pos,decoration:"wave",angle:1.25rad)
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:-0.10rad)
edge(node4.pos,(-0.48, 0.27),node3.pos,decoration:"arrow",angle:5.23rad)
edge(node5.pos,(-0.35, 0.70),node4.pos,decoration:"arrow",angle:2.98rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.51rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.55rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.52rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.38rad)
})
let embedding25f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.89))
node(node0.pos)
let node1= (pos:(-0.53, -0.89))
node(node1.pos)
let node2= (pos:(0.68, -0.20))
node(node2.pos)
let node3= (pos:(-0.68, -0.20))
node(node3.pos)
let node4= (pos:(-0.17, 0.56))
node(node4.pos)
let node5= (pos:(0.17, 0.56))
node(node5.pos)
edge(node0.pos,(-0.00, -0.91),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.61, -0.55),node2.pos,decoration:"wave",angle:-1.79rad)
edge(node3.pos,(-0.61, -0.55),node1.pos,decoration:"wave",angle:1.78rad)
edge(node2.pos,(0.44, 0.19),node5.pos,decoration:"arrow",angle:2.17rad)
edge(node4.pos,(-0.44, 0.19),node3.pos,decoration:"arrow",angle:4.11rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.74rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:2.95rad)
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-2.95rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.49rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.79rad)
})
let embedding26i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.90))
node(node0.pos)
let node1= (pos:(0.40, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.25))
node(node2.pos)
let node3= (pos:(-0.13, -0.07))
node(node3.pos)
let node4= (pos:(-0.37, 0.74))
node(node4.pos)
let node5= (pos:(0.76, 0.56))
node(node5.pos)
edge(node1.pos,(-0.09, -0.89),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.08, -1.01),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.90),(-0.09, -0.95),(-0.49, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.59),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.84, -0.62),angle:5.00rad,[q])
cetz.draw.hobby((-0.68, -0.87),(-0.78, -0.60),(-0.84, -0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.44),node1.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.25, -0.37),angle:2.19rad,[q])
cetz.draw.hobby((-0.03, -0.10),(0.20, -0.39),(0.40, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, -0.15),node2.pos,decoration:"arrow",angle:3.41rad)
cetz.draw.content((-0.49, -0.03),angle:3.41rad,[k[2]])
cetz.draw.hobby((-0.21, -0.03),(-0.48, -0.09),(-0.74, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.25, 0.35),node3.pos,decoration:"arrow",angle:-1.29rad)
cetz.draw.content((-0.14, 0.38),angle:-1.29rad,[q+k[2]])
cetz.draw.hobby((-0.29, 0.67),(-0.19, 0.35),(-0.10, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.21, 0.68),node5.pos,decoration:"coil",angle:2.99rad)
cetz.draw.content((0.22, 0.79),angle:2.99rad,[p])
cetz.draw.hobby((-0.25, 0.79),(0.21, 0.74),(0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((-0.77, -1.07),angle:-2.90rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.67, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.73, -0.79),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.51, -0.79),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.29rad)
cetz.draw.content((-0.98, -0.20),angle:2.29rad,[-q-k[2]])
cetz.draw.hobby((-0.98, -0.11),(-0.89, -0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.98rad)
cetz.draw.content((0.99, 0.33),angle:1.98rad,[-q-k[2]])
cetz.draw.hobby((0.85, 0.49),(1.02, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.77, 0.84),angle:1.06rad,[p+q+k[2]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.73, 0.76),angle:5.89rad,[p+q+k[2]])
cetz.draw.hobby((-0.93, 0.91),(-0.49, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding26i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.82))
node(node0.pos)
let node1= (pos:(0.59, -0.90))
node(node1.pos)
let node2= (pos:(0.13, -0.07))
node(node2.pos)
let node3= (pos:(0.78, -0.25))
node(node3.pos)
let node4= (pos:(-0.75, 0.56))
node(node4.pos)
let node5= (pos:(0.37, 0.74))
node(node5.pos)
edge(node1.pos,(0.09, -0.90),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.08, -1.01),angle:3.05rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.97),(0.09, -0.96),(-0.31, -0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.44),node2.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.26, -0.37),angle:4.10rad,[q])
cetz.draw.hobby((-0.40, -0.71),(-0.20, -0.39),(0.03, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.59),node1.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.83, -0.62),angle:1.29rad,[q])
cetz.draw.hobby((0.83, -0.32),(0.78, -0.60),(0.67, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.49, -0.03),angle:2.87rad,[k[2]])
cetz.draw.hobby((0.73, -0.17),(0.47, -0.09),(0.21, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.25, 0.35),node5.pos,decoration:"arrow",angle:1.28rad)
cetz.draw.content((0.14, 0.39),angle:1.28rad,[q+k[2]])
cetz.draw.hobby((0.10, 0.03),(0.19, 0.35),(0.29, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.68),node5.pos,decoration:"coil",angle:3.29rad)
cetz.draw.content((-0.22, 0.79),angle:3.29rad,[p])
cetz.draw.hobby((-0.66, 0.65),(-0.20, 0.74),(0.25, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.66, -1.02),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.48, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.90rad)
cetz.draw.content((0.82, -0.83),angle:2.90rad,[-k[0]])
cetz.draw.hobby((0.70, -0.87),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.98rad)
cetz.draw.content((-0.77, 0.23),angle:-1.98rad,[-q-k[2]])
cetz.draw.hobby((-0.91, 0.07),(-0.74, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.98rad)
cetz.draw.content((0.80, -0.04),angle:3.98rad,[-q-k[2]])
cetz.draw.hobby((0.80, -0.13),(0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((0.64, 0.98),angle:0.40rad,[p+q+k[2]])
cetz.draw.hobby((0.44, 0.83),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.98, 0.72),angle:5.22rad,[p+q+k[2]])
cetz.draw.hobby((-1.00, 0.88),(-0.86, 0.62),stroke:stroke,mark: (end: ">"))
})
let embedding26i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.52, -0.79))
node(node1.pos)
let node2= (pos:(-0.35, 0.00))
node(node2.pos)
let node3= (pos:(0.37, 0.00))
node(node3.pos)
let node4= (pos:(0.52, 0.79))
node(node4.pos)
let node5= (pos:(-0.51, 0.79))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.95),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.86),(0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.40),node2.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.38),angle:4.52rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:1.75rad)
cetz.draw.content((0.59, -0.38),angle:1.75rad,[q])
cetz.draw.hobby((0.45, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.00),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.01, 0.12),angle:3.14rad,[k[2]])
cetz.draw.hobby((0.29, 0.06),(0.01, 0.06),(-0.28, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, 0.40),node5.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.58, 0.38),angle:1.76rad,[q+k[2]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.47, 0.40),node3.pos,decoration:"arrow",angle:-1.75rad)
cetz.draw.content((0.59, 0.38),angle:-1.75rad,[q+k[2]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.83),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.95),angle:0.00rad,[p+q+k[2]])
cetz.draw.hobby((-0.42, 0.86),(0.00, 0.89),(0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.58, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.81, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.63, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.54rad)
cetz.draw.content((0.71, 1.01),angle:3.54rad,[p])
cetz.draw.hobby((0.59, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
cetz.draw.content((-0.80, 0.79),angle:2.74rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding26f0=cetz.canvas(length:50%,{
let node0= (pos:(0.58, -0.82))
node(node0.pos)
let node1= (pos:(-0.50, -0.86))
node(node1.pos)
let node2= (pos:(0.92, -0.08))
node(node2.pos)
let node3= (pos:(-0.56, -0.16))
node(node3.pos)
let node4= (pos:(0.23, 0.70))
node(node4.pos)
let node5= (pos:(-0.76, 0.71))
node(node5.pos)
edge(node0.pos,(0.04, -0.86),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.73, -0.46),node2.pos,decoration:"wave",angle:4.28rad)
edge(node3.pos,(-0.53, -0.52),node1.pos,decoration:"wave",angle:1.66rad)
edge(node4.pos,(-0.16, 0.26),node3.pos,decoration:"arrow",angle:-2.31rad)
edge(node5.pos,(-0.26, 0.74),node4.pos,decoration:"arrow",angle:-0.01rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.77rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.88rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.38rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:1.00rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.51rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.26rad)
})
let embedding26f1=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.86))
node(node0.pos)
let node1= (pos:(-0.58, -0.82))
node(node1.pos)
let node2= (pos:(0.56, -0.16))
node(node2.pos)
let node3= (pos:(-0.92, -0.08))
node(node3.pos)
let node4= (pos:(0.76, 0.71))
node(node4.pos)
let node5= (pos:(-0.23, 0.70))
node(node5.pos)
edge(node0.pos,(-0.04, -0.86),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.53, -0.51),node2.pos,decoration:"wave",angle:-1.67rad)
edge(node3.pos,(-0.73, -0.46),node1.pos,decoration:"wave",angle:2.00rad)
edge(node2.pos,(0.16, 0.27),node5.pos,decoration:"arrow",angle:2.32rad)
edge(node5.pos,(0.26, 0.73),node4.pos,decoration:"arrow",angle:0.01rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.88rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.76rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.00rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.91rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.02rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.77rad)
})
let embedding26f2=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.78))
node(node0.pos)
let node1= (pos:(-0.55, -0.78))
node(node1.pos)
let node2= (pos:(0.73, 0.00))
node(node2.pos)
let node3= (pos:(-0.73, 0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.78))
node(node4.pos)
let node5= (pos:(0.55, 0.78))
node(node5.pos)
edge(node0.pos,(0.00, -0.80),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.65, -0.40),node2.pos,decoration:"wave",angle:-1.80rad)
edge(node3.pos,(-0.64, -0.40),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(0.65, 0.40),node5.pos,decoration:"arrow",angle:1.80rad)
edge(node4.pos,(-0.65, 0.40),node3.pos,decoration:"arrow",angle:4.48rad)
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.14rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.45rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.84rad)
})
let embedding27i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, 0.01))
node(node0.pos)
let node1= (pos:(0.36, -0.02))
node(node1.pos)
let node2= (pos:(-0.16, 0.44))
node(node2.pos)
let node3= (pos:(0.30, 0.39))
node(node3.pos)
let node4= (pos:(0.35, 0.85))
node(node4.pos)
let node5= (pos:(0.00, 0.89))
node(node5.pos)
edge(node1.pos,(0.00, -0.04),node0.pos,decoration:"arrow",angle:3.09rad)
cetz.draw.content((-0.00, -0.16),angle:3.09rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.09),(0.00, -0.10),(-0.30, -0.06),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, 0.23),node2.pos,decoration:"wave",angle:4.30rad)
cetz.draw.content((-0.40, 0.28),angle:4.30rad,[q])
cetz.draw.hobby((-0.40, 0.07),(-0.34, 0.26),(-0.24, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, 0.18),node1.pos,decoration:"wave",angle:1.70rad)
cetz.draw.content((0.48, 0.20),angle:1.70rad,[q])
cetz.draw.hobby((0.38, 0.38),(0.42, 0.20),(0.43, 0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.07, 0.40),node2.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((0.05, 0.28),angle:3.04rad,[k[2]])
cetz.draw.hobby((0.26, 0.33),(0.06, 0.34),(-0.13, 0.37),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.13, 0.68),node5.pos,decoration:"arrow",angle:1.21rad)
cetz.draw.content((-0.24, 0.72),angle:1.21rad,[q+k[2]])
cetz.draw.hobby((-0.23, 0.49),(-0.19, 0.70),(-0.08, 0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.38, 0.61),node3.pos,decoration:"arrow",angle:-1.67rad)
cetz.draw.content((0.50, 0.60),angle:-1.67rad,[q+k[2]])
cetz.draw.hobby((0.42, 0.82),(0.44, 0.61),(0.38, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.17, 0.81),node5.pos,decoration:"coil",angle:6.20rad)
cetz.draw.content((0.16, 0.69),angle:6.20rad,[k[3]])
cetz.draw.hobby((0.34, 0.78),(0.16, 0.75),(-0.00, 0.81),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.19, 1.00),node4.pos,decoration:"arrow",angle:-0.12rad)
cetz.draw.content((0.21, 1.12),angle:-0.12rad,[q+k[2]+k[3]])
cetz.draw.hobby((-0.02, 0.96),(0.20, 1.06),(0.39, 0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.69, 0.00),decoration:"arrow",angle:-3.10rad)
cetz.draw.content((-0.52, -0.11),angle:-3.10rad,[-k[0]])
cetz.draw.hobby((-0.59, -0.06),(-0.45, -0.05),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.69, 0.00),decoration:"arrow",angle:3.21rad)
cetz.draw.content((0.52, 0.11),angle:3.21rad,[-k[0]])
cetz.draw.hobby((0.46, 0.04),(0.59, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding27f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.87))
node(node0.pos)
let node1= (pos:(-0.54, -0.87))
node(node1.pos)
let node2= (pos:(0.78, -0.19))
node(node2.pos)
let node3= (pos:(-0.78, -0.19))
node(node3.pos)
let node4= (pos:(-0.94, 0.60))
node(node4.pos)
let node5= (pos:(0.94, 0.60))
node(node5.pos)
edge(node0.pos,(0.00, -0.89),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.65, -0.53),node2.pos,decoration:"wave",angle:4.37rad)
edge(node3.pos,(-0.65, -0.53),node1.pos,decoration:"wave",angle:1.91rad)
edge(node2.pos,(0.81, 0.20),node5.pos,decoration:"arrow",angle:1.38rad)
edge(node4.pos,(-0.81, 0.20),node3.pos,decoration:"arrow",angle:-1.38rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.55rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.55rad)
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:1.34rad)
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-1.34rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.42rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.87rad)
})
let embedding27f1=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.67))
node(node0.pos)
let node1= (pos:(-0.51, -0.82))
node(node1.pos)
let node2= (pos:(0.93, 0.33))
node(node2.pos)
let node3= (pos:(-0.77, -0.16))
node(node3.pos)
let node4= (pos:(-0.65, 0.50))
node(node4.pos)
let node5= (pos:(-0.75, 0.96))
node(node5.pos)
edge(node0.pos,(0.06, -0.76),node1.pos,decoration:"arrow",angle:-3.01rad)
edge(node0.pos,(0.76, -0.18),node2.pos,decoration:"wave",angle:4.40rad)
edge(node3.pos,(-0.65, -0.50),node1.pos,decoration:"wave",angle:1.94rad)
edge(node4.pos,(-0.68, 0.17),node3.pos,decoration:"arrow",angle:-1.74rad)
edge(node4.pos,(-0.54, 0.77),node5.pos,decoration:"coil",angle:-1.31rad)
edge(node5.pos,(-0.85, 0.70),node4.pos,decoration:"arrow",angle:4.93rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.44rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.53rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:1.77rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.47rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:6.12rad)
})
let embedding27f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.82))
node(node0.pos)
let node1= (pos:(-0.61, -0.67))
node(node1.pos)
let node2= (pos:(0.77, -0.17))
node(node2.pos)
let node3= (pos:(-0.93, 0.33))
node(node3.pos)
let node4= (pos:(0.76, 0.94))
node(node4.pos)
let node5= (pos:(0.66, 0.48))
node(node5.pos)
edge(node0.pos,(-0.06, -0.76),node1.pos,decoration:"arrow",angle:3.00rad)
edge(node0.pos,(0.65, -0.51),node2.pos,decoration:"wave",angle:-1.95rad)
edge(node3.pos,(-0.76, -0.18),node1.pos,decoration:"wave",angle:1.88rad)
edge(node2.pos,(0.69, 0.15),node5.pos,decoration:"arrow",angle:1.74rad)
edge(node4.pos,(0.55, 0.76),node5.pos,decoration:"coil",angle:1.31rad)
edge(node5.pos,(0.85, 0.68),node4.pos,decoration:"arrow",angle:1.36rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.43rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.79rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.77rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.78rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.22rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.81rad)
})
let embedding28i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, -0.85))
node(node0.pos)
let node1= (pos:(0.54, -0.86))
node(node1.pos)
let node2= (pos:(0.66, -0.27))
node(node2.pos)
let node3= (pos:(0.38, 0.00))
node(node3.pos)
let node4= (pos:(0.41, 0.77))
node(node4.pos)
let node5= (pos:(-0.74, 0.56))
node(node5.pos)
edge(node1.pos,(0.10, -0.91),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.10, -1.03),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.94),(0.11, -0.97),(-0.25, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.55),node2.pos,decoration:"wave",angle:3.68rad)
cetz.draw.content((0.08, -0.44),angle:3.68rad,[q])
cetz.draw.hobby((-0.26, -0.73),(0.13, -0.48),(0.53, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, -0.46),node1.pos,decoration:"wave",angle:1.77rad)
cetz.draw.content((0.30, -0.49),angle:1.77rad,[q])
cetz.draw.hobby((0.32, -0.08),(0.35, -0.45),(0.45, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.02),node2.pos,decoration:"arrow",angle:-0.76rad)
cetz.draw.content((0.71, 0.06),angle:-0.76rad,[k[2]])
cetz.draw.hobby((0.41, 0.08),(0.67, 0.02),(0.74, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.39, 0.40),node3.pos,decoration:"arrow",angle:4.66rad)
cetz.draw.content((0.27, 0.41),angle:4.66rad,[q+k[2]])
cetz.draw.hobby((0.35, 0.70),(0.33, 0.39),(0.32, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.18, 0.69),node5.pos,decoration:"coil",angle:0.18rad)
cetz.draw.content((-0.20, 0.81),angle:0.18rad,[-p])
cetz.draw.hobby((0.29, 0.82),(-0.18, 0.75),(-0.64, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.63, -1.04),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.40, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
cetz.draw.content((0.80, -0.82),angle:2.85rad,[-k[0]])
cetz.draw.hobby((0.65, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.76, -0.04),angle:0.67rad,[q+k[2]])
cetz.draw.hobby((0.70, -0.16),(0.88, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((-0.76, 0.23),angle:1.15rad,[q+k[2]])
cetz.draw.hobby((-0.90, 0.07),(-0.73, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.10rad)
cetz.draw.content((-0.98, 0.72),angle:2.10rad,[p-q-k[2]])
cetz.draw.hobby((-1.00, 0.88),(-0.85, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((0.66, 1.00),angle:3.52rad,[p-q-k[2]])
cetz.draw.hobby((0.49, 0.86),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding28i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.86))
node(node0.pos)
let node1= (pos:(0.31, -0.85))
node(node1.pos)
let node2= (pos:(-0.37, 0.01))
node(node2.pos)
let node3= (pos:(-0.66, -0.26))
node(node3.pos)
let node4= (pos:(0.75, 0.57))
node(node4.pos)
let node5= (pos:(-0.41, 0.77))
node(node5.pos)
edge(node1.pos,(-0.10, -0.91),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.10, -1.03),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.24, -0.93),(-0.11, -0.97),(-0.47, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, -0.46),node2.pos,decoration:"wave",angle:-1.78rad)
cetz.draw.content((-0.29, -0.48),angle:-1.78rad,[q])
cetz.draw.hobby((-0.45, -0.80),(-0.35, -0.45),(-0.31, -0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.14, -0.55),node1.pos,decoration:"wave",angle:2.60rad)
cetz.draw.content((-0.08, -0.44),angle:2.60rad,[q])
cetz.draw.hobby((-0.53, -0.26),(-0.13, -0.48),(0.26, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.61, -0.02),node2.pos,decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.70, 0.07),angle:0.75rad,[k[2]])
cetz.draw.hobby((-0.74, -0.23),(-0.66, 0.03),(-0.40, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.38, 0.41),node5.pos,decoration:"arrow",angle:1.63rad)
cetz.draw.content((-0.26, 0.42),angle:1.63rad,[q+k[2]])
cetz.draw.hobby((-0.31, 0.09),(-0.32, 0.39),(-0.34, 0.70),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.18, 0.69),node5.pos,decoration:"coil",angle:-0.18rad)
cetz.draw.content((0.20, 0.81),angle:-0.18rad,[-p])
cetz.draw.hobby((0.65, 0.65),(0.18, 0.75),(-0.29, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.73, -1.04),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.62, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.68, -0.81),angle:2.92rad,[-k[0]])
cetz.draw.hobby((0.42, -0.81),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.15rad)
cetz.draw.content((0.98, 0.33),angle:-1.15rad,[q+k[2]])
cetz.draw.hobby((0.84, 0.50),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.62rad)
cetz.draw.content((-0.90, -0.23),angle:5.62rad,[q+k[2]])
cetz.draw.hobby((-0.96, -0.11),(-0.78, -0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((-0.75, 0.77),angle:2.77rad,[p-q-k[2]])
cetz.draw.hobby((-0.93, 0.91),(-0.53, 0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.19rad)
cetz.draw.content((0.77, 0.84),angle:4.19rad,[p-q-k[2]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding28i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, -0.80))
node(node0.pos)
let node1= (pos:(0.43, -0.80))
node(node1.pos)
let node2= (pos:(0.19, -0.00))
node(node2.pos)
let node3= (pos:(-0.20, -0.00))
node(node3.pos)
let node4= (pos:(-0.50, 0.80))
node(node4.pos)
let node5= (pos:(0.49, 0.79))
node(node5.pos)
edge(node1.pos,(-0.00, -0.86),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.98),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.88),(-0.00, -0.92),(-0.36, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.14, -0.43),node2.pos,decoration:"wave",angle:4.05rad)
cetz.draw.content((-0.24, -0.35),angle:4.05rad,[q])
cetz.draw.hobby((-0.42, -0.69),(-0.17, -0.37),(0.08, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, -0.43),node1.pos,decoration:"wave",angle:2.24rad)
cetz.draw.content((0.04, -0.50),angle:2.24rad,[q])
cetz.draw.hobby((-0.18, -0.12),(0.07, -0.44),(0.32, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, 0.14),node2.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.01, 0.26),angle:0.00rad,[k[2]])
cetz.draw.hobby((-0.23, 0.07),(-0.01, 0.20),(0.22, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.38, 0.40),node5.pos,decoration:"arrow",angle:1.21rad)
cetz.draw.content((0.49, 0.36),angle:1.21rad,[q+k[2]])
cetz.draw.hobby((0.28, 0.04),(0.43, 0.36),(0.53, 0.69),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.39, 0.40),node3.pos,decoration:"arrow",angle:5.07rad)
cetz.draw.content((-0.50, 0.36),angle:5.07rad,[q+k[2]])
cetz.draw.hobby((-0.54, 0.70),(-0.44, 0.36),(-0.29, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, 0.83),node4.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[-p+q+k[2]])
cetz.draw.hobby((0.40, 0.87),(-0.00, 0.89),(-0.41, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.68, -1.02),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.51, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.75, -0.79),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.54, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.89rad)
cetz.draw.content((-0.80, 0.79),angle:5.89rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.62, 0.78),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.39rad)
cetz.draw.content((0.70, 1.01),angle:0.39rad,[p])
cetz.draw.hobby((0.56, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding28f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.81))
node(node0.pos)
let node1= (pos:(-0.53, -0.85))
node(node1.pos)
let node2= (pos:(0.91, -0.08))
node(node2.pos)
let node3= (pos:(-0.78, -0.16))
node(node3.pos)
let node4= (pos:(-0.74, 0.71))
node(node4.pos)
let node5= (pos:(-0.07, 0.71))
node(node5.pos)
edge(node0.pos,(0.02, -0.85),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.72, -0.45),node2.pos,decoration:"wave",angle:4.28rad)
edge(node3.pos,(-0.64, -0.51),node1.pos,decoration:"wave",angle:1.92rad)
edge(node4.pos,(-0.76, 0.28),node3.pos,decoration:"arrow",angle:4.67rad)
edge(node5.pos,(-0.40, 0.74),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.73rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.46rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.91rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.36rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.38rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.43rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.27rad)
})
let embedding28f1=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.85))
node(node0.pos)
let node1= (pos:(-0.57, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.16))
node(node2.pos)
let node3= (pos:(-0.91, -0.08))
node(node3.pos)
let node4= (pos:(0.07, 0.71))
node(node4.pos)
let node5= (pos:(0.74, 0.71))
node(node5.pos)
edge(node0.pos,(-0.02, -0.85),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.64, -0.51),node2.pos,decoration:"wave",angle:4.36rad)
edge(node3.pos,(-0.72, -0.45),node1.pos,decoration:"wave",angle:2.01rad)
edge(node2.pos,(0.76, 0.28),node5.pos,decoration:"arrow",angle:1.61rad)
edge(node5.pos,(0.40, 0.74),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.91rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.46rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.38rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.92rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:6.02rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.85rad)
})
let embedding29i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, -0.85))
node(node0.pos)
let node1= (pos:(0.49, -0.87))
node(node1.pos)
let node2= (pos:(0.57, -0.18))
node(node2.pos)
let node3= (pos:(0.05, -0.12))
node(node3.pos)
let node4= (pos:(-0.70, 0.70))
node(node4.pos)
let node5= (pos:(0.47, 0.73))
node(node5.pos)
edge(node1.pos,(0.07, -0.93),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.06, -1.04),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.95),(0.07, -0.99),(-0.28, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.53),node2.pos,decoration:"wave",angle:3.77rad)
cetz.draw.content((0.01, -0.43),angle:3.77rad,[q])
cetz.draw.hobby((-0.29, -0.73),(0.07, -0.46),(0.44, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.50),node1.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.39, -0.44),angle:2.10rad,[q])
cetz.draw.hobby((0.15, -0.16),(0.33, -0.46),(0.50, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.29),node5.pos,decoration:"arrow",angle:1.68rad)
cetz.draw.content((0.66, 0.30),angle:1.68rad,[-p+q+k[3]])
cetz.draw.hobby((0.63, -0.09),(0.60, 0.28),(0.55, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.12, 0.74),node5.pos,decoration:"coil",angle:3.16rad)
cetz.draw.content((-0.12, 0.86),angle:3.16rad,[k[3]])
cetz.draw.hobby((-0.59, 0.78),(-0.11, 0.80),(0.36, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.64, -1.04),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.43, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.78, -0.82),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.61, -0.84),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.94rad)
cetz.draw.content((-0.45, -0.34),angle:-2.94rad,[p-k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.03, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.80rad)
cetz.draw.content((0.82, -0.14),angle:2.80rad,[p-k[3]])
cetz.draw.hobby((0.68, -0.16),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.25rad)
cetz.draw.content((-0.76, 0.44),angle:-2.25rad,[p-q-k[3]])
cetz.draw.hobby((-0.89, 0.37),(-0.72, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.59rad)
cetz.draw.content((0.47, 0.22),angle:3.59rad,[p-q-k[3]])
cetz.draw.hobby((0.12, -0.02),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.68, 0.97),angle:0.48rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.54, 0.83),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((-0.93, 0.77),angle:5.50rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.81, 0.73),stroke:stroke,mark: (end: ">"))
})
let embedding29i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.87))
node(node0.pos)
let node1= (pos:(0.34, -0.85))
node(node1.pos)
let node2= (pos:(-0.05, -0.12))
node(node2.pos)
let node3= (pos:(-0.57, -0.18))
node(node3.pos)
let node4= (pos:(-0.47, 0.73))
node(node4.pos)
let node5= (pos:(0.70, 0.70))
node(node5.pos)
edge(node1.pos,(-0.07, -0.92),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.06, -1.04),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.28, -0.93),(-0.07, -0.99),(-0.43, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.50),node2.pos,decoration:"wave",angle:4.18rad)
cetz.draw.content((-0.38, -0.44),angle:4.18rad,[q])
cetz.draw.hobby((-0.50, -0.76),(-0.33, -0.46),(-0.15, -0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.08, -0.53),node1.pos,decoration:"wave",angle:2.51rad)
cetz.draw.content((-0.01, -0.43),angle:2.51rad,[q])
cetz.draw.hobby((-0.44, -0.20),(-0.07, -0.46),(0.29, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.28),node3.pos,decoration:"arrow",angle:4.61rad)
cetz.draw.content((-0.66, 0.30),angle:4.61rad,[-p+q+k[3]])
cetz.draw.hobby((-0.55, 0.65),(-0.60, 0.28),(-0.63, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.12, 0.74),node5.pos,decoration:"coil",angle:3.12rad)
cetz.draw.content((0.12, 0.86),angle:3.12rad,[k[3]])
cetz.draw.hobby((-0.36, 0.79),(0.11, 0.80),(0.59, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.72, -1.05),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.58, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.70, -0.81),angle:2.92rad,[-k[0]])
cetz.draw.hobby((0.45, -0.81),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.75, -0.37),angle:-2.81rad,[p-k[3]])
cetz.draw.hobby((-0.89, -0.36),(-0.64, -0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.94rad)
cetz.draw.content((0.50, -0.11),angle:2.94rad,[p-k[3]])
cetz.draw.hobby((0.06, -0.08),(0.91, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.70rad)
cetz.draw.content((-0.58, -0.00),angle:2.70rad,[p-q-k[3]])
cetz.draw.hobby((-0.94, 0.24),(-0.17, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.25rad)
cetz.draw.content((0.94, 0.59),angle:2.25rad,[p-q-k[3]])
cetz.draw.hobby((0.81, 0.66),(0.98, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((0.77, 0.94),angle:0.78rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.73, 0.82),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.79, 0.76),angle:5.80rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.59, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding29i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.78))
node(node0.pos)
let node1= (pos:(0.41, -0.80))
node(node1.pos)
let node2= (pos:(0.34, 0.01))
node(node2.pos)
let node3= (pos:(-0.34, -0.01))
node(node3.pos)
let node4= (pos:(0.41, 0.79))
node(node4.pos)
let node5= (pos:(-0.41, 0.79))
node(node5.pos)
edge(node1.pos,(0.00, -0.85),node0.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.00, -0.97),angle:3.13rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.88),(-0.00, -0.91),(-0.35, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.07, -0.39),node2.pos,decoration:"wave",angle:3.96rad)
cetz.draw.content((-0.16, -0.30),angle:3.96rad,[q])
cetz.draw.hobby((-0.39, -0.66),(-0.10, -0.33),(0.22, -0.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.07, -0.41),node1.pos,decoration:"wave",angle:2.33rad)
cetz.draw.content((0.16, -0.33),angle:2.33rad,[q])
cetz.draw.hobby((-0.22, -0.04),(0.09, -0.35),(0.39, -0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.07, 0.41),node5.pos,decoration:"arrow",angle:2.33rad)
cetz.draw.content((-0.16, 0.33),angle:2.33rad,[-p+q+k[3]])
cetz.draw.hobby((0.22, 0.04),(-0.09, 0.35),(-0.39, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.07, 0.39),node3.pos,decoration:"arrow",angle:-2.33rad)
cetz.draw.content((0.15, 0.30),angle:-2.33rad,[-p+q+k[3]])
cetz.draw.hobby((0.39, 0.66),(0.10, 0.33),(-0.22, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.85),node4.pos,decoration:"arrow",angle:-0.01rad)
cetz.draw.content((0.00, 0.97),angle:-0.01rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.34, 0.87),(0.00, 0.91),(0.35, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.79rad)
cetz.draw.content((-0.66, -1.00),angle:-2.79rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.48, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.75, -0.78),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.53, -0.77),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.67, -0.12),angle:3.13rad,[p-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.44, -0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.13rad)
cetz.draw.content((0.67, 0.12),angle:3.13rad,[p-k[3]])
cetz.draw.hobby((0.44, 0.07),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.49rad)
cetz.draw.content((0.67, 1.01),angle:3.49rad,[k[3]])
cetz.draw.hobby((0.49, 0.88),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.81rad)
cetz.draw.content((-0.75, 0.78),angle:2.81rad,[k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.53, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding30i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.28, -0.46))
node(node0.pos)
let node1= (pos:(0.29, -0.46))
node(node1.pos)
let node2= (pos:(0.48, 0.43))
node(node2.pos)
let node3= (pos:(-0.47, 0.44))
node(node3.pos)
let node4= (pos:(-0.18, 0.85))
node(node4.pos)
let node5= (pos:(0.22, 0.86))
node(node5.pos)
edge(node1.pos,(0.00, -0.49),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -0.61),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.24, -0.53),(0.00, -0.55),(-0.24, -0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.02),node2.pos,decoration:"wave",angle:-2.28rad)
cetz.draw.content((0.20, -0.09),angle:-2.28rad,[q])
cetz.draw.hobby((-0.16, -0.42),(0.15, -0.06),(0.45, 0.30),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.10, -0.01),node1.pos,decoration:"wave",angle:2.27rad)
cetz.draw.content((-0.19, -0.09),angle:2.27rad,[q])
cetz.draw.hobby((-0.44, 0.31),(-0.14, -0.05),(0.16, -0.41),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.39, 0.65),node5.pos,decoration:"arrow",angle:2.10rad)
cetz.draw.content((0.50, 0.72),angle:2.10rad,[-p+q])
cetz.draw.hobby((0.53, 0.49),(0.44, 0.69),(0.30, 0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.66),node3.pos,decoration:"arrow",angle:4.11rad)
cetz.draw.content((-0.46, 0.73),angle:4.11rad,[-p+q])
cetz.draw.hobby((-0.26, 0.86),(-0.40, 0.70),(-0.51, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.02, 1.00),node5.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.03, 1.12),angle:3.14rad,[k[3]])
cetz.draw.hobby((-0.20, 0.93),(0.02, 1.06),(0.25, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.02, 0.76),node4.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.02, 0.64),angle:-3.14rad,[-p+q+k[3]])
cetz.draw.hobby((0.23, 0.78),(0.02, 0.70),(-0.18, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.81, -0.81),decoration:"arrow",angle:-2.56rad)
cetz.draw.content((-0.48, -0.74),angle:-2.56rad,[-k[0]])
cetz.draw.hobby((-0.69, -0.81),(-0.33, -0.57),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.81, -0.81),decoration:"arrow",angle:2.55rad)
cetz.draw.content((0.62, -0.54),angle:2.55rad,[-k[0]])
cetz.draw.hobby((0.40, -0.46),(0.76, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.81, 0.81),decoration:"arrow",angle:2.31rad)
cetz.draw.content((-0.73, 0.54),angle:2.31rad,[p])
cetz.draw.hobby((-0.79, 0.70),(-0.58, 0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.81, 0.81),decoration:"arrow",angle:4.01rad)
cetz.draw.content((0.56, 0.70),angle:4.01rad,[p])
cetz.draw.hobby((0.50, 0.54),(0.70, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding31i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.85))
node(node0.pos)
let node1= (pos:(0.30, -0.82))
node(node1.pos)
let node2= (pos:(0.38, -0.18))
node(node2.pos)
let node3= (pos:(-0.74, -0.12))
node(node3.pos)
let node4= (pos:(0.75, 0.71))
node(node4.pos)
let node5= (pos:(-0.27, 0.71))
node(node5.pos)
edge(node1.pos,(-0.05, -0.90),node0.pos,decoration:"arrow",angle:-3.10rad)
cetz.draw.content((-0.05, -1.02),angle:-3.10rad,[q+k[0]])
cetz.draw.hobby((0.25, -0.91),(-0.05, -0.96),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.02, -0.50),node2.pos,decoration:"wave",angle:3.84rad)
cetz.draw.content((-0.09, -0.40),angle:3.84rad,[q])
cetz.draw.hobby((-0.38, -0.73),(-0.07, -0.46),(0.26, -0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.23, -0.45),node1.pos,decoration:"wave",angle:2.55rad)
cetz.draw.content((-0.17, -0.35),angle:2.55rad,[q])
cetz.draw.hobby((-0.60, -0.14),(-0.18, -0.41),(0.24, -0.70),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.05, 0.27),node5.pos,decoration:"arrow",angle:2.20rad)
cetz.draw.content((0.15, 0.34),angle:2.20rad,[-p+q-k[3]])
cetz.draw.hobby((0.36, -0.05),(0.10, 0.30),(-0.15, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.24, 0.74),node5.pos,decoration:"coil",angle:-0.00rad)
cetz.draw.content((0.24, 0.86),angle:-0.00rad,[k[3]])
cetz.draw.hobby((0.65, 0.78),(0.24, 0.80),(-0.17, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.68, -1.04),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.50, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.68, -0.80),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.41, -0.79),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.46rad)
cetz.draw.content((-0.79, -0.32),angle:-2.46rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.78, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.90rad)
cetz.draw.content((0.72, -0.14),angle:2.90rad,[p+k[3]])
cetz.draw.hobby((0.49, -0.14),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.98rad)
cetz.draw.content((0.97, 0.59),angle:-0.98rad,[-p+q-k[3]])
cetz.draw.hobby((0.86, 0.66),(0.99, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.23rad)
cetz.draw.content((-0.97, 0.05),angle:5.23rad,[-p+q-k[3]])
cetz.draw.hobby((-1.00, 0.22),(-0.84, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((-0.68, 0.74),angle:2.76rad,[p-q])
cetz.draw.hobby((-0.93, 0.91),(-0.38, 0.69),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.01rad)
cetz.draw.content((0.78, 0.93),angle:4.01rad,[p-q])
cetz.draw.hobby((0.77, 0.82),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding31i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.82))
node(node0.pos)
let node1= (pos:(0.42, -0.85))
node(node1.pos)
let node2= (pos:(0.74, -0.12))
node(node2.pos)
let node3= (pos:(-0.38, -0.18))
node(node3.pos)
let node4= (pos:(0.27, 0.71))
node(node4.pos)
let node5= (pos:(-0.75, 0.71))
node(node5.pos)
edge(node1.pos,(0.06, -0.90),node0.pos,decoration:"arrow",angle:3.10rad)
cetz.draw.content((0.05, -1.02),angle:3.10rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(0.05, -0.96),(-0.25, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.45),node2.pos,decoration:"wave",angle:3.73rad)
cetz.draw.content((0.16, -0.35),angle:3.73rad,[q])
cetz.draw.hobby((-0.24, -0.70),(0.18, -0.41),(0.60, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.02, -0.50),node1.pos,decoration:"wave",angle:2.44rad)
cetz.draw.content((0.09, -0.40),angle:2.44rad,[q])
cetz.draw.hobby((-0.26, -0.20),(0.07, -0.46),(0.38, -0.74),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.05, 0.27),node3.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.15, 0.34),angle:4.08rad,[-p+q-k[3]])
cetz.draw.hobby((0.15, 0.65),(-0.11, 0.30),(-0.36, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.24, 0.74),node5.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((-0.24, 0.86),angle:0.00rad,[k[3]])
cetz.draw.hobby((0.17, 0.78),(-0.24, 0.80),(-0.65, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.62, -1.03),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.39, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.74, -0.81),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.53, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((-0.66, -0.37),angle:-2.90rad,[p+k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.46, -0.26),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.46rad)
cetz.draw.content((0.95, -0.13),angle:2.46rad,[p+k[3]])
cetz.draw.hobby((0.86, -0.14),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.77, 0.17),angle:1.05rad,[-p+q-k[3]])
cetz.draw.hobby((0.74, -0.00),(0.90, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.98rad)
cetz.draw.content((-0.78, 0.45),angle:0.98rad,[-p+q-k[3]])
cetz.draw.hobby((-0.89, 0.38),(-0.76, 0.59),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.28rad)
cetz.draw.content((-0.97, 0.78),angle:2.28rad,[p-q])
cetz.draw.hobby((-0.98, 0.88),(-0.86, 0.74),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((0.59, 0.96),angle:3.52rad,[p-q])
cetz.draw.hobby((0.34, 0.80),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding31i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.36, -0.78))
node(node0.pos)
let node1= (pos:(0.36, -0.78))
node(node1.pos)
let node2= (pos:(0.57, -0.02))
node(node2.pos)
let node3= (pos:(-0.57, -0.02))
node(node3.pos)
let node4= (pos:(-0.53, 0.79))
node(node4.pos)
let node5= (pos:(0.53, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.84),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.96),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.86),(-0.00, -0.90),(-0.31, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.38),node2.pos,decoration:"wave",angle:3.83rad)
cetz.draw.content((0.04, -0.29),angle:3.83rad,[q])
cetz.draw.hobby((-0.31, -0.66),(0.06, -0.35),(0.44, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, -0.38),node1.pos,decoration:"wave",angle:2.46rad)
cetz.draw.content((-0.04, -0.29),angle:2.46rad,[q])
cetz.draw.hobby((-0.44, -0.05),(-0.06, -0.35),(0.31, -0.66),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.56, 0.39),node5.pos,decoration:"arrow",angle:1.62rad)
cetz.draw.content((0.68, 0.40),angle:1.62rad,[-p+q-k[3]])
cetz.draw.hobby((0.63, 0.06),(0.62, 0.39),(0.60, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.56, 0.39),node3.pos,decoration:"arrow",angle:4.67rad)
cetz.draw.content((-0.68, 0.39),angle:4.67rad,[-p+q-k[3]])
cetz.draw.hobby((-0.60, 0.71),(-0.63, 0.39),(-0.63, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.81),node4.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.93),angle:3.14rad,[-p+q])
cetz.draw.hobby((0.43, 0.85),(-0.00, 0.87),(-0.43, 0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.64, -1.00),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.43, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.72, -0.78),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.47, -0.76),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.10rad)
cetz.draw.content((-0.79, -0.13),angle:3.10rad,[p+k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.67, -0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.19rad)
cetz.draw.content((0.78, 0.11),angle:3.19rad,[p+k[3]])
cetz.draw.hobby((0.66, 0.05),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.85rad)
cetz.draw.content((-0.82, 0.78),angle:5.85rad,[-k[3]])
cetz.draw.hobby((-0.93, 0.90),(-0.65, 0.77),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.43rad)
cetz.draw.content((0.72, 1.00),angle:0.43rad,[-k[3]])
cetz.draw.hobby((0.60, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding32f0=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.78))
node(node0.pos)
let node1= (pos:(-0.36, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, -0.02))
node(node2.pos)
let node3= (pos:(0.57, -0.02))
node(node3.pos)
let node4= (pos:(0.53, 0.78))
node(node4.pos)
let node5= (pos:(-0.53, 0.78))
node(node5.pos)
edge(node0.pos,(-0.00, -0.84),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(-0.11, -0.38),node2.pos,decoration:"wave",angle:-0.69rad)
edge(node3.pos,(0.11, -0.38),node1.pos,decoration:"wave",angle:0.69rad)
edge(node2.pos,(-0.56, 0.39),node5.pos,decoration:"arrow",angle:1.52rad)
edge(node4.pos,(0.56, 0.39),node3.pos,decoration:"arrow",angle:-1.53rad)
edge(node5.pos,(0.00, 0.81),node4.pos,decoration:"arrow",angle:0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.04rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.24rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.58rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.71rad)
})
let embedding32f1=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.85))
node(node0.pos)
let node1= (pos:(-0.30, -0.82))
node(node1.pos)
let node2= (pos:(-0.38, -0.18))
node(node2.pos)
let node3= (pos:(0.74, -0.12))
node(node3.pos)
let node4= (pos:(-0.75, 0.71))
node(node4.pos)
let node5= (pos:(0.27, 0.71))
node(node5.pos)
edge(node0.pos,(0.05, -0.91),node1.pos,decoration:"arrow",angle:3.10rad)
edge(node0.pos,(0.02, -0.50),node2.pos,decoration:"wave",angle:-0.70rad)
edge(node3.pos,(0.23, -0.45),node1.pos,decoration:"wave",angle:0.59rad)
edge(node2.pos,(-0.05, 0.27),node5.pos,decoration:"arrow",angle:0.94rad)
edge(node4.pos,(-0.24, 0.74),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.68rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.24rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.16rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.19rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.38rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.42rad)
})
let embedding32f2=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.82))
node(node0.pos)
let node1= (pos:(-0.42, -0.85))
node(node1.pos)
let node2= (pos:(-0.74, -0.12))
node(node2.pos)
let node3= (pos:(0.38, -0.18))
node(node3.pos)
let node4= (pos:(-0.27, 0.70))
node(node4.pos)
let node5= (pos:(0.75, 0.71))
node(node5.pos)
edge(node0.pos,(-0.05, -0.91),node1.pos,decoration:"arrow",angle:-3.10rad)
edge(node0.pos,(-0.23, -0.45),node2.pos,decoration:"wave",angle:-0.59rad)
edge(node3.pos,(-0.02, -0.50),node1.pos,decoration:"wave",angle:0.70rad)
edge(node4.pos,(0.05, 0.27),node3.pos,decoration:"arrow",angle:5.34rad)
edge(node4.pos,(0.24, 0.74),node5.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.24rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.09rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.16rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.86rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.90rad)
})
let embedding33f0=cetz.canvas(length:50%,{
let node0= (pos:(0.29, -0.46))
node(node0.pos)
let node1= (pos:(-0.29, -0.46))
node(node1.pos)
let node2= (pos:(-0.47, 0.43))
node(node2.pos)
let node3= (pos:(0.48, 0.43))
node(node3.pos)
let node4= (pos:(0.23, 0.86))
node(node4.pos)
let node5= (pos:(-0.18, 0.86))
node(node5.pos)
edge(node0.pos,(0.00, -0.50),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(-0.10, -0.01),node2.pos,decoration:"wave",angle:5.41rad)
edge(node3.pos,(0.11, -0.01),node1.pos,decoration:"wave",angle:0.86rad)
edge(node2.pos,(-0.36, 0.66),node5.pos,decoration:"arrow",angle:0.98rad)
edge(node4.pos,(0.39, 0.65),node3.pos,decoration:"arrow",angle:-1.04rad)
edge(node4.pos,(0.02, 0.76),node5.pos,decoration:"coil",angle:0.00rad)
edge(node5.pos,(0.02, 1.00),node4.pos,decoration:"arrow",angle:-0.00rad)
edge(node1.pos,(-0.81, -0.81),decoration:"arrow",angle:-2.55rad)
edge(node0.pos,(0.81, -0.81),decoration:"arrow",angle:2.55rad)
edge(node3.pos,(0.81, 0.81),decoration:"arrow",angle:0.86rad)
edge(node2.pos,(-0.81, 0.81),decoration:"arrow",angle:5.44rad)
})
let embedding34f0=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.41, -0.79))
node(node1.pos)
let node2= (pos:(-0.34, 0.00))
node(node2.pos)
let node3= (pos:(0.34, -0.00))
node(node3.pos)
let node4= (pos:(-0.41, 0.79))
node(node4.pos)
let node5= (pos:(0.41, 0.79))
node(node5.pos)
edge(node0.pos,(-0.00, -0.85),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.07, -0.40),node2.pos,decoration:"wave",angle:-0.82rad)
edge(node3.pos,(-0.08, -0.41),node1.pos,decoration:"wave",angle:0.81rad)
edge(node2.pos,(0.08, 0.40),node5.pos,decoration:"arrow",angle:0.82rad)
edge(node4.pos,(-0.07, 0.40),node3.pos,decoration:"arrow",angle:5.46rad)
edge(node5.pos,(-0.00, 0.85),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.80rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.01rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.00rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.94rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.34rad)
})
let embedding34f1=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.85))
node(node0.pos)
let node1= (pos:(-0.50, -0.87))
node(node1.pos)
let node2= (pos:(-0.57, -0.18))
node(node2.pos)
let node3= (pos:(-0.05, -0.12))
node(node3.pos)
let node4= (pos:(0.70, 0.70))
node(node4.pos)
let node5= (pos:(-0.48, 0.73))
node(node5.pos)
edge(node0.pos,(-0.07, -0.92),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(-0.08, -0.53),node2.pos,decoration:"wave",angle:-0.63rad)
edge(node3.pos,(-0.28, -0.50),node1.pos,decoration:"wave",angle:1.04rad)
edge(node2.pos,(-0.54, 0.29),node5.pos,decoration:"arrow",angle:1.46rad)
edge(node4.pos,(0.12, 0.74),node5.pos,decoration:"coil",angle:-0.02rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.20rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.34rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.89rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.84rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.92rad)
})
let embedding34f2=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.87))
node(node0.pos)
let node1= (pos:(-0.34, -0.85))
node(node1.pos)
let node2= (pos:(0.05, -0.12))
node(node2.pos)
let node3= (pos:(0.57, -0.19))
node(node3.pos)
let node4= (pos:(0.48, 0.72))
node(node4.pos)
let node5= (pos:(-0.70, 0.70))
node(node5.pos)
edge(node0.pos,(0.07, -0.93),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.28, -0.50),node2.pos,decoration:"wave",angle:-1.04rad)
edge(node3.pos,(0.08, -0.53),node1.pos,decoration:"wave",angle:0.63rad)
edge(node4.pos,(0.54, 0.28),node3.pos,decoration:"arrow",angle:-1.46rad)
edge(node4.pos,(-0.12, 0.74),node5.pos,decoration:"coil",angle:0.02rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.33rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.20rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.45rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.89rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.36rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.63rad)
})
let embedding35i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.81))
node(node0.pos)
let node1= (pos:(0.53, -0.85))
node(node1.pos)
let node2= (pos:(-0.91, -0.08))
node(node2.pos)
let node3= (pos:(0.78, -0.16))
node(node3.pos)
let node4= (pos:(0.74, 0.71))
node(node4.pos)
let node5= (pos:(0.07, 0.71))
node(node5.pos)
edge(node1.pos,(-0.02, -0.85),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((-0.03, -0.97),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.91),(-0.02, -0.91),(-0.46, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.45),node2.pos,decoration:"wave",angle:-1.13rad)
cetz.draw.content((-0.61, -0.40),angle:-1.13rad,[q])
cetz.draw.hobby((-0.54, -0.71),(-0.67, -0.41),(-0.82, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.51),node1.pos,decoration:"wave",angle:1.22rad)
cetz.draw.content((0.53, -0.47),angle:1.22rad,[q])
cetz.draw.hobby((0.70, -0.20),(0.59, -0.48),(0.49, -0.76),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.28),node3.pos,decoration:"arrow",angle:-1.53rad)
cetz.draw.content((0.89, 0.28),angle:-1.53rad,[q+k[2]])
cetz.draw.hobby((0.81, 0.63),(0.83, 0.28),(0.84, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.40, 0.74),node4.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.40, 0.86),angle:0.00rad,[p+2 q+k[2]])
cetz.draw.hobby((0.12, 0.78),(0.41, 0.80),(0.69, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.74, -1.02),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.64, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.80, -0.81),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.64, -0.82),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((0.97, -0.15),angle:-0.68rad,[k[2]])
cetz.draw.hobby((0.90, -0.17),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.23rad)
cetz.draw.content((-0.84, -0.25),angle:1.23rad,[k[2]])
cetz.draw.hobby((-0.91, -0.26),(-0.89, -0.19),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:1.78rad)
cetz.draw.content((-1.07, 0.10),angle:1.78rad,[-q-k[2]])
cetz.draw.hobby((-1.04, 0.22),(-0.99, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.58, 0.63),angle:2.76rad,[-q-k[2]])
cetz.draw.hobby((0.18, 0.73),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.99rad)
cetz.draw.content((0.78, 0.93),angle:3.99rad,[p+q])
cetz.draw.hobby((0.77, 0.82),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.88rad)
cetz.draw.content((-0.50, 0.74),angle:2.88rad,[p+q])
cetz.draw.hobby((-0.92, 0.92),(-0.05, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding35i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.85))
node(node0.pos)
let node1= (pos:(0.57, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.16))
node(node2.pos)
let node3= (pos:(0.91, -0.08))
node(node3.pos)
let node4= (pos:(-0.07, 0.71))
node(node4.pos)
let node5= (pos:(-0.75, 0.71))
node(node5.pos)
edge(node1.pos,(0.02, -0.85),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((0.03, -0.97),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.88),(0.02, -0.91),(-0.42, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.51),node2.pos,decoration:"wave",angle:-1.22rad)
cetz.draw.content((-0.53, -0.47),angle:-1.22rad,[q])
cetz.draw.hobby((-0.49, -0.76),(-0.59, -0.48),(-0.70, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.45),node1.pos,decoration:"wave",angle:1.13rad)
cetz.draw.content((0.61, -0.40),angle:1.13rad,[q])
cetz.draw.hobby((0.82, -0.12),(0.67, -0.41),(0.54, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.77, 0.28),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.89, 0.28),angle:1.53rad,[q+k[2]])
cetz.draw.hobby((-0.84, -0.07),(-0.83, 0.28),(-0.81, 0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.40, 0.74),node4.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((-0.40, 0.86),angle:-0.00rad,[p+2 q+k[2]])
cetz.draw.hobby((-0.69, 0.78),(-0.41, 0.80),(-0.13, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.73, -1.04),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.60, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.73rad)
cetz.draw.content((0.83, -0.80),angle:2.73rad,[-k[0]])
cetz.draw.hobby((0.68, -0.80),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.24rad)
cetz.draw.content((1.07, -0.17),angle:-1.24rad,[k[2]])
cetz.draw.hobby((1.00, -0.15),(1.02, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.81, -0.34),angle:0.68rad,[k[2]])
cetz.draw.hobby((-0.88, -0.32),(-0.82, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.76rad)
cetz.draw.content((-0.49, 0.41),angle:-2.76rad,[-q-k[2]])
cetz.draw.hobby((-0.88, 0.32),(-0.14, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.50rad)
cetz.draw.content((0.84, 0.15),angle:4.50rad,[-q-k[2]])
cetz.draw.hobby((0.87, 0.03),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.41rad)
cetz.draw.content((0.44, 0.97),angle:3.41rad,[p+q])
cetz.draw.hobby((0.01, 0.80),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.29rad)
cetz.draw.content((-0.96, 0.78),angle:2.29rad,[p+q])
cetz.draw.hobby((-0.98, 0.89),(-0.86, 0.74),stroke:stroke,mark: (end: ">"))
})
let embedding35f0=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.84))
node(node0.pos)
let node1= (pos:(-0.54, -0.86))
node(node1.pos)
let node2= (pos:(-0.66, -0.26))
node(node2.pos)
let node3= (pos:(-0.37, 0.01))
node(node3.pos)
let node4= (pos:(-0.41, 0.77))
node(node4.pos)
let node5= (pos:(0.75, 0.57))
node(node5.pos)
edge(node0.pos,(-0.10, -0.91),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node0.pos,(-0.14, -0.54),node2.pos,decoration:"wave",angle:-0.54rad)
edge(node3.pos,(-0.41, -0.46),node1.pos,decoration:"wave",angle:1.37rad)
edge(node3.pos,(-0.62, -0.02),node2.pos,decoration:"arrow",angle:3.90rad)
edge(node4.pos,(-0.39, 0.41),node3.pos,decoration:"arrow",angle:-1.52rad)
edge(node4.pos,(0.18, 0.69),node5.pos,decoration:"coil",angle:2.97rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.48rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.99rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.04rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
})
let embedding35f1=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.76))
node(node0.pos)
let node1= (pos:(-0.48, -0.83))
node(node1.pos)
let node2= (pos:(0.02, 0.12))
node(node2.pos)
let node3= (pos:(-0.07, -0.13))
node(node3.pos)
let node4= (pos:(0.47, 0.77))
node(node4.pos)
let node5= (pos:(-0.46, 0.83))
node(node5.pos)
edge(node0.pos,(0.01, -0.85),node1.pos,decoration:"arrow",angle:-3.07rad)
edge(node0.pos,(0.30, -0.33),node2.pos,decoration:"wave",angle:-1.10rad)
edge(node3.pos,(-0.30, -0.49),node1.pos,decoration:"wave",angle:1.05rad)
edge(node3.pos,(-0.23, 0.05),node2.pos,decoration:"arrow",angle:1.32rad)
edge(node2.pos,(-0.24, 0.49),node5.pos,decoration:"arrow",angle:2.16rad)
edge(node4.pos,(0.26, 0.35),node3.pos,decoration:"arrow",angle:-2.10rad)
edge(node5.pos,(0.01, 0.86),node4.pos,decoration:"arrow",angle:-0.07rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.55rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.84rad)
})
let embedding35f2=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.86))
node(node0.pos)
let node1= (pos:(-0.32, -0.84))
node(node1.pos)
let node2= (pos:(0.37, 0.01))
node(node2.pos)
let node3= (pos:(0.66, -0.27))
node(node3.pos)
let node4= (pos:(-0.74, 0.57))
node(node4.pos)
let node5= (pos:(0.41, 0.77))
node(node5.pos)
edge(node0.pos,(0.10, -0.91),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(0.41, -0.46),node2.pos,decoration:"wave",angle:4.92rad)
edge(node3.pos,(0.14, -0.55),node1.pos,decoration:"wave",angle:0.54rad)
edge(node3.pos,(0.62, -0.02),node2.pos,decoration:"arrow",angle:2.39rad)
edge(node2.pos,(0.39, 0.41),node5.pos,decoration:"arrow",angle:1.51rad)
edge(node4.pos,(-0.18, 0.69),node5.pos,decoration:"coil",angle:3.32rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.00rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.81rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.37rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.24rad)
})
let embedding36i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.83))
node(node0.pos)
let node1= (pos:(0.61, -0.67))
node(node1.pos)
let node2= (pos:(-0.77, -0.18))
node(node2.pos)
let node3= (pos:(0.93, 0.33))
node(node3.pos)
let node4= (pos:(-0.76, 0.93))
node(node4.pos)
let node5= (pos:(-0.66, 0.47))
node(node5.pos)
edge(node1.pos,(0.06, -0.76),node0.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((0.07, -0.88),angle:-3.00rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.75),(0.06, -0.82),(-0.39, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.52),node2.pos,decoration:"wave",angle:5.10rad)
cetz.draw.content((-0.76, -0.56),angle:5.10rad,[q])
cetz.draw.hobby((-0.60, -0.79),(-0.71, -0.53),(-0.81, -0.27),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.76, -0.18),node1.pos,decoration:"wave",angle:1.26rad)
cetz.draw.content((0.64, -0.14),angle:1.26rad,[q])
cetz.draw.hobby((0.84, 0.25),(0.71, -0.15),(0.58, -0.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.68, 0.14),node5.pos,decoration:"arrow",angle:1.40rad)
cetz.draw.content((-0.57, 0.12),angle:1.40rad,[q+k[2]])
cetz.draw.hobby((-0.69, -0.14),(-0.63, 0.13),(-0.60, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.75),node5.pos,decoration:"coil",angle:1.84rad)
cetz.draw.content((-0.44, 0.78),angle:1.84rad,[k[3]])
cetz.draw.hobby((-0.68, 0.97),(-0.49, 0.75),(-0.57, 0.47),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.86, 0.66),node4.pos,decoration:"arrow",angle:1.80rad)
cetz.draw.content((-0.98, 0.64),angle:1.80rad,[q+k[2]+k[3]])
cetz.draw.hobby((-0.74, 0.43),(-0.92, 0.65),(-0.85, 0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
cetz.draw.content((-0.72, -1.03),angle:-2.80rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.59, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.44rad)
cetz.draw.content((0.88, -0.74),angle:2.44rad,[-k[0]])
cetz.draw.hobby((0.73, -0.69),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-1.37rad)
cetz.draw.content((1.08, 0.19),angle:-1.37rad,[k[2]])
cetz.draw.hobby((1.01, 0.25),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.60rad)
cetz.draw.content((-0.96, -0.18),angle:5.60rad,[k[2]])
cetz.draw.hobby((-0.96, -0.11),(-0.89, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((-0.92, 0.85),angle:2.84rad,[-q-k[2]])
cetz.draw.hobby((-0.92, 0.91),(-0.88, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.85, 0.68),angle:4.61rad,[-q-k[2]])
cetz.draw.hobby((0.88, 0.44),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding36i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.87))
node(node0.pos)
let node1= (pos:(0.54, -0.87))
node(node1.pos)
let node2= (pos:(-0.78, -0.19))
node(node2.pos)
let node3= (pos:(0.78, -0.19))
node(node3.pos)
let node4= (pos:(0.94, 0.60))
node(node4.pos)
let node5= (pos:(-0.94, 0.60))
node(node5.pos)
edge(node1.pos,(-0.00, -0.89),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -1.01),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.94),(-0.00, -0.95),(-0.43, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.54),node2.pos,decoration:"wave",angle:-1.23rad)
cetz.draw.content((-0.54, -0.49),angle:-1.23rad,[q])
cetz.draw.hobby((-0.50, -0.78),(-0.60, -0.51),(-0.70, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.53),node1.pos,decoration:"wave",angle:1.23rad)
cetz.draw.content((0.54, -0.49),angle:1.23rad,[q])
cetz.draw.hobby((0.70, -0.23),(0.60, -0.51),(0.50, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.81, 0.20),node5.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.70, 0.22),angle:1.76rad,[q+k[2]])
cetz.draw.hobby((-0.72, -0.11),(-0.76, 0.23),(-0.85, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.81, 0.20),node3.pos,decoration:"arrow",angle:4.52rad)
cetz.draw.content((0.70, 0.22),angle:4.52rad,[q+k[2]])
cetz.draw.hobby((0.85, 0.54),(0.76, 0.23),(0.72, -0.11),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.74, -1.05),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.62, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.80, -0.82),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.65, -0.84),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.59rad)
cetz.draw.content((0.96, -0.16),angle:-0.59rad,[k[2]])
cetz.draw.hobby((0.90, -0.19),(0.95, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.59rad)
cetz.draw.content((-0.82, -0.36),angle:0.59rad,[k[2]])
cetz.draw.hobby((-0.88, -0.33),(-0.83, -0.29),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:1.80rad)
cetz.draw.content((1.09, 0.49),angle:1.80rad,[k[3]])
cetz.draw.hobby((1.02, 0.51),(1.04, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-1.80rad)
cetz.draw.content((-0.85, 0.44),angle:-1.80rad,[k[3]])
cetz.draw.hobby((-0.92, 0.42),(-0.90, 0.49),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.72rad)
cetz.draw.content((-1.09, 0.78),angle:1.72rad,[-q-k[2]-k[3]])
cetz.draw.hobby((-1.04, 0.89),(-1.01, 0.69),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.56rad)
cetz.draw.content((0.85, 0.82),angle:4.56rad,[-q-k[2]-k[3]])
cetz.draw.hobby((0.89, 0.70),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding36i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.67))
node(node0.pos)
let node1= (pos:(0.51, -0.82))
node(node1.pos)
let node2= (pos:(-0.93, 0.33))
node(node2.pos)
let node3= (pos:(0.77, -0.17))
node(node3.pos)
let node4= (pos:(0.65, 0.49))
node(node4.pos)
let node5= (pos:(0.76, 0.95))
node(node5.pos)
edge(node1.pos,(-0.06, -0.76),node0.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((-0.07, -0.88),angle:3.01rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.87),(-0.06, -0.82),(-0.51, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.76, -0.18),node2.pos,decoration:"wave",angle:-1.26rad)
cetz.draw.content((-0.64, -0.14),angle:-1.26rad,[q])
cetz.draw.hobby((-0.58, -0.55),(-0.70, -0.15),(-0.84, 0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.51),node1.pos,decoration:"wave",angle:1.20rad)
cetz.draw.content((0.76, -0.55),angle:1.20rad,[q])
cetz.draw.hobby((0.80, -0.25),(0.70, -0.52),(0.60, -0.78),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.68, 0.16),node3.pos,decoration:"arrow",angle:4.89rad)
cetz.draw.content((0.56, 0.14),angle:4.89rad,[q+k[2]])
cetz.draw.hobby((0.59, 0.42),(0.62, 0.14),(0.69, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.85, 0.68),node5.pos,decoration:"coil",angle:-1.80rad)
cetz.draw.content((0.97, 0.65),angle:-1.80rad,[k[3]])
cetz.draw.hobby((0.73, 0.45),(0.91, 0.67),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.76),node4.pos,decoration:"arrow",angle:4.44rad)
cetz.draw.content((0.43, 0.80),angle:4.44rad,[q+k[2]+k[3]])
cetz.draw.hobby((0.68, 0.99),(0.48, 0.77),(0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((-0.73, -0.93),angle:-2.44rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.98),(-0.65, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.79rad)
cetz.draw.content((0.80, -0.80),angle:2.79rad,[-k[0]])
cetz.draw.hobby((0.63, -0.80),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.63rad)
cetz.draw.content((0.81, 0.01),angle:0.63rad,[k[2]])
cetz.draw.hobby((0.81, -0.06),(0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:1.37rad)
cetz.draw.content((-0.85, 0.14),angle:1.37rad,[k[2]])
cetz.draw.hobby((-0.92, 0.09),(-0.89, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.67rad)
cetz.draw.content((-1.09, 0.65),angle:1.67rad,[-q-k[2]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.37rad)
cetz.draw.content((0.85, 1.09),angle:3.37rad,[-q-k[2]])
cetz.draw.hobby((0.84, 1.03),(0.89, 1.04),stroke:stroke,mark: (end: ">"))
})
let embedding36f0=cetz.canvas(length:50%,{
let node0= (pos:(0.37, 0.03))
node(node0.pos)
let node1= (pos:(-0.36, -0.01))
node(node1.pos)
let node2= (pos:(0.31, -0.39))
node(node2.pos)
let node3= (pos:(-0.16, -0.44))
node(node3.pos)
let node4= (pos:(0.02, -0.89))
node(node4.pos)
let node5= (pos:(0.36, -0.85))
node(node5.pos)
edge(node0.pos,(0.00, 0.04),node1.pos,decoration:"arrow",angle:3.20rad)
edge(node0.pos,(0.37, -0.17),node2.pos,decoration:"wave",angle:1.44rad)
edge(node3.pos,(-0.29, -0.23),node1.pos,decoration:"wave",angle:5.14rad)
edge(node3.pos,(0.07, -0.40),node2.pos,decoration:"arrow",angle:0.11rad)
edge(node2.pos,(0.39, -0.61),node5.pos,decoration:"arrow",angle:-1.45rad)
edge(node4.pos,(-0.12, -0.68),node3.pos,decoration:"arrow",angle:1.95rad)
edge(node4.pos,(0.19, -0.81),node5.pos,decoration:"coil",angle:3.26rad)
edge(node5.pos,(0.21, -1.00),node4.pos,decoration:"arrow",angle:-3.01rad)
edge(node1.pos,(-0.70, 0.00),decoration:"arrow",angle:3.10rad)
edge(node0.pos,(0.70, 0.00),decoration:"arrow",angle:3.05rad)
})
let embedding37i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.82))
node(node0.pos)
let node1= (pos:(0.50, -0.86))
node(node1.pos)
let node2= (pos:(-0.92, -0.08))
node(node2.pos)
let node3= (pos:(0.56, -0.16))
node(node3.pos)
let node4= (pos:(-0.23, 0.70))
node(node4.pos)
let node5= (pos:(0.76, 0.71))
node(node5.pos)
edge(node1.pos,(-0.04, -0.86),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((-0.05, -0.98),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.92),(-0.04, -0.92),(-0.48, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.46),node2.pos,decoration:"wave",angle:-1.14rad)
cetz.draw.content((-0.62, -0.41),angle:-1.14rad,[q])
cetz.draw.hobby((-0.55, -0.72),(-0.68, -0.42),(-0.83, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.51),node1.pos,decoration:"wave",angle:1.48rad)
cetz.draw.content((0.65, -0.53),angle:1.48rad,[q])
cetz.draw.hobby((0.62, -0.23),(0.59, -0.52),(0.57, -0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.16, 0.26),node3.pos,decoration:"arrow",angle:5.46rad)
cetz.draw.content((0.07, 0.18),angle:5.46rad,[q+k[2]])
cetz.draw.hobby((-0.20, 0.57),(0.12, 0.22),(0.44, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.26, 0.73),node4.pos,decoration:"arrow",angle:3.15rad)
cetz.draw.content((0.26, 0.85),angle:3.15rad,[-p+k[2]])
cetz.draw.hobby((0.66, 0.78),(0.26, 0.79),(-0.14, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.74, -1.02),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.65, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.78, -0.81),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.61, -0.83),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.38rad)
cetz.draw.content((0.83, -0.13),angle:-0.38rad,[k[2]])
cetz.draw.hobby((0.68, -0.14),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.26rad)
cetz.draw.content((-0.85, -0.24),angle:1.26rad,[k[2]])
cetz.draw.hobby((-0.91, -0.26),(-0.89, -0.19),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:1.76rad)
cetz.draw.content((-1.08, 0.10),angle:1.76rad,[-q-k[2]])
cetz.draw.hobby((-1.04, 0.22),(-1.00, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.15rad)
cetz.draw.content((0.98, 0.59),angle:2.15rad,[-q-k[2]])
cetz.draw.hobby((0.86, 0.66),(1.00, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.91rad)
cetz.draw.content((-0.66, 0.74),angle:5.91rad,[p+q])
cetz.draw.hobby((-0.93, 0.91),(-0.34, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.88rad)
cetz.draw.content((0.79, 0.93),angle:0.88rad,[p+q])
cetz.draw.hobby((0.77, 0.82),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding37i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.86))
node(node0.pos)
let node1= (pos:(0.58, -0.82))
node(node1.pos)
let node2= (pos:(-0.56, -0.16))
node(node2.pos)
let node3= (pos:(0.92, -0.08))
node(node3.pos)
let node4= (pos:(-0.76, 0.71))
node(node4.pos)
let node5= (pos:(0.23, 0.70))
node(node5.pos)
edge(node1.pos,(0.04, -0.87),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((0.05, -0.99),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.89),(0.04, -0.93),(-0.39, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.51),node2.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.65, -0.53),angle:4.81rad,[q])
cetz.draw.hobby((-0.57, -0.80),(-0.59, -0.52),(-0.62, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.73, -0.46),node1.pos,decoration:"wave",angle:1.14rad)
cetz.draw.content((0.62, -0.41),angle:1.14rad,[q])
cetz.draw.hobby((0.83, -0.13),(0.68, -0.42),(0.55, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.16, 0.27),node5.pos,decoration:"arrow",angle:0.82rad)
cetz.draw.content((-0.07, 0.18),angle:0.82rad,[q+k[2]])
cetz.draw.hobby((-0.44, -0.12),(-0.12, 0.22),(0.20, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.26, 0.73),node4.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.26, 0.85),angle:3.13rad,[-p+k[2]])
cetz.draw.hobby((0.14, 0.77),(-0.26, 0.79),(-0.67, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.72, -1.05),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.58, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.84, -0.80),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.69, -0.81),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.26rad)
cetz.draw.content((1.07, -0.17),angle:-1.26rad,[k[2]])
cetz.draw.hobby((1.01, -0.16),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.74, -0.36),angle:0.38rad,[k[2]])
cetz.draw.hobby((-0.88, -0.35),(-0.63, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.14rad)
cetz.draw.content((-0.78, 0.45),angle:-2.14rad,[-q-k[2]])
cetz.draw.hobby((-0.90, 0.38),(-0.76, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.52rad)
cetz.draw.content((0.84, 0.15),angle:4.52rad,[-q-k[2]])
cetz.draw.hobby((0.88, 0.03),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.40rad)
cetz.draw.content((-0.97, 0.78),angle:5.40rad,[p+q])
cetz.draw.hobby((-0.98, 0.88),(-0.87, 0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.37rad)
cetz.draw.content((0.57, 0.96),angle:0.37rad,[p+q])
cetz.draw.hobby((0.30, 0.79),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding37i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.78))
node(node1.pos)
let node2= (pos:(-0.73, -0.00))
node(node2.pos)
let node3= (pos:(0.73, 0.00))
node(node3.pos)
let node4= (pos:(0.55, 0.78))
node(node4.pos)
let node5= (pos:(-0.55, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.80),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.92),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.85),(-0.00, -0.86),(-0.44, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.40),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.76, -0.43),angle:4.94rad,[q])
cetz.draw.hobby((-0.63, -0.72),(-0.71, -0.41),(-0.77, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.40),node1.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.76, -0.43),angle:1.34rad,[q])
cetz.draw.hobby((0.77, -0.09),(0.70, -0.41),(0.63, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.40),node5.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.76, 0.43),angle:1.34rad,[q+k[2]])
cetz.draw.hobby((-0.77, 0.09),(-0.71, 0.41),(-0.63, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.40),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.76, 0.43),angle:-1.34rad,[q+k[2]])
cetz.draw.hobby((0.63, 0.72),(0.71, 0.41),(0.77, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.92),angle:0.00rad,[-p-q])
cetz.draw.hobby((0.44, 0.85),(0.00, 0.86),(-0.44, 0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.72, -1.00),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.61, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.66, -0.77),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.86, 0.12),angle:-0.00rad,[k[2]])
cetz.draw.hobby((0.83, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.86, -0.12),angle:6.28rad,[k[2]])
cetz.draw.hobby((-0.90, -0.06),(-0.83, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((-0.83, 0.78),angle:2.69rad,[p-k[2]])
cetz.draw.hobby((-0.94, 0.90),(-0.66, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.59rad)
cetz.draw.content((0.72, 1.00),angle:3.59rad,[p-k[2]])
cetz.draw.hobby((0.61, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding37f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.90))
node(node0.pos)
let node1= (pos:(-0.40, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.25))
node(node2.pos)
let node3= (pos:(0.13, -0.07))
node(node3.pos)
let node4= (pos:(0.38, 0.74))
node(node4.pos)
let node5= (pos:(-0.75, 0.56))
node(node5.pos)
edge(node0.pos,(0.09, -0.90),node1.pos,decoration:"arrow",angle:3.05rad)
edge(node0.pos,(0.72, -0.59),node2.pos,decoration:"wave",angle:-1.85rad)
edge(node3.pos,(-0.16, -0.44),node1.pos,decoration:"wave",angle:0.95rad)
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:-0.27rad)
edge(node4.pos,(0.26, 0.35),node3.pos,decoration:"arrow",angle:4.42rad)
edge(node4.pos,(-0.20, 0.67),node5.pos,decoration:"coil",angle:0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.90rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.84rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.16rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.08rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
})
let embedding37f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.80))
node(node0.pos)
let node1= (pos:(-0.52, -0.80))
node(node1.pos)
let node2= (pos:(0.36, -0.00))
node(node2.pos)
let node3= (pos:(-0.36, -0.00))
node(node3.pos)
let node4= (pos:(-0.51, 0.79))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node0.pos,(-0.00, -0.83),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.46, -0.40),node2.pos,decoration:"wave",angle:-1.38rad)
edge(node3.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.00, -0.00),node2.pos,decoration:"arrow",angle:0.00rad)
edge(node2.pos,(0.47, 0.40),node5.pos,decoration:"arrow",angle:1.38rad)
edge(node4.pos,(-0.47, 0.40),node3.pos,decoration:"arrow",angle:4.89rad)
edge(node5.pos,(-0.00, 0.83),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.88rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
})
let embedding37f2=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.81))
node(node0.pos)
let node1= (pos:(-0.59, -0.90))
node(node1.pos)
let node2= (pos:(-0.13, -0.07))
node(node2.pos)
let node3= (pos:(-0.78, -0.25))
node(node3.pos)
let node4= (pos:(0.76, 0.56))
node(node4.pos)
let node5= (pos:(-0.37, 0.74))
node(node5.pos)
edge(node0.pos,(-0.09, -0.89),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.16, -0.43),node2.pos,decoration:"wave",angle:-0.96rad)
edge(node3.pos,(-0.72, -0.59),node1.pos,decoration:"wave",angle:1.85rad)
edge(node3.pos,(-0.46, -0.15),node2.pos,decoration:"arrow",angle:0.27rad)
edge(node2.pos,(-0.25, 0.35),node5.pos,decoration:"arrow",angle:1.86rad)
edge(node4.pos,(0.21, 0.68),node5.pos,decoration:"coil",angle:-0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.16rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.45rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.20rad)
})
let embedding38i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.89))
node(node0.pos)
let node1= (pos:(0.53, -0.89))
node(node1.pos)
let node2= (pos:(-0.68, -0.20))
node(node2.pos)
let node3= (pos:(0.68, -0.20))
node(node3.pos)
let node4= (pos:(0.17, 0.56))
node(node4.pos)
let node5= (pos:(-0.17, 0.56))
node(node5.pos)
edge(node1.pos,(-0.00, -0.92),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -1.04),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.96),(-0.00, -0.98),(-0.43, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.61, -0.55),node2.pos,decoration:"wave",angle:4.93rad)
cetz.draw.content((-0.73, -0.58),angle:4.93rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.67, -0.56),(-0.73, -0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.61, -0.55),node1.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((0.73, -0.58),angle:1.35rad,[q])
cetz.draw.hobby((0.73, -0.28),(0.67, -0.56),(0.60, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.44, 0.19),node5.pos,decoration:"arrow",angle:0.97rad)
cetz.draw.content((-0.54, 0.26),angle:0.97rad,[q+k[2]])
cetz.draw.hobby((-0.69, -0.09),(-0.49, 0.22),(-0.27, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.44, 0.19),node3.pos,decoration:"arrow",angle:-0.98rad)
cetz.draw.content((0.54, 0.26),angle:-0.98rad,[q+k[2]])
cetz.draw.hobby((0.27, 0.52),(0.49, 0.22),(0.69, -0.09),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.74, -1.06),angle:-2.91rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.61, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
cetz.draw.content((0.79, -0.83),angle:2.91rad,[-k[0]])
cetz.draw.hobby((0.64, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.40rad)
cetz.draw.content((0.89, -0.16),angle:-0.40rad,[k[2]])
cetz.draw.hobby((0.80, -0.18),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.79, -0.38),angle:0.40rad,[k[2]])
cetz.draw.hobby((-0.88, -0.35),(-0.75, -0.29),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:0.19rad)
cetz.draw.content((-0.39, 0.33),angle:0.19rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.89, 0.29),(0.08, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-0.19rad)
cetz.draw.content((0.44, 0.56),angle:-0.19rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.06, 0.60),(0.91, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((-0.64, 0.67),angle:2.65rad,[1/2 p-1/2 q-k[2]])
cetz.draw.hobby((-0.94, 0.90),(-0.28, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.53, 0.88),angle:3.63rad,[1/2 p-1/2 q-k[2]])
cetz.draw.hobby((0.23, 0.66),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding39i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.20))
node(node2.pos)
let node3= (pos:(0.21, -0.11))
node(node3.pos)
let node4= (pos:(0.67, 0.69))
node(node4.pos)
let node5= (pos:(0.05, 0.59))
node(node5.pos)
edge(node1.pos,(-0.04, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.92),(-0.04, -0.96),(-0.46, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.55),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.75, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.64, -0.83),(-0.70, -0.55),(-0.71, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.48),node1.pos,decoration:"wave",angle:1.90rad)
cetz.draw.content((0.48, -0.44),angle:1.90rad,[q])
cetz.draw.hobby((0.30, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.23, -0.02),angle:3.25rad,[-p-q+k[3]])
cetz.draw.hobby((0.12, -0.05),(-0.22, -0.08),(-0.57, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.27),node3.pos,decoration:"arrow",angle:-2.09rad)
cetz.draw.content((0.58, 0.21),angle:-2.09rad,[-p+k[3]])
cetz.draw.hobby((0.70, 0.58),(0.53, 0.24),(0.32, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.35, 0.70),node4.pos,decoration:"arrow",angle:0.16rad)
cetz.draw.content((0.34, 0.82),angle:0.16rad,[-p+2 k[3]])
cetz.draw.hobby((0.08, 0.67),(0.34, 0.76),(0.62, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.77, -0.81),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.88, -0.20),angle:2.64rad,[p-k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
cetz.draw.content((0.59, 0.40),angle:2.59rad,[p-k[3]])
cetz.draw.hobby((0.17, 0.59),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.91rad)
cetz.draw.content((0.75, 0.93),angle:3.91rad,[k[3]])
cetz.draw.hobby((0.71, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.77rad)
cetz.draw.content((-0.52, 0.68),angle:2.77rad,[k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding39i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.85))
node(node0.pos)
let node1= (pos:(0.56, -0.88))
node(node1.pos)
let node2= (pos:(-0.22, -0.11))
node(node2.pos)
let node3= (pos:(0.65, -0.20))
node(node3.pos)
let node4= (pos:(-0.05, 0.59))
node(node4.pos)
let node5= (pos:(-0.67, 0.69))
node(node5.pos)
edge(node1.pos,(0.04, -0.90),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.04, -1.02),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.95),(0.04, -0.96),(-0.38, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.37, -0.48),node2.pos,decoration:"wave",angle:4.38rad)
cetz.draw.content((-0.48, -0.44),angle:4.38rad,[q])
cetz.draw.hobby((-0.51, -0.76),(-0.42, -0.45),(-0.30, -0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.55),node1.pos,decoration:"wave",angle:1.44rad)
cetz.draw.content((0.75, -0.56),angle:1.44rad,[q])
cetz.draw.hobby((0.71, -0.27),(0.69, -0.55),(0.64, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((0.23, -0.02),angle:3.04rad,[-p-q+k[3]])
cetz.draw.hobby((0.57, -0.12),(0.22, -0.08),(-0.13, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.48, 0.28),node5.pos,decoration:"arrow",angle:2.09rad)
cetz.draw.content((-0.58, 0.22),angle:2.09rad,[-p+k[3]])
cetz.draw.hobby((-0.32, -0.07),(-0.53, 0.24),(-0.70, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.35, 0.70),node4.pos,decoration:"arrow",angle:-0.16rad)
cetz.draw.content((-0.33, 0.82),angle:-0.16rad,[-p+2 k[3]])
cetz.draw.hobby((-0.62, 0.76),(-0.34, 0.76),(-0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.70, -1.04),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.55, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.81, -0.83),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.67, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.59rad)
cetz.draw.content((-0.46, 0.19),angle:-2.59rad,[p-k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.10, 0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.65rad)
cetz.draw.content((0.76, 0.01),angle:3.65rad,[p-k[3]])
cetz.draw.hobby((0.70, -0.10),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.52rad)
cetz.draw.content((0.43, 0.91),angle:3.52rad,[k[3]])
cetz.draw.hobby((0.02, 0.68),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.38rad)
cetz.draw.content((-0.92, 0.76),angle:2.38rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.79, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding39f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.78))
node(node0.pos)
let node1= (pos:(-0.53, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.02))
node(node2.pos)
let node3= (pos:(-0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.36, 0.78))
node(node4.pos)
let node5= (pos:(-0.36, 0.78))
node(node5.pos)
edge(node0.pos,(0.00, -0.81),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.56, -0.39),node2.pos,decoration:"wave",angle:-1.62rad)
edge(node3.pos,(-0.56, -0.39),node1.pos,decoration:"wave",angle:1.62rad)
edge(node2.pos,(0.11, 0.38),node5.pos,decoration:"arrow",angle:2.45rad)
edge(node4.pos,(-0.11, 0.38),node3.pos,decoration:"arrow",angle:-2.45rad)
edge(node5.pos,(0.00, 0.84),node4.pos,decoration:"arrow",angle:-0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.10rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.10rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.47rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.81rad)
})
let embedding39f1=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.86))
node(node0.pos)
let node1= (pos:(-0.44, -0.84))
node(node1.pos)
let node2= (pos:(0.76, -0.14))
node(node2.pos)
let node3= (pos:(-0.09, -0.12))
node(node3.pos)
let node4= (pos:(-0.69, 0.71))
node(node4.pos)
let node5= (pos:(0.51, 0.73))
node(node5.pos)
edge(node0.pos,(0.07, -0.88),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(0.67, -0.51),node2.pos,decoration:"wave",angle:-1.83rad)
edge(node3.pos,(-0.28, -0.47),node1.pos,decoration:"wave",angle:1.11rad)
edge(node2.pos,(0.64, 0.31),node5.pos,decoration:"arrow",angle:1.86rad)
edge(node4.pos,(-0.10, 0.74),node5.pos,decoration:"coil",angle:3.16rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.91rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.46rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.26rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.54rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.50rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
})
let embedding39f2=cetz.canvas(length:50%,{
let node0= (pos:(0.44, -0.84))
node(node0.pos)
let node1= (pos:(-0.57, -0.86))
node(node1.pos)
let node2= (pos:(0.09, -0.12))
node(node2.pos)
let node3= (pos:(-0.76, -0.14))
node(node3.pos)
let node4= (pos:(-0.51, 0.73))
node(node4.pos)
let node5= (pos:(0.69, 0.71))
node(node5.pos)
edge(node0.pos,(-0.06, -0.88),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node0.pos,(0.28, -0.48),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.66, -0.51),node1.pos,decoration:"wave",angle:1.83rad)
edge(node4.pos,(-0.64, 0.31),node3.pos,decoration:"arrow",angle:4.43rad)
edge(node4.pos,(0.10, 0.74),node5.pos,decoration:"coil",angle:3.12rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.47rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.91rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.74rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.26rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.76rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.78rad)
})
let embedding40i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.64))
node(node0.pos)
let node1= (pos:(0.40, -0.76))
node(node1.pos)
let node2= (pos:(-0.75, 0.40))
node(node2.pos)
let node3= (pos:(0.02, -0.00))
node(node3.pos)
let node4= (pos:(0.54, 0.44))
node(node4.pos)
let node5= (pos:(0.89, 0.78))
node(node5.pos)
edge(node1.pos,(-0.13, -0.74),node0.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((-0.14, -0.86),angle:3.03rad,[q+k[0]])
cetz.draw.hobby((0.29, -0.82),(-0.13, -0.80),(-0.55, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.13),node2.pos,decoration:"wave",angle:4.82rad)
cetz.draw.content((-0.85, -0.14),angle:4.82rad,[q])
cetz.draw.hobby((-0.73, -0.55),(-0.79, -0.13),(-0.81, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, -0.39),node1.pos,decoration:"wave",angle:2.04rad)
cetz.draw.content((0.33, -0.33),angle:2.04rad,[q])
cetz.draw.hobby((0.11, -0.05),(0.27, -0.35),(0.42, -0.66),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, 0.22),node2.pos,decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.32, 0.32),angle:2.66rad,[-p-q])
cetz.draw.hobby((-0.03, 0.10),(-0.33, 0.26),(-0.65, 0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, 0.22),node3.pos,decoration:"arrow",angle:3.84rad)
cetz.draw.content((0.20, 0.32),angle:3.84rad,[-p])
cetz.draw.hobby((0.45, 0.45),(0.24, 0.27),(0.03, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.61, 0.72),node5.pos,decoration:"coil",angle:3.89rad)
cetz.draw.content((0.53, 0.81),angle:3.89rad,[k[3]])
cetz.draw.hobby((0.47, 0.49),(0.57, 0.76),(0.84, 0.85),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.83, 0.50),node4.pos,decoration:"arrow",angle:-2.35rad)
cetz.draw.content((0.92, 0.41),angle:-2.35rad,[-p+k[3]])
cetz.draw.hobby((0.96, 0.72),(0.87, 0.45),(0.59, 0.37),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
cetz.draw.content((-0.74, -0.91),angle:-2.35rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.67, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.74, -0.77),angle:2.76rad,[-k[0]])
cetz.draw.hobby((0.51, -0.74),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.96rad)
cetz.draw.content((-0.99, 0.65),angle:1.96rad,[p])
cetz.draw.hobby((-1.02, 0.88),(-0.85, 0.47),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.25rad)
cetz.draw.content((0.84, 0.94),angle:4.25rad,[p])
cetz.draw.hobby((0.88, 0.89),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding40i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.64))
node(node1.pos)
let node2= (pos:(-0.00, 0.01))
node(node2.pos)
let node3= (pos:(0.76, 0.40))
node(node3.pos)
let node4= (pos:(-0.78, 0.88))
node(node4.pos)
let node5= (pos:(-0.45, 0.53))
node(node5.pos)
edge(node1.pos,(0.13, -0.73),node0.pos,decoration:"arrow",angle:-3.04rad)
cetz.draw.content((0.14, -0.85),angle:-3.04rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.73),(0.13, -0.79),(-0.30, -0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.38),node2.pos,decoration:"wave",angle:4.23rad)
cetz.draw.content((-0.32, -0.32),angle:4.23rad,[q])
cetz.draw.hobby((-0.42, -0.65),(-0.26, -0.34),(-0.10, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.13),node1.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.86, -0.14),angle:1.46rad,[q])
cetz.draw.hobby((0.82, 0.29),(0.80, -0.13),(0.73, -0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.22),node2.pos,decoration:"arrow",angle:3.61rad)
cetz.draw.content((0.33, 0.32),angle:3.61rad,[-p-q])
cetz.draw.hobby((0.66, 0.42),(0.35, 0.26),(0.04, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.23, 0.27),node5.pos,decoration:"arrow",angle:2.29rad)
cetz.draw.content((-0.32, 0.19),angle:2.29rad,[-p])
cetz.draw.hobby((-0.09, 0.02),(-0.27, 0.23),(-0.45, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.82),node5.pos,decoration:"coil",angle:2.35rad)
cetz.draw.content((-0.42, 0.90),angle:2.35rad,[k[3]])
cetz.draw.hobby((-0.73, 0.95),(-0.46, 0.85),(-0.37, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.74, 0.60),node4.pos,decoration:"arrow",angle:2.30rad)
cetz.draw.content((-0.83, 0.52),angle:2.30rad,[-p+k[3]])
cetz.draw.hobby((-0.50, 0.45),(-0.77, 0.55),(-0.86, 0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.65, -0.99),angle:-2.75rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.47, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((0.91, -0.74),angle:2.36rad,[-k[0]])
cetz.draw.hobby((0.76, -0.67),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.63rad)
cetz.draw.content((-0.95, 0.83),angle:2.63rad,[p])
cetz.draw.hobby((-0.94, 0.90),(-0.90, 0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.33rad)
cetz.draw.content((0.77, 0.74),angle:4.33rad,[p])
cetz.draw.hobby((0.74, 0.51),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding40i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.86))
node(node0.pos)
let node1= (pos:(0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.38, -0.11))
node(node2.pos)
let node3= (pos:(0.39, -0.12))
node(node3.pos)
let node4= (pos:(0.93, 0.45))
node(node4.pos)
let node5= (pos:(-0.92, 0.45))
node(node5.pos)
edge(node1.pos,(0.00, -0.89),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -1.01),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.49),node2.pos,decoration:"wave",angle:4.54rad)
cetz.draw.content((-0.59, -0.47),angle:4.54rad,[q])
cetz.draw.hobby((-0.57, -0.78),(-0.53, -0.47),(-0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.48, -0.49),node1.pos,decoration:"wave",angle:1.73rad)
cetz.draw.content((0.60, -0.47),angle:1.73rad,[q])
cetz.draw.hobby((0.47, -0.17),(0.54, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, -0.10),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.01, 0.02),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.32, -0.05),(0.01, -0.04),(-0.31, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.19),node5.pos,decoration:"arrow",angle:2.34rad)
cetz.draw.content((-0.56, 0.27),angle:2.34rad,[-p])
cetz.draw.hobby((-0.38, -0.02),(-0.60, 0.22),(-0.82, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.19),node3.pos,decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.57, 0.27),angle:3.95rad,[-p])
cetz.draw.hobby((0.83, 0.45),(0.60, 0.22),(0.39, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
cetz.draw.content((-0.72, -1.04),angle:-2.85rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.59, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.79, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.63, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"coil",angle:1.73rad)
cetz.draw.content((1.08, 0.24),angle:1.73rad,[k[3]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"coil",angle:-1.74rad)
cetz.draw.content((-0.84, 0.21),angle:-1.74rad,[k[3]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.71rad)
cetz.draw.content((-1.08, 0.71),angle:1.71rad,[p-k[3]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.58rad)
cetz.draw.content((0.84, 0.74),angle:4.58rad,[p-k[3]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding40f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.56))
node(node0.pos)
let node1= (pos:(-0.59, -0.56))
node(node1.pos)
let node2= (pos:(0.85, 0.51))
node(node2.pos)
let node3= (pos:(-0.83, 0.52))
node(node3.pos)
let node4= (pos:(-0.24, 0.81))
node(node4.pos)
let node5= (pos:(0.28, 0.82))
node(node5.pos)
edge(node0.pos,(0.00, -0.58),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.74, -0.04),node2.pos,decoration:"wave",angle:-1.80rad)
edge(node3.pos,(-0.73, -0.03),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(0.58, 0.68),node5.pos,decoration:"arrow",angle:2.65rad)
edge(node4.pos,(-0.56, 0.68),node3.pos,decoration:"arrow",angle:3.61rad)
edge(node4.pos,(0.02, 0.98),node5.pos,decoration:"coil",angle:3.15rad)
edge(node5.pos,(0.02, 0.69),node4.pos,decoration:"arrow",angle:-3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.32rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.90rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.41rad)
})
let embedding41i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.90))
node(node0.pos)
let node1= (pos:(0.40, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.25))
node(node2.pos)
let node3= (pos:(-0.14, -0.07))
node(node3.pos)
let node4= (pos:(-0.37, 0.74))
node(node4.pos)
let node5= (pos:(0.76, 0.56))
node(node5.pos)
edge(node1.pos,(-0.09, -0.90),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.08, -1.02),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.90),(-0.09, -0.96),(-0.49, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.59),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.83, -0.62),angle:5.00rad,[q])
cetz.draw.hobby((-0.68, -0.87),(-0.78, -0.60),(-0.83, -0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.44),node1.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.25, -0.37),angle:2.19rad,[q])
cetz.draw.hobby((-0.03, -0.10),(0.20, -0.39),(0.40, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, -0.15),node2.pos,decoration:"arrow",angle:3.41rad)
cetz.draw.content((-0.49, -0.03),angle:3.41rad,[-p-q-k[3]])
cetz.draw.hobby((-0.21, -0.02),(-0.48, -0.09),(-0.74, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.25, 0.35),node3.pos,decoration:"arrow",angle:-1.28rad)
cetz.draw.content((-0.14, 0.38),angle:-1.28rad,[-p-k[3]])
cetz.draw.hobby((-0.29, 0.67),(-0.19, 0.35),(-0.10, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.20, 0.67),node4.pos,decoration:"arrow",angle:2.99rad)
cetz.draw.content((0.22, 0.79),angle:2.99rad,[-p])
cetz.draw.hobby((0.66, 0.65),(0.20, 0.74),(-0.25, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.77, -1.07),angle:-2.91rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.67, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.74, -0.79),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.51, -0.79),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.29rad)
cetz.draw.content((-0.98, -0.20),angle:2.29rad,[p+k[3]])
cetz.draw.hobby((-0.98, -0.11),(-0.89, -0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.98rad)
cetz.draw.content((0.99, 0.33),angle:1.98rad,[p+k[3]])
cetz.draw.hobby((0.85, 0.50),(1.02, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.89rad)
cetz.draw.content((-0.73, 0.76),angle:5.89rad,[-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.49, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.06rad)
cetz.draw.content((0.77, 0.84),angle:1.06rad,[-k[3]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding41i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.81))
node(node0.pos)
let node1= (pos:(0.59, -0.90))
node(node1.pos)
let node2= (pos:(0.13, -0.07))
node(node2.pos)
let node3= (pos:(0.78, -0.25))
node(node3.pos)
let node4= (pos:(-0.76, 0.56))
node(node4.pos)
let node5= (pos:(0.37, 0.74))
node(node5.pos)
edge(node1.pos,(0.09, -0.89),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.08, -1.01),angle:3.05rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.97),(0.09, -0.95),(-0.32, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.43),node2.pos,decoration:"wave",angle:4.09rad)
cetz.draw.content((-0.26, -0.37),angle:4.09rad,[q])
cetz.draw.hobby((-0.41, -0.70),(-0.20, -0.39),(0.03, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.59),node1.pos,decoration:"wave",angle:1.28rad)
cetz.draw.content((0.83, -0.62),angle:1.28rad,[q])
cetz.draw.hobby((0.83, -0.32),(0.77, -0.60),(0.67, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.15),node2.pos,decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.49, -0.03),angle:2.87rad,[-p-q-k[3]])
cetz.draw.hobby((0.74, -0.17),(0.48, -0.09),(0.21, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.25, 0.35),node5.pos,decoration:"arrow",angle:1.28rad)
cetz.draw.content((0.14, 0.38),angle:1.28rad,[-p-k[3]])
cetz.draw.hobby((0.10, 0.03),(0.19, 0.35),(0.29, 0.67),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.20, 0.67),node4.pos,decoration:"arrow",angle:3.30rad)
cetz.draw.content((-0.22, 0.79),angle:3.30rad,[-p])
cetz.draw.hobby((0.25, 0.79),(-0.20, 0.73),(-0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.66, -1.02),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.48, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.90rad)
cetz.draw.content((0.82, -0.83),angle:2.90rad,[-k[0]])
cetz.draw.hobby((0.70, -0.87),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.98rad)
cetz.draw.content((-0.77, 0.23),angle:-1.98rad,[p+k[3]])
cetz.draw.hobby((-0.91, 0.07),(-0.74, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.98rad)
cetz.draw.content((0.80, -0.04),angle:3.98rad,[p+k[3]])
cetz.draw.hobby((0.80, -0.13),(0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.22rad)
cetz.draw.content((-0.98, 0.72),angle:5.22rad,[-k[3]])
cetz.draw.hobby((-1.00, 0.88),(-0.86, 0.62),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
cetz.draw.content((0.64, 0.98),angle:0.40rad,[-k[3]])
cetz.draw.hobby((0.44, 0.83),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding41i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.52, -0.79))
node(node1.pos)
let node2= (pos:(-0.35, 0.00))
node(node2.pos)
let node3= (pos:(0.37, 0.00))
node(node3.pos)
let node4= (pos:(0.52, 0.80))
node(node4.pos)
let node5= (pos:(-0.51, 0.79))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.95),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.86),(0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.40),node2.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.37),angle:4.52rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:1.75rad)
cetz.draw.content((0.59, -0.38),angle:1.75rad,[q])
cetz.draw.hobby((0.45, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.00),node2.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.01, -0.12),angle:-3.14rad,[-p-q-k[3]])
cetz.draw.hobby((0.30, -0.06),(0.01, -0.06),(-0.28, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, 0.40),node5.pos,decoration:"arrow",angle:1.77rad)
cetz.draw.content((-0.58, 0.38),angle:1.77rad,[-p-k[3]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.40),node3.pos,decoration:"arrow",angle:-1.75rad)
cetz.draw.content((0.59, 0.38),angle:-1.75rad,[-p-k[3]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.83),node5.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.95),angle:0.00rad,[k[3]])
cetz.draw.hobby((0.42, 0.87),(0.00, 0.89),(-0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.58, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.80, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.63, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((-0.80, 0.79),angle:2.74rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
cetz.draw.content((0.71, 1.01),angle:3.54rad,[p])
cetz.draw.hobby((0.59, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding41f0=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.78))
node(node0.pos)
let node1= (pos:(-0.55, -0.78))
node(node1.pos)
let node2= (pos:(0.73, -0.00))
node(node2.pos)
let node3= (pos:(-0.73, -0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.78))
node(node4.pos)
let node5= (pos:(0.55, 0.78))
node(node5.pos)
edge(node0.pos,(0.00, -0.80),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.64, -0.40),node2.pos,decoration:"wave",angle:-1.80rad)
edge(node3.pos,(-0.65, -0.40),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(0.65, 0.40),node5.pos,decoration:"arrow",angle:1.80rad)
edge(node4.pos,(-0.65, 0.40),node3.pos,decoration:"arrow",angle:4.48rad)
edge(node5.pos,(-0.00, 0.80),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.13rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.15rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.83rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.45rad)
})
let embedding41f1=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.86))
node(node0.pos)
let node1= (pos:(-0.58, -0.82))
node(node1.pos)
let node2= (pos:(0.57, -0.16))
node(node2.pos)
let node3= (pos:(-0.92, -0.08))
node(node3.pos)
let node4= (pos:(0.76, 0.71))
node(node4.pos)
let node5= (pos:(-0.23, 0.70))
node(node5.pos)
edge(node0.pos,(-0.04, -0.86),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node0.pos,(0.53, -0.51),node2.pos,decoration:"wave",angle:-1.67rad)
edge(node3.pos,(-0.73, -0.46),node1.pos,decoration:"wave",angle:2.00rad)
edge(node2.pos,(0.16, 0.26),node5.pos,decoration:"arrow",angle:2.32rad)
edge(node4.pos,(0.26, 0.73),node5.pos,decoration:"coil",angle:0.01rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.89rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.76rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.00rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.91rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.77rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.02rad)
})
let embedding41f2=cetz.canvas(length:50%,{
let node0= (pos:(0.58, -0.82))
node(node0.pos)
let node1= (pos:(-0.50, -0.86))
node(node1.pos)
let node2= (pos:(0.92, -0.08))
node(node2.pos)
let node3= (pos:(-0.56, -0.16))
node(node3.pos)
let node4= (pos:(0.23, 0.70))
node(node4.pos)
let node5= (pos:(-0.76, 0.71))
node(node5.pos)
edge(node0.pos,(0.04, -0.86),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.73, -0.46),node2.pos,decoration:"wave",angle:4.28rad)
edge(node3.pos,(-0.53, -0.51),node1.pos,decoration:"wave",angle:1.66rad)
edge(node4.pos,(-0.16, 0.26),node3.pos,decoration:"arrow",angle:-2.32rad)
edge(node4.pos,(-0.26, 0.73),node5.pos,decoration:"coil",angle:-0.01rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.76rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.89rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.38rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:1.00rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.26rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
})
let embedding42i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.92))
node(node0.pos)
let node1= (pos:(0.51, -0.92))
node(node1.pos)
let node2= (pos:(-0.32, -0.24))
node(node2.pos)
let node3= (pos:(0.31, -0.24))
node(node3.pos)
let node4= (pos:(0.14, 0.46))
node(node4.pos)
let node5= (pos:(-0.14, 0.46))
node(node5.pos)
edge(node1.pos,(-0.00, -0.97),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -1.09),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -1.00),(-0.00, -1.03),(-0.42, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.45, -0.59),node2.pos,decoration:"wave",angle:4.44rad)
cetz.draw.content((-0.57, -0.55),angle:4.44rad,[q])
cetz.draw.hobby((-0.57, -0.85),(-0.51, -0.56),(-0.40, -0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.45, -0.59),node1.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((0.57, -0.55),angle:1.85rad,[q])
cetz.draw.hobby((0.39, -0.28),(0.50, -0.56),(0.56, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, -0.27),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.01, -0.39),angle:3.14rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.25, -0.31),(-0.01, -0.33),(-0.26, -0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.29, 0.13),node5.pos,decoration:"arrow",angle:1.32rad)
cetz.draw.content((-0.40, 0.16),angle:1.32rad,[-p-2 k[3]])
cetz.draw.hobby((-0.38, -0.17),(-0.35, 0.14),(-0.23, 0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.28, 0.13),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.40, 0.15),angle:-1.34rad,[-p-2 k[3]])
cetz.draw.hobby((0.23, 0.42),(0.34, 0.13),(0.37, -0.17),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.99rad)
cetz.draw.content((-0.74, -1.08),angle:-2.99rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.60, -1.00),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.99rad)
cetz.draw.content((0.77, -0.84),angle:2.99rad,[-k[0]])
cetz.draw.hobby((0.62, -0.88),(0.91, -0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"coil",angle:0.38rad)
cetz.draw.content((-0.38, 0.12),angle:0.38rad,[-k[3]])
cetz.draw.hobby((-0.88, -0.02),(0.07, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"coil",angle:-0.38rad)
cetz.draw.content((0.47, 0.34),angle:-0.38rad,[-k[3]])
cetz.draw.hobby((-0.03, 0.48),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.58rad)
cetz.draw.content((-0.64, 0.63),angle:2.58rad,[p+k[3]])
cetz.draw.hobby((-0.95, 0.90),(-0.26, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.71rad)
cetz.draw.content((0.51, 0.83),angle:3.71rad,[p+k[3]])
cetz.draw.hobby((0.20, 0.56),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
})
let embedding43i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.88))
node(node0.pos)
let node1= (pos:(0.38, -0.86))
node(node1.pos)
let node2= (pos:(-0.05, -0.14))
node(node2.pos)
let node3= (pos:(-0.36, -0.16))
node(node3.pos)
let node4= (pos:(0.53, 0.69))
node(node4.pos)
let node5= (pos:(0.01, 0.74))
node(node5.pos)
edge(node1.pos,(-0.05, -0.94),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.04, -1.06),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.95),(-0.05, -1.00),(-0.41, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.54),node2.pos,decoration:"wave",angle:-2.11rad)
cetz.draw.content((-0.17, -0.60),angle:-2.11rad,[q])
cetz.draw.hobby((-0.39, -0.84),(-0.21, -0.55),(-0.04, -0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, -0.53),node1.pos,decoration:"wave",angle:2.39rad)
cetz.draw.content((0.12, -0.44),angle:2.39rad,[q])
cetz.draw.hobby((-0.25, -0.19),(0.05, -0.47),(0.35, -0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.10, 0.27),node3.pos,decoration:"arrow",angle:-2.38rad)
cetz.draw.content((0.18, 0.18),angle:-2.38rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.49, 0.56),(0.13, 0.22),(-0.23, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, 0.80),node4.pos,decoration:"arrow",angle:-0.09rad)
cetz.draw.content((0.29, 0.92),angle:-0.09rad,[-1/2 p+1/2 q+3/2 k[3]])
cetz.draw.hobby((0.04, 0.82),(0.29, 0.86),(0.52, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.72, -1.06),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.57, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.72, -0.81),angle:2.92rad,[-k[0]])
cetz.draw.hobby((0.49, -0.83),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.65, -0.36),angle:-2.88rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.44, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.96rad)
cetz.draw.content((0.50, -0.12),angle:2.96rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.06, -0.10),(0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.68rad)
cetz.draw.content((-0.58, -0.01),angle:2.68rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.94, 0.24),(-0.16, -0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.55, 0.65),angle:2.75rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.13, 0.76),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.73rad)
cetz.draw.content((0.70, 0.95),angle:3.73rad,[k[3]])
cetz.draw.hobby((0.58, 0.80),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.89rad)
cetz.draw.content((-0.52, 0.75),angle:2.89rad,[k[3]])
cetz.draw.hobby((-0.92, 0.92),(-0.10, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding43i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, -0.86))
node(node0.pos)
let node1= (pos:(0.49, -0.88))
node(node1.pos)
let node2= (pos:(0.36, -0.16))
node(node2.pos)
let node3= (pos:(0.05, -0.14))
node(node3.pos)
let node4= (pos:(-0.01, 0.74))
node(node4.pos)
let node5= (pos:(-0.54, 0.69))
node(node5.pos)
edge(node1.pos,(0.05, -0.94),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.04, -1.06),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.96),(0.05, -1.00),(-0.31, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.53),node2.pos,decoration:"wave",angle:3.90rad)
cetz.draw.content((-0.12, -0.44),angle:3.90rad,[q])
cetz.draw.hobby((-0.35, -0.75),(-0.05, -0.46),(0.25, -0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.54),node1.pos,decoration:"wave",angle:2.11rad)
cetz.draw.content((0.17, -0.60),angle:2.11rad,[q])
cetz.draw.hobby((0.04, -0.25),(0.21, -0.55),(0.39, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.10, 0.27),node5.pos,decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.18, 0.19),angle:2.38rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.23, -0.12),(-0.13, 0.22),(-0.49, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.28, 0.80),node4.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((-0.29, 0.92),angle:0.10rad,[-1/2 p+1/2 q+3/2 k[3]])
cetz.draw.hobby((-0.53, 0.77),(-0.29, 0.86),(-0.04, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.67, -1.05),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.47, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
cetz.draw.content((0.77, -0.82),angle:2.91rad,[-k[0]])
cetz.draw.hobby((0.60, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.96rad)
cetz.draw.content((-0.46, -0.36),angle:-2.96rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.04, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.71, -0.13),angle:2.88rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.47, -0.13),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.46, 0.43),angle:-2.75rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.88, 0.32),(-0.08, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.60rad)
cetz.draw.content((0.47, 0.20),angle:3.60rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.11, -0.04),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.39rad)
cetz.draw.content((0.46, 0.99),angle:3.39rad,[k[3]])
cetz.draw.hobby((0.07, 0.83),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.55rad)
cetz.draw.content((-0.83, 0.75),angle:2.55rad,[k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.65, 0.70),stroke:stroke,mark: (end: ">"))
})
let embedding44i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.36, -0.79))
node(node0.pos)
let node1= (pos:(0.49, -0.73))
node(node1.pos)
let node2= (pos:(0.43, -0.06))
node(node2.pos)
let node3= (pos:(0.14, 0.34))
node(node3.pos)
let node4= (pos:(-0.75, 0.82))
node(node4.pos)
let node5= (pos:(-0.33, 0.43))
node(node5.pos)
edge(node1.pos,(0.07, -0.82),node0.pos,decoration:"arrow",angle:-3.08rad)
cetz.draw.content((0.07, -0.94),angle:-3.08rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.82),(0.07, -0.88),(-0.28, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.43),node2.pos,decoration:"wave",angle:3.89rad)
cetz.draw.content((-0.07, -0.34),angle:3.89rad,[q])
cetz.draw.hobby((-0.33, -0.67),(-0.01, -0.37),(0.31, -0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.26),node1.pos,decoration:"wave",angle:1.91rad)
cetz.draw.content((0.16, -0.30),angle:1.91rad,[q])
cetz.draw.hobby((0.09, 0.21),(0.20, -0.24),(0.39, -0.66),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, 0.11),node5.pos,decoration:"arrow",angle:2.57rad)
cetz.draw.content((-0.07, 0.01),angle:2.57rad,[-1/2 p+1/2 q])
cetz.draw.hobby((0.32, -0.10),(-0.03, 0.06),(-0.32, 0.32),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.46, 0.74),node5.pos,decoration:"coil",angle:2.43rad)
cetz.draw.content((-0.38, 0.83),angle:2.43rad,[k[3]])
cetz.draw.hobby((-0.68, 0.89),(-0.41, 0.77),(-0.27, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.64, 0.53),node4.pos,decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.73, 0.45),angle:2.37rad,[-1/2 p+1/2 q+k[3]])
cetz.draw.hobby((-0.40, 0.37),(-0.68, 0.48),(-0.81, 0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.82rad)
cetz.draw.content((-0.64, -1.01),angle:-2.82rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.44, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.80, -0.76),angle:2.66rad,[-k[0]])
cetz.draw.hobby((0.61, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.40, 0.05),angle:-2.86rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.89, -0.03),(0.06, 0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.24rad)
cetz.draw.content((0.70, 0.09),angle:3.24rad,[1/2 p+1/2 q])
cetz.draw.hobby((0.52, 0.01),(0.89, 0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.52rad)
cetz.draw.content((-0.95, 0.81),angle:2.52rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.95, 0.89),(-0.87, 0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.80rad)
cetz.draw.content((0.50, 0.76),angle:3.80rad,[1/2 p-1/2 q])
cetz.draw.hobby((0.18, 0.44),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding44i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.89))
node(node0.pos)
let node1= (pos:(0.42, -0.89))
node(node1.pos)
let node2= (pos:(0.28, -0.21))
node(node2.pos)
let node3= (pos:(-0.28, -0.21))
node(node3.pos)
let node4= (pos:(0.73, 0.56))
node(node4.pos)
let node5= (pos:(-0.73, 0.56))
node(node5.pos)
edge(node1.pos,(-0.00, -0.97),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -1.09),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.98),(-0.00, -1.03),(-0.36, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.09, -0.57),node2.pos,decoration:"wave",angle:3.92rad)
cetz.draw.content((-0.18, -0.48),angle:3.92rad,[q])
cetz.draw.hobby((-0.39, -0.78),(-0.12, -0.50),(0.17, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, -0.56),node1.pos,decoration:"wave",angle:2.37rad)
cetz.draw.content((0.17, -0.48),angle:2.37rad,[q])
cetz.draw.hobby((-0.17, -0.23),(0.11, -0.50),(0.39, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.22, 0.22),node5.pos,decoration:"arrow",angle:2.49rad)
cetz.draw.content((-0.15, 0.31),angle:2.49rad,[-1/2 p+1/2 q])
cetz.draw.hobby((0.23, -0.08),(-0.17, 0.25),(-0.59, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.22, 0.22),node3.pos,decoration:"arrow",angle:3.79rad)
cetz.draw.content((0.15, 0.32),angle:3.79rad,[-1/2 p+1/2 q])
cetz.draw.hobby((0.59, 0.54),(0.17, 0.25),(-0.23, -0.08),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.96rad)
cetz.draw.content((-0.69, -1.06),angle:-2.96rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.51, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.96rad)
cetz.draw.content((0.73, -0.83),angle:2.96rad,[-k[0]])
cetz.draw.hobby((0.53, -0.85),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.97rad)
cetz.draw.content((-0.62, -0.39),angle:-2.97rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.89, -0.38),(-0.37, -0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.97rad)
cetz.draw.content((0.66, -0.15),angle:2.97rad,[1/2 p+1/2 q])
cetz.draw.hobby((0.39, -0.17),(0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:2.45rad)
cetz.draw.content((0.94, 0.54),angle:2.45rad,[k[3]])
cetz.draw.hobby((0.84, 0.54),(0.96, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-2.45rad)
cetz.draw.content((-0.79, 0.35),angle:-2.45rad,[k[3]])
cetz.draw.hobby((-0.88, 0.35),(-0.77, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.12rad)
cetz.draw.content((-0.97, 0.72),angle:2.12rad,[1/2 p-1/2 q-k[3]])
cetz.draw.hobby((-1.00, 0.88),(-0.83, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.16rad)
cetz.draw.content((0.76, 0.84),angle:4.16rad,[1/2 p-1/2 q-k[3]])
cetz.draw.hobby((0.73, 0.68),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
})
let embedding44i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.74))
node(node0.pos)
let node1= (pos:(0.36, -0.78))
node(node1.pos)
let node2= (pos:(-0.14, 0.34))
node(node2.pos)
let node3= (pos:(-0.43, -0.05))
node(node3.pos)
let node4= (pos:(0.34, 0.43))
node(node4.pos)
let node5= (pos:(0.75, 0.82))
node(node5.pos)
edge(node1.pos,(-0.07, -0.82),node0.pos,decoration:"arrow",angle:3.09rad)
cetz.draw.content((-0.07, -0.94),angle:3.09rad,[q+k[0]])
cetz.draw.hobby((0.28, -0.86),(-0.07, -0.88),(-0.43, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.26),node2.pos,decoration:"wave",angle:-1.90rad)
cetz.draw.content((-0.17, -0.30),angle:-1.90rad,[q])
cetz.draw.hobby((-0.39, -0.66),(-0.21, -0.24),(-0.10, 0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.02, -0.42),node1.pos,decoration:"wave",angle:2.39rad)
cetz.draw.content((0.07, -0.33),angle:2.39rad,[q])
cetz.draw.hobby((-0.31, -0.08),(0.01, -0.37),(0.33, -0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.12),node3.pos,decoration:"arrow",angle:-2.57rad)
cetz.draw.content((0.07, 0.02),angle:-2.57rad,[-1/2 p+1/2 q])
cetz.draw.hobby((0.32, 0.32),(0.03, 0.07),(-0.32, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.53),node5.pos,decoration:"coil",angle:-2.37rad)
cetz.draw.content((0.73, 0.44),angle:-2.37rad,[k[3]])
cetz.draw.hobby((0.40, 0.37),(0.68, 0.48),(0.81, 0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, 0.73),node4.pos,decoration:"arrow",angle:3.86rad)
cetz.draw.content((0.38, 0.82),angle:3.86rad,[-1/2 p+1/2 q+k[3]])
cetz.draw.hobby((0.69, 0.88),(0.41, 0.77),(0.28, 0.50),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
cetz.draw.content((-0.69, -0.97),angle:-2.66rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.55, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
cetz.draw.content((0.72, -0.78),angle:2.82rad,[-k[0]])
cetz.draw.hobby((0.47, -0.76),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.05rad)
cetz.draw.content((-0.73, -0.15),angle:3.05rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.91, -0.07),(-0.53, -0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.46, 0.28),angle:2.86rad,[1/2 p+1/2 q])
cetz.draw.hobby((-0.03, 0.36),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.65, 0.57),angle:2.48rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.96, 0.89),(-0.26, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.77rad)
cetz.draw.content((0.81, 1.01),angle:3.77rad,[1/2 p-1/2 q])
cetz.draw.hobby((0.80, 0.93),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding45i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.87))
node(node0.pos)
let node1= (pos:(0.34, -0.85))
node(node1.pos)
let node2= (pos:(-0.05, -0.12))
node(node2.pos)
let node3= (pos:(-0.57, -0.18))
node(node3.pos)
let node4= (pos:(-0.48, 0.73))
node(node4.pos)
let node5= (pos:(0.70, 0.71))
node(node5.pos)
edge(node1.pos,(-0.07, -0.93),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.07, -1.05),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.28, -0.93),(-0.07, -0.99),(-0.43, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.50),node2.pos,decoration:"wave",angle:4.18rad)
cetz.draw.content((-0.39, -0.44),angle:4.18rad,[q])
cetz.draw.hobby((-0.50, -0.76),(-0.33, -0.46),(-0.15, -0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.08, -0.53),node1.pos,decoration:"wave",angle:2.51rad)
cetz.draw.content((-0.01, -0.43),angle:2.51rad,[q])
cetz.draw.hobby((-0.44, -0.20),(-0.07, -0.46),(0.29, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.29),node3.pos,decoration:"arrow",angle:4.61rad)
cetz.draw.content((-0.66, 0.30),angle:4.61rad,[-1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.55, 0.65),(-0.60, 0.28),(-0.63, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, 0.74),node4.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.12, 0.86),angle:3.12rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.59, 0.78),(0.11, 0.80),(-0.36, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
cetz.draw.content((-0.72, -1.05),angle:-2.89rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.58, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.70, -0.81),angle:2.92rad,[-k[0]])
cetz.draw.hobby((0.45, -0.81),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.75, -0.37),angle:-2.81rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.89, -0.36),(-0.65, -0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.94rad)
cetz.draw.content((0.50, -0.11),angle:2.94rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.06, -0.08),(0.91, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.70rad)
cetz.draw.content((-0.58, -0.00),angle:2.70rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.94, 0.24),(-0.17, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.25rad)
cetz.draw.content((0.94, 0.59),angle:2.25rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.81, 0.66),(0.98, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.80rad)
cetz.draw.content((-0.79, 0.76),angle:5.80rad,[-k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.59, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.78rad)
cetz.draw.content((0.77, 0.94),angle:0.78rad,[-k[3]])
cetz.draw.hobby((0.73, 0.82),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding45i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, -0.85))
node(node0.pos)
let node1= (pos:(0.49, -0.87))
node(node1.pos)
let node2= (pos:(0.57, -0.18))
node(node2.pos)
let node3= (pos:(0.05, -0.12))
node(node3.pos)
let node4= (pos:(-0.70, 0.71))
node(node4.pos)
let node5= (pos:(0.48, 0.73))
node(node5.pos)
edge(node1.pos,(0.07, -0.93),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.06, -1.05),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.95),(0.07, -0.99),(-0.28, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.09, -0.53),node2.pos,decoration:"wave",angle:3.77rad)
cetz.draw.content((0.01, -0.43),angle:3.77rad,[q])
cetz.draw.hobby((-0.29, -0.73),(0.07, -0.46),(0.44, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.50),node1.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.39, -0.44),angle:2.10rad,[q])
cetz.draw.hobby((0.15, -0.16),(0.33, -0.46),(0.50, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.29),node5.pos,decoration:"arrow",angle:1.68rad)
cetz.draw.content((0.66, 0.30),angle:1.68rad,[-1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.63, -0.09),(0.60, 0.28),(0.55, 0.65),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, 0.74),node4.pos,decoration:"arrow",angle:3.16rad)
cetz.draw.content((-0.12, 0.86),angle:3.16rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.36, 0.79),(-0.11, 0.80),(-0.59, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.64, -1.04),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.43, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((0.78, -0.82),angle:2.89rad,[-k[0]])
cetz.draw.hobby((0.61, -0.84),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.94rad)
cetz.draw.content((-0.45, -0.34),angle:-2.94rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.03, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.82, -0.15),angle:2.81rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.68, -0.16),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.25rad)
cetz.draw.content((-0.76, 0.44),angle:-2.25rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.89, 0.37),(-0.72, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.58rad)
cetz.draw.content((0.47, 0.22),angle:3.58rad,[1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.12, -0.02),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.51rad)
cetz.draw.content((-0.93, 0.77),angle:5.51rad,[-k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.81, 0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.48rad)
cetz.draw.content((0.68, 0.97),angle:0.48rad,[-k[3]])
cetz.draw.hobby((0.54, 0.83),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding45i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.79))
node(node0.pos)
let node1= (pos:(0.41, -0.79))
node(node1.pos)
let node2= (pos:(0.34, 0.00))
node(node2.pos)
let node3= (pos:(-0.34, -0.00))
node(node3.pos)
let node4= (pos:(0.41, 0.79))
node(node4.pos)
let node5= (pos:(-0.42, 0.79))
node(node5.pos)
edge(node1.pos,(-0.00, -0.85),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.97),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.34, -0.87),(-0.00, -0.91),(-0.35, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.07, -0.40),node2.pos,decoration:"wave",angle:3.96rad)
cetz.draw.content((-0.16, -0.32),angle:3.96rad,[q])
cetz.draw.hobby((-0.39, -0.67),(-0.10, -0.34),(0.22, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.07, -0.41),node1.pos,decoration:"wave",angle:2.33rad)
cetz.draw.content((0.16, -0.32),angle:2.33rad,[q])
cetz.draw.hobby((-0.22, -0.03),(0.10, -0.34),(0.39, -0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.07, 0.40),node5.pos,decoration:"arrow",angle:2.33rad)
cetz.draw.content((-0.16, 0.32),angle:2.33rad,[-1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.22, 0.03),(-0.10, 0.34),(-0.39, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.07, 0.40),node3.pos,decoration:"arrow",angle:-2.32rad)
cetz.draw.content((0.16, 0.32),angle:-2.32rad,[-1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.39, 0.67),(0.10, 0.34),(-0.22, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.85),node5.pos,decoration:"coil",angle:-0.00rad)
cetz.draw.content((-0.00, 0.97),angle:-0.00rad,[k[3]])
cetz.draw.hobby((0.34, 0.87),(-0.00, 0.91),(-0.35, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.79rad)
cetz.draw.content((-0.67, -1.01),angle:-2.79rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.49, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.80rad)
cetz.draw.content((0.75, -0.78),angle:2.80rad,[-k[0]])
cetz.draw.hobby((0.53, -0.77),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.67, -0.12),angle:3.14rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.67, 0.12),angle:3.14rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.44, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.80rad)
cetz.draw.content((-0.75, 0.78),angle:2.80rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.53, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.66, 1.01),angle:3.49rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.48, 0.88),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding46i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.88))
node(node0.pos)
let node1= (pos:(0.37, -0.88))
node(node1.pos)
let node2= (pos:(0.51, -0.24))
node(node2.pos)
let node3= (pos:(-0.51, -0.24))
node(node3.pos)
let node4= (pos:(-0.15, 0.57))
node(node4.pos)
let node5= (pos:(0.15, 0.56))
node(node5.pos)
edge(node1.pos,(-0.00, -0.96),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -1.08),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.97),(-0.00, -1.02),(-0.32, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.09, -0.55),node2.pos,decoration:"wave",angle:3.77rad)
cetz.draw.content((0.02, -0.45),angle:3.77rad,[q])
cetz.draw.hobby((-0.32, -0.77),(0.03, -0.51),(0.39, -0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.09, -0.55),node1.pos,decoration:"wave",angle:2.51rad)
cetz.draw.content((-0.02, -0.45),angle:2.51rad,[q])
cetz.draw.hobby((-0.39, -0.25),(-0.04, -0.51),(0.32, -0.77),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.35, 0.17),node5.pos,decoration:"arrow",angle:1.99rad)
cetz.draw.content((0.46, 0.22),angle:1.99rad,[-1/2 p+1/2 q-k[3]])
cetz.draw.hobby((0.54, -0.14),(0.41, 0.20),(0.25, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.17),node3.pos,decoration:"arrow",angle:4.29rad)
cetz.draw.content((-0.46, 0.22),angle:4.29rad,[-1/2 p+1/2 q-k[3]])
cetz.draw.hobby((-0.25, 0.52),(-0.41, 0.20),(-0.54, -0.14),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.96rad)
cetz.draw.content((-0.66, -1.06),angle:-2.96rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.46, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.96rad)
cetz.draw.content((0.71, -0.82),angle:2.96rad,[-k[0]])
cetz.draw.hobby((0.48, -0.84),(0.91, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.95rad)
cetz.draw.content((-0.73, -0.40),angle:-2.95rad,[1/2 p+1/2 q+k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.60, -0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.95rad)
cetz.draw.content((0.78, -0.17),angle:2.95rad,[1/2 p+1/2 q+k[3]])
cetz.draw.hobby((0.62, -0.20),(0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:0.27rad)
cetz.draw.content((-0.55, 0.33),angle:0.27rad,[-k[3]])
cetz.draw.hobby((-0.89, 0.30),(-0.23, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-0.26rad)
cetz.draw.content((0.61, 0.56),angle:-0.26rad,[-k[3]])
cetz.draw.hobby((0.26, 0.59),(0.92, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.47, 0.67),angle:2.78rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.93, 0.91),(0.04, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.38, 0.89),angle:3.50rad,[1/2 p-1/2 q])
cetz.draw.hobby((-0.08, 0.66),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding47f0=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.83))
node(node0.pos)
let node1= (pos:(-0.38, -0.84))
node(node1.pos)
let node2= (pos:(-0.73, -0.12))
node(node2.pos)
let node3= (pos:(0.59, -0.21))
node(node3.pos)
let node4= (pos:(0.72, 0.69))
node(node4.pos)
let node5= (pos:(0.06, 0.72))
node(node5.pos)
edge(node0.pos,(-0.03, -0.90),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node0.pos,(-0.21, -0.44),node2.pos,decoration:"wave",angle:-0.59rad)
edge(node3.pos,(0.10, -0.49),node1.pos,decoration:"wave",angle:0.58rad)
edge(node4.pos,(0.66, 0.24),node3.pos,decoration:"arrow",angle:-1.72rad)
edge(node5.pos,(0.38, 0.74),node4.pos,decoration:"arrow",angle:-0.03rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.30rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.67rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.11rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.76rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.97rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.88rad)
})
let embedding47f1=cetz.canvas(length:50%,{
let node0= (pos:(0.37, -0.84))
node(node0.pos)
let node1= (pos:(-0.32, -0.83))
node(node1.pos)
let node2= (pos:(-0.59, -0.21))
node(node2.pos)
let node3= (pos:(0.73, -0.12))
node(node3.pos)
let node4= (pos:(-0.06, 0.72))
node(node4.pos)
let node5= (pos:(-0.72, 0.69))
node(node5.pos)
edge(node0.pos,(0.03, -0.90),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(-0.10, -0.49),node2.pos,decoration:"wave",angle:-0.58rad)
edge(node3.pos,(0.21, -0.44),node1.pos,decoration:"wave",angle:0.59rad)
edge(node2.pos,(-0.67, 0.24),node5.pos,decoration:"arrow",angle:1.72rad)
edge(node5.pos,(-0.39, 0.74),node4.pos,decoration:"arrow",angle:0.03rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.67rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.30rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.75rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.17rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.40rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.31rad)
})
let embedding48f0=cetz.canvas(length:50%,{
let node0= (pos:(0.35, -0.86))
node(node0.pos)
let node1= (pos:(-0.35, -0.86))
node(node1.pos)
let node2= (pos:(-0.61, -0.23))
node(node2.pos)
let node3= (pos:(0.61, -0.23))
node(node3.pos)
let node4= (pos:(0.91, 0.59))
node(node4.pos)
let node5= (pos:(-0.91, 0.59))
node(node5.pos)
edge(node0.pos,(-0.00, -0.93),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(-0.13, -0.51),node2.pos,decoration:"wave",angle:-0.58rad)
edge(node3.pos,(0.13, -0.51),node1.pos,decoration:"wave",angle:0.58rad)
edge(node2.pos,(-0.74, 0.18),node5.pos,decoration:"arrow",angle:1.92rad)
edge(node4.pos,(0.74, 0.18),node3.pos,decoration:"arrow",angle:4.37rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.27rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.27rad)
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:1.92rad)
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-1.92rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.79rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.49rad)
})
let embedding48f1=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.70))
node(node0.pos)
let node1= (pos:(-0.40, -0.76))
node(node1.pos)
let node2= (pos:(-0.75, 0.31))
node(node2.pos)
let node3= (pos:(0.54, -0.12))
node(node3.pos)
let node4= (pos:(0.59, 0.54))
node(node4.pos)
let node5= (pos:(0.75, 0.99))
node(node5.pos)
edge(node0.pos,(-0.05, -0.79),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(-0.24, -0.18),node2.pos,decoration:"wave",angle:-0.77rad)
edge(node3.pos,(0.05, -0.41),node1.pos,decoration:"wave",angle:0.60rad)
edge(node4.pos,(0.56, 0.21),node3.pos,decoration:"arrow",angle:4.64rad)
edge(node4.pos,(0.81, 0.71),node5.pos,decoration:"coil",angle:-1.93rad)
edge(node5.pos,(0.52, 0.83),node4.pos,decoration:"arrow",angle:4.31rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.77rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.89rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.92rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.20rad)
})
let embedding48f2=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.30, -0.70))
node(node1.pos)
let node2= (pos:(-0.54, -0.12))
node(node2.pos)
let node3= (pos:(0.75, 0.31))
node(node3.pos)
let node4= (pos:(-0.75, 0.98))
node(node4.pos)
let node5= (pos:(-0.59, 0.53))
node(node5.pos)
edge(node0.pos,(0.05, -0.79),node1.pos,decoration:"arrow",angle:3.06rad)
edge(node0.pos,(-0.04, -0.41),node2.pos,decoration:"wave",angle:-0.60rad)
edge(node3.pos,(0.24, -0.18),node1.pos,decoration:"wave",angle:0.77rad)
edge(node2.pos,(-0.55, 0.20),node5.pos,decoration:"arrow",angle:1.64rad)
edge(node4.pos,(-0.52, 0.82),node5.pos,decoration:"coil",angle:1.97rad)
edge(node5.pos,(-0.81, 0.70),node4.pos,decoration:"arrow",angle:1.92rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.89rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.02rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:3.05rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.37rad)
})
let embedding49f0=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.82))
node(node0.pos)
let node1= (pos:(-0.42, -0.85))
node(node1.pos)
let node2= (pos:(-0.74, -0.12))
node(node2.pos)
let node3= (pos:(0.38, -0.18))
node(node3.pos)
let node4= (pos:(-0.27, 0.71))
node(node4.pos)
let node5= (pos:(0.75, 0.71))
node(node5.pos)
edge(node0.pos,(-0.05, -0.90),node1.pos,decoration:"arrow",angle:-3.10rad)
edge(node0.pos,(-0.23, -0.45),node2.pos,decoration:"wave",angle:-0.59rad)
edge(node3.pos,(-0.02, -0.50),node1.pos,decoration:"wave",angle:0.70rad)
edge(node4.pos,(0.05, 0.27),node3.pos,decoration:"arrow",angle:5.34rad)
edge(node5.pos,(0.24, 0.74),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.24rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.09rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.16rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.90rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.87rad)
})
let embedding49f1=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.85))
node(node0.pos)
let node1= (pos:(-0.30, -0.82))
node(node1.pos)
let node2= (pos:(-0.38, -0.18))
node(node2.pos)
let node3= (pos:(0.74, -0.12))
node(node3.pos)
let node4= (pos:(-0.75, 0.71))
node(node4.pos)
let node5= (pos:(0.27, 0.71))
node(node5.pos)
edge(node0.pos,(0.05, -0.90),node1.pos,decoration:"arrow",angle:3.10rad)
edge(node0.pos,(0.02, -0.50),node2.pos,decoration:"wave",angle:-0.70rad)
edge(node3.pos,(0.23, -0.45),node1.pos,decoration:"wave",angle:0.59rad)
edge(node2.pos,(-0.05, 0.27),node5.pos,decoration:"arrow",angle:0.94rad)
edge(node5.pos,(-0.24, 0.74),node4.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.68rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.24rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.16rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.19rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.42rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.38rad)
})
let embedding49f2=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.78))
node(node0.pos)
let node1= (pos:(-0.36, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, -0.02))
node(node2.pos)
let node3= (pos:(0.57, -0.02))
node(node3.pos)
let node4= (pos:(0.53, 0.78))
node(node4.pos)
let node5= (pos:(-0.53, 0.78))
node(node5.pos)
edge(node0.pos,(-0.00, -0.84),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(-0.11, -0.38),node2.pos,decoration:"wave",angle:-0.69rad)
edge(node3.pos,(0.11, -0.38),node1.pos,decoration:"wave",angle:0.69rad)
edge(node2.pos,(-0.56, 0.39),node5.pos,decoration:"arrow",angle:1.53rad)
edge(node4.pos,(0.56, 0.39),node3.pos,decoration:"arrow",angle:-1.53rad)
edge(node4.pos,(0.00, 0.81),node5.pos,decoration:"coil",angle:-0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.04rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.24rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.71rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.58rad)
})
let embedding50f0=cetz.canvas(length:50%,{
let node0= (pos:(0.37, -0.89))
node(node0.pos)
let node1= (pos:(-0.37, -0.88))
node(node1.pos)
let node2= (pos:(-0.52, -0.24))
node(node2.pos)
let node3= (pos:(0.51, -0.24))
node(node3.pos)
let node4= (pos:(0.16, 0.56))
node(node4.pos)
let node5= (pos:(-0.16, 0.56))
node(node5.pos)
edge(node0.pos,(-0.00, -0.96),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(-0.09, -0.55),node2.pos,decoration:"wave",angle:-0.63rad)
edge(node3.pos,(0.09, -0.55),node1.pos,decoration:"wave",angle:0.63rad)
edge(node2.pos,(-0.36, 0.17),node5.pos,decoration:"arrow",angle:1.15rad)
edge(node4.pos,(0.36, 0.17),node3.pos,decoration:"arrow",angle:-1.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.96rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.96rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.19rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.19rad)
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:0.19rad)
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-0.19rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
})
let embedding51f0=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.86))
node(node0.pos)
let node1= (pos:(-0.35, -0.86))
node(node1.pos)
let node2= (pos:(-0.01, -0.07))
node(node2.pos)
let node3= (pos:(0.55, -0.21))
node(node3.pos)
let node4= (pos:(-0.04, 0.60))
node(node4.pos)
let node5= (pos:(-0.64, 0.69))
node(node5.pos)
edge(node0.pos,(0.06, -0.93),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.25, -0.49),node2.pos,decoration:"wave",angle:5.27rad)
edge(node3.pos,(0.07, -0.55),node1.pos,decoration:"wave",angle:0.62rad)
edge(node3.pos,(0.29, -0.08),node2.pos,decoration:"arrow",angle:2.88rad)
edge(node2.pos,(-0.36, 0.28),node5.pos,decoration:"arrow",angle:2.26rad)
edge(node5.pos,(-0.33, 0.71),node4.pos,decoration:"arrow",angle:-0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.58rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.58rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.51rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.43rad)
})
let embedding51f1=cetz.canvas(length:50%,{
let node0= (pos:(0.35, -0.86))
node(node0.pos)
let node1= (pos:(-0.49, -0.86))
node(node1.pos)
let node2= (pos:(-0.55, -0.22))
node(node2.pos)
let node3= (pos:(0.00, -0.07))
node(node3.pos)
let node4= (pos:(0.64, 0.69))
node(node4.pos)
let node5= (pos:(0.04, 0.60))
node(node5.pos)
edge(node0.pos,(-0.06, -0.93),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(-0.07, -0.55),node2.pos,decoration:"wave",angle:-0.62rad)
edge(node3.pos,(-0.25, -0.49),node1.pos,decoration:"wave",angle:1.01rad)
edge(node3.pos,(-0.30, -0.08),node2.pos,decoration:"arrow",angle:3.40rad)
edge(node4.pos,(0.35, 0.28),node3.pos,decoration:"arrow",angle:-2.27rad)
edge(node5.pos,(0.33, 0.71),node4.pos,decoration:"arrow",angle:0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.69rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.85rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.77rad)
})
let embedding52f0=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.64))
node(node0.pos)
let node1= (pos:(-0.57, -0.77))
node(node1.pos)
let node2= (pos:(-0.59, 0.47))
node(node2.pos)
let node3= (pos:(-0.38, -0.01))
node(node3.pos)
let node4= (pos:(0.32, 0.51))
node(node4.pos)
let node5= (pos:(0.76, 0.83))
node(node5.pos)
edge(node0.pos,(-0.12, -0.75),node1.pos,decoration:"arrow",angle:-3.00rad)
edge(node0.pos,(-0.08, -0.11),node2.pos,decoration:"wave",angle:-0.89rad)
edge(node3.pos,(-0.50, -0.39),node1.pos,decoration:"wave",angle:1.33rad)
edge(node3.pos,(-0.57, 0.21),node2.pos,decoration:"arrow",angle:1.95rad)
edge(node4.pos,(-0.02, 0.25),node3.pos,decoration:"arrow",angle:-2.51rad)
edge(node4.pos,(0.46, 0.79),node5.pos,decoration:"coil",angle:3.75rad)
edge(node5.pos,(0.63, 0.56),node4.pos,decoration:"arrow",angle:-2.48rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.23rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.75rad)
})
let embedding52f1=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.85))
node(node0.pos)
let node1= (pos:(-0.43, -0.85))
node(node1.pos)
let node2= (pos:(-0.25, -0.10))
node(node2.pos)
let node3= (pos:(0.23, -0.10))
node(node3.pos)
let node4= (pos:(0.90, 0.44))
node(node4.pos)
let node5= (pos:(-0.90, 0.44))
node(node5.pos)
edge(node0.pos,(-0.00, -0.92),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.11, -0.50),node2.pos,decoration:"wave",angle:5.44rad)
edge(node3.pos,(-0.12, -0.50),node1.pos,decoration:"wave",angle:0.84rad)
edge(node3.pos,(-0.01, 0.01),node2.pos,decoration:"arrow",angle:3.14rad)
edge(node2.pos,(-0.58, 0.19),node5.pos,decoration:"arrow",angle:2.45rad)
edge(node4.pos,(0.57, 0.19),node3.pos,decoration:"arrow",angle:3.83rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node4.pos,(1.00, 0.00),decoration:"coil",angle:1.80rad)
edge(node5.pos,(-1.00, 0.00),decoration:"coil",angle:-1.79rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.75rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.53rad)
})
let embedding52f2=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.77))
node(node0.pos)
let node1= (pos:(-0.32, -0.64))
node(node1.pos)
let node2= (pos:(0.39, 0.00))
node(node2.pos)
let node3= (pos:(0.59, 0.47))
node(node3.pos)
let node4= (pos:(-0.74, 0.86))
node(node4.pos)
let node5= (pos:(-0.29, 0.53))
node(node5.pos)
edge(node0.pos,(0.11, -0.74),node1.pos,decoration:"arrow",angle:3.00rad)
edge(node0.pos,(0.50, -0.39),node2.pos,decoration:"wave",angle:-1.34rad)
edge(node3.pos,(0.08, -0.10),node1.pos,decoration:"wave",angle:0.89rad)
edge(node3.pos,(0.58, 0.21),node2.pos,decoration:"arrow",angle:-1.95rad)
edge(node2.pos,(0.03, 0.27),node5.pos,decoration:"arrow",angle:2.48rad)
edge(node4.pos,(-0.44, 0.82),node5.pos,decoration:"coil",angle:2.54rad)
edge(node5.pos,(-0.60, 0.59),node4.pos,decoration:"arrow",angle:2.49rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.64rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.05rad)
})
let embedding53i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.85))
node(node0.pos)
let node1= (pos:(0.57, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.16))
node(node2.pos)
let node3= (pos:(0.91, -0.08))
node(node3.pos)
let node4= (pos:(-0.07, 0.71))
node(node4.pos)
let node5= (pos:(-0.74, 0.71))
node(node5.pos)
edge(node1.pos,(0.02, -0.85),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((0.03, -0.97),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.88),(0.02, -0.91),(-0.42, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.51),node2.pos,decoration:"wave",angle:-1.22rad)
cetz.draw.content((-0.53, -0.47),angle:-1.22rad,[q])
cetz.draw.hobby((-0.49, -0.76),(-0.59, -0.48),(-0.70, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.45),node1.pos,decoration:"wave",angle:1.13rad)
cetz.draw.content((0.61, -0.40),angle:1.13rad,[q])
cetz.draw.hobby((0.82, -0.12),(0.67, -0.41),(0.54, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.76, 0.28),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.88, 0.28),angle:1.53rad,[-p-q-k[3]])
cetz.draw.hobby((-0.84, -0.07),(-0.82, 0.28),(-0.81, 0.63),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.40, 0.74),node5.pos,decoration:"coil",angle:-0.00rad)
cetz.draw.content((-0.40, 0.86),angle:-0.00rad,[k[3]])
cetz.draw.hobby((-0.12, 0.78),(-0.41, 0.80),(-0.69, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.73, -1.04),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.60, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.73rad)
cetz.draw.content((0.83, -0.80),angle:2.73rad,[-k[0]])
cetz.draw.hobby((0.68, -0.80),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.23rad)
cetz.draw.content((1.07, -0.17),angle:-1.23rad,[-p-2 q-k[3]])
cetz.draw.hobby((1.00, -0.15),(1.02, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.81, -0.34),angle:0.68rad,[-p-2 q-k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.82, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.76rad)
cetz.draw.content((-0.49, 0.41),angle:-2.76rad,[p+q+k[3]])
cetz.draw.hobby((-0.88, 0.32),(-0.14, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.50rad)
cetz.draw.content((0.84, 0.15),angle:4.50rad,[p+q+k[3]])
cetz.draw.hobby((0.87, 0.03),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.29rad)
cetz.draw.content((-0.96, 0.78),angle:2.29rad,[p+q])
cetz.draw.hobby((-0.98, 0.89),(-0.86, 0.74),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.41rad)
cetz.draw.content((0.44, 0.97),angle:3.41rad,[p+q])
cetz.draw.hobby((0.01, 0.79),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
})
let embedding53i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.81))
node(node0.pos)
let node1= (pos:(0.53, -0.85))
node(node1.pos)
let node2= (pos:(-0.91, -0.08))
node(node2.pos)
let node3= (pos:(0.78, -0.16))
node(node3.pos)
let node4= (pos:(0.74, 0.71))
node(node4.pos)
let node5= (pos:(0.07, 0.71))
node(node5.pos)
edge(node1.pos,(-0.02, -0.85),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((-0.03, -0.97),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.91),(-0.02, -0.91),(-0.46, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.45),node2.pos,decoration:"wave",angle:-1.14rad)
cetz.draw.content((-0.61, -0.40),angle:-1.14rad,[q])
cetz.draw.hobby((-0.54, -0.72),(-0.67, -0.41),(-0.82, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.51),node1.pos,decoration:"wave",angle:1.22rad)
cetz.draw.content((0.53, -0.47),angle:1.22rad,[q])
cetz.draw.hobby((0.70, -0.20),(0.59, -0.48),(0.49, -0.76),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.76, 0.28),node3.pos,decoration:"arrow",angle:-1.53rad)
cetz.draw.content((0.88, 0.28),angle:-1.53rad,[-p-q-k[3]])
cetz.draw.hobby((0.81, 0.62),(0.82, 0.28),(0.84, -0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.40, 0.74),node5.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.40, 0.86),angle:0.00rad,[k[3]])
cetz.draw.hobby((0.69, 0.78),(0.40, 0.80),(0.12, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.74, -1.02),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.64, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.80, -0.81),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.64, -0.82),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((0.97, -0.15),angle:-0.68rad,[-p-2 q-k[3]])
cetz.draw.hobby((0.90, -0.17),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.24rad)
cetz.draw.content((-0.84, -0.25),angle:1.24rad,[-p-2 q-k[3]])
cetz.draw.hobby((-0.91, -0.26),(-0.89, -0.19),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:1.78rad)
cetz.draw.content((-1.07, 0.10),angle:1.78rad,[p+q+k[3]])
cetz.draw.hobby((-1.04, 0.22),(-0.99, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.58, 0.63),angle:2.76rad,[p+q+k[3]])
cetz.draw.hobby((0.18, 0.73),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((-0.50, 0.74),angle:2.88rad,[p+q])
cetz.draw.hobby((-0.92, 0.92),(-0.05, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.99rad)
cetz.draw.content((0.78, 0.93),angle:3.99rad,[p+q])
cetz.draw.hobby((0.76, 0.82),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding53f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.86))
node(node0.pos)
let node1= (pos:(-0.31, -0.84))
node(node1.pos)
let node2= (pos:(0.37, 0.01))
node(node2.pos)
let node3= (pos:(0.66, -0.27))
node(node3.pos)
let node4= (pos:(-0.74, 0.57))
node(node4.pos)
let node5= (pos:(0.41, 0.77))
node(node5.pos)
edge(node0.pos,(0.10, -0.91),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(0.41, -0.46),node2.pos,decoration:"wave",angle:4.91rad)
edge(node3.pos,(0.14, -0.55),node1.pos,decoration:"wave",angle:0.54rad)
edge(node3.pos,(0.62, -0.02),node2.pos,decoration:"arrow",angle:2.38rad)
edge(node2.pos,(0.39, 0.41),node5.pos,decoration:"arrow",angle:1.52rad)
edge(node5.pos,(-0.18, 0.69),node4.pos,decoration:"arrow",angle:3.32rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.00rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.81rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.25rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.37rad)
})
let embedding53f1=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.84))
node(node0.pos)
let node1= (pos:(-0.54, -0.86))
node(node1.pos)
let node2= (pos:(-0.66, -0.26))
node(node2.pos)
let node3= (pos:(-0.37, 0.01))
node(node3.pos)
let node4= (pos:(-0.41, 0.77))
node(node4.pos)
let node5= (pos:(0.75, 0.57))
node(node5.pos)
edge(node0.pos,(-0.10, -0.91),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node0.pos,(-0.14, -0.55),node2.pos,decoration:"wave",angle:-0.54rad)
edge(node3.pos,(-0.41, -0.46),node1.pos,decoration:"wave",angle:1.37rad)
edge(node3.pos,(-0.62, -0.02),node2.pos,decoration:"arrow",angle:3.89rad)
edge(node4.pos,(-0.39, 0.41),node3.pos,decoration:"arrow",angle:-1.52rad)
edge(node5.pos,(0.18, 0.69),node4.pos,decoration:"arrow",angle:2.97rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.47rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.99rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.91rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.04rad)
})
let embedding53f2=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.76))
node(node0.pos)
let node1= (pos:(-0.48, -0.83))
node(node1.pos)
let node2= (pos:(0.03, 0.12))
node(node2.pos)
let node3= (pos:(-0.08, -0.13))
node(node3.pos)
let node4= (pos:(0.47, 0.78))
node(node4.pos)
let node5= (pos:(-0.46, 0.83))
node(node5.pos)
edge(node0.pos,(0.01, -0.85),node1.pos,decoration:"arrow",angle:-3.07rad)
edge(node0.pos,(0.30, -0.33),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.30, -0.49),node1.pos,decoration:"wave",angle:1.06rad)
edge(node3.pos,(-0.22, 0.06),node2.pos,decoration:"arrow",angle:1.29rad)
edge(node2.pos,(-0.23, 0.49),node5.pos,decoration:"arrow",angle:2.17rad)
edge(node4.pos,(0.25, 0.35),node3.pos,decoration:"arrow",angle:-2.10rad)
edge(node4.pos,(0.01, 0.86),node5.pos,decoration:"coil",angle:-0.06rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.84rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
})
let embedding54f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.92))
node(node0.pos)
let node1= (pos:(-0.51, -0.92))
node(node1.pos)
let node2= (pos:(0.31, -0.24))
node(node2.pos)
let node3= (pos:(-0.32, -0.24))
node(node3.pos)
let node4= (pos:(-0.14, 0.46))
node(node4.pos)
let node5= (pos:(0.14, 0.46))
node(node5.pos)
edge(node0.pos,(0.00, -0.96),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.45, -0.58),node2.pos,decoration:"wave",angle:-1.29rad)
edge(node3.pos,(-0.45, -0.58),node1.pos,decoration:"wave",angle:1.30rad)
edge(node3.pos,(-0.00, -0.27),node2.pos,decoration:"arrow",angle:6.28rad)
edge(node2.pos,(0.28, 0.13),node5.pos,decoration:"arrow",angle:1.81rad)
edge(node4.pos,(-0.28, 0.13),node3.pos,decoration:"arrow",angle:4.47rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.98rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.98rad)
edge(node4.pos,(-1.00, 0.00),decoration:"coil",angle:0.50rad)
edge(node5.pos,(1.00, 0.00),decoration:"coil",angle:-0.50rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.70rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.58rad)
})
let embedding55f0=cetz.canvas(length:50%,{
let node0= (pos:(0.45, -0.85))
node(node0.pos)
let node1= (pos:(-0.55, -0.87))
node(node1.pos)
let node2= (pos:(0.10, -0.15))
node(node2.pos)
let node3= (pos:(-0.55, -0.14))
node(node3.pos)
let node4= (pos:(0.48, 0.69))
node(node4.pos)
let node5= (pos:(0.00, 0.74))
node(node5.pos)
edge(node0.pos,(-0.05, -0.90),node1.pos,decoration:"arrow",angle:-3.13rad)
edge(node0.pos,(0.29, -0.50),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.56, -0.51),node1.pos,decoration:"wave",angle:1.57rad)
edge(node4.pos,(-0.04, 0.28),node3.pos,decoration:"arrow",angle:3.82rad)
edge(node5.pos,(0.25, 0.83),node4.pos,decoration:"arrow",angle:-0.10rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.74rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.94rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.73rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.75rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.68rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.89rad)
})
let embedding55f1=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.87))
node(node0.pos)
let node1= (pos:(-0.45, -0.85))
node(node1.pos)
let node2= (pos:(0.55, -0.14))
node(node2.pos)
let node3= (pos:(-0.10, -0.15))
node(node3.pos)
let node4= (pos:(-0.00, 0.74))
node(node4.pos)
let node5= (pos:(-0.48, 0.69))
node(node5.pos)
edge(node0.pos,(0.05, -0.90),node1.pos,decoration:"arrow",angle:3.13rad)
edge(node0.pos,(0.56, -0.51),node2.pos,decoration:"wave",angle:-1.57rad)
edge(node3.pos,(-0.29, -0.50),node1.pos,decoration:"wave",angle:1.11rad)
edge(node2.pos,(0.05, 0.28),node5.pos,decoration:"arrow",angle:2.46rad)
edge(node5.pos,(-0.25, 0.83),node4.pos,decoration:"arrow",angle:0.11rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.94rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.75rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.75rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.56rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.39rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.60rad)
})
let embedding56f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.89))
node(node0.pos)
let node1= (pos:(-0.51, -0.89))
node(node1.pos)
let node2= (pos:(0.47, -0.19))
node(node2.pos)
let node3= (pos:(-0.47, -0.19))
node(node3.pos)
let node4= (pos:(0.69, 0.55))
node(node4.pos)
let node5= (pos:(-0.69, 0.55))
node(node5.pos)
edge(node0.pos,(0.00, -0.93),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.50, -0.54),node2.pos,decoration:"wave",angle:-1.51rad)
edge(node3.pos,(-0.50, -0.55),node1.pos,decoration:"wave",angle:1.51rad)
edge(node2.pos,(-0.12, 0.21),node5.pos,decoration:"arrow",angle:2.57rad)
edge(node4.pos,(0.11, 0.20),node3.pos,decoration:"arrow",angle:3.71rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.88rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.88rad)
edge(node4.pos,(1.00, 0.33),decoration:"coil",angle:2.53rad)
edge(node5.pos,(-1.00, 0.33),decoration:"coil",angle:-2.53rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.18rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
})
let embedding56f1=cetz.canvas(length:50%,{
let node0= (pos:(0.44, -0.70))
node(node0.pos)
let node1= (pos:(-0.57, -0.76))
node(node1.pos)
let node2= (pos:(0.10, 0.25))
node(node2.pos)
let node3= (pos:(-0.66, 0.03))
node(node3.pos)
let node4= (pos:(0.04, 0.74))
node(node4.pos)
let node5= (pos:(0.62, 0.97))
node(node5.pos)
edge(node0.pos,(-0.06, -0.76),node1.pos,decoration:"arrow",angle:-3.08rad)
edge(node0.pos,(0.28, -0.22),node2.pos,decoration:"wave",angle:-1.23rad)
edge(node3.pos,(-0.63, -0.37),node1.pos,decoration:"wave",angle:1.68rad)
edge(node4.pos,(-0.35, 0.41),node3.pos,decoration:"arrow",angle:3.94rad)
edge(node4.pos,(0.38, 0.77),node5.pos,decoration:"coil",angle:-2.74rad)
edge(node5.pos,(0.28, 1.00),node4.pos,decoration:"arrow",angle:3.51rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.63rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.04rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.87rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.55rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.21rad)
})
let embedding56f2=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.76))
node(node0.pos)
let node1= (pos:(-0.44, -0.70))
node(node1.pos)
let node2= (pos:(0.66, 0.03))
node(node2.pos)
let node3= (pos:(-0.10, 0.25))
node(node3.pos)
let node4= (pos:(-0.62, 0.97))
node(node4.pos)
let node5= (pos:(-0.04, 0.73))
node(node5.pos)
edge(node0.pos,(0.07, -0.76),node1.pos,decoration:"arrow",angle:3.08rad)
edge(node0.pos,(0.63, -0.37),node2.pos,decoration:"wave",angle:-1.68rad)
edge(node3.pos,(-0.28, -0.23),node1.pos,decoration:"wave",angle:1.23rad)
edge(node2.pos,(0.35, 0.40),node5.pos,decoration:"arrow",angle:2.35rad)
edge(node4.pos,(-0.38, 0.76),node5.pos,decoration:"coil",angle:2.72rad)
edge(node5.pos,(-0.28, 1.00),node4.pos,decoration:"arrow",angle:2.77rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.63rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.87rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.04rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:3.07rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.74rad)
})
let embedding57i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.19))
node(node2.pos)
let node3= (pos:(0.21, -0.10))
node(node3.pos)
let node4= (pos:(0.67, 0.69))
node(node4.pos)
let node5= (pos:(0.05, 0.59))
node(node5.pos)
edge(node1.pos,(-0.04, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.92),(-0.04, -0.96),(-0.46, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.54),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.75, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.64, -0.83),(-0.69, -0.55),(-0.71, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.48),node1.pos,decoration:"wave",angle:1.90rad)
cetz.draw.content((0.48, -0.44),angle:1.90rad,[q])
cetz.draw.hobby((0.30, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.22, -0.14),node2.pos,decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.24, -0.02),angle:3.25rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.12, -0.05),(-0.22, -0.08),(-0.57, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.28),node3.pos,decoration:"arrow",angle:-2.09rad)
cetz.draw.content((0.58, 0.22),angle:-2.09rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.70, 0.58),(0.53, 0.24),(0.32, -0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"coil",angle:0.16rad)
cetz.draw.content((0.33, 0.82),angle:0.16rad,[k[3]])
cetz.draw.hobby((0.62, 0.76),(0.34, 0.76),(0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.77, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.88, -0.20),angle:2.64rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
cetz.draw.content((0.59, 0.40),angle:2.59rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.17, 0.59),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((-0.52, 0.68),angle:2.77rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.90rad)
cetz.draw.content((0.75, 0.93),angle:3.90rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.70, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding57i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.85))
node(node0.pos)
let node1= (pos:(0.56, -0.88))
node(node1.pos)
let node2= (pos:(-0.22, -0.10))
node(node2.pos)
let node3= (pos:(0.65, -0.20))
node(node3.pos)
let node4= (pos:(-0.05, 0.59))
node(node4.pos)
let node5= (pos:(-0.67, 0.69))
node(node5.pos)
edge(node1.pos,(0.04, -0.90),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.04, -1.02),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.95),(0.04, -0.96),(-0.38, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.37, -0.48),node2.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((-0.48, -0.44),angle:4.39rad,[q])
cetz.draw.hobby((-0.51, -0.76),(-0.42, -0.45),(-0.30, -0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.54),node1.pos,decoration:"wave",angle:1.45rad)
cetz.draw.content((0.75, -0.56),angle:1.45rad,[q])
cetz.draw.hobby((0.71, -0.26),(0.69, -0.55),(0.64, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, -0.14),node2.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((0.23, -0.02),angle:3.04rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.57, -0.12),(0.22, -0.08),(-0.13, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.48, 0.28),node5.pos,decoration:"arrow",angle:2.09rad)
cetz.draw.content((-0.58, 0.22),angle:2.09rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.32, -0.07),(-0.53, 0.24),(-0.70, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.70),node5.pos,decoration:"coil",angle:-0.16rad)
cetz.draw.content((-0.33, 0.82),angle:-0.16rad,[k[3]])
cetz.draw.hobby((-0.08, 0.67),(-0.34, 0.76),(-0.62, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.70, -1.04),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.55, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.81, -0.82),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.67, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.59rad)
cetz.draw.content((-0.46, 0.19),angle:-2.59rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.10, 0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.65rad)
cetz.draw.content((0.76, 0.01),angle:3.65rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.70, -0.09),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.92, 0.76),angle:2.38rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.79, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((0.43, 0.90),angle:3.52rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.02, 0.68),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding57f0=cetz.canvas(length:50%,{
let node0= (pos:(0.44, -0.84))
node(node0.pos)
let node1= (pos:(-0.57, -0.86))
node(node1.pos)
let node2= (pos:(0.09, -0.12))
node(node2.pos)
let node3= (pos:(-0.76, -0.14))
node(node3.pos)
let node4= (pos:(-0.51, 0.73))
node(node4.pos)
let node5= (pos:(0.69, 0.70))
node(node5.pos)
edge(node0.pos,(-0.06, -0.88),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node0.pos,(0.28, -0.47),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.67, -0.51),node1.pos,decoration:"wave",angle:1.83rad)
edge(node4.pos,(-0.64, 0.30),node3.pos,decoration:"arrow",angle:4.43rad)
edge(node5.pos,(0.10, 0.74),node4.pos,decoration:"arrow",angle:3.12rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.47rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.91rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.75rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.26rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.78rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.76rad)
})
let embedding57f1=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.86))
node(node0.pos)
let node1= (pos:(-0.44, -0.84))
node(node1.pos)
let node2= (pos:(0.76, -0.14))
node(node2.pos)
let node3= (pos:(-0.09, -0.12))
node(node3.pos)
let node4= (pos:(-0.69, 0.71))
node(node4.pos)
let node5= (pos:(0.51, 0.73))
node(node5.pos)
edge(node0.pos,(0.06, -0.88),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(0.67, -0.51),node2.pos,decoration:"wave",angle:-1.83rad)
edge(node3.pos,(-0.28, -0.47),node1.pos,decoration:"wave",angle:1.11rad)
edge(node2.pos,(0.65, 0.31),node5.pos,decoration:"arrow",angle:1.85rad)
edge(node5.pos,(-0.09, 0.74),node4.pos,decoration:"arrow",angle:3.16rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.91rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.46rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.26rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.54rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.52rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.50rad)
})
let embedding57f2=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.78))
node(node0.pos)
let node1= (pos:(-0.53, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.02))
node(node2.pos)
let node3= (pos:(-0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.36, 0.78))
node(node4.pos)
let node5= (pos:(-0.36, 0.78))
node(node5.pos)
edge(node0.pos,(0.00, -0.81),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(0.56, -0.39),node2.pos,decoration:"wave",angle:-1.62rad)
edge(node3.pos,(-0.56, -0.39),node1.pos,decoration:"wave",angle:1.61rad)
edge(node2.pos,(0.11, 0.38),node5.pos,decoration:"arrow",angle:2.45rad)
edge(node4.pos,(-0.11, 0.38),node3.pos,decoration:"arrow",angle:-2.45rad)
edge(node4.pos,(0.00, 0.84),node5.pos,decoration:"coil",angle:-0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.10rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.10rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.81rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.47rad)
})
let embedding58f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.89))
node(node0.pos)
let node1= (pos:(-0.53, -0.89))
node(node1.pos)
let node2= (pos:(0.68, -0.20))
node(node2.pos)
let node3= (pos:(-0.68, -0.20))
node(node3.pos)
let node4= (pos:(-0.17, 0.56))
node(node4.pos)
let node5= (pos:(0.17, 0.56))
node(node5.pos)
edge(node0.pos,(-0.00, -0.91),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.61, -0.55),node2.pos,decoration:"wave",angle:-1.78rad)
edge(node3.pos,(-0.61, -0.55),node1.pos,decoration:"wave",angle:1.78rad)
edge(node2.pos,(0.43, 0.19),node5.pos,decoration:"arrow",angle:2.17rad)
edge(node4.pos,(-0.43, 0.19),node3.pos,decoration:"arrow",angle:4.12rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.74rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(-1.00, 0.33),decoration:"coil",angle:0.27rad)
edge(node5.pos,(1.00, 0.33),decoration:"coil",angle:-0.27rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.78rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.50rad)
})
let embedding59i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, -0.86))
node(node0.pos)
let node1= (pos:(0.49, -0.88))
node(node1.pos)
let node2= (pos:(0.36, -0.16))
node(node2.pos)
let node3= (pos:(0.05, -0.14))
node(node3.pos)
let node4= (pos:(-0.01, 0.74))
node(node4.pos)
let node5= (pos:(-0.53, 0.69))
node(node5.pos)
edge(node1.pos,(0.05, -0.94),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.04, -1.06),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.96),(0.05, -1.00),(-0.31, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.53),node2.pos,decoration:"wave",angle:3.90rad)
cetz.draw.content((-0.12, -0.44),angle:3.90rad,[q])
cetz.draw.hobby((-0.35, -0.75),(-0.05, -0.46),(0.25, -0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.53),node1.pos,decoration:"wave",angle:2.11rad)
cetz.draw.content((0.17, -0.60),angle:2.11rad,[q])
cetz.draw.hobby((0.04, -0.25),(0.21, -0.54),(0.39, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.10, 0.27),node5.pos,decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.18, 0.19),angle:2.38rad,[-1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((0.23, -0.12),(-0.13, 0.22),(-0.49, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.28, 0.80),node5.pos,decoration:"coil",angle:0.10rad)
cetz.draw.content((-0.29, 0.92),angle:0.10rad,[k[3]])
cetz.draw.hobby((-0.04, 0.82),(-0.29, 0.86),(-0.52, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.67, -1.05),angle:-2.92rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.47, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.91rad)
cetz.draw.content((0.77, -0.82),angle:2.91rad,[-k[0]])
cetz.draw.hobby((0.60, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.96rad)
cetz.draw.content((-0.46, -0.36),angle:-2.96rad,[1/3 p+2/3 q+1/3 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.04, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.71, -0.13),angle:2.88rad,[1/3 p+2/3 q+1/3 k[3]])
cetz.draw.hobby((0.48, -0.13),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.46, 0.43),angle:-2.75rad,[1/3 p-1/3 q+1/3 k[3]])
cetz.draw.hobby((-0.88, 0.32),(-0.08, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.60rad)
cetz.draw.content((0.47, 0.20),angle:3.60rad,[1/3 p-1/3 q+1/3 k[3]])
cetz.draw.hobby((0.11, -0.04),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.83, 0.75),angle:2.56rad,[1/3 p-1/3 q-2/3 k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.65, 0.70),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.39rad)
cetz.draw.content((0.46, 0.99),angle:3.39rad,[1/3 p-1/3 q-2/3 k[3]])
cetz.draw.hobby((0.07, 0.82),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
})
let embedding59i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.88))
node(node0.pos)
let node1= (pos:(0.38, -0.86))
node(node1.pos)
let node2= (pos:(-0.05, -0.14))
node(node2.pos)
let node3= (pos:(-0.36, -0.16))
node(node3.pos)
let node4= (pos:(0.53, 0.69))
node(node4.pos)
let node5= (pos:(0.01, 0.74))
node(node5.pos)
edge(node1.pos,(-0.05, -0.94),node0.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((-0.04, -1.06),angle:-3.12rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.94),(-0.05, -1.00),(-0.42, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.53),node2.pos,decoration:"wave",angle:-2.11rad)
cetz.draw.content((-0.17, -0.60),angle:-2.11rad,[q])
cetz.draw.hobby((-0.39, -0.84),(-0.21, -0.54),(-0.04, -0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, -0.53),node1.pos,decoration:"wave",angle:2.39rad)
cetz.draw.content((0.12, -0.44),angle:2.39rad,[q])
cetz.draw.hobby((-0.25, -0.19),(0.05, -0.46),(0.35, -0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.10, 0.27),node3.pos,decoration:"arrow",angle:-2.38rad)
cetz.draw.content((0.18, 0.19),angle:-2.38rad,[-1/3 p+1/3 q-1/3 k[3]])
cetz.draw.hobby((0.49, 0.56),(0.13, 0.22),(-0.23, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.28, 0.80),node5.pos,decoration:"coil",angle:-0.10rad)
cetz.draw.content((0.29, 0.92),angle:-0.10rad,[k[3]])
cetz.draw.hobby((0.52, 0.78),(0.29, 0.86),(0.04, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.72, -1.06),angle:-2.91rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.57, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.72, -0.81),angle:2.92rad,[-k[0]])
cetz.draw.hobby((0.49, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.65, -0.36),angle:-2.88rad,[1/3 p+2/3 q+1/3 k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.44, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.96rad)
cetz.draw.content((0.50, -0.12),angle:2.96rad,[1/3 p+2/3 q+1/3 k[3]])
cetz.draw.hobby((0.06, -0.10),(0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.68rad)
cetz.draw.content((-0.58, -0.01),angle:2.68rad,[1/3 p-1/3 q+1/3 k[3]])
cetz.draw.hobby((-0.94, 0.24),(-0.16, -0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.55, 0.65),angle:2.75rad,[1/3 p-1/3 q+1/3 k[3]])
cetz.draw.hobby((0.13, 0.76),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.89rad)
cetz.draw.content((-0.52, 0.76),angle:2.89rad,[1/3 p-1/3 q-2/3 k[3]])
cetz.draw.hobby((-0.92, 0.92),(-0.10, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.73rad)
cetz.draw.content((0.70, 0.95),angle:3.73rad,[1/3 p-1/3 q-2/3 k[3]])
cetz.draw.hobby((0.59, 0.80),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding60f0=cetz.canvas(length:50%,{
let node0= (pos:(0.38, -0.84))
node(node0.pos)
let node1= (pos:(-0.32, -0.82))
node(node1.pos)
let node2= (pos:(-0.59, -0.20))
node(node2.pos)
let node3= (pos:(0.73, -0.12))
node(node3.pos)
let node4= (pos:(-0.06, 0.72))
node(node4.pos)
let node5= (pos:(-0.72, 0.70))
node(node5.pos)
edge(node0.pos,(0.03, -0.90),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(-0.10, -0.49),node2.pos,decoration:"wave",angle:-0.58rad)
edge(node3.pos,(0.21, -0.44),node1.pos,decoration:"wave",angle:0.59rad)
edge(node2.pos,(-0.67, 0.24),node5.pos,decoration:"arrow",angle:1.72rad)
edge(node4.pos,(-0.39, 0.75),node5.pos,decoration:"coil",angle:0.03rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.67rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.30rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.75rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.17rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.32rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.40rad)
})
let embedding60f1=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.83))
node(node0.pos)
let node1= (pos:(-0.38, -0.84))
node(node1.pos)
let node2= (pos:(-0.73, -0.12))
node(node2.pos)
let node3= (pos:(0.59, -0.21))
node(node3.pos)
let node4= (pos:(0.72, 0.69))
node(node4.pos)
let node5= (pos:(0.06, 0.71))
node(node5.pos)
edge(node0.pos,(-0.03, -0.90),node1.pos,decoration:"arrow",angle:-3.13rad)
edge(node0.pos,(-0.21, -0.44),node2.pos,decoration:"wave",angle:-0.59rad)
edge(node3.pos,(0.10, -0.49),node1.pos,decoration:"wave",angle:0.58rad)
edge(node4.pos,(0.67, 0.24),node3.pos,decoration:"arrow",angle:-1.71rad)
edge(node4.pos,(0.38, 0.74),node5.pos,decoration:"coil",angle:-0.03rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.89rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.89rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.30rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.67rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.11rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.76rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.88rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.97rad)
})
let embedding61f0=cetz.canvas(length:50%,{
let node0= (pos:(0.35, -0.86))
node(node0.pos)
let node1= (pos:(-0.49, -0.86))
node(node1.pos)
let node2= (pos:(-0.55, -0.22))
node(node2.pos)
let node3= (pos:(0.00, -0.07))
node(node3.pos)
let node4= (pos:(0.64, 0.69))
node(node4.pos)
let node5= (pos:(0.04, 0.60))
node(node5.pos)
edge(node0.pos,(-0.07, -0.93),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node0.pos,(-0.07, -0.55),node2.pos,decoration:"wave",angle:-0.62rad)
edge(node3.pos,(-0.25, -0.49),node1.pos,decoration:"wave",angle:1.01rad)
edge(node3.pos,(-0.30, -0.08),node2.pos,decoration:"arrow",angle:3.40rad)
edge(node4.pos,(0.36, 0.28),node3.pos,decoration:"arrow",angle:-2.26rad)
edge(node4.pos,(0.33, 0.71),node5.pos,decoration:"coil",angle:0.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.93rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.69rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.58rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.77rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.85rad)
})
let embedding61f1=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.86))
node(node0.pos)
let node1= (pos:(-0.35, -0.86))
node(node1.pos)
let node2= (pos:(-0.00, -0.07))
node(node2.pos)
let node3= (pos:(0.55, -0.22))
node(node3.pos)
let node4= (pos:(-0.04, 0.60))
node(node4.pos)
let node5= (pos:(-0.64, 0.69))
node(node5.pos)
edge(node0.pos,(0.06, -0.93),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node0.pos,(0.25, -0.49),node2.pos,decoration:"wave",angle:5.27rad)
edge(node3.pos,(0.07, -0.55),node1.pos,decoration:"wave",angle:0.62rad)
edge(node3.pos,(0.30, -0.08),node2.pos,decoration:"arrow",angle:2.88rad)
edge(node2.pos,(-0.36, 0.28),node5.pos,decoration:"arrow",angle:2.26rad)
edge(node4.pos,(-0.33, 0.71),node5.pos,decoration:"coil",angle:-0.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.93rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.58rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.59rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.43rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.51rad)
})
let embedding62f0=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.87))
node(node0.pos)
let node1= (pos:(-0.45, -0.85))
node(node1.pos)
let node2= (pos:(0.54, -0.14))
node(node2.pos)
let node3= (pos:(-0.09, -0.15))
node(node3.pos)
let node4= (pos:(-0.00, 0.74))
node(node4.pos)
let node5= (pos:(-0.48, 0.69))
node(node5.pos)
edge(node0.pos,(0.05, -0.90),node1.pos,decoration:"arrow",angle:3.12rad)
edge(node0.pos,(0.56, -0.51),node2.pos,decoration:"wave",angle:-1.57rad)
edge(node3.pos,(-0.29, -0.50),node1.pos,decoration:"wave",angle:1.10rad)
edge(node2.pos,(0.04, 0.28),node5.pos,decoration:"arrow",angle:2.46rad)
edge(node4.pos,(-0.26, 0.82),node5.pos,decoration:"coil",angle:0.12rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.94rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.75rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.75rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.56rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.60rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.39rad)
})
let embedding62f1=cetz.canvas(length:50%,{
let node0= (pos:(0.45, -0.85))
node(node0.pos)
let node1= (pos:(-0.55, -0.87))
node(node1.pos)
let node2= (pos:(0.10, -0.15))
node(node2.pos)
let node3= (pos:(-0.55, -0.14))
node(node3.pos)
let node4= (pos:(0.48, 0.69))
node(node4.pos)
let node5= (pos:(0.00, 0.74))
node(node5.pos)
edge(node0.pos,(-0.05, -0.90),node1.pos,decoration:"arrow",angle:-3.13rad)
edge(node0.pos,(0.29, -0.50),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node3.pos,(-0.56, -0.51),node1.pos,decoration:"wave",angle:1.57rad)
edge(node4.pos,(-0.05, 0.28),node3.pos,decoration:"arrow",angle:3.82rad)
edge(node4.pos,(0.25, 0.83),node5.pos,decoration:"coil",angle:-0.11rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.75rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.94rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.73rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.75rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.89rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.68rad)
})
[= embedding 1 [1, -2, -3, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
4 (1/3 dot[p,p]+2/3 dot[p,q]+1/3 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
	+2 (1/3 dot[p,p]+2/3 dot[p,q]+1/3 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/3 p+1/3 q-1/3 k[3]]^-1 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
	-4/3 (1/3 dot[p,p]+2/3 dot[p,q]+1/3 dot[q,q])^-2 prop[0,1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,1/3 p+1/3 q-1/3 k[3]]^-1 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
	+(1/3 dot[p,p]+2/3 dot[p,q]+1/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
	-2/3 (1/3 dot[p,p]+2/3 dot[p,q]+1/3 dot[q,q])^-1 prop[0,1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 -3+9+13+17],box[#embedding1i1 -3+9+11+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 2 [1, -2, -2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-2 prop[0,1/2 p-q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
4 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-2 prop[0,1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	+4 prop[0,k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 prop[0,1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
	-prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-2 prop[0,1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 prop[0,1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 -3+11+17],box[#embedding2i1 -3+13+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 3 [1, -2, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-2 prop[0,p-2 q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-q-k[3]]^-2 prop[0,p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 -3-9+13+17],box[#embedding3i1 -3-9+11+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 4 [1, -1, -3, -1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,1/3 p-2/3 q-1/3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 -1+9+13+17],box[#embedding4f1 -1+9+11+17],)
pagebreak()
[= embedding 5 [1, -1, -2, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q]^-1 prop[0,1/2 p+1/2 q-k[3]]^-2 prop[0,1/2 p-1/2 q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/4 dot[p,p]+1/2 dot[p,q]+1/4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q-k[3]]^-2 prop[0,1/2 p-1/2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 -3+9+14+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 6 [1, -1, -2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 -3+9+11+14],box[#embedding6i1 -3+9+13+14],box[#embedding6i2 -3+9+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-2 prop[0,1/2 p-q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 -1+11+17],box[#embedding6f1 -1+13+17],)
pagebreak()
[= embedding 7 [1, -1, -2, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q]^-2 prop[0,1/2 p-1/2 q]^-1 prop[0,1/2 p+1/2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/4 dot[p,p]-1/2 dot[p,q]+1/4 dot[q,q])^-1 (1/4 dot[p,p]+1/2 dot[p,q]+1/4 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 -3+9+13],box[#embedding7i1 -3+9-14+17],box[#embedding7i2 -3+9+11],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 8 [1, -1, -2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-3 (-1/2 dot[p,p]-dot[p,q]-1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
	+9 (-1/2 dot[p,p]-dot[p,q]-1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
	+9/2 (-1/2 dot[p,p]-dot[p,q]-1/2 dot[q,q])^-2 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
	+(-1/2 dot[p,p]-dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
	-3/2 (-1/2 dot[p,p]-dot[p,q]-1/2 dot[q,q])^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 -3+9+11-14],box[#embedding8i1 -3+9+13-14],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 9 [1, -1, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-2 prop[0,p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-2 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-2 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 -3+14+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 10 [1, -1, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-2 prop[0,p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-2 prop[0,p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 -3+11+14],box[#embedding10i1 -3+13+14],box[#embedding10i2 -3+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-2 prop[0,p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 -1-9+13+17],box[#embedding10f1 -1-9+11+17],)
pagebreak()
[= embedding 11 [1, -1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,p]^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding11i0 -3+11],box[#embedding11i1 -3+13],box[#embedding11i2 -3-14+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 12 [1, -1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-2 prop[0,p+2 k[3]]^-1 prop[0,p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-1 prop[0,p+k[3]]^-2 prop[0,p-q+k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p-q+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,p-q+k[3]]^-1 dot[p,p]^-2
	+2 prop[0,p+k[3]]^-2 prop[0,p+2 k[3]]^-1 prop[0,p-q+k[3]]^-1 dot[p,p]^-1
	+4 prop[0,p+k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,p-q+k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding12i0 -3+11-14],box[#embedding12i1 -3+13-14],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 13 [1, -1, 0, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,1/2 p-1/2 q]^-1 prop[0,1/2 p+1/2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/4 dot[p,p]-1/2 dot[p,q]+1/4 dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,1/2 p+1/2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13i0 -3-9+14+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 14 [1, -1, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,q+k[2]]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding14i0 -3-9+11+14],box[#embedding14i1 -3-9+13+14],box[#embedding14i2 -3-9+17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 15 [1, -1, 0, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding15i0 -3-9+13],box[#embedding15i1 -3-9-14+17],box[#embedding15i2 -3-9+11],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 16 [1, -1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+q]^-1 prop[0,-p+2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16i0 -3-9+11-14],box[#embedding16i1 -3-9+13-14],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 17 [1, 0, -2, -2] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q]^-1 prop[0,1/2 p+1/2 q-k[3]]^-2 prop[0,1/2 p-1/2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding17f0 -1+9+14+17],)
pagebreak()
[= embedding 18 [1, 0, -2, -1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding18f0 -1+9+11+14],box[#embedding18f1 -1+9+13+14],box[#embedding18f2 -1+9+17],)
pagebreak()
[= embedding 19 [1, 0, -2, 0] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q]^-2 prop[0,1/2 p-1/2 q]^-1 prop[0,1/2 p+1/2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding19f0 -1+9-14+17],box[#embedding19f1 -1+9+11],box[#embedding19f2 -1+9+13],)
pagebreak()
[= embedding 20 [1, 0, -2, 1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding20f0 -1+9+11-14],box[#embedding20f1 -1+9+13-14],)
pagebreak()
[= embedding 21 [1, 0, -1, -2] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-2 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding21f0 -1+14+17],)
pagebreak()
[= embedding 22 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-2
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding22i0 -3+9-13+17],box[#embedding22i1 -3+9-11+17],box[#embedding22i2 -3+9+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-2 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding22f0 -1+13+14],box[#embedding22f1 -1+11+14],box[#embedding22f2 -1+17],)
pagebreak()
[= embedding 23 [1, 0, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-2 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding23i0 -3+9],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding23f0 -1+11],box[#embedding23f1 -1-14+17],box[#embedding23f2 -1+13],)
pagebreak()
[= embedding 24 [1, 0, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2
	-2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding24i0 -3+9+13-17],box[#embedding24i1 -3+9+11-17],box[#embedding24i2 -3+9-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-2 prop[0,p+2 k[3]]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding24f0 -1+13-14],box[#embedding24f1 -1+11-14],)
pagebreak()
[= embedding 25 [1, 0, 0, -2] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,1/2 p-1/2 q]^-1 prop[0,1/2 p+1/2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding25f0 -1-9+14+17],)
pagebreak()
[= embedding 26 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding26i0 -3-11+17],box[#embedding26i1 -3-13+17],box[#embedding26i2 -3+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding26f0 -1-9+11+14],box[#embedding26f1 -1-9+13+14],box[#embedding26f2 -1-9+17],)
pagebreak()
[= embedding 27 [1, 0, 0, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding27i0 -3],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding27f0 -1-9-14+17],box[#embedding27f1 -1-9+11],box[#embedding27f2 -1-9+13],)
pagebreak()
[= embedding 28 [1, 0, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-2 prop[0,-p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding28i0 -3+11-17],box[#embedding28i1 -3+13-17],box[#embedding28i2 -3-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+q]^-1 prop[0,-p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding28f0 -1-9+11-14],box[#embedding28f1 -1-9+13-14],)
pagebreak()
[= embedding 29 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-2 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1
	+4 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	+4 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-2 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	+(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-2
	-2 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-2 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding29i0 -3-9-13+17],box[#embedding29i1 -3-9-11+17],box[#embedding29i2 -3-9+14],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 30 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p+q]^-2 prop[0,-p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding30i0 -3-9],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 31 [1, 0, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p-k[3]]^-1 prop[0,-p+q-k[3]]^-2
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p+q-k[3]]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding31i0 -3-9+13-17],box[#embedding31i1 -3-9+11-17],box[#embedding31i2 -3-9-14],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 32 [1, 1, -1, -1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding32f0 -1+9+14],box[#embedding32f1 -1+9-13+17],box[#embedding32f2 -1+9-11+17],)
pagebreak()
[= embedding 33 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-2 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding33f0 -1+9],)
pagebreak()
[= embedding 34 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-2 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding34f0 -1+9-14],box[#embedding34f1 -1+9+13-17],box[#embedding34f2 -1+9+11-17],)
pagebreak()
[= embedding 35 [1, 1, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,q+k[2]]^-2 prop[0,p+2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding35i0 -3+9-11+14],box[#embedding35i1 -3+9-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding35f0 -1-11+17],box[#embedding35f1 -1+14],box[#embedding35f2 -1-13+17],)
pagebreak()
[= embedding 36 [1, 1, 0, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding36i0 -3+9-13],box[#embedding36i1 -3+9+14-17],box[#embedding36i2 -3+9-11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding36f0 -1],)
pagebreak()
[= embedding 37 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding37i0 -3+9-11-14],box[#embedding37i1 -3+9-13-14],box[#embedding37i2 -3+9-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-2 prop[0,-p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding37f0 -1+11-17],box[#embedding37f1 -1-14],box[#embedding37f2 -1+13-17],)
pagebreak()
[= embedding 38 [1, 1, 0, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-1/2 p-1/2 q]^-1 prop[0,-1/2 p+1/2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/4 dot[p,p]+1/2 dot[p,q]+1/4 dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-1/2 p+1/2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding38i0 -3+9-14-17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 39 [1, 1, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p+k[3]]^-2 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-1 prop[0,-p+k[3]]^-2 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-2
	+2 prop[0,-p+k[3]]^-2 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
	+4 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding39i0 -3-11+14],box[#embedding39i1 -3-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-2 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding39f0 -1-9+14],box[#embedding39f1 -1-9-13+17],box[#embedding39f2 -1-9-11+17],)
pagebreak()
[= embedding 40 [1, 1, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-2 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding40i0 -3-11],box[#embedding40i1 -3-13],box[#embedding40i2 -3+14-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p+q]^-2 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding40f0 -1-9],)
pagebreak()
[= embedding 41 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p-k[3]]^-2 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p-k[3]]^-2 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding41i0 -3-11-14],box[#embedding41i1 -3-13-14],box[#embedding41i2 -3-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p-k[3]]^-1 prop[0,-p+q-k[3]]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding41f0 -1-9-14],box[#embedding41f1 -1-9+13-17],box[#embedding41f2 -1-9+11-17],)
pagebreak()
[= embedding 42 [1, 1, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-2 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,k[3]]^-1 prop[0,-p-2 k[3]]^-2 prop[0,-p-q-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,-p-2 k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-2 prop[0,-p-q-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding42i0 -3-14-17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 43 [1, 1, 2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-3 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+9 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+9/2 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-2 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+(-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-3/2 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding43i0 -3-9-11+14],box[#embedding43i1 -3-9-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 44 [1, 1, 2, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q]^-2 prop[0,-1/2 p-1/2 q]^-1 prop[0,-1/2 p+1/2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/4 dot[p,p]-1/2 dot[p,q]+1/4 dot[q,q])^-2 (1/4 dot[p,p]+1/2 dot[p,q]+1/4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding44i0 -3-9-13],box[#embedding44i1 -3-9+14-17],box[#embedding44i2 -3-9-11],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 45 [1, 1, 2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
	-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
	-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding45i0 -3-9-11-14],box[#embedding45i1 -3-9-13-14],box[#embedding45i2 -3-9-17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 46 [1, 1, 2, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q]^-1 prop[0,-1/2 p+1/2 q-k[3]]^-2 prop[0,-1/2 p-1/2 q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(1/4 dot[p,p]-1/2 dot[p,q]+1/4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q-k[3]]^-2 prop[0,-1/2 p-1/2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding46i0 -3-9-14-17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 47 [1, 2, 0, -1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,q+k[2]]^-2 prop[0,p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding47f0 -1+9-11+14],box[#embedding47f1 -1+9-13+14],)
pagebreak()
[= embedding 48 [1, 2, 0, 0] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-2 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding48f0 -1+9+14-17],box[#embedding48f1 -1+9-11],box[#embedding48f2 -1+9-13],)
pagebreak()
[= embedding 49 [1, 2, 0, 1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding49f0 -1+9-11-14],box[#embedding49f1 -1+9-13-14],box[#embedding49f2 -1+9-17],)
pagebreak()
[= embedding 50 [1, 2, 0, 2] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-2 prop[0,-1/2 p-1/2 q]^-1 prop[0,-1/2 p+1/2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding50f0 -1+9-14-17],)
pagebreak()
[= embedding 51 [1, 2, 1, -1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p+k[3]]^-2 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding51f0 -1-13+14],box[#embedding51f1 -1-11+14],)
pagebreak()
[= embedding 52 [1, 2, 1, 0] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-2 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding52f0 -1-11],box[#embedding52f1 -1+14-17],box[#embedding52f2 -1-13],)
pagebreak()
[= embedding 53 [1, 2, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-2 prop[0,-p-2 q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-2 prop[0,-p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding53i0 -3+9-13-17],box[#embedding53i1 -3+9-11-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p-k[3]]^-2 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding53f0 -1-13-14],box[#embedding53f1 -1-11-14],box[#embedding53f2 -1-17],)
pagebreak()
[= embedding 54 [1, 2, 1, 2] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-2 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding54f0 -1-14-17],)
pagebreak()
[= embedding 55 [1, 2, 2, -1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-2 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding55f0 -1-9-11+14],box[#embedding55f1 -1-9-13+14],)
pagebreak()
[= embedding 56 [1, 2, 2, 0] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q]^-2 prop[0,-1/2 p-1/2 q]^-1 prop[0,-1/2 p+1/2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding56f0 -1-9+14-17],box[#embedding56f1 -1-9-11],box[#embedding56f2 -1-9-13],)
pagebreak()
[= embedding 57 [1, 2, 2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
4 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
	+2 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	+4 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
	-prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding57i0 -3-11-17],box[#embedding57i1 -3-13-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-2 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding57f0 -1-9-11-14],box[#embedding57f1 -1-9-13-14],box[#embedding57f2 -1-9-17],)
pagebreak()
[= embedding 58 [1, 2, 2, 2] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q]^-1 prop[0,-1/2 p+1/2 q-k[3]]^-2 prop[0,-1/2 p-1/2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding58f0 -1-9-14-17],)
pagebreak()
[= embedding 59 [1, 2, 3, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,-1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
4 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
	+2 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,-1/3 p+1/3 q-1/3 k[3]]^-1 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
	-4/3 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-2 prop[0,-1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,-1/3 p+1/3 q-1/3 k[3]]^-1 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
	+(1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
	-2/3 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 prop[0,-1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,-1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding59i0 -3-9-13-17],box[#embedding59i1 -3-9-11-17],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 60 [1, 3, 1, 1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-2 prop[0,-p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding60f0 -1+9-13-17],box[#embedding60f1 -1+9-11-17],)
pagebreak()
[= embedding 61 [1, 3, 2, 1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-2 prop[0,-1/2 p-q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding61f0 -1-11-17],box[#embedding61f1 -1-13-17],)
pagebreak()
[= embedding 62 [1, 3, 3, 1] 
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-1/3 p+1/3 q+2/3 k[3]]^-1 prop[0,-1/3 p+1/3 q-1/3 k[3]]^-2 prop[0,-1/3 p-2/3 q-1/3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding62f0 -1-9-13-17],box[#embedding62f1 -1-9-11-17],)
pagebreak()
}