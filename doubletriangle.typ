#import "@preview/cetz:0.3.0"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.78))
node(node0.pos)
let node1= (pos:(0.56, -0.79))
node(node1.pos)
let node2= (pos:(-0.47, 0.00))
node(node2.pos)
let node3= (pos:(0.55, 0.00))
node(node3.pos)
let node4= (pos:(-0.57, 0.63))
node(node4.pos)
let node5= (pos:(-0.02, 0.52))
node(node5.pos)
edge(node1.pos,(0.03, -0.83),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.03, -0.95),angle:3.14rad,[k(0)+k(1)])
cetz.draw.hobby((0.41, -0.87),(0.03, -0.89),(-0.35, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, -0.39),node1.pos,decoration:"wave",angle:-1.56rad)
cetz.draw.content((0.69, -0.39),angle:-1.56rad,[k(1)])
cetz.draw.hobby((0.61, -0.11),(0.63, -0.39),(0.62, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.48, -0.38),node2.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((-0.36, -0.38),angle:-1.62rad,[k(1)])
cetz.draw.hobby((-0.44, -0.67),(-0.42, -0.39),(-0.41, -0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.23, 0.25),node5.pos,decoration:"arrow",angle:-2.29rad)
cetz.draw.content((-0.14, 0.17),angle:-2.29rad,[k(1)+k(3)])
cetz.draw.hobby((-0.35, 0.03),(-0.19, 0.21),(-0.03, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.29),node3.pos,decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.06, 0.19),angle:5.78rad,[1/2*p+1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.44, 0.48),(-0.05, 0.25),(0.35, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.56, 0.33),node2.pos,decoration:"arrow",angle:1.72rad)
cetz.draw.content((-0.67, 0.31),angle:1.72rad,[k(3)])
cetz.draw.hobby((-0.63, 0.53),(-0.61, 0.30),(-0.56, 0.07),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.70, -1.00),angle:-2.73rad,[-k(0)])
cetz.draw.hobby((-0.84, -1.00),(-0.62, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.83, -0.79),angle:2.70rad,[-k(0)])
cetz.draw.hobby((0.72, -0.80),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.77, 0.12),angle:-0.00rad,[1/2*p-1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((0.70, 0.06),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.45, 0.15),angle:0.49rad,[1/2*p-1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.84, 0.02),(-0.12, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.44rad)
cetz.draw.content((0.44, 0.87),angle:0.44rad,[1/2*p+1/2*k(1)+1/2*k(3)])
cetz.draw.hobby((0.09, 0.64),(0.84, 0.99),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.56rad)
cetz.draw.content((-0.87, 0.72),angle:5.56rad,[1/2*p+1/2*k(1)+1/2*k(3)])
cetz.draw.hobby((-0.93, 0.86),(-0.72, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.83))
node(node0.pos)
let node1= (pos:(-0.55, -0.81))
node(node1.pos)
let node2= (pos:(0.46, -0.01))
node(node2.pos)
let node3= (pos:(-0.55, -0.03))
node(node3.pos)
let node4= (pos:(0.02, 0.51))
node(node4.pos)
let node5= (pos:(0.56, 0.61))
node(node5.pos)
edge(node0.pos,(-0.01, -0.82),node1.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((-0.01, -0.94),angle:3.12rad,[k(0)])
cetz.draw.hobby((0.36, -0.89),(-0.01, -0.88),(-0.39, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.56, -0.41),node1.pos,decoration:"wave",angle:4.72rad)
cetz.draw.content((-0.68, -0.41),angle:4.72rad,[k(1)])
cetz.draw.hobby((-0.62, -0.14),(-0.61, -0.42),(-0.61, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.50, -0.43),node2.pos,decoration:"wave",angle:-1.49rad)
cetz.draw.content((0.62, -0.42),angle:-1.49rad,[k(1)])
cetz.draw.hobby((0.58, -0.70),(0.56, -0.41),(0.53, -0.13),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.28),node5.pos,decoration:"arrow",angle:-1.74rad)
cetz.draw.content((0.67, 0.26),angle:-1.74rad,[k(1)+k(3)])
cetz.draw.hobby((0.55, 0.06),(0.61, 0.28),(0.63, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, 0.27),node5.pos,decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.05, 0.17),angle:0.52rad,[1/2*p+1/2*k(0)-1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.36, 0.01),(0.04, 0.23),(0.43, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.21, 0.23),node2.pos,decoration:"arrow",angle:2.27rad)
cetz.draw.content((0.12, 0.15),angle:2.27rad,[k(3)])
cetz.draw.hobby((0.02, 0.39),(0.17, 0.19),(0.34, 0.01),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.73, -1.01),angle:-2.74rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.00),(-0.66, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.79rad)
cetz.draw.content((0.80, -0.80),angle:2.79rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.69, -0.82),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.48rad)
cetz.draw.content((0.57, 0.36),angle:-0.48rad,[1/2*p+1/2*k(0)+1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((0.18, 0.49),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.22rad)
cetz.draw.content((-0.78, -0.13),angle:6.22rad,[1/2*p+1/2*k(0)+1/2*k(1)-1/2*k(3)])
cetz.draw.hobby((-0.85, -0.07),(-0.71, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.73rad)
cetz.draw.content((0.70, 0.89),angle:0.73rad,[1/2*p+1/2*k(0)+1/2*k(1)+1/2*k(3)])
cetz.draw.hobby((0.64, 0.75),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.84rad)
cetz.draw.content((-0.54, 0.65),angle:5.84rad,[1/2*p+1/2*k(0)+1/2*k(1)+1/2*k(3)])
cetz.draw.hobby((-0.89, 0.88),(-0.14, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.80))
node(node0.pos)
let node1= (pos:(0.53, -0.81))
node(node1.pos)
let node2= (pos:(-0.53, -0.02))
node(node2.pos)
let node3= (pos:(0.49, -0.00))
node(node3.pos)
let node4= (pos:(0.02, 0.51))
node(node4.pos)
let node5= (pos:(0.60, 0.62))
node(node5.pos)
edge(node1.pos,(-0.01, -0.82),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.01, -0.94),angle:3.14rad,[k(0)+k(1)])
cetz.draw.hobby((0.37, -0.87),(-0.01, -0.88),(-0.38, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.50, -0.41),node1.pos,decoration:"wave",angle:4.77rad)
cetz.draw.content((0.38, -0.42),angle:4.77rad,[k(1)])
cetz.draw.hobby((0.43, -0.13),(0.44, -0.41),(0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.41),node2.pos,decoration:"wave",angle:4.70rad)
cetz.draw.content((-0.66, -0.41),angle:4.70rad,[k(1)])
cetz.draw.hobby((-0.60, -0.68),(-0.60, -0.41),(-0.59, -0.13),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.02, 0.28),node5.pos,decoration:"arrow",angle:-2.63rad)
cetz.draw.content((0.08, 0.17),angle:-2.63rad,[k(1)+k(3)])
cetz.draw.hobby((-0.33, 0.02),(0.07, 0.24),(0.46, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, 0.30),node5.pos,decoration:"arrow",angle:1.39rad)
cetz.draw.content((0.68, 0.28),angle:1.39rad,[p-k(1)-2*k(3)])
cetz.draw.hobby((0.57, 0.07),(0.62, 0.29),(0.65, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.24, 0.27),node3.pos,decoration:"arrow",angle:5.45rad)
cetz.draw.content((0.15, 0.19),angle:5.45rad,[p-2*k(3)])
cetz.draw.hobby((0.04, 0.40),(0.20, 0.21),(0.37, 0.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.72, -1.01),angle:-2.73rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.65, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.81, -0.79),angle:2.75rad,[-k(0)])
cetz.draw.hobby((0.69, -0.81),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.56, 0.36),angle:2.66rad,[k(3)])
cetz.draw.hobby((0.18, 0.50),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.11rad)
cetz.draw.content((-0.77, -0.13),angle:3.11rad,[k(3)])
cetz.draw.hobby((-0.85, -0.06),(-0.68, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.76rad)
cetz.draw.content((0.72, 0.90),angle:0.76rad,[p-k(3)])
cetz.draw.hobby((0.67, 0.77),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.84rad)
cetz.draw.content((-0.54, 0.65),angle:5.84rad,[p-k(3)])
cetz.draw.hobby((-0.89, 0.88),(-0.14, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.79))
node(node0.pos)
let node1= (pos:(-0.51, -0.79))
node(node1.pos)
let node2= (pos:(0.56, -0.00))
node(node2.pos)
let node3= (pos:(-0.45, -0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.63))
node(node4.pos)
let node5= (pos:(-0.02, 0.52))
node(node5.pos)
edge(node0.pos,(0.03, -0.80),node1.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.03, -0.92),angle:-3.14rad,[k(0)])
cetz.draw.hobby((0.40, -0.86),(0.03, -0.86),(-0.35, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.51, -0.40),node1.pos,decoration:"wave",angle:4.64rad)
cetz.draw.content((-0.63, -0.39),angle:4.64rad,[k(1)])
cetz.draw.hobby((-0.53, -0.11),(-0.57, -0.39),(-0.57, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.56, -0.38),node2.pos,decoration:"wave",angle:4.71rad)
cetz.draw.content((0.44, -0.38),angle:4.71rad,[k(1)])
cetz.draw.hobby((0.50, -0.67),(0.50, -0.39),(0.50, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, 0.24),node5.pos,decoration:"arrow",angle:0.88rad)
cetz.draw.content((-0.12, 0.17),angle:0.88rad,[p+k(0)-k(1)-2*k(3)])
cetz.draw.hobby((-0.33, 0.02),(-0.17, 0.20),(-0.02, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.52, 0.32),node3.pos,decoration:"arrow",angle:4.86rad)
cetz.draw.content((-0.64, 0.30),angle:4.86rad,[p+k(0)-2*k(3)])
cetz.draw.hobby((-0.60, 0.53),(-0.58, 0.30),(-0.53, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.03, 0.29),node2.pos,decoration:"arrow",angle:2.63rad)
cetz.draw.content((-0.03, 0.19),angle:2.63rad,[k(3)])
cetz.draw.hobby((-0.42, 0.48),(-0.03, 0.25),(0.37, 0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.00),(-0.63, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.79),angle:2.69rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.72, -0.80),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.78, 0.12),angle:3.14rad,[k(1)+k(3)])
cetz.draw.hobby((0.71, 0.06),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.45, 0.16),angle:-2.65rad,[k(1)+k(3)])
cetz.draw.hobby((-0.84, 0.02),(-0.12, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.44rad)
cetz.draw.content((0.44, 0.87),angle:0.44rad,[p+k(0)-k(3)])
cetz.draw.hobby((0.09, 0.64),(0.84, 0.99),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.59rad)
cetz.draw.content((-0.85, 0.72),angle:5.59rad,[p+k(0)-k(3)])
cetz.draw.hobby((-0.92, 0.86),(-0.70, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.68, -0.63))
node(node0.pos)
let node1= (pos:(0.31, -0.77))
node(node1.pos)
let node2= (pos:(-0.77, 0.53))
node(node2.pos)
let node3= (pos:(-0.43, -0.12))
node(node3.pos)
let node4= (pos:(0.88, 0.50))
node(node4.pos)
let node5= (pos:(0.01, 0.41))
node(node5.pos)
edge(node1.pos,(-0.18, -0.73),node0.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((-0.19, -0.85),angle:3.01rad,[k(0)+k(1)])
cetz.draw.hobby((0.16, -0.82),(-0.19, -0.79),(-0.54, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.02, -0.42),node1.pos,decoration:"wave",angle:-0.72rad)
cetz.draw.content((0.06, -0.33),angle:-0.72rad,[k(1)])
cetz.draw.hobby((-0.27, -0.15),(0.00, -0.37),(0.26, -0.61),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.05),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.87, -0.05),angle:4.79rad,[k(1)])
cetz.draw.hobby((-0.76, -0.47),(-0.80, -0.06),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.38, 0.50),node5.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.36, 0.62),angle:3.00rad,[k(1)+k(3)])
cetz.draw.hobby((-0.64, 0.59),(-0.36, 0.56),(-0.09, 0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, 0.15),node5.pos,decoration:"arrow",angle:0.87rad)
cetz.draw.content((-0.30, 0.23),angle:0.87rad,[p-k(1)-k(3)])
cetz.draw.hobby((-0.41, 0.00),(-0.26, 0.19),(-0.10, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, 0.46),node4.pos,decoration:"coil",angle:0.10rad)
cetz.draw.content((0.44, 0.58),angle:0.10rad,[p])
cetz.draw.hobby((0.14, 0.49),(0.44, 0.52),(0.75, 0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.30rad)
cetz.draw.content((-0.75, -0.90),angle:-2.30rad,[-k(0)])
cetz.draw.hobby((-0.86, -0.93),(-0.73, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.69, -0.77),angle:2.81rad,[-k(0)])
cetz.draw.hobby((0.47, -0.76),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.34rad)
cetz.draw.content((1.06, 0.28),angle:-1.34rad,[p-k(3)])
cetz.draw.hobby((0.97, 0.37),(1.02, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.08rad)
cetz.draw.content((-0.74, -0.18),angle:6.08rad,[p-k(3)])
cetz.draw.hobby((-0.87, -0.09),(-0.59, -0.15),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.48rad)
cetz.draw.content((0.82, 0.78),angle:4.48rad,[k(3)])
cetz.draw.hobby((0.86, 0.66),(0.91, 0.87),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.03rad)
cetz.draw.content((-0.99, 0.71),angle:2.03rad,[k(3)])
cetz.draw.hobby((-0.99, 0.84),(-0.89, 0.64),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.46, -0.74))
node(node0.pos)
let node1= (pos:(0.51, -0.68))
node(node1.pos)
let node2= (pos:(-0.09, 0.06))
node(node2.pos)
let node3= (pos:(0.21, 0.35))
node(node3.pos)
let node4= (pos:(-0.57, 0.69))
node(node4.pos)
let node5= (pos:(0.69, 0.70))
node(node5.pos)
edge(node1.pos,(0.03, -0.74),node0.pos,decoration:"arrow",angle:-3.08rad)
cetz.draw.content((0.03, -0.86),angle:-3.08rad,[k(0)+k(1)])
cetz.draw.hobby((0.37, -0.77),(0.03, -0.80),(-0.31, -0.81),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, -0.17),node1.pos,decoration:"wave",angle:-1.29rad)
cetz.draw.content((0.48, -0.14),angle:-1.29rad,[k(1)])
cetz.draw.hobby((0.31, 0.21),(0.42, -0.15),(0.52, -0.51),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, -0.35),node2.pos,decoration:"wave",angle:4.28rad)
cetz.draw.content((-0.40, -0.30),angle:4.28rad,[k(1)])
cetz.draw.hobby((-0.46, -0.60),(-0.34, -0.31),(-0.20, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.38, 0.33),node5.pos,decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.46, 0.24),angle:-2.44rad,[k(1)+k(3)])
cetz.draw.hobby((0.08, 0.06),(0.40, 0.26),(0.65, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.45, 0.55),node5.pos,decoration:"arrow",angle:0.61rad)
cetz.draw.content((0.38, 0.65),angle:0.61rad,[p-k(1)-k(3)])
cetz.draw.hobby((0.23, 0.46),(0.40, 0.59),(0.58, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.17, 0.54),node3.pos,decoration:"arrow",angle:-0.41rad)
cetz.draw.content((-0.12, 0.65),angle:-0.41rad,[p-k(3)])
cetz.draw.hobby((-0.43, 0.71),(-0.15, 0.60),(0.13, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.34),node2.pos,decoration:"arrow",angle:2.22rad)
cetz.draw.content((-0.46, 0.27),angle:2.22rad,[k(3)])
cetz.draw.hobby((-0.57, 0.55),(-0.41, 0.31),(-0.22, 0.10),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.68, -0.98),angle:-2.70rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.57, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.57rad)
cetz.draw.content((0.82, -0.74),angle:2.57rad,[-k(0)])
cetz.draw.hobby((0.67, -0.71),(0.91, -0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.77rad)
cetz.draw.content((0.76, 0.93),angle:0.77rad,[p])
cetz.draw.hobby((0.76, 0.84),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.66rad)
cetz.draw.content((-0.85, 0.75),angle:5.66rad,[p])
cetz.draw.hobby((-0.91, 0.86),(-0.72, 0.73),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.76))
node(node0.pos)
let node1= (pos:(0.70, -0.65))
node(node1.pos)
let node2= (pos:(0.44, -0.11))
node(node2.pos)
let node3= (pos:(0.78, 0.53))
node(node3.pos)
let node4= (pos:(0.02, 0.45))
node(node4.pos)
let node5= (pos:(-0.87, 0.51))
node(node5.pos)
edge(node1.pos,(0.21, -0.73),node0.pos,decoration:"arrow",angle:-3.03rad)
cetz.draw.content((0.22, -0.85),angle:-3.03rad,[k(0)+k(1)])
cetz.draw.hobby((0.56, -0.74),(0.21, -0.79),(-0.15, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.77, -0.06),node1.pos,decoration:"wave",angle:-1.64rad)
cetz.draw.content((0.89, -0.07),angle:-1.64rad,[k(1)])
cetz.draw.hobby((0.85, 0.35),(0.83, -0.07),(0.79, -0.48),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.07, -0.42),node2.pos,decoration:"wave",angle:3.86rad)
cetz.draw.content((-0.01, -0.33),angle:3.86rad,[k(1)])
cetz.draw.hobby((-0.24, -0.61),(0.02, -0.38),(0.29, -0.16),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.40, 0.50),node3.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.39, 0.62),angle:0.11rad,[p-k(3)])
cetz.draw.hobby((0.13, 0.53),(0.40, 0.56),(0.67, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.21, 0.16),node2.pos,decoration:"arrow",angle:2.20rad)
cetz.draw.content((0.11, 0.09),angle:2.20rad,[k(3)])
cetz.draw.hobby((0.03, 0.33),(0.17, 0.12),(0.32, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.44, 0.49),node4.pos,decoration:"coil",angle:-0.07rad)
cetz.draw.content((-0.43, 0.61),angle:-0.07rad,[p])
cetz.draw.hobby((-0.73, 0.56),(-0.42, 0.55),(-0.10, 0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.61, -0.99),angle:-2.81rad,[-k(0)])
cetz.draw.hobby((-0.84, -1.01),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.94, -0.75),angle:2.28rad,[-k(0)])
cetz.draw.hobby((0.84, -0.73),(0.95, -0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.34rad)
cetz.draw.content((0.70, 0.06),angle:3.34rad,[k(1)+k(3)])
cetz.draw.hobby((0.58, -0.03),(0.84, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.82rad)
cetz.draw.content((-0.82, 0.23),angle:-1.82rad,[k(1)+k(3)])
cetz.draw.hobby((-0.90, 0.13),(-0.85, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.78, 0.82),angle:1.14rad,[p-k(1)-k(3)])
cetz.draw.hobby((0.79, 0.69),(0.88, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.98rad)
cetz.draw.content((-1.05, 0.72),angle:4.98rad,[p-k(1)-k(3)])
cetz.draw.hobby((-1.02, 0.84),(-0.96, 0.64),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.77))
node(node0.pos)
let node1= (pos:(-0.61, -0.63))
node(node1.pos)
let node2= (pos:(0.78, -0.04))
node(node2.pos)
let node3= (pos:(-0.91, 0.49))
node(node3.pos)
let node4= (pos:(0.60, 0.67))
node(node4.pos)
let node5= (pos:(-0.44, 0.27))
node(node5.pos)
edge(node0.pos,(-0.03, -0.71),node1.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.04, -0.83),angle:3.02rad,[k(0)])
cetz.draw.hobby((0.36, -0.82),(-0.05, -0.77),(-0.45, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.77, -0.09),node1.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.89, -0.12),angle:4.97rad,[k(1)])
cetz.draw.hobby((-0.93, 0.30),(-0.83, -0.09),(-0.72, -0.49),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.65, -0.41),node2.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((0.54, -0.37),angle:4.39rad,[k(1)])
cetz.draw.hobby((0.51, -0.65),(0.60, -0.39),(0.69, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, 0.41),node5.pos,decoration:"arrow",angle:-0.44rad)
cetz.draw.content((-0.60, 0.52),angle:-0.44rad,[p+k(0)-k(1)-k(3)])
cetz.draw.hobby((-0.82, 0.53),(-0.64, 0.47),(-0.47, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.31),node2.pos,decoration:"arrow",angle:1.82rad)
cetz.draw.content((0.82, 0.34),angle:1.82rad,[k(3)])
cetz.draw.hobby((0.69, 0.58),(0.76, 0.33),(0.82, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.09, 0.48),node4.pos,decoration:"coil",angle:0.36rad)
cetz.draw.content((0.05, 0.59),angle:0.36rad,[p+k(0)])
cetz.draw.hobby((-0.31, 0.39),(0.06, 0.53),(0.42, 0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.39rad)
cetz.draw.content((-0.72, -0.90),angle:-2.39rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.85, -0.94),(-0.68, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.82, -0.78),angle:2.69rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.70, -0.79),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.35rad)
cetz.draw.content((0.87, 0.10),angle:3.35rad,[k(1)+k(3)])
cetz.draw.hobby((0.92, 0.04),(0.84, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.67, 0.03),angle:-2.69rad,[k(1)+k(3)])
cetz.draw.hobby((-0.84, 0.01),(-0.55, 0.15),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.72, 0.93),angle:0.70rad,[p+k(0)-k(3)])
cetz.draw.hobby((0.68, 0.81),(0.85, 0.95),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[p+k(0)-k(3)])
cetz.draw.hobby((-1.03, 0.84),(-1.00, 0.63),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.61))
node(node0.pos)
let node1= (pos:(0.54, -0.76))
node(node1.pos)
let node2= (pos:(-0.90, 0.52))
node(node2.pos)
let node3= (pos:(0.78, -0.05))
node(node3.pos)
let node4= (pos:(0.61, 0.64))
node(node4.pos)
let node5= (pos:(-0.47, 0.26))
node(node5.pos)
edge(node1.pos,(-0.03, -0.70),node0.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((-0.05, -0.82),angle:3.01rad,[k(0)+k(1)])
cetz.draw.hobby((0.37, -0.81),(-0.04, -0.76),(-0.44, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, -0.39),node1.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((0.54, -0.35),angle:4.39rad,[k(1)])
cetz.draw.hobby((0.68, -0.14),(0.60, -0.38),(0.52, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.76, -0.05),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.87, -0.08),angle:4.97rad,[k(1)])
cetz.draw.hobby((-0.71, -0.46),(-0.82, -0.06),(-0.92, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.66, 0.42),node5.pos,decoration:"arrow",angle:2.60rad)
cetz.draw.content((-0.60, 0.52),angle:2.60rad,[k(1)+k(3)])
cetz.draw.hobby((-0.81, 0.55),(-0.63, 0.47),(-0.48, 0.36),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.30),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.83, 0.32),angle:-1.34rad,[p+k(1)-k(3)])
cetz.draw.hobby((0.70, 0.56),(0.77, 0.32),(0.82, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.07, 0.44),node4.pos,decoration:"coil",angle:0.34rad)
cetz.draw.content((0.11, 0.33),angle:0.34rad,[p+k(1)])
cetz.draw.hobby((-0.29, 0.26),(0.09, 0.39),(0.47, 0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
cetz.draw.content((-0.72, -0.89),angle:-2.36rad,[-k(0)])
cetz.draw.hobby((-0.85, -0.94),(-0.67, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.83, -0.77),angle:2.66rad,[-k(0)])
cetz.draw.hobby((0.70, -0.78),(0.90, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.22rad)
cetz.draw.content((0.86, 0.09),angle:0.22rad,[p-k(3)])
cetz.draw.hobby((0.91, 0.04),(0.84, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.68, 0.02),angle:0.46rad,[p-k(3)])
cetz.draw.hobby((-0.84, 0.01),(-0.58, 0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.88rad)
cetz.draw.content((0.72, 0.91),angle:3.88rad,[k(3)])
cetz.draw.hobby((0.68, 0.79),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.77rad)
cetz.draw.content((-1.07, 0.73),angle:1.77rad,[k(3)])
cetz.draw.hobby((-1.03, 0.84),(-0.99, 0.65),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.62))
node(node0.pos)
let node1= (pos:(-0.61, -0.81))
node(node1.pos)
let node2= (pos:(-0.52, 0.54))
node(node2.pos)
let node3= (pos:(-0.68, -0.12))
node(node3.pos)
let node4= (pos:(0.86, 0.51))
node(node4.pos)
let node5= (pos:(0.03, 0.35))
node(node5.pos)
edge(node0.pos,(-0.16, -0.74),node1.pos,decoration:"arrow",angle:-2.93rad)
cetz.draw.content((-0.14, -0.85),angle:-2.93rad,[k(0)])
cetz.draw.hobby((0.18, -0.71),(-0.14, -0.79),(-0.46, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, -0.47),node1.pos,decoration:"wave",angle:4.82rad)
cetz.draw.content((-0.77, -0.49),angle:4.82rad,[k(1)])
cetz.draw.hobby((-0.73, -0.23),(-0.71, -0.47),(-0.68, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.10, -0.06),node2.pos,decoration:"wave",angle:5.33rad)
cetz.draw.content((-0.20, -0.13),angle:5.33rad,[k(1)])
cetz.draw.hobby((0.13, -0.48),(-0.16, -0.07),(-0.45, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.23, 0.48),node5.pos,decoration:"arrow",angle:2.81rad)
cetz.draw.content((-0.19, 0.59),angle:2.81rad,[k(1)+k(3)])
cetz.draw.hobby((-0.42, 0.59),(-0.21, 0.54),(-0.01, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.33, 0.12),node5.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((-0.40, 0.22),angle:0.59rad,[p+k(0)-k(3)])
cetz.draw.hobby((-0.61, 0.00),(-0.36, 0.17),(-0.11, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, 0.45),node4.pos,decoration:"coil",angle:0.19rad)
cetz.draw.content((0.43, 0.57),angle:0.19rad,[p+k(0)+k(1)])
cetz.draw.hobby((0.14, 0.44),(0.43, 0.51),(0.73, 0.56),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.75, -1.01),angle:-2.70rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.99),(-0.72, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((0.71, -0.70),angle:2.64rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.46, -0.64),(0.90, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.31rad)
cetz.draw.content((1.05, 0.29),angle:-1.31rad,[p+k(0)+k(1)-k(3)])
cetz.draw.hobby((0.96, 0.38),(1.02, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.88, -0.17),angle:5.91rad,[p+k(0)+k(1)-k(3)])
cetz.draw.hobby((-0.88, -0.11),(-0.84, -0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.44rad)
cetz.draw.content((0.82, 0.79),angle:4.44rad,[k(3)])
cetz.draw.hobby((0.85, 0.67),(0.90, 0.87),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.84, 0.68),angle:2.38rad,[k(3)])
cetz.draw.hobby((-0.93, 0.85),(-0.67, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.81))
node(node0.pos)
let node1= (pos:(-0.30, -0.63))
node(node1.pos)
let node2= (pos:(0.70, -0.12))
node(node2.pos)
let node3= (pos:(0.54, 0.54))
node(node3.pos)
let node4= (pos:(-0.01, 0.35))
node(node4.pos)
let node5= (pos:(-0.87, 0.51))
node(node5.pos)
edge(node0.pos,(0.14, -0.74),node1.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((0.12, -0.86),angle:2.95rad,[k(0)])
cetz.draw.hobby((0.47, -0.85),(0.14, -0.80),(-0.18, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.10, -0.05),node1.pos,decoration:"wave",angle:4.09rad)
cetz.draw.content((0.00, 0.02),angle:4.09rad,[k(1)])
cetz.draw.hobby((0.36, 0.40),(0.06, -0.00),(-0.23, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.47),node2.pos,decoration:"wave",angle:-1.70rad)
cetz.draw.content((0.78, -0.48),angle:-1.70rad,[k(1)])
cetz.draw.hobby((0.69, -0.71),(0.72, -0.47),(0.75, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.26, 0.47),node3.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.22, 0.58),angle:0.33rad,[p+k(0)+k(1)-k(3)])
cetz.draw.hobby((0.04, 0.44),(0.23, 0.52),(0.44, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.36, 0.11),node2.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((0.42, 0.21),angle:2.56rad,[k(3)])
cetz.draw.hobby((0.13, 0.33),(0.38, 0.17),(0.63, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.44, 0.43),node4.pos,decoration:"coil",angle:-0.18rad)
cetz.draw.content((-0.42, 0.55),angle:-0.18rad,[p+k(0)+k(1)])
cetz.draw.hobby((-0.73, 0.54),(-0.43, 0.49),(-0.13, 0.43),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
cetz.draw.content((-0.60, -0.92),angle:-2.66rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.98),(-0.41, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.86, -0.80),angle:2.68rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.77, -0.82),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.51rad)
cetz.draw.content((0.81, 0.05),angle:3.51rad,[k(1)+k(3)])
cetz.draw.hobby((0.82, -0.01),(0.84, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.82rad)
cetz.draw.content((-0.82, 0.22),angle:-1.82rad,[k(1)+k(3)])
cetz.draw.hobby((-0.90, 0.13),(-0.85, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((0.68, 0.85),angle:0.78rad,[p+k(0)-k(3)])
cetz.draw.hobby((0.60, 0.69),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.97rad)
cetz.draw.content((-1.05, 0.72),angle:4.97rad,[p+k(0)-k(3)])
cetz.draw.hobby((-1.02, 0.84),(-0.97, 0.64),stroke:stroke,mark: (end: ">"))
})
let embedding4f2=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.74))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(0.28, 0.15))
node(node2.pos)
let node3= (pos:(-0.27, 0.15))
node(node3.pos)
let node4= (pos:(-0.60, 0.67))
node(node4.pos)
let node5= (pos:(0.60, 0.70))
node(node5.pos)
edge(node0.pos,(-0.00, -0.75),node1.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.00, -0.87),angle:3.13rad,[k(0)])
cetz.draw.hobby((0.35, -0.80),(-0.00, -0.81),(-0.35, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, -0.29),node1.pos,decoration:"wave",angle:4.45rad)
cetz.draw.content((-0.51, -0.26),angle:4.45rad,[k(1)])
cetz.draw.hobby((-0.36, 0.03),(-0.45, -0.27),(-0.53, -0.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.39, -0.30),node2.pos,decoration:"wave",angle:-1.33rad)
cetz.draw.content((0.51, -0.27),angle:-1.33rad,[k(1)])
cetz.draw.hobby((0.52, -0.59),(0.45, -0.28),(0.37, 0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.45, 0.44),node5.pos,decoration:"arrow",angle:-2.10rad)
cetz.draw.content((0.56, 0.38),angle:-2.10rad,[k(1)+k(3)])
cetz.draw.hobby((0.38, 0.20),(0.50, 0.39),(0.60, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.44),node5.pos,decoration:"arrow",angle:0.57rad)
cetz.draw.content((0.07, 0.54),angle:0.57rad,[p+k(0)-k(3)])
cetz.draw.hobby((-0.18, 0.29),(0.11, 0.50),(0.43, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.47, 0.39),node3.pos,decoration:"arrow",angle:5.26rad)
cetz.draw.content((-0.58, 0.33),angle:5.26rad,[p+k(0)+k(1)-k(3)])
cetz.draw.hobby((-0.62, 0.56),(-0.52, 0.35),(-0.38, 0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.14, 0.44),node2.pos,decoration:"arrow",angle:2.60rad)
cetz.draw.content((-0.08, 0.54),angle:2.60rad,[k(3)])
cetz.draw.hobby((-0.43, 0.66),(-0.11, 0.49),(0.19, 0.29),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.64rad)
cetz.draw.content((-0.69, -0.97),angle:-2.64rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.98),(-0.60, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.80, -0.76),angle:2.66rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.66, -0.75),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.64rad)
cetz.draw.content((0.73, 0.94),angle:0.64rad,[p+k(0)+k(1)])
cetz.draw.hobby((0.68, 0.83),(0.84, 0.96),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.60rad)
cetz.draw.content((-0.87, 0.74),angle:5.60rad,[p+k(0)+k(1)])
cetz.draw.hobby((-0.92, 0.86),(-0.75, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.75))
node(node0.pos)
let node1= (pos:(0.63, -0.61))
node(node1.pos)
let node2= (pos:(-0.41, 0.05))
node(node2.pos)
let node3= (pos:(0.78, 0.50))
node(node3.pos)
let node4= (pos:(0.05, 0.51))
node(node4.pos)
let node5= (pos:(-0.65, 0.73))
node(node5.pos)
edge(node1.pos,(0.08, -0.69),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.10, -0.80),angle:-3.02rad,[k(0)+k(1)])
cetz.draw.hobby((0.47, -0.70),(0.09, -0.75),(-0.30, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.05),node1.pos,decoration:"wave",angle:-1.70rad)
cetz.draw.content((0.84, -0.07),angle:-1.70rad,[k(1)])
cetz.draw.hobby((0.82, 0.33),(0.78, -0.07),(0.72, -0.46),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.45, -0.36),node2.pos,decoration:"wave",angle:4.63rad)
cetz.draw.content((-0.57, -0.35),angle:4.63rad,[k(1)])
cetz.draw.hobby((-0.53, -0.63),(-0.51, -0.34),(-0.48, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.56, 0.36),node5.pos,decoration:"arrow",angle:5.06rad)
cetz.draw.content((-0.67, 0.32),angle:5.06rad,[k(1)+k(3)])
cetz.draw.hobby((-0.52, 0.12),(-0.62, 0.36),(-0.69, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.43, 0.50),node3.pos,decoration:"arrow",angle:6.27rad)
cetz.draw.content((0.43, 0.38),angle:6.27rad,[p+k(1)])
cetz.draw.hobby((0.16, 0.44),(0.41, 0.44),(0.67, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.15, 0.24),node2.pos,decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.07, 0.16),angle:0.78rad,[k(3)])
cetz.draw.hobby((0.05, 0.39),(-0.11, 0.21),(-0.29, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.29, 0.63),node4.pos,decoration:"coil",angle:-0.31rad)
cetz.draw.content((-0.26, 0.75),angle:-0.31rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.53, 0.76),(-0.27, 0.69),(-0.03, 0.61),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.69, -0.98),angle:-2.70rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.58, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.33rad)
cetz.draw.content((0.90, -0.72),angle:2.33rad,[-k(0)])
cetz.draw.hobby((0.78, -0.68),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.78, 0.80),angle:1.15rad,[p])
cetz.draw.hobby((0.78, 0.66),(0.88, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.90, 0.77),angle:5.63rad,[p])
cetz.draw.hobby((-0.92, 0.86),(-0.80, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.80))
node(node0.pos)
let node1= (pos:(0.45, -0.74))
node(node1.pos)
let node2= (pos:(-0.80, -0.08))
node(node2.pos)
let node3= (pos:(0.23, 0.15))
node(node3.pos)
let node4= (pos:(-0.66, 0.63))
node(node4.pos)
let node5= (pos:(0.90, 0.48))
node(node5.pos)
edge(node1.pos,(-0.07, -0.78),node0.pos,decoration:"arrow",angle:-3.09rad)
cetz.draw.content((-0.06, -0.90),angle:-3.09rad,[k(0)+k(1)])
cetz.draw.hobby((0.30, -0.82),(-0.07, -0.84),(-0.44, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, -0.31),node1.pos,decoration:"wave",angle:4.96rad)
cetz.draw.content((0.23, -0.34),angle:4.96rad,[k(1)])
cetz.draw.hobby((0.21, -0.00),(0.28, -0.31),(0.36, -0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.44),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.83, -0.48),angle:5.00rad,[k(1)])
cetz.draw.hobby((-0.69, -0.71),(-0.77, -0.46),(-0.84, -0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, 0.31),node5.pos,decoration:"arrow",angle:0.46rad)
cetz.draw.content((0.62, 0.20),angle:0.46rad,[p])
cetz.draw.hobby((0.36, 0.14),(0.59, 0.26),(0.83, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.39),node3.pos,decoration:"arrow",angle:-0.50rad)
cetz.draw.content((-0.16, 0.50),angle:-0.50rad,[p+k(1)])
cetz.draw.hobby((-0.50, 0.61),(-0.18, 0.44),(0.13, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.75, 0.29),node2.pos,decoration:"arrow",angle:1.37rad)
cetz.draw.content((-0.87, 0.31),angle:1.37rad,[k(3)])
cetz.draw.hobby((-0.75, 0.54),(-0.81, 0.29),(-0.85, 0.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.67rad)
cetz.draw.content((-0.74, -1.00),angle:-2.67rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.70, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.78, -0.76),angle:2.70rad,[-k(0)])
cetz.draw.hobby((0.62, -0.75),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.95, -0.15),angle:5.91rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.88, -0.11),(-0.97, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.37rad)
cetz.draw.content((1.07, 0.26),angle:-1.37rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.99, 0.34),(1.03, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.39rad)
cetz.draw.content((0.83, 0.76),angle:1.39rad,[p+k(1)+k(3)])
cetz.draw.hobby((0.87, 0.63),(0.91, 0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.45rad)
cetz.draw.content((-0.92, 0.73),angle:5.45rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.94, 0.85),(-0.80, 0.70),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.76))
node(node0.pos)
let node1= (pos:(-0.60, -0.64))
node(node1.pos)
let node2= (pos:(0.59, 0.03))
node(node2.pos)
let node3= (pos:(-0.72, 0.48))
node(node3.pos)
let node4= (pos:(0.77, 0.73))
node(node4.pos)
let node5= (pos:(0.11, 0.50))
node(node5.pos)
edge(node0.pos,(-0.05, -0.74),node1.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((-0.07, -0.86),angle:3.03rad,[k(0)])
cetz.draw.hobby((0.34, -0.82),(-0.05, -0.80),(-0.44, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, -0.09),node1.pos,decoration:"wave",angle:-1.46rad)
cetz.draw.content((-0.53, -0.08),angle:-1.46rad,[k(1)])
cetz.draw.hobby((-0.64, 0.32),(-0.59, -0.07),(-0.55, -0.47),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.55, -0.37),node2.pos,decoration:"wave",angle:4.62rad)
cetz.draw.content((0.43, -0.36),angle:4.62rad,[k(1)])
cetz.draw.hobby((0.46, -0.64),(0.49, -0.36),(0.51, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.35, 0.23),node5.pos,decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.26, 0.15),angle:5.51rad,[k(1)+k(3)])
cetz.draw.hobby((0.47, 0.04),(0.29, 0.20),(0.13, 0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.31, 0.49),node5.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((-0.31, 0.61),angle:0.02rad,[p+k(0)])
cetz.draw.hobby((-0.60, 0.54),(-0.31, 0.55),(-0.01, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.38),node2.pos,decoration:"arrow",angle:1.33rad)
cetz.draw.content((0.83, 0.35),angle:1.33rad,[k(3)])
cetz.draw.hobby((0.82, 0.61),(0.77, 0.35),(0.69, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.44, 0.63),node4.pos,decoration:"coil",angle:0.34rad)
cetz.draw.content((0.40, 0.74),angle:0.34rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((0.19, 0.59),(0.42, 0.68),(0.65, 0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.42rad)
cetz.draw.content((-0.72, -0.91),angle:-2.42rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.85, -0.95),(-0.67, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.81, -0.77),angle:2.69rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.67, -0.77),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.86rad)
cetz.draw.content((0.79, 0.94),angle:0.86rad,[p+k(0)+k(1)])
cetz.draw.hobby((0.82, 0.88),(0.86, 0.93),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((-0.97, 0.68),angle:5.20rad,[p+k(0)+k(1)])
cetz.draw.hobby((-0.98, 0.84),(-0.85, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding5f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.80))
node(node0.pos)
let node1= (pos:(-0.47, -0.72))
node(node1.pos)
let node2= (pos:(0.80, -0.08))
node(node2.pos)
let node3= (pos:(-0.23, 0.16))
node(node3.pos)
let node4= (pos:(-0.91, 0.47))
node(node4.pos)
let node5= (pos:(0.67, 0.62))
node(node5.pos)
edge(node0.pos,(0.05, -0.78),node1.pos,decoration:"arrow",angle:3.07rad)
cetz.draw.content((0.04, -0.89),angle:3.07rad,[k(0)])
cetz.draw.hobby((0.43, -0.86),(0.05, -0.84),(-0.32, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.35, -0.28),node1.pos,decoration:"wave",angle:-1.84rad)
cetz.draw.content((-0.23, -0.31),angle:-1.84rad,[k(1)])
cetz.draw.hobby((-0.20, 0.01),(-0.29, -0.30),(-0.38, -0.61),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.43),node2.pos,decoration:"wave",angle:-1.86rad)
cetz.draw.content((0.83, -0.47),angle:-1.86rad,[k(1)])
cetz.draw.hobby((0.68, -0.71),(0.77, -0.46),(0.84, -0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.74, 0.27),node5.pos,decoration:"arrow",angle:-1.37rad)
cetz.draw.content((0.86, 0.29),angle:-1.37rad,[k(1)+k(3)])
cetz.draw.hobby((0.84, 0.04),(0.80, 0.28),(0.75, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, 0.41),node5.pos,decoration:"arrow",angle:0.47rad)
cetz.draw.content((0.17, 0.51),angle:0.47rad,[p+k(0)])
cetz.draw.hobby((-0.13, 0.29),(0.18, 0.45),(0.50, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.58, 0.31),node3.pos,decoration:"arrow",angle:5.86rad)
cetz.draw.content((-0.63, 0.20),angle:5.86rad,[p+k(0)+k(1)])
cetz.draw.hobby((-0.84, 0.37),(-0.60, 0.25),(-0.35, 0.15),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.68, -0.97),angle:-2.65rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.98),(-0.58, -0.84),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.85, -0.79),angle:2.69rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.75, -0.81),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:1.38rad)
cetz.draw.content((-0.84, 0.21),angle:1.38rad,[-k(3)])
cetz.draw.hobby((-0.91, 0.14),(-0.88, 0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((0.86, 0.07),angle:0.38rad,[-k(3)])
cetz.draw.hobby((0.92, 0.03),(0.84, -0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.85rad)
cetz.draw.content((0.74, 0.89),angle:0.85rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((0.72, 0.77),(0.86, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.88rad)
cetz.draw.content((-1.07, 0.71),angle:4.88rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((-1.03, 0.84),(-1.00, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.75))
node(node0.pos)
let node1= (pos:(0.35, -0.63))
node(node1.pos)
let node2= (pos:(-0.56, 0.03))
node(node2.pos)
let node3= (pos:(-0.31, 0.50))
node(node3.pos)
let node4= (pos:(0.54, 0.74))
node(node4.pos)
let node5= (pos:(0.65, 0.22))
node(node5.pos)
edge(node1.pos,(-0.12, -0.70),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((-0.10, -0.81),angle:-3.02rad,[k(0)+k(1)])
cetz.draw.hobby((0.22, -0.71),(-0.11, -0.76),(-0.44, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.02, -0.08),node1.pos,decoration:"wave",angle:5.24rad)
cetz.draw.content((-0.08, -0.14),angle:5.24rad,[k(1)])
cetz.draw.hobby((-0.27, 0.30),(-0.03, -0.10),(0.20, -0.50),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.57, -0.37),node2.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((-0.45, -0.38),angle:-1.62rad,[k(1)])
cetz.draw.hobby((-0.52, -0.63),(-0.51, -0.36),(-0.50, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.17, 0.36),node5.pos,decoration:"arrow",angle:-0.29rad)
cetz.draw.content((0.21, 0.48),angle:-0.29rad,[p+k(3)])
cetz.draw.hobby((-0.15, 0.52),(0.19, 0.42),(0.52, 0.32),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.39),node2.pos,decoration:"arrow",angle:0.57rad)
cetz.draw.content((-0.07, 0.49),angle:0.57rad,[k(3)])
cetz.draw.hobby((0.34, 0.68),(-0.04, 0.43),(-0.42, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.61, 0.49),node4.pos,decoration:"coil",angle:1.78rad)
cetz.draw.content((0.73, 0.52),angle:1.78rad,[p+k(1)+2*k(3)])
cetz.draw.hobby((0.70, 0.30),(0.67, 0.49),(0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.59rad)
cetz.draw.content((-0.73, -0.98),angle:-2.59rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.97),(-0.69, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.63rad)
cetz.draw.content((0.73, -0.71),angle:2.63rad,[-k(0)])
cetz.draw.hobby((0.51, -0.66),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.06rad)
cetz.draw.content((-0.77, -0.11),angle:0.06rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.85, -0.05),(-0.70, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
cetz.draw.content((0.89, 0.21),angle:-0.55rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.81, 0.19),(0.90, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.71, 0.97),angle:0.52rad,[p+k(1)+k(3)])
cetz.draw.hobby((0.64, 0.86),(0.84, 0.98),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.65rad)
cetz.draw.content((-0.73, 0.65),angle:5.65rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.91, 0.86),(-0.47, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding6i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.62))
node(node0.pos)
let node1= (pos:(0.61, -0.76))
node(node1.pos)
let node2= (pos:(0.33, 0.49))
node(node2.pos)
let node3= (pos:(0.57, 0.01))
node(node3.pos)
let node4= (pos:(-0.54, 0.72))
node(node4.pos)
let node5= (pos:(-0.63, 0.22))
node(node5.pos)
edge(node1.pos,(0.14, -0.70),node0.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((0.13, -0.82),angle:3.00rad,[k(0)+k(1)])
cetz.draw.hobby((0.46, -0.80),(0.13, -0.76),(-0.19, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.60, -0.37),node1.pos,decoration:"wave",angle:-1.52rad)
cetz.draw.content((0.72, -0.37),angle:-1.52rad,[k(1)])
cetz.draw.hobby((0.64, -0.10),(0.66, -0.37),(0.67, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.07),node2.pos,decoration:"wave",angle:-2.10rad)
cetz.draw.content((0.12, -0.13),angle:-2.10rad,[k(1)])
cetz.draw.hobby((-0.17, -0.49),(0.06, -0.10),(0.29, 0.30),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.16, 0.36),node5.pos,decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.19, 0.48),angle:0.28rad,[k(1)+k(3)])
cetz.draw.hobby((0.17, 0.52),(-0.17, 0.42),(-0.51, 0.32),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.03, 0.36),node3.pos,decoration:"arrow",angle:-0.57rad)
cetz.draw.content((0.09, 0.46),angle:-0.57rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.34, 0.67),(0.05, 0.41),(0.44, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.61, 0.48),node4.pos,decoration:"coil",angle:1.38rad)
cetz.draw.content((-0.73, 0.50),angle:1.38rad,[p+k(1)+2*k(3)])
cetz.draw.hobby((-0.69, 0.30),(-0.67, 0.49),(-0.62, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.64rad)
cetz.draw.content((-0.60, -0.92),angle:-2.64rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.98),(-0.42, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.58rad)
cetz.draw.content((0.87, -0.78),angle:2.58rad,[-k(0)])
cetz.draw.hobby((0.77, -0.78),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.01rad)
cetz.draw.content((0.79, 0.12),angle:-0.01rad,[p+k(3)])
cetz.draw.hobby((0.72, 0.06),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.53rad)
cetz.draw.content((-0.76, 0.00),angle:0.53rad,[p+k(3)])
cetz.draw.hobby((-0.84, 0.02),(-0.73, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((-0.83, 0.76),angle:5.74rad,[-k(3)])
cetz.draw.hobby((-0.90, 0.87),(-0.70, 0.75),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.65rad)
cetz.draw.content((0.59, 0.84),angle:0.65rad,[-k(3)])
cetz.draw.hobby((0.41, 0.63),(0.84, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.67))
node(node0.pos)
let node1= (pos:(-0.54, -0.82))
node(node1.pos)
let node2= (pos:(0.79, 0.43))
node(node2.pos)
let node3= (pos:(-0.69, -0.15))
node(node3.pos)
let node4= (pos:(-0.03, 0.60))
node(node4.pos)
let node5= (pos:(0.04, 0.15))
node(node5.pos)
edge(node0.pos,(0.05, -0.75),node1.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((0.06, -0.87),angle:-3.00rad,[k(0)])
cetz.draw.hobby((0.44, -0.75),(0.04, -0.81),(-0.36, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.62, -0.49),node1.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.74, -0.52),angle:4.94rad,[k(1)])
cetz.draw.hobby((-0.73, -0.26),(-0.68, -0.50),(-0.62, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.70, -0.13),node2.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((0.81, -0.15),angle:-1.74rad,[k(1)])
cetz.draw.hobby((0.69, -0.51),(0.76, -0.13),(0.82, 0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.43, 0.30),node5.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.39, 0.41),angle:0.36rad,[k(1)+k(3)])
cetz.draw.hobby((0.65, 0.44),(0.39, 0.35),(0.13, 0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.32, -0.02),node5.pos,decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.28, -0.13),angle:0.38rad,[p+k(0)+k(3)])
cetz.draw.hobby((-0.56, -0.17),(-0.30, -0.07),(-0.04, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.02, 0.37),node4.pos,decoration:"coil",angle:1.72rad)
cetz.draw.content((-0.14, 0.35),angle:1.72rad,[p+k(0)+k(1)+2*k(3)])
cetz.draw.hobby((-0.04, 0.19),(-0.08, 0.36),(-0.09, 0.53),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.73, -1.02),angle:-2.78rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.00),(-0.65, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.44rad)
cetz.draw.content((0.88, -0.74),angle:2.44rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.76, -0.72),(0.92, -0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.53rad)
cetz.draw.content((0.55, 0.40),angle:-0.53rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((0.13, 0.58),(0.90, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((-0.90, -0.18),angle:5.83rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((-0.89, -0.12),(-0.85, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.56, 0.69),angle:5.89rad,[-k(3)])
cetz.draw.hobby((-0.88, 0.89),(-0.19, 0.60),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.21rad)
cetz.draw.content((0.78, 0.75),angle:1.21rad,[-k(3)])
cetz.draw.hobby((0.78, 0.59),(0.89, 0.88),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.62))
node(node0.pos)
let node1= (pos:(0.53, -0.77))
node(node1.pos)
let node2= (pos:(-0.69, 0.49))
node(node2.pos)
let node3= (pos:(0.64, 0.02))
node(node3.pos)
let node4= (pos:(0.81, 0.71))
node(node4.pos)
let node5= (pos:(0.16, 0.50))
node(node5.pos)
edge(node1.pos,(-0.03, -0.72),node0.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((-0.04, -0.84),angle:3.01rad,[k(0)+k(1)])
cetz.draw.hobby((0.36, -0.82),(-0.04, -0.78),(-0.43, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.59, -0.38),node1.pos,decoration:"wave",angle:-1.70rad)
cetz.draw.content((0.71, -0.40),angle:-1.70rad,[k(1)])
cetz.draw.hobby((0.68, -0.11),(0.65, -0.38),(0.61, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.05),node2.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.77, -0.06),angle:4.81rad,[k(1)])
cetz.draw.hobby((-0.66, -0.46),(-0.71, -0.07),(-0.74, 0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.26, 0.50),node5.pos,decoration:"arrow",angle:3.15rad)
cetz.draw.content((-0.27, 0.62),angle:3.15rad,[p+k(1)])
cetz.draw.hobby((-0.56, 0.56),(-0.26, 0.56),(0.03, 0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.24),node5.pos,decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.31, 0.15),angle:2.35rad,[k(2)])
cetz.draw.hobby((0.52, 0.04),(0.34, 0.20),(0.18, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.36),node3.pos,decoration:"arrow",angle:-1.82rad)
cetz.draw.content((0.88, 0.33),angle:-1.82rad,[k(1)+k(2)])
cetz.draw.hobby((0.87, 0.60),(0.83, 0.34),(0.74, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, 0.62),node4.pos,decoration:"coil",angle:0.32rad)
cetz.draw.content((0.45, 0.74),angle:0.32rad,[p+k(1)+k(2)])
cetz.draw.hobby((0.23, 0.59),(0.46, 0.68),(0.70, 0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.40rad)
cetz.draw.content((-0.71, -0.90),angle:-2.40rad,[-k(0)])
cetz.draw.hobby((-0.85, -0.94),(-0.65, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.82, -0.78),angle:2.69rad,[-k(0)])
cetz.draw.hobby((0.69, -0.78),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.13rad)
cetz.draw.content((0.81, 0.92),angle:4.13rad,[p])
cetz.draw.hobby((0.84, 0.87),(0.87, 0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.12rad)
cetz.draw.content((-0.95, 0.68),angle:2.12rad,[p])
cetz.draw.hobby((-0.97, 0.84),(-0.82, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.45, -0.73))
node(node0.pos)
let node1= (pos:(0.61, -0.80))
node(node1.pos)
let node2= (pos:(-0.21, 0.16))
node(node2.pos)
let node3= (pos:(0.81, -0.08))
node(node3.pos)
let node4= (pos:(-0.91, 0.47))
node(node4.pos)
let node5= (pos:(0.67, 0.63))
node(node5.pos)
edge(node1.pos,(0.08, -0.77),node0.pos,decoration:"arrow",angle:3.08rad)
cetz.draw.content((0.07, -0.89),angle:3.08rad,[k(0)+k(1)])
cetz.draw.hobby((0.45, -0.85),(0.07, -0.83),(-0.30, -0.81),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.44),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.83, -0.47),angle:-1.85rad,[k(1)])
cetz.draw.hobby((0.84, -0.20),(0.78, -0.45),(0.70, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.35, -0.29),node2.pos,decoration:"wave",angle:4.44rad)
cetz.draw.content((-0.46, -0.26),angle:4.44rad,[k(1)])
cetz.draw.hobby((-0.48, -0.58),(-0.40, -0.27),(-0.31, 0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.23, 0.40),node5.pos,decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.18, 0.51),angle:3.64rad,[p+k(1)])
cetz.draw.hobby((-0.11, 0.28),(0.20, 0.45),(0.51, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, 0.28),node5.pos,decoration:"arrow",angle:1.77rad)
cetz.draw.content((0.86, 0.31),angle:1.77rad,[k(2)])
cetz.draw.hobby((0.85, 0.04),(0.80, 0.29),(0.75, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.56, 0.33),node2.pos,decoration:"arrow",angle:2.71rad)
cetz.draw.content((-0.51, 0.44),angle:2.71rad,[p])
cetz.draw.hobby((-0.78, 0.49),(-0.53, 0.38),(-0.28, 0.26),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.67, -0.97),angle:-2.69rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.56, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.86, -0.79),angle:2.66rad,[-k(0)])
cetz.draw.hobby((0.77, -0.81),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.77rad)
cetz.draw.content((-0.84, 0.21),angle:-1.77rad,[-(k(1)+k(2))])
cetz.draw.hobby((-0.91, 0.14),(-0.88, 0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.53rad)
cetz.draw.content((0.86, 0.07),angle:3.53rad,[-(k(1)+k(2))])
cetz.draw.hobby((0.93, 0.04),(0.84, -0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.84rad)
cetz.draw.content((0.74, 0.90),angle:0.84rad,[p+k(1)+k(2)])
cetz.draw.hobby((0.72, 0.78),(0.85, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.89rad)
cetz.draw.content((-1.07, 0.72),angle:4.89rad,[p+k(1)+k(2)])
cetz.draw.hobby((-1.03, 0.84),(-0.99, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.63, -0.60))
node(node0.pos)
let node1= (pos:(-0.47, -0.78))
node(node1.pos)
let node2= (pos:(0.79, 0.50))
node(node2.pos)
let node3= (pos:(-0.46, 0.03))
node(node3.pos)
let node4= (pos:(0.02, 0.51))
node(node4.pos)
let node5= (pos:(-0.66, 0.74))
node(node5.pos)
edge(node0.pos,(0.08, -0.70),node1.pos,decoration:"arrow",angle:-2.98rad)
cetz.draw.content((0.10, -0.82),angle:-2.98rad,[k(0)])
cetz.draw.hobby((0.48, -0.69),(0.09, -0.76),(-0.30, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.48, -0.39),node1.pos,decoration:"wave",angle:4.70rad)
cetz.draw.content((-0.60, -0.38),angle:4.70rad,[k(1)])
cetz.draw.hobby((-0.53, -0.09),(-0.54, -0.37),(-0.54, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.06),node2.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.83, -0.07),angle:-1.72rad,[k(1)])
cetz.draw.hobby((0.71, -0.44),(0.77, -0.06),(0.83, 0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.56, 0.38),node5.pos,decoration:"arrow",angle:1.84rad)
cetz.draw.content((-0.44, 0.42),angle:1.84rad,[k(2)])
cetz.draw.hobby((-0.43, 0.15),(-0.50, 0.40),(-0.57, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.19, 0.23),node3.pos,decoration:"arrow",angle:-2.36rad)
cetz.draw.content((-0.10, 0.15),angle:-2.36rad,[k(1)+k(2)])
cetz.draw.hobby((0.02, 0.39),(-0.14, 0.19),(-0.34, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.41, 0.51),node2.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.42, 0.63),angle:3.12rad,[p+k(0)])
cetz.draw.hobby((0.14, 0.57),(0.41, 0.57),(0.68, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.31, 0.64),node4.pos,decoration:"coil",angle:-0.33rad)
cetz.draw.content((-0.27, 0.75),angle:-0.33rad,[p+k(0)+k(1)+k(2)])
cetz.draw.hobby((-0.54, 0.77),(-0.29, 0.70),(-0.05, 0.61),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.69, -1.00),angle:-2.75rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.00),(-0.59, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.31rad)
cetz.draw.content((0.90, -0.72),angle:2.31rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.77, -0.67),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.31rad)
cetz.draw.content((0.78, 0.79),angle:4.31rad,[p+k(0)+k(1)])
cetz.draw.hobby((0.79, 0.66),(0.89, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.49rad)
cetz.draw.content((-0.90, 0.77),angle:2.49rad,[p+k(0)+k(1)])
cetz.draw.hobby((-0.92, 0.86),(-0.81, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(0.46, -0.73))
node(node0.pos)
let node1= (pos:(-0.60, -0.80))
node(node1.pos)
let node2= (pos:(0.20, 0.16))
node(node2.pos)
let node3= (pos:(-0.80, -0.06))
node(node3.pos)
let node4= (pos:(-0.67, 0.64))
node(node4.pos)
let node5= (pos:(0.89, 0.49))
node(node5.pos)
edge(node0.pos,(-0.07, -0.77),node1.pos,decoration:"arrow",angle:-3.08rad)
cetz.draw.content((-0.07, -0.89),angle:-3.08rad,[k(0)])
cetz.draw.hobby((0.30, -0.80),(-0.06, -0.83),(-0.43, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.70, -0.43),node1.pos,decoration:"wave",angle:-1.30rad)
cetz.draw.content((-0.58, -0.40),angle:-1.30rad,[k(1)])
cetz.draw.hobby((-0.71, -0.15),(-0.64, -0.41),(-0.57, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.33, -0.29),node2.pos,decoration:"wave",angle:-1.29rad)
cetz.draw.content((0.45, -0.26),angle:-1.29rad,[k(1)])
cetz.draw.hobby((0.48, -0.58),(0.39, -0.27),(0.30, 0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.33),node5.pos,decoration:"arrow",angle:3.60rad)
cetz.draw.content((0.49, 0.44),angle:3.60rad,[p+k(0)+k(1)])
cetz.draw.hobby((0.28, 0.27),(0.52, 0.39),(0.76, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.75, 0.30),node3.pos,decoration:"arrow",angle:4.53rad)
cetz.draw.content((-0.87, 0.32),angle:4.53rad,[k(1)+k(2)])
cetz.draw.hobby((-0.76, 0.55),(-0.81, 0.30),(-0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.23, 0.41),node2.pos,decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.17, 0.51),angle:2.64rad,[p+k(0)])
cetz.draw.hobby((-0.51, 0.63),(-0.20, 0.46),(0.11, 0.29),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.67rad)
cetz.draw.content((-0.74, -1.00),angle:-2.67rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.99),(-0.70, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.78, -0.76),angle:2.68rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.62, -0.74),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.93, -0.14),angle:2.86rad,[-k(2)])
cetz.draw.hobby((-0.87, -0.10),(-0.96, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.79rad)
cetz.draw.content((1.06, 0.27),angle:1.79rad,[-k(2)])
cetz.draw.hobby((0.98, 0.36),(1.03, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.36rad)
cetz.draw.content((0.83, 0.77),angle:1.36rad,[p+k(0)+k(1)+k(2)])
cetz.draw.hobby((0.86, 0.65),(0.91, 0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.45rad)
cetz.draw.content((-0.92, 0.74),angle:5.45rad,[p+k(0)+k(1)+k(2)])
cetz.draw.hobby((-0.94, 0.85),(-0.82, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.63))
node(node1.pos)
let node2= (pos:(0.29, 0.00))
node(node2.pos)
let node3= (pos:(0.60, 0.49))
node(node3.pos)
let node4= (pos:(-0.60, 0.73))
node(node4.pos)
let node5= (pos:(-0.54, 0.21))
node(node5.pos)
edge(node1.pos,(0.15, -0.70),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.17, -0.82),angle:-3.02rad,[k(0)+k(1)])
cetz.draw.hobby((0.51, -0.72),(0.16, -0.76),(-0.20, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.06),node1.pos,decoration:"wave",angle:-1.53rad)
cetz.draw.content((0.77, -0.06),angle:-1.53rad,[k(1)])
cetz.draw.hobby((0.68, 0.33),(0.71, -0.07),(0.71, -0.46),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.38),node2.pos,decoration:"wave",angle:4.00rad)
cetz.draw.content((-0.13, -0.30),angle:4.00rad,[k(1)])
cetz.draw.hobby((-0.30, -0.59),(-0.08, -0.33),(0.15, -0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, 0.36),node5.pos,decoration:"arrow",angle:3.38rad)
cetz.draw.content((0.01, 0.47),angle:3.38rad,[-p+k(3)])
cetz.draw.hobby((0.42, 0.51),(0.01, 0.41),(-0.39, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.16, 0.37),node2.pos,decoration:"arrow",angle:2.46rad)
cetz.draw.content((-0.08, 0.46),angle:2.46rad,[k(3)])
cetz.draw.hobby((-0.43, 0.66),(-0.11, 0.41),(0.20, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.61, 0.47),node4.pos,decoration:"coil",angle:1.66rad)
cetz.draw.content((-0.73, 0.46),angle:1.66rad,[-p+k(1)+2*k(3)])
cetz.draw.hobby((-0.63, 0.27),(-0.67, 0.46),(-0.67, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.77rad)
cetz.draw.content((-0.63, -0.99),angle:-2.77rad,[-k(0)])
cetz.draw.hobby((-0.84, -1.00),(-0.47, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.34rad)
cetz.draw.content((0.91, -0.73),angle:2.34rad,[-k(0)])
cetz.draw.hobby((0.79, -0.70),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.65, 0.12),angle:3.14rad,[k(1)+k(3)])
cetz.draw.hobby((0.44, 0.06),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -0.00),angle:-2.71rad,[k(1)+k(3)])
cetz.draw.hobby((-0.84, 0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.87, 0.76),angle:2.55rad,[-(-p+k(1)+k(3))])
cetz.draw.hobby((-0.91, 0.87),(-0.75, 0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.05rad)
cetz.draw.content((0.71, 0.82),angle:4.05rad,[-(-p+k(1)+k(3))])
cetz.draw.hobby((0.65, 0.65),(0.86, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding8i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.63))
node(node0.pos)
let node1= (pos:(0.34, -0.74))
node(node1.pos)
let node2= (pos:(-0.63, 0.47))
node(node2.pos)
let node3= (pos:(-0.29, -0.00))
node(node3.pos)
let node4= (pos:(0.61, 0.73))
node(node4.pos)
let node5= (pos:(0.55, 0.20))
node(node5.pos)
edge(node1.pos,(-0.16, -0.71),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.18, -0.83),angle:3.02rad,[k(0)+k(1)])
cetz.draw.hobby((0.19, -0.80),(-0.16, -0.77),(-0.51, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.05, -0.37),node1.pos,decoration:"wave",angle:-0.87rad)
cetz.draw.content((0.14, -0.29),angle:-0.87rad,[k(1)])
cetz.draw.hobby((-0.14, -0.07),(0.09, -0.32),(0.30, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.08),node2.pos,decoration:"wave",angle:4.70rad)
cetz.draw.content((-0.77, -0.08),angle:4.70rad,[k(1)])
cetz.draw.hobby((-0.71, -0.46),(-0.71, -0.08),(-0.70, 0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.03, 0.35),node5.pos,decoration:"arrow",angle:2.91rad)
cetz.draw.content((-0.00, 0.47),angle:2.91rad,[k(1)+k(3)])
cetz.draw.hobby((-0.44, 0.50),(-0.02, 0.41),(0.39, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.16, 0.37),node3.pos,decoration:"arrow",angle:3.82rad)
cetz.draw.content((0.09, 0.47),angle:3.82rad,[-p+k(1)+k(3)])
cetz.draw.hobby((0.44, 0.67),(0.12, 0.42),(-0.20, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, 0.47),node4.pos,decoration:"coil",angle:1.45rad)
cetz.draw.content((0.71, 0.46),angle:1.45rad,[-p+k(1)+2*k(3)])
cetz.draw.hobby((0.62, 0.27),(0.64, 0.46),(0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.74, -0.90),angle:-2.33rad,[-k(0)])
cetz.draw.hobby((-0.85, -0.93),(-0.70, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.72, -0.76),angle:2.77rad,[-k(0)])
cetz.draw.hobby((0.50, -0.74),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.65, -0.12),angle:3.14rad,[-(-p+k(3))])
cetz.draw.hobby((-0.85, -0.06),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.73rad)
cetz.draw.content((0.82, 0.21),angle:2.73rad,[-(-p+k(3))])
cetz.draw.hobby((0.71, 0.19),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.75rad)
cetz.draw.content((0.74, 0.96),angle:3.75rad,[k(3)])
cetz.draw.hobby((0.70, 0.87),(0.84, 0.96),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.19rad)
cetz.draw.content((-0.91, 0.67),angle:2.19rad,[k(3)])
cetz.draw.hobby((-0.96, 0.84),(-0.76, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.82))
node(node0.pos)
let node1= (pos:(-0.58, -0.68))
node(node1.pos)
let node2= (pos:(0.75, -0.15))
node(node2.pos)
let node3= (pos:(-0.75, 0.42))
node(node3.pos)
let node4= (pos:(0.04, 0.14))
node(node4.pos)
let node5= (pos:(-0.00, 0.60))
node(node5.pos)
edge(node0.pos,(-0.03, -0.75),node1.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((-0.04, -0.87),angle:3.01rad,[k(0)])
cetz.draw.hobby((0.37, -0.86),(-0.03, -0.81),(-0.42, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, -0.13),node1.pos,decoration:"wave",angle:4.87rad)
cetz.draw.content((-0.79, -0.14),angle:4.87rad,[k(1)])
cetz.draw.hobby((-0.79, 0.25),(-0.73, -0.14),(-0.67, -0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.50),node2.pos,decoration:"wave",angle:-1.86rad)
cetz.draw.content((0.77, -0.53),angle:-1.86rad,[k(1)])
cetz.draw.hobby((0.64, -0.75),(0.72, -0.51),(0.78, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.37, 0.27),node3.pos,decoration:"arrow",angle:2.80rad)
cetz.draw.content((-0.41, 0.16),angle:2.80rad,[-p-k(0)+k(1)+k(3)])
cetz.draw.hobby((-0.10, 0.12),(-0.38, 0.21),(-0.66, 0.32),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.40, -0.00),node2.pos,decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.45, 0.11),angle:2.76rad,[k(3)])
cetz.draw.hobby((0.17, 0.15),(0.42, 0.06),(0.67, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, 0.38),node4.pos,decoration:"coil",angle:-1.47rad)
cetz.draw.content((0.16, 0.39),angle:-1.47rad,[-p-k(0)+k(1)+2*k(3)])
cetz.draw.hobby((0.08, 0.55),(0.10, 0.38),(0.11, 0.20),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.48rad)
cetz.draw.content((-0.72, -0.93),angle:-2.48rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.96),(-0.67, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.81, -0.80),angle:2.77rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.70, -0.82),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.67rad)
cetz.draw.content((0.81, 0.03),angle:3.67rad,[k(1)+k(3)])
cetz.draw.hobby((0.85, -0.02),(0.84, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((-0.44, 0.20),angle:-2.60rad,[k(1)+k(3)])
cetz.draw.hobby((-0.84, 0.03),(-0.10, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.97rad)
cetz.draw.content((-0.99, 0.66),angle:1.97rad,[-(-p-k(0)+k(3))])
cetz.draw.hobby((-1.00, 0.84),(-0.87, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((0.45, 0.91),angle:3.52rad,[-(-p-k(0)+k(3))])
cetz.draw.hobby((0.11, 0.71),(0.84, 1.00),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.80))
node(node0.pos)
let node1= (pos:(0.60, -0.67))
node(node1.pos)
let node2= (pos:(-0.68, -0.13))
node(node2.pos)
let node3= (pos:(0.78, 0.43))
node(node3.pos)
let node4= (pos:(0.05, 0.15))
node(node4.pos)
let node5= (pos:(-0.02, 0.61))
node(node5.pos)
edge(node1.pos,(0.04, -0.74),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.05, -0.86),angle:-3.02rad,[k(0)+k(1)])
cetz.draw.hobby((0.44, -0.75),(0.05, -0.80),(-0.34, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, -0.13),node1.pos,decoration:"wave",angle:-1.73rad)
cetz.draw.content((0.81, -0.15),angle:-1.73rad,[k(1)])
cetz.draw.hobby((0.82, 0.25),(0.76, -0.13),(0.69, -0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.61, -0.47),node2.pos,decoration:"wave",angle:4.95rad)
cetz.draw.content((-0.73, -0.50),angle:4.95rad,[k(1)])
cetz.draw.hobby((-0.60, -0.72),(-0.67, -0.49),(-0.72, -0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.44, 0.30),node3.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.40, 0.41),angle:0.36rad,[p+2*k(1)+k(3)])
cetz.draw.hobby((0.14, 0.25),(0.39, 0.35),(0.65, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.32, 0.02),node2.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((-0.36, 0.13),angle:0.37rad,[k(3)])
cetz.draw.hobby((-0.08, 0.17),(-0.34, 0.08),(-0.60, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.02, 0.39),node4.pos,decoration:"coil",angle:-1.42rad)
cetz.draw.content((0.14, 0.41),angle:-1.42rad,[p+2*k(1)+2*k(3)])
cetz.draw.hobby((0.06, 0.55),(0.08, 0.39),(0.10, 0.22),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.76rad)
cetz.draw.content((-0.71, -1.01),angle:-2.76rad,[-k(0)])
cetz.draw.hobby((-0.84, -1.00),(-0.63, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.45rad)
cetz.draw.content((0.88, -0.74),angle:2.45rad,[-k(0)])
cetz.draw.hobby((0.76, -0.72),(0.92, -0.86),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.89, -0.18),angle:5.89rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.88, -0.11),(-0.84, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.54rad)
cetz.draw.content((0.55, 0.41),angle:-0.54rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.14, 0.58),(0.90, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.21rad)
cetz.draw.content((0.78, 0.76),angle:1.21rad,[p+k(1)+k(3)])
cetz.draw.hobby((0.78, 0.59),(0.89, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((-0.55, 0.69),angle:5.90rad,[p+k(1)+k(3)])
cetz.draw.hobby((-0.88, 0.89),(-0.18, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.75))
node(node0.pos)
let node1= (pos:(-0.64, -0.62))
node(node1.pos)
let node2= (pos:(-0.29, -0.01))
node(node2.pos)
let node3= (pos:(-0.61, 0.50))
node(node3.pos)
let node4= (pos:(0.60, 0.72))
node(node4.pos)
let node5= (pos:(0.55, 0.21))
node(node5.pos)
edge(node0.pos,(-0.15, -0.70),node1.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.16, -0.82),angle:3.02rad,[k(0)])
cetz.draw.hobby((0.19, -0.80),(-0.16, -0.76),(-0.51, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node1.pos,decoration:"wave",angle:4.68rad)
cetz.draw.content((-0.78, -0.06),angle:4.68rad,[k(1)])
cetz.draw.hobby((-0.69, 0.34),(-0.72, -0.06),(-0.72, -0.46),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.03, -0.37),node2.pos,decoration:"wave",angle:-0.87rad)
cetz.draw.content((0.12, -0.30),angle:-0.87rad,[k(1)])
cetz.draw.hobby((0.29, -0.60),(0.08, -0.34),(-0.14, -0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.05, 0.35),node5.pos,decoration:"arrow",angle:6.04rad)
cetz.draw.content((-0.08, 0.24),angle:6.04rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((-0.45, 0.40),(-0.05, 0.29),(0.36, 0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.37),node2.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.08, 0.46),angle:0.69rad,[k(3)])
cetz.draw.hobby((0.43, 0.66),(0.11, 0.41),(-0.20, 0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.60, 0.46),node4.pos,decoration:"coil",angle:1.45rad)
cetz.draw.content((0.72, 0.44),angle:1.45rad,[p+k(0)+2*k(1)+2*k(3)])
cetz.draw.hobby((0.63, 0.27),(0.66, 0.46),(0.67, 0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.74, -0.89),angle:-2.33rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.85, -0.93),(-0.70, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((0.71, -0.76),angle:2.78rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.50, -0.74),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.27rad)
cetz.draw.content((-0.64, -0.12),angle:6.27rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.85, -0.06),(-0.44, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.44rad)
cetz.draw.content((0.82, 0.22),angle:-0.44rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.71, 0.20),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.62rad)
cetz.draw.content((0.73, 0.96),angle:0.62rad,[p+k(0)+2*k(1)+k(3)])
cetz.draw.hobby((0.69, 0.86),(0.84, 0.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.38rad)
cetz.draw.content((-0.90, 0.68),angle:5.38rad,[p+k(0)+2*k(1)+k(3)])
cetz.draw.hobby((-0.95, 0.84),(-0.75, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.34, -0.74))
node(node1.pos)
let node2= (pos:(0.61, 0.48))
node(node2.pos)
let node3= (pos:(0.29, -0.01))
node(node3.pos)
let node4= (pos:(-0.61, 0.73))
node(node4.pos)
let node5= (pos:(-0.54, 0.22))
node(node5.pos)
edge(node0.pos,(0.15, -0.69),node1.pos,decoration:"arrow",angle:-3.04rad)
cetz.draw.content((0.16, -0.81),angle:-3.04rad,[k(0)])
cetz.draw.hobby((0.50, -0.71),(0.15, -0.75),(-0.19, -0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.03, -0.38),node1.pos,decoration:"wave",angle:-2.28rad)
cetz.draw.content((0.06, -0.45),angle:-2.28rad,[k(1)])
cetz.draw.hobby((0.24, -0.16),(0.02, -0.41),(-0.20, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.64, -0.08),node2.pos,decoration:"wave",angle:-1.54rad)
cetz.draw.content((0.76, -0.08),angle:-1.54rad,[k(1)])
cetz.draw.hobby((0.70, -0.47),(0.70, -0.08),(0.68, 0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.04, 0.36),node5.pos,decoration:"arrow",angle:0.22rad)
cetz.draw.content((0.02, 0.48),angle:0.22rad,[k(1)+k(3)])
cetz.draw.hobby((0.42, 0.50),(0.02, 0.42),(-0.39, 0.32),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.17, 0.35),node3.pos,decoration:"arrow",angle:5.60rad)
cetz.draw.content((-0.24, 0.26),angle:5.60rad,[p+k(0)+2*k(1)+k(3)])
cetz.draw.hobby((-0.52, 0.57),(-0.21, 0.31),(0.11, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.59, 0.48),node4.pos,decoration:"coil",angle:1.70rad)
cetz.draw.content((-0.71, 0.46),angle:1.70rad,[p+k(0)+2*k(1)+2*k(3)])
cetz.draw.hobby((-0.62, 0.28),(-0.65, 0.46),(-0.67, 0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.76rad)
cetz.draw.content((-0.63, -0.98),angle:-2.76rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.00),(-0.46, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.90, -0.73),angle:2.35rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.79, -0.70),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.01rad)
cetz.draw.content((0.64, 0.12),angle:0.01rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((0.44, 0.05),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.72, -0.00),angle:0.44rad,[p+k(0)+k(1)+k(3)])
cetz.draw.hobby((-0.84, 0.01),(-0.65, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.67rad)
cetz.draw.content((-0.88, 0.76),angle:5.67rad,[-k(3)])
cetz.draw.hobby((-0.91, 0.86),(-0.77, 0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.93rad)
cetz.draw.content((0.71, 0.81),angle:0.93rad,[-k(3)])
cetz.draw.hobby((0.65, 0.63),(0.86, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.59))
node(node0.pos)
let node1= (pos:(0.50, -0.75))
node(node1.pos)
let node2= (pos:(-0.71, 0.50))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.10, 0.49))
node(node4.pos)
let node5= (pos:(0.80, 0.71))
node(node5.pos)
edge(node1.pos,(-0.06, -0.67),node0.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.08, -0.79),angle:3.00rad,[k(0)+k(1)])
cetz.draw.hobby((0.32, -0.79),(-0.06, -0.73),(-0.45, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.38),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((0.41, -0.37),angle:4.61rad,[k(1)])
cetz.draw.hobby((0.50, -0.09),(0.47, -0.36),(0.45, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.67, -0.05),node2.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.79, -0.06),angle:4.81rad,[k(1)])
cetz.draw.hobby((-0.69, -0.44),(-0.73, -0.05),(-0.76, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, 0.36),node5.pos,decoration:"arrow",angle:1.26rad)
cetz.draw.content((0.83, 0.32),angle:1.26rad,[k(2)])
cetz.draw.hobby((0.68, 0.09),(0.77, 0.34),(0.84, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.23),node3.pos,decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.25, 0.15),angle:5.50rad,[k(1)+k(2)])
cetz.draw.hobby((0.12, 0.37),(0.29, 0.20),(0.46, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.30, 0.49),node2.pos,decoration:"arrow",angle:6.27rad)
cetz.draw.content((-0.30, 0.37),angle:6.27rad,[-p-k(1)])
cetz.draw.hobby((-0.02, 0.43),(-0.31, 0.43),(-0.59, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.44, 0.63),node4.pos,decoration:"coil",angle:3.46rad)
cetz.draw.content((0.40, 0.74),angle:3.46rad,[-p+k(2)])
cetz.draw.hobby((0.68, 0.75),(0.42, 0.69),(0.18, 0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.34rad)
cetz.draw.content((-0.72, -0.88),angle:-2.34rad,[-k(0)])
cetz.draw.hobby((-0.85, -0.93),(-0.67, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.80, -0.77),angle:2.68rad,[-k(0)])
cetz.draw.hobby((0.66, -0.76),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.24rad)
cetz.draw.content((-0.96, 0.69),angle:5.24rad,[p])
cetz.draw.hobby((-0.98, 0.84),(-0.84, 0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.96rad)
cetz.draw.content((0.80, 0.93),angle:0.96rad,[p])
cetz.draw.hobby((0.83, 0.87),(0.86, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding10i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, -0.73))
node(node0.pos)
let node1= (pos:(0.59, -0.82))
node(node1.pos)
let node2= (pos:(-0.16, 0.15))
node(node2.pos)
let node3= (pos:(0.82, -0.10))
node(node3.pos)
let node4= (pos:(0.70, 0.63))
node(node4.pos)
let node5= (pos:(-0.87, 0.47))
node(node5.pos)
edge(node1.pos,(0.08, -0.80),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.07, -0.91),angle:3.05rad,[k(0)+k(1)])
cetz.draw.hobby((0.43, -0.88),(0.07, -0.85),(-0.29, -0.81),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, -0.48),node1.pos,decoration:"wave",angle:-1.88rad)
cetz.draw.content((0.82, -0.51),angle:-1.88rad,[k(1)])
cetz.draw.hobby((0.85, -0.22),(0.77, -0.48),(0.69, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.30, -0.29),node2.pos,decoration:"wave",angle:4.41rad)
cetz.draw.content((-0.42, -0.26),angle:4.41rad,[k(1)])
cetz.draw.hobby((-0.45, -0.58),(-0.36, -0.27),(-0.26, 0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.32),node5.pos,decoration:"arrow",angle:-0.43rad)
cetz.draw.content((-0.48, 0.43),angle:-0.43rad,[-p])
cetz.draw.hobby((-0.24, 0.25),(-0.49, 0.37),(-0.74, 0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.76, 0.26),node3.pos,decoration:"arrow",angle:4.88rad)
cetz.draw.content((0.64, 0.24),angle:4.88rad,[k(1)+k(2)])
cetz.draw.hobby((0.66, 0.51),(0.70, 0.26),(0.74, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.26, 0.41),node2.pos,decoration:"arrow",angle:0.51rad)
cetz.draw.content((0.20, 0.52),angle:0.51rad,[-p-k(1)])
cetz.draw.hobby((0.54, 0.62),(0.23, 0.46),(-0.07, 0.28),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.67, -0.97),angle:-2.70rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.55, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.84, -0.80),angle:2.74rad,[-k(0)])
cetz.draw.hobby((0.75, -0.83),(0.89, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.85, 0.06),angle:0.48rad,[k(2)])
cetz.draw.hobby((0.92, 0.03),(0.84, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.30rad)
cetz.draw.content((-0.82, 0.20),angle:1.30rad,[k(2)])
cetz.draw.hobby((-0.90, 0.13),(-0.85, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.82rad)
cetz.draw.content((-1.05, 0.71),angle:1.82rad,[-(-p+k(2))])
cetz.draw.hobby((-1.02, 0.84),(-0.96, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.03rad)
cetz.draw.content((0.76, 0.89),angle:4.03rad,[-(-p+k(2))])
cetz.draw.hobby((0.75, 0.78),(0.86, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.73))
node(node0.pos)
let node1= (pos:(-0.60, -0.80))
node(node1.pos)
let node2= (pos:(0.25, 0.17))
node(node2.pos)
let node3= (pos:(-0.81, -0.06))
node(node3.pos)
let node4= (pos:(0.93, 0.47))
node(node4.pos)
let node5= (pos:(-0.65, 0.65))
node(node5.pos)
edge(node0.pos,(-0.07, -0.76),node1.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.07, -0.64),angle:3.20rad,[k(0)])
cetz.draw.hobby((0.31, -0.68),(-0.07, -0.70),(-0.44, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.71, -0.43),node1.pos,decoration:"wave",angle:4.98rad)
cetz.draw.content((-0.83, -0.46),angle:4.98rad,[k(1)])
cetz.draw.hobby((-0.84, -0.18),(-0.77, -0.44),(-0.69, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.36, -0.27),node2.pos,decoration:"wave",angle:-1.33rad)
cetz.draw.content((0.48, -0.25),angle:-1.33rad,[k(1)])
cetz.draw.hobby((0.50, -0.58),(0.42, -0.27),(0.34, 0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.19, 0.43),node5.pos,decoration:"arrow",angle:-0.49rad)
cetz.draw.content((-0.13, 0.53),angle:-0.49rad,[-p-k(0)])
cetz.draw.hobby((0.15, 0.30),(-0.16, 0.48),(-0.48, 0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.74, 0.30),node5.pos,decoration:"arrow",angle:1.35rad)
cetz.draw.content((-0.86, 0.33),angle:1.35rad,[k(2)])
cetz.draw.hobby((-0.85, 0.06),(-0.80, 0.31),(-0.74, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.58, 0.33),node2.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((0.54, 0.44),angle:0.43rad,[-p-k(0)-k(1)])
cetz.draw.hobby((0.80, 0.49),(0.56, 0.38),(0.32, 0.27),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.67rad)
cetz.draw.content((-0.75, -1.00),angle:-2.67rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.98),(-0.71, -0.92),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.67rad)
cetz.draw.content((0.79, -0.76),angle:2.67rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.63, -0.75),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.42rad)
cetz.draw.content((1.08, 0.26),angle:-1.42rad,[k(1)+k(2)])
cetz.draw.hobby((1.01, 0.33),(1.04, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.01rad)
cetz.draw.content((-0.94, -0.14),angle:6.01rad,[k(1)+k(2)])
cetz.draw.hobby((-0.87, -0.10),(-0.97, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.36rad)
cetz.draw.content((-0.91, 0.74),angle:2.36rad,[-(-p-k(0)+k(2))])
cetz.draw.hobby((-0.94, 0.85),(-0.80, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.57rad)
cetz.draw.content((0.84, 0.75),angle:4.57rad,[-(-p-k(0)+k(2))])
cetz.draw.hobby((0.89, 0.63),(0.92, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.62, -0.62))
node(node0.pos)
let node1= (pos:(-0.50, -0.78))
node(node1.pos)
let node2= (pos:(0.75, 0.49))
node(node2.pos)
let node3= (pos:(-0.50, 0.02))
node(node3.pos)
let node4= (pos:(-0.73, 0.71))
node(node4.pos)
let node5= (pos:(-0.02, 0.49))
node(node5.pos)
edge(node0.pos,(0.06, -0.72),node1.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((0.07, -0.84),angle:-3.00rad,[k(0)])
cetz.draw.hobby((0.47, -0.71),(0.07, -0.78),(-0.32, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.51, -0.38),node1.pos,decoration:"wave",angle:4.72rad)
cetz.draw.content((-0.63, -0.38),angle:4.72rad,[k(1)])
cetz.draw.hobby((-0.57, -0.10),(-0.57, -0.38),(-0.56, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.70, -0.06),node2.pos,decoration:"wave",angle:-1.68rad)
cetz.draw.content((0.82, -0.07),angle:-1.68rad,[k(1)])
cetz.draw.hobby((0.71, -0.46),(0.76, -0.07),(0.80, 0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.37, 0.50),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.37, 0.62),angle:-0.00rad,[-p-k(0)])
cetz.draw.hobby((0.64, 0.55),(0.37, 0.56),(0.10, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.24, 0.22),node5.pos,decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.15, 0.14),angle:0.77rad,[k(2)])
cetz.draw.hobby((-0.38, 0.02),(-0.19, 0.18),(-0.03, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.63, 0.36),node3.pos,decoration:"arrow",angle:5.02rad)
cetz.draw.content((-0.75, 0.32),angle:5.02rad,[k(1)+k(2)])
cetz.draw.hobby((-0.76, 0.59),(-0.69, 0.34),(-0.60, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.36, 0.62),node4.pos,decoration:"coil",angle:2.85rad)
cetz.draw.content((-0.32, 0.74),angle:2.85rad,[-p-k(0)+k(2)])
cetz.draw.hobby((-0.10, 0.59),(-0.35, 0.68),(-0.60, 0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.70, -1.00),angle:-2.73rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.00),(-0.61, -0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.90, -0.73),angle:2.35rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.77, -0.68),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.95, 0.77),angle:5.46rad,[-(-p-k(0)-k(1))])
cetz.draw.hobby((-0.94, 0.85),(-0.87, 0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.12rad)
cetz.draw.content((0.77, 0.80),angle:1.12rad,[-(-p-k(0)-k(1))])
cetz.draw.hobby((0.76, 0.66),(0.88, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.65))
node(node0.pos)
let node1= (pos:(0.54, -0.85))
node(node1.pos)
let node2= (pos:(-0.74, 0.43))
node(node2.pos)
let node3= (pos:(0.71, -0.16))
node(node3.pos)
let node4= (pos:(0.02, 0.61))
node(node4.pos)
let node5= (pos:(0.02, 0.16))
node(node5.pos)
edge(node1.pos,(-0.02, -0.76),node0.pos,decoration:"arrow",angle:2.97rad)
cetz.draw.content((-0.04, -0.88),angle:2.97rad,[k(0)+k(1)])
cetz.draw.hobby((0.36, -0.88),(-0.04, -0.82),(-0.43, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.50),node1.pos,decoration:"wave",angle:-1.81rad)
cetz.draw.content((0.74, -0.53),angle:-1.81rad,[k(1)])
cetz.draw.hobby((0.74, -0.27),(0.68, -0.52),(0.62, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.67, -0.12),node2.pos,decoration:"wave",angle:4.85rad)
cetz.draw.content((-0.79, -0.13),angle:4.85rad,[k(1)])
cetz.draw.hobby((-0.67, -0.50),(-0.73, -0.12),(-0.78, 0.26),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.33, 0.29),node5.pos,decoration:"arrow",angle:2.80rad)
cetz.draw.content((-0.29, 0.40),angle:2.80rad,[k(1)+k(3)])
cetz.draw.hobby((-0.60, 0.45),(-0.34, 0.36),(-0.07, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, -0.01),node5.pos,decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.33, -0.11),angle:2.71rad,[-p-k(1)+k(3)])
cetz.draw.hobby((0.58, -0.16),(0.34, -0.05),(0.10, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.06, 0.38),node4.pos,decoration:"coil",angle:1.57rad)
cetz.draw.content((0.18, 0.38),angle:1.57rad,[-p+2*k(3)])
cetz.draw.hobby((0.10, 0.22),(0.12, 0.39),(0.10, 0.56),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((-0.72, -0.92),angle:-2.44rad,[-k(0)])
cetz.draw.hobby((-0.85, -0.95),(-0.66, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
cetz.draw.content((0.81, -0.81),angle:2.82rad,[-k(0)])
cetz.draw.hobby((0.70, -0.84),(0.88, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((-0.43, 0.20),angle:-2.60rad,[-(-p+k(3))])
cetz.draw.hobby((-0.84, 0.03),(-0.08, 0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.80, 0.03),angle:3.63rad,[-(-p+k(3))])
cetz.draw.hobby((0.81, -0.03),(0.84, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((0.47, 0.92),angle:3.52rad,[k(3)])
cetz.draw.hobby((0.14, 0.72),(0.84, 1.00),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-0.98, 0.66),angle:2.00rad,[k(3)])
cetz.draw.hobby((-0.99, 0.84),(-0.85, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding11f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.76))
node(node0.pos)
let node1= (pos:(-0.33, -0.63))
node(node1.pos)
let node2= (pos:(0.57, -0.01))
node(node2.pos)
let node3= (pos:(0.32, 0.49))
node(node3.pos)
let node4= (pos:(-0.51, 0.71))
node(node4.pos)
let node5= (pos:(-0.63, 0.21))
node(node5.pos)
edge(node0.pos,(0.14, -0.71),node1.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((0.12, -0.83),angle:3.00rad,[k(0)])
cetz.draw.hobby((0.46, -0.81),(0.13, -0.77),(-0.20, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, -0.07),node1.pos,decoration:"wave",angle:-2.10rad)
cetz.draw.content((0.11, -0.13),angle:-2.10rad,[k(1)])
cetz.draw.hobby((0.28, 0.29),(0.06, -0.10),(-0.18, -0.49),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.58, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((0.46, -0.39),angle:4.76rad,[k(1)])
cetz.draw.hobby((0.54, -0.65),(0.52, -0.39),(0.51, -0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.16, 0.35),node5.pos,decoration:"arrow",angle:3.43rad)
cetz.draw.content((-0.19, 0.47),angle:3.43rad,[-p-k(0)-k(1)+k(3)])
cetz.draw.hobby((0.16, 0.51),(-0.17, 0.41),(-0.51, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.02, 0.36),node2.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((0.09, 0.46),angle:2.55rad,[k(3)])
cetz.draw.hobby((-0.32, 0.65),(0.06, 0.40),(0.44, 0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.61, 0.48),node4.pos,decoration:"coil",angle:1.32rad)
cetz.draw.content((-0.72, 0.51),angle:1.32rad,[-p-k(0)+2*k(3)])
cetz.draw.hobby((-0.69, 0.29),(-0.67, 0.49),(-0.60, 0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.64rad)
cetz.draw.content((-0.61, -0.92),angle:-2.64rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.98),(-0.43, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.60rad)
cetz.draw.content((0.86, -0.78),angle:2.60rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.76, -0.79),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.17rad)
cetz.draw.content((0.78, 0.11),angle:3.17rad,[k(1)+k(3)])
cetz.draw.hobby((0.71, 0.05),(0.85, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.62rad)
cetz.draw.content((-0.76, 0.00),angle:-2.62rad,[k(1)+k(3)])
cetz.draw.hobby((-0.84, 0.02),(-0.73, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.61rad)
cetz.draw.content((-0.82, 0.75),angle:2.61rad,[-(-p-k(0)+k(3))])
cetz.draw.hobby((-0.90, 0.87),(-0.67, 0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.78rad)
cetz.draw.content((0.59, 0.84),angle:3.78rad,[-(-p-k(0)+k(3))])
cetz.draw.hobby((0.41, 0.63),(0.84, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding11f1=cetz.canvas(length:50%,{
let node0= (pos:(0.35, -0.63))
node(node0.pos)
let node1= (pos:(-0.59, -0.74))
node(node1.pos)
let node2= (pos:(-0.32, 0.50))
node(node2.pos)
let node3= (pos:(-0.56, 0.01))
node(node3.pos)
let node4= (pos:(0.53, 0.73))
node(node4.pos)
let node5= (pos:(0.63, 0.23))
node(node5.pos)
edge(node0.pos,(-0.12, -0.69),node1.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((-0.10, -0.81),angle:-3.02rad,[k(0)])
cetz.draw.hobby((0.22, -0.71),(-0.11, -0.75),(-0.45, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.60, -0.39),node1.pos,decoration:"wave",angle:4.67rad)
cetz.draw.content((-0.72, -0.38),angle:4.67rad,[k(1)])
cetz.draw.hobby((-0.63, -0.09),(-0.66, -0.36),(-0.66, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.02, -0.07),node2.pos,decoration:"wave",angle:5.25rad)
cetz.draw.content((-0.09, -0.13),angle:5.25rad,[k(1)])
cetz.draw.hobby((0.20, -0.49),(-0.04, -0.09),(-0.27, 0.30),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.16, 0.38),node5.pos,decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.19, 0.49),angle:2.86rad,[k(1)+k(3)])
cetz.draw.hobby((-0.16, 0.53),(0.18, 0.44),(0.51, 0.33),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.02, 0.36),node3.pos,decoration:"arrow",angle:-2.56rad)
cetz.draw.content((0.05, 0.26),angle:-2.56rad,[-p-k(0)+k(3)])
cetz.draw.hobby((0.40, 0.57),(0.02, 0.32),(-0.36, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, 0.48),node4.pos,decoration:"coil",angle:1.78rad)
cetz.draw.content((0.71, 0.50),angle:1.78rad,[-p-k(0)+2*k(3)])
cetz.draw.hobby((0.68, 0.31),(0.65, 0.49),(0.61, 0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.58rad)
cetz.draw.content((-0.73, -0.97),angle:-2.58rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.97),(-0.69, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.62rad)
cetz.draw.content((0.73, -0.71),angle:2.62rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.51, -0.65),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.77, -0.11),angle:-3.11rad,[-(-p-k(0)-k(1)+k(3))])
cetz.draw.hobby((-0.85, -0.06),(-0.70, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
cetz.draw.content((0.88, 0.22),angle:2.59rad,[-(-p-k(0)-k(1)+k(3))])
cetz.draw.hobby((0.79, 0.20),(0.90, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.66rad)
cetz.draw.content((0.70, 0.97),angle:3.66rad,[k(3)])
cetz.draw.hobby((0.63, 0.86),(0.84, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.51rad)
cetz.draw.content((-0.73, 0.66),angle:2.51rad,[k(3)])
cetz.draw.hobby((-0.91, 0.86),(-0.48, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.73))
node(node0.pos)
let node1= (pos:(0.63, -0.64))
node(node1.pos)
let node2= (pos:(-0.44, 0.04))
node(node2.pos)
let node3= (pos:(0.80, 0.50))
node(node3.pos)
let node4= (pos:(-0.69, 0.73))
node(node4.pos)
let node5= (pos:(0.04, 0.51))
node(node5.pos)
edge(node1.pos,(0.06, -0.68),node0.pos,decoration:"arrow",angle:3.23rad)
cetz.draw.content((0.05, -0.56),angle:3.23rad,[k(0)+k(1)])
cetz.draw.hobby((0.46, -0.59),(0.07, -0.62),(-0.33, -0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.07),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.84, -0.09),angle:-1.72rad,[k(1)])
cetz.draw.hobby((0.84, 0.32),(0.78, -0.08),(0.72, -0.47),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.35),node2.pos,decoration:"wave",angle:-1.63rad)
cetz.draw.content((-0.35, -0.36),angle:-1.63rad,[k(1)])
cetz.draw.hobby((-0.42, -0.62),(-0.41, -0.35),(-0.39, -0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.17, 0.25),node5.pos,decoration:"arrow",angle:-2.37rad)
cetz.draw.content((-0.09, 0.16),angle:-2.37rad,[k(1)+k(3)])
cetz.draw.hobby((-0.32, 0.05),(-0.13, 0.20),(0.03, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.44, 0.49),node5.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((0.44, 0.37),angle:3.13rad,[-p-k(1)])
cetz.draw.hobby((0.69, 0.43),(0.42, 0.43),(0.15, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.58, 0.39),node2.pos,decoration:"arrow",angle:1.92rad)
cetz.draw.content((-0.69, 0.35),angle:1.92rad,[k(3)])
cetz.draw.hobby((-0.72, 0.61),(-0.64, 0.36),(-0.54, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.32, 0.64),node4.pos,decoration:"coil",angle:2.84rad)
cetz.draw.content((-0.29, 0.75),angle:2.84rad,[-p+k(3)])
cetz.draw.hobby((-0.05, 0.61),(-0.30, 0.69),(-0.57, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.69, -0.97),angle:-2.65rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.98),(-0.59, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((0.90, -0.73),angle:2.36rad,[-k(0)])
cetz.draw.hobby((0.78, -0.70),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.42rad)
cetz.draw.content((-0.93, 0.78),angle:2.42rad,[p])
cetz.draw.hobby((-0.93, 0.86),(-0.85, 0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.33rad)
cetz.draw.content((0.79, 0.79),angle:4.33rad,[p])
cetz.draw.hobby((0.80, 0.66),(0.89, 0.88),stroke:stroke,mark: (end: ">"))
})
let embedding12i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.80))
node(node0.pos)
let node1= (pos:(0.47, -0.74))
node(node1.pos)
let node2= (pos:(-0.79, -0.06))
node(node2.pos)
let node3= (pos:(0.23, 0.17))
node(node3.pos)
let node4= (pos:(0.93, 0.48))
node(node4.pos)
let node5= (pos:(-0.64, 0.64))
node(node5.pos)
edge(node1.pos,(-0.06, -0.77),node0.pos,decoration:"arrow",angle:-3.08rad)
cetz.draw.content((-0.05, -0.89),angle:-3.08rad,[k(0)+k(1)])
cetz.draw.hobby((0.32, -0.81),(-0.05, -0.83),(-0.42, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.29),node1.pos,decoration:"wave",angle:-1.31rad)
cetz.draw.content((0.49, -0.26),angle:-1.31rad,[k(1)])
cetz.draw.hobby((0.34, 0.05),(0.43, -0.27),(0.50, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.43),node2.pos,decoration:"wave",angle:4.98rad)
cetz.draw.content((-0.82, -0.46),angle:4.98rad,[k(1)])
cetz.draw.hobby((-0.68, -0.71),(-0.76, -0.45),(-0.82, -0.19),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.68, 0.29),node5.pos,decoration:"arrow",angle:-1.77rad)
cetz.draw.content((-0.56, 0.27),angle:-1.77rad,[k(1)+k(3)])
cetz.draw.hobby((-0.69, 0.02),(-0.62, 0.27),(-0.59, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.40),node5.pos,decoration:"arrow",angle:2.65rad)
cetz.draw.content((-0.14, 0.51),angle:2.65rad,[-p-k(1)])
cetz.draw.hobby((0.13, 0.29),(-0.17, 0.46),(-0.48, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, 0.34),node3.pos,decoration:"arrow",angle:3.56rad)
cetz.draw.content((0.55, 0.45),angle:3.56rad,[-p])
cetz.draw.hobby((0.81, 0.49),(0.55, 0.39),(0.31, 0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.74, -1.01),angle:-2.69rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.69, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.79, -0.76),angle:2.68rad,[-k(0)])
cetz.draw.hobby((0.63, -0.75),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:1.71rad)
cetz.draw.content((1.09, 0.25),angle:1.71rad,[k(3)])
cetz.draw.hobby((1.01, 0.34),(1.04, 0.16),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((-0.93, -0.15),angle:2.87rad,[k(3)])
cetz.draw.hobby((-0.87, -0.10),(-0.95, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.35rad)
cetz.draw.content((-0.91, 0.73),angle:2.35rad,[-(-p+k(3))])
cetz.draw.hobby((-0.94, 0.85),(-0.79, 0.70),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.59rad)
cetz.draw.content((0.85, 0.75),angle:4.59rad,[-(-p+k(3))])
cetz.draw.hobby((0.89, 0.63),(0.92, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding12f0=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.81))
node(node0.pos)
let node1= (pos:(-0.43, -0.75))
node(node1.pos)
let node2= (pos:(0.83, -0.09))
node(node2.pos)
let node3= (pos:(-0.17, 0.15))
node(node3.pos)
let node4= (pos:(0.69, 0.62))
node(node4.pos)
let node5= (pos:(-0.88, 0.47))
node(node5.pos)
edge(node0.pos,(0.08, -0.79),node1.pos,decoration:"arrow",angle:3.09rad)
cetz.draw.content((0.08, -0.91),angle:3.09rad,[k(0)])
cetz.draw.hobby((0.45, -0.86),(0.08, -0.85),(-0.28, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.31, -0.29),node1.pos,decoration:"wave",angle:4.43rad)
cetz.draw.content((-0.42, -0.26),angle:4.43rad,[k(1)])
cetz.draw.hobby((-0.27, 0.04),(-0.36, -0.28),(-0.45, -0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.45),node2.pos,decoration:"wave",angle:4.42rad)
cetz.draw.content((0.59, -0.41),angle:4.42rad,[k(1)])
cetz.draw.hobby((0.58, -0.68),(0.65, -0.43),(0.73, -0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.52, 0.33),node5.pos,decoration:"arrow",angle:2.72rad)
cetz.draw.content((-0.47, 0.44),angle:2.72rad,[-p-k(0)-k(1)])
cetz.draw.hobby((-0.25, 0.26),(-0.50, 0.38),(-0.75, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, 0.39),node3.pos,decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.21, 0.49),angle:3.63rad,[-p-k(0)])
cetz.draw.hobby((0.53, 0.60),(0.23, 0.44),(-0.07, 0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.75, 0.28),node2.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((0.64, 0.26),angle:1.76rad,[k(3)])
cetz.draw.hobby((0.65, 0.50),(0.70, 0.25),(0.75, 0.01),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.67, -0.98),angle:-2.73rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.99),(-0.54, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.86, -0.80),angle:2.69rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.77, -0.82),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.61rad)
cetz.draw.content((0.86, 0.06),angle:3.61rad,[k(1)+k(3)])
cetz.draw.hobby((0.93, 0.03),(0.84, -0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.81rad)
cetz.draw.content((-0.82, 0.21),angle:-1.81rad,[k(1)+k(3)])
cetz.draw.hobby((-0.91, 0.13),(-0.86, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.79rad)
cetz.draw.content((-1.06, 0.71),angle:1.79rad,[-(-p-k(0)+k(3))])
cetz.draw.hobby((-1.03, 0.84),(-0.97, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.04rad)
cetz.draw.content((0.75, 0.88),angle:4.04rad,[-(-p-k(0)+k(3))])
cetz.draw.hobby((0.74, 0.77),(0.86, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding12f1=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.75))
node(node0.pos)
let node1= (pos:(-0.59, -0.63))
node(node1.pos)
let node2= (pos:(0.55, 0.04))
node(node2.pos)
let node3= (pos:(-0.73, 0.50))
node(node3.pos)
let node4= (pos:(0.08, 0.51))
node(node4.pos)
let node5= (pos:(0.77, 0.74))
node(node5.pos)
edge(node0.pos,(-0.05, -0.69),node1.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.06, -0.81),angle:3.04rad,[k(0)])
cetz.draw.hobby((0.35, -0.79),(-0.04, -0.75),(-0.43, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.08),node1.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.78, -0.10),angle:4.84rad,[k(1)])
cetz.draw.hobby((-0.77, 0.33),(-0.72, -0.07),(-0.67, -0.47),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.36),node2.pos,decoration:"wave",angle:-1.61rad)
cetz.draw.content((0.66, -0.36),angle:-1.61rad,[k(1)])
cetz.draw.hobby((0.59, -0.63),(0.60, -0.35),(0.61, -0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.70, 0.38),node5.pos,decoration:"arrow",angle:-1.87rad)
cetz.draw.content((0.82, 0.35),angle:-1.87rad,[k(1)+k(3)])
cetz.draw.hobby((0.66, 0.11),(0.76, 0.36),(0.82, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.51),node3.pos,decoration:"arrow",angle:3.15rad)
cetz.draw.content((-0.33, 0.63),angle:3.15rad,[-p-k(0)])
cetz.draw.hobby((-0.04, 0.57),(-0.32, 0.57),(-0.61, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.30, 0.25),node2.pos,decoration:"arrow",angle:2.37rad)
cetz.draw.content((0.21, 0.16),angle:2.37rad,[k(3)])
cetz.draw.hobby((0.09, 0.39),(0.25, 0.21),(0.43, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.40, 0.66),node4.pos,decoration:"coil",angle:3.47rad)
cetz.draw.content((0.36, 0.77),angle:3.47rad,[-p-k(0)+k(3)])
cetz.draw.hobby((0.65, 0.78),(0.39, 0.72),(0.15, 0.61),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.41rad)
cetz.draw.content((-0.71, -0.90),angle:-2.41rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.85, -0.94),(-0.66, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.82, -0.77),angle:2.65rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.68, -0.76),(0.90, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.07rad)
cetz.draw.content((-0.97, 0.69),angle:2.07rad,[-(-p-k(0)-k(1))])
cetz.draw.hobby((-0.98, 0.84),(-0.85, 0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.98rad)
cetz.draw.content((0.79, 0.95),angle:3.98rad,[-(-p-k(0)-k(1))])
cetz.draw.hobby((0.82, 0.89),(0.86, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.62))
node(node0.pos)
let node1= (pos:(0.61, -0.80))
node(node1.pos)
let node2= (pos:(0.54, 0.53))
node(node2.pos)
let node3= (pos:(0.71, -0.12))
node(node3.pos)
let node4= (pos:(-0.85, 0.50))
node(node4.pos)
let node5= (pos:(-0.00, 0.35))
node(node5.pos)
edge(node1.pos,(0.15, -0.73),node0.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((0.13, -0.84),angle:2.95rad,[k(0)+k(1)])
cetz.draw.hobby((0.46, -0.84),(0.14, -0.79),(-0.18, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, -0.47),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.79, -0.48),angle:-1.72rad,[k(1)])
cetz.draw.hobby((0.76, -0.23),(0.73, -0.47),(0.69, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.05),node2.pos,decoration:"wave",angle:4.08rad)
cetz.draw.content((0.01, 0.02),angle:4.08rad,[k(1)])
cetz.draw.hobby((-0.23, -0.41),(0.07, -0.00),(0.36, 0.40),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.27, 0.47),node5.pos,decoration:"arrow",angle:0.32rad)
cetz.draw.content((0.24, 0.58),angle:0.32rad,[k(1)+k(3)])
cetz.draw.hobby((0.45, 0.58),(0.24, 0.52),(0.05, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, 0.10),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((0.30, -0.00),angle:2.56rad,[-p-k(1)-k(3)])
cetz.draw.hobby((0.57, -0.11),(0.32, 0.05),(0.07, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.43, 0.42),node4.pos,decoration:"coil",angle:2.97rad)
cetz.draw.content((-0.45, 0.30),angle:2.97rad,[-p])
cetz.draw.hobby((-0.14, 0.31),(-0.44, 0.36),(-0.73, 0.41),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.64rad)
cetz.draw.content((-0.59, -0.92),angle:-2.64rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.98),(-0.41, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.86, -0.79),angle:2.66rad,[-k(0)])
cetz.draw.hobby((0.77, -0.81),(0.90, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.87rad)
cetz.draw.content((-0.81, 0.21),angle:-1.87rad,[-(-p-k(3))])
cetz.draw.hobby((-0.90, 0.13),(-0.83, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.55rad)
cetz.draw.content((0.81, 0.05),angle:3.55rad,[-(-p-k(3))])
cetz.draw.hobby((0.83, -0.01),(0.84, -0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.01rad)
cetz.draw.content((-1.04, 0.71),angle:5.01rad,[-k(3)])
cetz.draw.hobby((-1.01, 0.84),(-0.95, 0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.80rad)
cetz.draw.content((0.69, 0.85),angle:0.80rad,[-k(3)])
cetz.draw.hobby((0.60, 0.68),(0.85, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding13i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.48, -0.72))
node(node0.pos)
let node1= (pos:(0.53, -0.74))
node(node1.pos)
let node2= (pos:(-0.20, 0.14))
node(node2.pos)
let node3= (pos:(0.33, 0.14))
node(node3.pos)
let node4= (pos:(0.62, 0.70))
node(node4.pos)
let node5= (pos:(-0.54, 0.70))
node(node5.pos)
edge(node1.pos,(0.03, -0.73),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.03, -0.85),angle:3.12rad,[k(0)+k(1)])
cetz.draw.hobby((0.38, -0.80),(0.02, -0.79),(-0.33, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, -0.30),node1.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((0.29, -0.32),angle:4.94rad,[k(1)])
cetz.draw.hobby((0.29, -0.01),(0.35, -0.32),(0.43, -0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.35, -0.28),node2.pos,decoration:"wave",angle:4.40rad)
cetz.draw.content((-0.47, -0.25),angle:4.40rad,[k(1)])
cetz.draw.hobby((-0.50, -0.57),(-0.41, -0.26),(-0.30, 0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.38, 0.40),node5.pos,decoration:"arrow",angle:5.27rad)
cetz.draw.content((-0.48, 0.34),angle:5.27rad,[k(1)+k(3)])
cetz.draw.hobby((-0.30, 0.19),(-0.43, 0.38),(-0.55, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.08, 0.43),node5.pos,decoration:"arrow",angle:2.57rad)
cetz.draw.content((-0.02, 0.53),angle:2.57rad,[-p-k(1)-k(3)])
cetz.draw.hobby((0.24, 0.28),(-0.06, 0.49),(-0.37, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.52, 0.40),node3.pos,decoration:"arrow",angle:-2.05rad)
cetz.draw.content((0.63, 0.35),angle:-2.05rad,[-p-k(3)])
cetz.draw.hobby((0.66, 0.59),(0.57, 0.37),(0.44, 0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.20, 0.44),node2.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.13, 0.54),angle:0.59rad,[k(3)])
cetz.draw.hobby((0.46, 0.68),(0.17, 0.49),(-0.12, 0.28),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.68, -0.97),angle:-2.65rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.98),(-0.58, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.63rad)
cetz.draw.content((0.82, -0.76),angle:2.63rad,[-k(0)])
cetz.draw.hobby((0.69, -0.76),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.56rad)
cetz.draw.content((-0.83, 0.75),angle:2.56rad,[p])
cetz.draw.hobby((-0.91, 0.87),(-0.70, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.82rad)
cetz.draw.content((0.74, 0.94),angle:3.82rad,[p])
cetz.draw.hobby((0.70, 0.84),(0.85, 0.95),stroke:stroke,mark: (end: ">"))
})
let embedding13i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.79))
node(node0.pos)
let node1= (pos:(0.31, -0.60))
node(node1.pos)
let node2= (pos:(-0.69, -0.10))
node(node2.pos)
let node3= (pos:(-0.52, 0.55))
node(node3.pos)
let node4= (pos:(0.03, 0.37))
node(node4.pos)
let node5= (pos:(0.87, 0.50))
node(node5.pos)
edge(node1.pos,(-0.15, -0.71),node0.pos,decoration:"arrow",angle:-2.95rad)
cetz.draw.content((-0.13, -0.83),angle:-2.95rad,[k(0)+k(1)])
cetz.draw.hobby((0.19, -0.70),(-0.14, -0.77),(-0.46, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.10, -0.04),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.00, 0.03),angle:-0.95rad,[k(1)])
cetz.draw.hobby((-0.34, 0.41),(-0.05, 0.01),(0.24, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.44),node2.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.78, -0.46),angle:4.83rad,[k(1)])
cetz.draw.hobby((-0.69, -0.69),(-0.72, -0.45),(-0.75, -0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.23, 0.50),node3.pos,decoration:"arrow",angle:2.83rad)
cetz.draw.content((-0.19, 0.61),angle:2.83rad,[-p-k(3)])
cetz.draw.hobby((-0.02, 0.47),(-0.21, 0.56),(-0.43, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.32, 0.12),node2.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((-0.25, 0.02),angle:0.58rad,[k(3)])
cetz.draw.hobby((-0.04, 0.25),(-0.29, 0.07),(-0.55, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, 0.44),node4.pos,decoration:"coil",angle:3.29rad)
cetz.draw.content((0.43, 0.56),angle:3.29rad,[-p])
cetz.draw.hobby((0.74, 0.54),(0.44, 0.50),(0.15, 0.45),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.64rad)
cetz.draw.content((-0.75, -1.00),angle:-2.64rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.98),(-0.72, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.62rad)
cetz.draw.content((0.72, -0.70),angle:2.62rad,[-k(0)])
cetz.draw.hobby((0.47, -0.63),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.97rad)
cetz.draw.content((-0.88, -0.16),angle:5.97rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.88, -0.10),(-0.86, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.32rad)
cetz.draw.content((1.05, 0.28),angle:-1.32rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.97, 0.37),(1.02, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.39rad)
cetz.draw.content((-0.84, 0.69),angle:2.39rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.93, 0.85),(-0.67, 0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.46rad)
cetz.draw.content((0.82, 0.78),angle:4.46rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((0.85, 0.66),(0.90, 0.87),stroke:stroke,mark: (end: ">"))
})
let embedding13f0=cetz.canvas(length:50%,{
let node0= (pos:(0.63, -0.63))
node(node0.pos)
let node1= (pos:(-0.53, -0.77))
node(node1.pos)
let node2= (pos:(0.94, 0.48))
node(node2.pos)
let node3= (pos:(-0.76, -0.04))
node(node3.pos)
let node4= (pos:(-0.59, 0.67))
node(node4.pos)
let node5= (pos:(0.49, 0.27))
node(node5.pos)
edge(node0.pos,(0.05, -0.70),node1.pos,decoration:"arrow",angle:3.26rad)
cetz.draw.content((0.03, -0.58),angle:3.26rad,[k(0)])
cetz.draw.hobby((0.45, -0.59),(0.05, -0.64),(-0.36, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, -0.42),node1.pos,decoration:"wave",angle:5.03rad)
cetz.draw.content((-0.76, -0.46),angle:5.03rad,[k(1)])
cetz.draw.hobby((-0.79, -0.17),(-0.71, -0.43),(-0.62, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.79, -0.09),node2.pos,decoration:"wave",angle:-1.84rad)
cetz.draw.content((0.91, -0.12),angle:-1.84rad,[k(1)])
cetz.draw.hobby((0.74, -0.48),(0.85, -0.09),(0.95, 0.30),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.70, 0.40),node5.pos,decoration:"arrow",angle:0.44rad)
cetz.draw.content((0.65, 0.51),angle:0.44rad,[k(1)+k(3)])
cetz.draw.hobby((0.85, 0.52),(0.67, 0.45),(0.51, 0.36),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.68, 0.33),node3.pos,decoration:"arrow",angle:4.46rad)
cetz.draw.content((-0.79, 0.36),angle:4.46rad,[-p-k(0)-k(3)])
cetz.draw.hobby((-0.67, 0.58),(-0.74, 0.33),(-0.80, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.05, 0.48),node4.pos,decoration:"coil",angle:2.79rad)
cetz.draw.content((-0.00, 0.60),angle:2.79rad,[-p-k(0)])
cetz.draw.hobby((0.35, 0.39),(-0.02, 0.54),(-0.40, 0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.71, -0.99),angle:-2.69rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.99),(-0.64, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.90, -0.73),angle:2.35rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.78, -0.69),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.97rad)
cetz.draw.content((-0.90, -0.14),angle:2.97rad,[-(-p-k(0)-k(1)-k(3))])
cetz.draw.hobby((-0.86, -0.08),(-0.92, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.80, 0.24),angle:2.66rad,[-(-p-k(0)-k(1)-k(3))])
cetz.draw.hobby((0.65, 0.25),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.60rad)
cetz.draw.content((-0.87, 0.74),angle:5.60rad,[-k(3)])
cetz.draw.hobby((-0.92, 0.86),(-0.74, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.45rad)
cetz.draw.content((0.85, 0.76),angle:1.45rad,[-k(3)])
cetz.draw.hobby((0.90, 0.64),(0.92, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.62))
node(node1.pos)
let node2= (pos:(-0.78, -0.05))
node(node2.pos)
let node3= (pos:(0.95, 0.50))
node(node3.pos)
let node4= (pos:(-0.59, 0.66))
node(node4.pos)
let node5= (pos:(0.49, 0.29))
node(node5.pos)
edge(node1.pos,(0.07, -0.69),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.08, -0.81),angle:-3.02rad,[k(0)+k(1)])
cetz.draw.hobby((0.47, -0.70),(0.07, -0.75),(-0.33, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.79, -0.05),node1.pos,decoration:"wave",angle:4.44rad)
cetz.draw.content((0.67, -0.02),angle:4.44rad,[k(1)])
cetz.draw.hobby((0.84, 0.35),(0.73, -0.04),(0.62, -0.43),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.40),node2.pos,decoration:"wave",angle:-1.20rad)
cetz.draw.content((-0.53, -0.36),angle:-1.20rad,[k(1)])
cetz.draw.hobby((-0.49, -0.63),(-0.59, -0.38),(-0.68, -0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, 0.41),node5.pos,decoration:"arrow",angle:3.59rad)
cetz.draw.content((0.66, 0.52),angle:3.59rad,[-p-2*k(1)-k(3)])
cetz.draw.hobby((0.85, 0.53),(0.69, 0.46),(0.52, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.69, 0.31),node2.pos,decoration:"arrow",angle:1.31rad)
cetz.draw.content((-0.81, 0.34),angle:1.31rad,[k(3)])
cetz.draw.hobby((-0.68, 0.57),(-0.75, 0.32),(-0.81, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.06, 0.48),node4.pos,decoration:"coil",angle:2.81rad)
cetz.draw.content((-0.03, 0.60),angle:2.81rad,[-p-k(1)])
cetz.draw.hobby((0.35, 0.40),(-0.03, 0.53),(-0.40, 0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.68rad)
cetz.draw.content((-0.70, -0.98),angle:-2.68rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.61, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.33rad)
cetz.draw.content((0.90, -0.73),angle:2.33rad,[-k(0)])
cetz.draw.hobby((0.78, -0.68),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.04rad)
cetz.draw.content((-0.92, -0.14),angle:6.04rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.87, -0.09),(-0.94, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.51rad)
cetz.draw.content((0.80, 0.25),angle:-0.51rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.65, 0.26),(0.90, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.87, 0.74),angle:2.45rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.92, 0.86),(-0.74, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.60rad)
cetz.draw.content((0.85, 0.77),angle:4.60rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((0.90, 0.66),(0.92, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding14f0=cetz.canvas(length:50%,{
let node0= (pos:(0.69, -0.66))
node(node0.pos)
let node1= (pos:(-0.31, -0.78))
node(node1.pos)
let node2= (pos:(0.78, 0.51))
node(node2.pos)
let node3= (pos:(0.45, -0.12))
node(node3.pos)
let node4= (pos:(-0.85, 0.51))
node(node4.pos)
let node5= (pos:(0.02, 0.44))
node(node5.pos)
edge(node0.pos,(0.19, -0.76),node1.pos,decoration:"arrow",angle:-3.01rad)
cetz.draw.content((0.21, -0.88),angle:-3.01rad,[k(0)])
cetz.draw.hobby((0.55, -0.75),(0.20, -0.82),(-0.16, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.05, -0.45),node1.pos,decoration:"wave",angle:3.86rad)
cetz.draw.content((-0.03, -0.36),angle:3.86rad,[k(1)])
cetz.draw.hobby((0.29, -0.17),(0.02, -0.40),(-0.25, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.76, -0.08),node2.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.88, -0.09),angle:-1.65rad,[k(1)])
cetz.draw.hobby((0.77, -0.49),(0.82, -0.08),(0.84, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.41, 0.49),node5.pos,decoration:"arrow",angle:0.09rad)
cetz.draw.content((0.39, 0.61),angle:0.09rad,[k(1)+k(3)])
cetz.draw.hobby((0.67, 0.57),(0.40, 0.55),(0.12, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, 0.15),node5.pos,decoration:"arrow",angle:2.22rad)
cetz.draw.content((0.12, 0.08),angle:2.22rad,[-p-k(0)-2*k(1)-k(3)])
cetz.draw.hobby((0.33, -0.08),(0.17, 0.11),(0.03, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.42, 0.48),node4.pos,decoration:"coil",angle:3.07rad)
cetz.draw.content((-0.41, 0.60),angle:3.07rad,[-p-k(0)-k(1)])
cetz.draw.hobby((-0.11, 0.52),(-0.41, 0.54),(-0.71, 0.56),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.62, -1.01),angle:-2.84rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.01),(-0.44, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.31rad)
cetz.draw.content((0.93, -0.75),angle:2.31rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.83, -0.73),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.86rad)
cetz.draw.content((-0.81, 0.22),angle:-1.86rad,[-(-p-k(0)-k(1)-k(3))])
cetz.draw.hobby((-0.90, 0.13),(-0.83, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.36rad)
cetz.draw.content((0.70, 0.05),angle:3.36rad,[-(-p-k(0)-k(1)-k(3))])
cetz.draw.hobby((0.58, -0.03),(0.84, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.01rad)
cetz.draw.content((-1.04, 0.72),angle:5.01rad,[-k(3)])
cetz.draw.hobby((-1.01, 0.84),(-0.95, 0.63),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.16rad)
cetz.draw.content((0.78, 0.80),angle:1.16rad,[-k(3)])
cetz.draw.hobby((0.79, 0.67),(0.88, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding14f1=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.78))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(-0.44, -0.11))
node(node2.pos)
let node3= (pos:(-0.78, 0.53))
node(node3.pos)
let node4= (pos:(0.00, 0.42))
node(node4.pos)
let node5= (pos:(0.87, 0.51))
node(node5.pos)
edge(node0.pos,(-0.21, -0.74),node1.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.23, -0.86),angle:3.00rad,[k(0)])
cetz.draw.hobby((0.14, -0.84),(-0.21, -0.80),(-0.56, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.74, -0.05),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.86, -0.06),angle:4.79rad,[k(1)])
cetz.draw.hobby((-0.83, 0.35),(-0.80, -0.06),(-0.77, -0.47),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.05, -0.44),node2.pos,decoration:"wave",angle:-0.74rad)
cetz.draw.content((0.03, -0.35),angle:-0.74rad,[k(1)])
cetz.draw.hobby((0.23, -0.63),(-0.02, -0.39),(-0.28, -0.16),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.37, 0.50),node3.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.35, 0.62),angle:3.00rad,[-p-k(0)-k(1)-k(3)])
cetz.draw.hobby((-0.10, 0.51),(-0.38, 0.56),(-0.66, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.16),node2.pos,decoration:"arrow",angle:0.88rad)
cetz.draw.content((-0.12, 0.08),angle:0.88rad,[k(3)])
cetz.draw.hobby((-0.02, 0.31),(-0.17, 0.12),(-0.33, -0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.43, 0.47),node4.pos,decoration:"coil",angle:3.24rad)
cetz.draw.content((0.42, 0.59),angle:3.24rad,[-p-k(0)-k(1)])
cetz.draw.hobby((0.74, 0.56),(0.43, 0.53),(0.12, 0.50),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.29rad)
cetz.draw.content((-0.75, -0.90),angle:-2.29rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.86, -0.93),(-0.74, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.68, -0.78),angle:2.84rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.46, -0.77),(0.87, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.09rad)
cetz.draw.content((-0.74, -0.17),angle:6.09rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.86, -0.09),(-0.60, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.32rad)
cetz.draw.content((1.05, 0.28),angle:-1.32rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.97, 0.38),(1.02, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.01rad)
cetz.draw.content((-1.00, 0.71),angle:2.01rad,[-(-p-k(0)-2*k(1)-k(3))])
cetz.draw.hobby((-0.99, 0.84),(-0.89, 0.64),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.82, 0.78),angle:4.45rad,[-(-p-k(0)-2*k(1)-k(3))])
cetz.draw.hobby((0.85, 0.67),(0.90, 0.87),stroke:stroke,mark: (end: ">"))
})
let embedding14f2=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.73))
node(node0.pos)
let node1= (pos:(-0.49, -0.73))
node(node1.pos)
let node2= (pos:(0.29, 0.15))
node(node2.pos)
let node3= (pos:(-0.27, 0.16))
node(node3.pos)
let node4= (pos:(0.60, 0.70))
node(node4.pos)
let node5= (pos:(-0.57, 0.69))
node(node5.pos)
edge(node0.pos,(0.01, -0.74),node1.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.01, -0.86),angle:-3.14rad,[k(0)])
cetz.draw.hobby((0.37, -0.79),(0.01, -0.80),(-0.34, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, -0.29),node1.pos,decoration:"wave",angle:4.47rad)
cetz.draw.content((-0.51, -0.26),angle:4.47rad,[k(1)])
cetz.draw.hobby((-0.36, 0.05),(-0.45, -0.27),(-0.52, -0.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.41, -0.29),node2.pos,decoration:"wave",angle:-1.32rad)
cetz.draw.content((0.53, -0.26),angle:-1.32rad,[k(1)])
cetz.draw.hobby((0.55, -0.58),(0.47, -0.27),(0.38, 0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.12, 0.45),node5.pos,decoration:"arrow",angle:-0.56rad)
cetz.draw.content((-0.05, 0.55),angle:-0.56rad,[k(1)+k(3)])
cetz.draw.hobby((0.21, 0.30),(-0.09, 0.50),(-0.41, 0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.44, 0.42),node5.pos,decoration:"arrow",angle:2.10rad)
cetz.draw.content((-0.54, 0.36),angle:2.10rad,[-p-k(0)-2*k(1)-k(3)])
cetz.draw.hobby((-0.37, 0.20),(-0.49, 0.39),(-0.59, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.17, 0.46),node3.pos,decoration:"arrow",angle:3.69rad)
cetz.draw.content((0.10, 0.57),angle:3.69rad,[-p-k(0)-k(1)-k(3)])
cetz.draw.hobby((0.44, 0.68),(0.12, 0.51),(-0.18, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.42),node2.pos,decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.58, 0.36),angle:1.05rad,[k(3)])
cetz.draw.hobby((0.62, 0.59),(0.52, 0.38),(0.39, 0.19),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
cetz.draw.content((-0.69, -0.97),angle:-2.66rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.98),(-0.60, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.63rad)
cetz.draw.content((0.82, -0.76),angle:2.63rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.68, -0.75),(0.90, -0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.51rad)
cetz.draw.content((-0.86, 0.75),angle:2.51rad,[-(-p-k(0)-k(1))])
cetz.draw.hobby((-0.91, 0.86),(-0.73, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.79rad)
cetz.draw.content((0.73, 0.94),angle:3.79rad,[-(-p-k(0)-k(1))])
cetz.draw.hobby((0.69, 0.84),(0.84, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.80))
node(node1.pos)
let node2= (pos:(-0.55, -0.00))
node(node2.pos)
let node3= (pos:(0.48, -0.00))
node(node3.pos)
let node4= (pos:(0.57, 0.63))
node(node4.pos)
let node5= (pos:(0.01, 0.50))
node(node5.pos)
edge(node1.pos,(0.01, -0.81),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.01, -0.93),angle:3.12rad,[k(0)+k(1)])
cetz.draw.hobby((0.37, -0.87),(-0.01, -0.86),(-0.38, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.51, -0.41),node1.pos,decoration:"wave",angle:-1.51rad)
cetz.draw.content((0.63, -0.40),angle:-1.51rad,[k(1)])
cetz.draw.hobby((0.55, -0.12),(0.57, -0.40),(0.59, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.38),node2.pos,decoration:"wave",angle:4.73rad)
cetz.draw.content((-0.67, -0.39),angle:4.73rad,[k(1)])
cetz.draw.hobby((-0.60, -0.66),(-0.61, -0.39),(-0.61, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.24, 0.25),node5.pos,decoration:"arrow",angle:2.32rad)
cetz.draw.content((0.15, 0.17),angle:2.32rad,[-p-2*k(1)-2*k(3)])
cetz.draw.hobby((0.36, 0.03),(0.20, 0.21),(0.03, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.56, 0.32),node3.pos,decoration:"arrow",angle:-1.71rad)
cetz.draw.content((0.67, 0.30),angle:-1.71rad,[-p-k(1)-2*k(3)])
cetz.draw.hobby((0.63, 0.53),(0.61, 0.30),(0.56, 0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.01, 0.29),node2.pos,decoration:"arrow",angle:0.51rad)
cetz.draw.content((0.05, 0.18),angle:0.51rad,[k(3)])
cetz.draw.hobby((0.44, 0.47),(0.05, 0.25),(-0.35, 0.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.72, -1.00),angle:-2.69rad,[-k(0)])
cetz.draw.hobby((-0.84, -0.99),(-0.65, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.81, -0.79),angle:2.75rad,[-k(0)])
cetz.draw.hobby((0.69, -0.81),(0.88, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.78, -0.12),angle:6.28rad,[-(k(1)+k(3))])
cetz.draw.hobby((-0.85, -0.06),(-0.70, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.47rad)
cetz.draw.content((0.56, 0.36),angle:-0.47rad,[-(k(1)+k(3))])
cetz.draw.hobby((0.17, 0.49),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.68rad)
cetz.draw.content((-0.55, 0.64),angle:2.68rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((-0.89, 0.88),(-0.15, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.86rad)
cetz.draw.content((0.71, 0.90),angle:3.86rad,[-(-p-k(1)-k(3))])
cetz.draw.hobby((0.65, 0.77),(0.85, 0.95),stroke:stroke,mark: (end: ">"))
})
let embedding15f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.81))
node(node0.pos)
let node1= (pos:(-0.52, -0.83))
node(node1.pos)
let node2= (pos:(0.54, -0.02))
node(node2.pos)
let node3= (pos:(-0.47, -0.01))
node(node3.pos)
let node4= (pos:(-0.02, 0.51))
node(node4.pos)
let node5= (pos:(-0.57, 0.62))
node(node5.pos)
edge(node0.pos,(0.01, -0.83),node1.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((0.01, -0.95),angle:-3.12rad,[k(0)])
cetz.draw.hobby((0.38, -0.88),(0.01, -0.89),(-0.36, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.49, -0.41),node1.pos,decoration:"wave",angle:4.65rad)
cetz.draw.content((-0.61, -0.40),angle:4.65rad,[k(1)])
cetz.draw.hobby((-0.53, -0.13),(-0.55, -0.41),(-0.57, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.41),node2.pos,decoration:"wave",angle:4.71rad)
cetz.draw.content((0.42, -0.41),angle:4.71rad,[k(1)])
cetz.draw.hobby((0.48, -0.69),(0.48, -0.41),(0.48, -0.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.27),node5.pos,decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.06, 0.17),angle:5.76rad,[k(1)+k(3)])
cetz.draw.hobby((0.34, 0.02),(-0.05, 0.23),(-0.44, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.30),node5.pos,decoration:"arrow",angle:1.74rad)
cetz.draw.content((-0.67, 0.28),angle:1.74rad,[-p-k(0)-2*k(1)-2*k(3)])
cetz.draw.hobby((-0.56, 0.06),(-0.61, 0.29),(-0.63, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.23, 0.25),node3.pos,decoration:"arrow",angle:-2.29rad)
cetz.draw.content((-0.14, 0.17),angle:-2.29rad,[-p-k(0)-k(1)-2*k(3)])
cetz.draw.hobby((-0.04, 0.39),(-0.19, 0.20),(-0.35, 0.03),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
cetz.draw.content((-0.72, -1.03),angle:-2.80rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -1.01),(-0.64, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.82, -0.79),angle:2.74rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.70, -0.81),(0.89, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.47rad)
cetz.draw.content((-0.45, 0.15),angle:0.47rad,[-k(3)])
cetz.draw.hobby((-0.84, 0.02),(-0.12, 0.38),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.04rad)
cetz.draw.content((0.77, 0.11),angle:0.04rad,[-k(3)])
cetz.draw.hobby((0.69, 0.05),(0.85, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.42rad)
cetz.draw.content((-0.86, 0.72),angle:2.42rad,[-(-p-k(0)-k(1)-k(3))])
cetz.draw.hobby((-0.93, 0.86),(-0.72, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.59rad)
cetz.draw.content((0.44, 0.86),angle:3.59rad,[-(-p-k(0)-k(1)-k(3))])
cetz.draw.hobby((0.09, 0.62),(0.84, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.80))
node(node0.pos)
let node1= (pos:(0.56, -0.79))
node(node1.pos)
let node2= (pos:(-0.42, 0.00))
node(node2.pos)
let node3= (pos:(0.57, 0.00))
node(node3.pos)
let node4= (pos:(-0.01, 0.51))
node(node4.pos)
let node5= (pos:(-0.54, 0.62))
node(node5.pos)
edge(node1.pos,(0.05, -0.81),node0.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((0.05, -0.93),angle:-3.13rad,[k(0)+k(1)])
cetz.draw.hobby((0.41, -0.86),(0.04, -0.87),(-0.33, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, -0.39),node1.pos,decoration:"wave",angle:-1.58rad)
cetz.draw.content((0.69, -0.40),angle:-1.58rad,[k(1)])
cetz.draw.hobby((0.63, -0.12),(0.63, -0.39),(0.63, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.40),node2.pos,decoration:"wave",angle:4.63rad)
cetz.draw.content((-0.58, -0.39),angle:4.63rad,[k(1)])
cetz.draw.hobby((-0.54, -0.67),(-0.52, -0.39),(-0.49, -0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.51, 0.29),node5.pos,decoration:"arrow",angle:4.92rad)
cetz.draw.content((-0.62, 0.27),angle:4.92rad,[k(1)+k(3)])
cetz.draw.hobby((-0.51, 0.07),(-0.57, 0.30),(-0.60, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.03, 0.28),node5.pos,decoration:"arrow",angle:2.63rad)
cetz.draw.content((-0.03, 0.18),angle:2.63rad,[-1/2*p-k(1)-1/2*k(3)])
cetz.draw.hobby((0.37, 0.03),(-0.03, 0.25),(-0.41, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.26),node2.pos,decoration:"arrow",angle:0.88rad)
cetz.draw.content((-0.12, 0.18),angle:0.88rad,[k(3)])
cetz.draw.hobby((-0.02, 0.40),(-0.17, 0.22),(-0.31, 0.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.76rad)
cetz.draw.content((-0.70, -1.01),angle:-2.76rad,[-k(0)])
cetz.draw.hobby((-0.84, -1.00),(-0.61, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.83, -0.79),angle:2.70rad,[-k(0)])
cetz.draw.hobby((0.72, -0.80),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.67rad)
cetz.draw.content((-0.45, 0.15),angle:-2.67rad,[-(-1/2*p-1/2*k(3))])
cetz.draw.hobby((-0.84, 0.02),(-0.11, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.78, 0.12),angle:3.14rad,[-(-1/2*p-1/2*k(3))])
cetz.draw.hobby((0.72, 0.06),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.45rad)
cetz.draw.content((-0.85, 0.72),angle:2.45rad,[-(-1/2*p+1/2*k(3))])
cetz.draw.hobby((-0.92, 0.86),(-0.70, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.59rad)
cetz.draw.content((0.45, 0.86),angle:3.59rad,[-(-1/2*p+1/2*k(3))])
cetz.draw.hobby((0.10, 0.63),(0.84, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding16f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.80))
node(node0.pos)
let node1= (pos:(-0.54, -0.79))
node(node1.pos)
let node2= (pos:(0.47, -0.02))
node(node2.pos)
let node3= (pos:(-0.54, -0.02))
node(node3.pos)
let node4= (pos:(0.58, 0.61))
node(node4.pos)
let node5= (pos:(0.02, 0.51))
node(node5.pos)
edge(node0.pos,(-0.01, -0.81),node1.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.01, -0.93),angle:3.14rad,[k(0)])
cetz.draw.hobby((0.37, -0.86),(-0.00, -0.87),(-0.38, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, -0.40),node1.pos,decoration:"wave",angle:-1.57rad)
cetz.draw.content((-0.41, -0.40),angle:-1.57rad,[k(1)])
cetz.draw.hobby((-0.48, -0.14),(-0.47, -0.41),(-0.47, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.51, -0.41),node2.pos,decoration:"wave",angle:-1.50rad)
cetz.draw.content((0.63, -0.40),angle:-1.50rad,[k(1)])
cetz.draw.hobby((0.58, -0.68),(0.57, -0.40),(0.55, -0.13),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.24, 0.24),node5.pos,decoration:"arrow",angle:5.42rad)
cetz.draw.content((0.15, 0.16),angle:5.42rad,[k(1)+k(3)])
cetz.draw.hobby((0.36, 0.02),(0.19, 0.20),(0.04, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.01, 0.28),node3.pos,decoration:"arrow",angle:-2.63rad)
cetz.draw.content((0.07, 0.17),angle:-2.63rad,[-1/2*p-1/2*k(0)-1/2*k(3)])
cetz.draw.hobby((0.45, 0.46),(0.06, 0.23),(-0.34, 0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.56, 0.31),node2.pos,decoration:"arrow",angle:1.41rad)
cetz.draw.content((0.68, 0.29),angle:1.41rad,[k(3)])
cetz.draw.hobby((0.64, 0.51),(0.62, 0.28),(0.56, 0.06),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
cetz.draw.content((-0.72, -1.00),angle:-2.72rad,[-(k(0)+k(1))])
cetz.draw.hobby((-0.84, -0.99),(-0.65, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.81, -0.79),angle:2.74rad,[-(k(0)+k(1))])
cetz.draw.hobby((0.69, -0.80),(0.89, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.09rad)
cetz.draw.content((-0.78, -0.13),angle:3.09rad,[-(-1/2*p-1/2*k(0)-k(1)-1/2*k(3))])
cetz.draw.hobby((-0.85, -0.07),(-0.69, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.57, 0.36),angle:2.66rad,[-(-1/2*p-1/2*k(0)-k(1)-1/2*k(3))])
cetz.draw.hobby((0.18, 0.50),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.70rad)
cetz.draw.content((-0.54, 0.65),angle:2.70rad,[-(-1/2*p-1/2*k(0)+1/2*k(3))])
cetz.draw.hobby((-0.89, 0.88),(-0.14, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.89rad)
cetz.draw.content((0.71, 0.89),angle:3.89rad,[-(-1/2*p-1/2*k(0)+1/2*k(3))])
cetz.draw.hobby((0.65, 0.76),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
})
[embedding 1 [1, -1, -2, -1] initial]
grid(columns: cols,gutter: 20pt,embedding1i0,)
[embedding 1 [1, -1, -2, -1] final]
grid(columns: cols,gutter: 20pt,embedding1f0,)
[embedding 2 [1, -1, -1, -2] initial]
grid(columns: cols,gutter: 20pt,embedding2i0,)
[embedding 2 [1, -1, -1, -2] final]
grid(columns: cols,gutter: 20pt,embedding2f0,)
[embedding 3 [1, -1, -1, -1] initial]
grid(columns: cols,gutter: 20pt,embedding3i0,embedding3i1,embedding3i2,)
[embedding 3 [1, -1, -1, -1] final]
grid(columns: cols,gutter: 20pt,embedding3f0,)
[embedding 4 [1, 0, -1, -1] initial]
grid(columns: cols,gutter: 20pt,embedding4i0,)
[embedding 4 [1, 0, -1, -1] final]
grid(columns: cols,gutter: 20pt,embedding4f0,embedding4f1,embedding4f2,)
[embedding 5 [1, 0, -1, 0] initial]
grid(columns: cols,gutter: 20pt,embedding5i0,embedding5i1,)
[embedding 5 [1, 0, -1, 0] final]
grid(columns: cols,gutter: 20pt,embedding5f0,embedding5f1,)
[embedding 6 [1, 0, -1, 1] initial]
grid(columns: cols,gutter: 20pt,embedding6i0,embedding6i1,)
[embedding 6 [1, 0, -1, 1] final]
grid(columns: cols,gutter: 20pt,embedding6f0,)
[embedding 7 [1, 0, 0, -1] initial]
grid(columns: cols,gutter: 20pt,embedding7i0,embedding7i1,)
[embedding 7 [1, 0, 0, -1] final]
grid(columns: cols,gutter: 20pt,embedding7f0,embedding7f1,)
[embedding 8 [1, 0, 1, -1] initial]
grid(columns: cols,gutter: 20pt,embedding8i0,embedding8i1,)
[embedding 8 [1, 0, 1, -1] final]
grid(columns: cols,gutter: 20pt,embedding8f0,)
[embedding 9 [1, 1, -1, 1] initial]
grid(columns: cols,gutter: 20pt,embedding9i0,)
[embedding 9 [1, 1, -1, 1] final]
grid(columns: cols,gutter: 20pt,embedding9f0,embedding9f1,)
[embedding 10 [1, 1, 0, 1] initial]
grid(columns: cols,gutter: 20pt,embedding10i0,embedding10i1,)
[embedding 10 [1, 1, 0, 1] final]
grid(columns: cols,gutter: 20pt,embedding10f0,embedding10f1,)
[embedding 11 [1, 1, 1, -1] initial]
grid(columns: cols,gutter: 20pt,embedding11i0,)
[embedding 11 [1, 1, 1, -1] final]
grid(columns: cols,gutter: 20pt,embedding11f0,embedding11f1,)
[embedding 12 [1, 1, 1, 0] initial]
grid(columns: cols,gutter: 20pt,embedding12i0,embedding12i1,)
[embedding 12 [1, 1, 1, 0] final]
grid(columns: cols,gutter: 20pt,embedding12f0,embedding12f1,)
[embedding 13 [1, 1, 1, 1] initial]
grid(columns: cols,gutter: 20pt,embedding13i0,embedding13i1,embedding13i2,)
[embedding 13 [1, 1, 1, 1] final]
grid(columns: cols,gutter: 20pt,embedding13f0,)
[embedding 14 [1, 2, 1, 1] initial]
grid(columns: cols,gutter: 20pt,embedding14i0,)
[embedding 14 [1, 2, 1, 1] final]
grid(columns: cols,gutter: 20pt,embedding14f0,embedding14f1,embedding14f2,)
[embedding 15 [1, 2, 1, 2] initial]
grid(columns: cols,gutter: 20pt,embedding15i0,)
[embedding 15 [1, 2, 1, 2] final]
grid(columns: cols,gutter: 20pt,embedding15f0,)
[embedding 16 [1, 2, 2, 1] initial]
grid(columns: cols,gutter: 20pt,embedding16i0,)
[embedding 16 [1, 2, 2, 1] final]
grid(columns: cols,gutter: 20pt,embedding16f0,)
}