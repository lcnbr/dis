#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let graph1i0=cetz.canvas(length:50%,{
let node0= (pos:(0.14, -0.06))
node(node0.pos)
let node1= (pos:(-0.54, 0.15))
node(node1.pos)
let node2= (pos:(-0.14, -0.06))
node(node2.pos)
let node3= (pos:(0.55, 0.15))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.53rad)
cetz.draw.content((-0.51, 0.38),angle:5.53rad,[])
cetz.draw.hobby((-0.97, 0.89),(0.02, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.32rad)
cetz.draw.content((-0.73, -0.04),angle:0.32rad,[])
cetz.draw.hobby((-0.89, -0.03),(-0.62, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"wave",angle:0.83rad)
cetz.draw.content((-0.48, -0.61),angle:0.83rad,[])
cetz.draw.hobby((-0.89, -0.97),(-0.16, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((0.35, 0.56),angle:0.75rad,[])
cetz.draw.hobby((-0.11, 0.05),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.32rad)
cetz.draw.content((0.81, 0.19),angle:-0.32rad,[])
cetz.draw.hobby((0.66, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"wave",angle:-0.83rad)
cetz.draw.content((0.66, -0.45),angle:-0.83rad,[])
cetz.draw.hobby((0.25, -0.09),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.41, -0.06),node3.pos,decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.47, -0.16),angle:0.52rad,[])
cetz.draw.hobby((0.17, -0.14),(0.43, -0.12),(0.59, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.27),node1.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.39),angle:3.14rad,[])
cetz.draw.hobby((0.46, 0.25),(0.00, 0.33),(-0.46, 0.25),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.41, -0.06),node2.pos,decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.47, -0.17),angle:5.76rad,[])
cetz.draw.hobby((-0.59, 0.08),(-0.43, -0.12),(-0.17, -0.14),stroke:stroke,mark: (end: ">"))
})
let graph2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.11, -0.08))
node(node0.pos)
let node1= (pos:(0.08, 0.47))
node(node1.pos)
let node2= (pos:(-0.46, -0.67))
node(node2.pos)
let node3= (pos:(0.50, -0.11))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.40rad)
cetz.draw.content((-0.65, 0.39),angle:5.40rad,[])
cetz.draw.hobby((-0.98, 0.88),(-0.22, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.41, 0.12),angle:0.41rad,[])
cetz.draw.hobby((-0.88, -0.02),(0.01, 0.37),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"wave",angle:0.55rad)
cetz.draw.content((-0.67, -0.94),angle:0.55rad,[])
cetz.draw.hobby((-0.88, -1.00),(-0.51, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, 1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.48, 0.84),angle:0.52rad,[])
cetz.draw.hobby((0.14, 0.57),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.22rad)
cetz.draw.content((0.72, 0.06),angle:0.22rad,[])
cetz.draw.hobby((0.58, -0.03),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"wave",angle:-0.69rad)
cetz.draw.content((0.52, -0.45),angle:-0.69rad,[])
cetz.draw.hobby((0.00, -0.09),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.32, 0.21),node1.pos,decoration:"coil",angle:2.20rad)
cetz.draw.content((0.42, 0.28),angle:2.20rad,[])
cetz.draw.hobby((0.53, -0.02),(0.37, 0.24),(0.17, 0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.05, -0.45),node3.pos,decoration:"arrow",angle:0.53rad)
cetz.draw.content((0.11, -0.55),angle:0.53rad,[])
cetz.draw.hobby((-0.33, -0.69),(0.08, -0.50),(0.46, -0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.32, -0.36),node2.pos,decoration:"arrow",angle:4.19rad)
cetz.draw.content((-0.43, -0.30),angle:4.19rad,[])
cetz.draw.hobby((-0.20, -0.09),(-0.37, -0.32),(-0.49, -0.58),stroke:stroke,mark: (end: ">"))
})
let graph3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.73, 0.04))
node(node0.pos)
let node1= (pos:(-0.36, -0.07))
node(node1.pos)
let node2= (pos:(0.73, 0.04))
node(node2.pos)
let node3= (pos:(0.36, -0.07))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.98, 0.49),angle:4.99rad,[])
cetz.draw.hobby((-1.03, 0.89),(-0.82, 0.12),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.69, -0.16),angle:6.17rad,[])
cetz.draw.hobby((-0.91, -0.07),(-0.47, -0.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"wave",angle:1.32rad)
cetz.draw.content((-0.75, -0.51),angle:1.32rad,[])
cetz.draw.hobby((-0.92, -0.92),(-0.70, -0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.30rad)
cetz.draw.content((0.75, 0.55),angle:1.30rad,[])
cetz.draw.hobby((0.70, 0.16),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.67, 0.08),angle:0.11rad,[])
cetz.draw.hobby((0.45, -0.00),(0.89, 0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -1.00),decoration:"wave",angle:-1.32rad)
cetz.draw.content((0.98, -0.45),angle:-1.32rad,[])
cetz.draw.hobby((0.81, -0.04),(1.03, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, -0.17),node1.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((-0.00, -0.29),angle:3.14rad,[])
cetz.draw.hobby((0.32, -0.16),(-0.00, -0.23),(-0.32, -0.16),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.15, 0.08),node3.pos,decoration:"arrow",angle:-0.12rad)
cetz.draw.content((-0.14, 0.20),angle:-0.12rad,[])
cetz.draw.hobby((-0.63, 0.13),(-0.17, 0.14),(0.28, 0.03),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.15, 0.08),node2.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.13, 0.20),angle:0.12rad,[])
cetz.draw.hobby((-0.28, 0.03),(0.17, 0.14),(0.63, 0.13),stroke:stroke,mark: (end: ">"))
})
let graph4i0=cetz.canvas(length:50%,{
let node0= (pos:(0.06, 0.53))
node(node0.pos)
let node1= (pos:(-0.71, -0.52))
node(node1.pos)
let node2= (pos:(0.72, 0.53))
node(node2.pos)
let node3= (pos:(0.51, -0.55))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.52, 0.66),angle:5.87rad,[])
cetz.draw.hobby((-0.93, 0.90),(-0.05, 0.52),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.96, -0.32),angle:5.22rad,[])
cetz.draw.hobby((-1.00, -0.12),(-0.81, -0.46),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"wave",angle:1.03rad)
cetz.draw.content((-0.75, -0.82),angle:1.03rad,[])
cetz.draw.hobby((-0.90, -0.95),(-0.71, -0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.04rad)
cetz.draw.content((0.76, 0.82),angle:1.04rad,[])
cetz.draw.hobby((0.72, 0.64),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.51rad)
cetz.draw.content((0.59, 0.37),angle:-0.51rad,[])
cetz.draw.hobby((0.18, 0.53),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -1.00),decoration:"wave",angle:-0.74rad)
cetz.draw.content((0.84, -0.69),angle:-0.74rad,[])
cetz.draw.hobby((0.63, -0.58),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.02),node2.pos,decoration:"arrow",angle:1.38rad)
cetz.draw.content((0.75, -0.04),angle:1.38rad,[])
cetz.draw.hobby((0.60, -0.46),(0.69, -0.03),(0.77, 0.41),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.39, 0.55),node0.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.39, 0.67),angle:3.14rad,[])
cetz.draw.hobby((0.67, 0.60),(0.39, 0.61),(0.12, 0.60),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.10, -0.55),node3.pos,decoration:"arrow",angle:6.26rad)
cetz.draw.content((-0.11, -0.67),angle:6.26rad,[])
cetz.draw.hobby((-0.59, -0.59),(-0.10, -0.61),(0.39, -0.61),stroke:stroke,mark: (end: ">"))
})
let graph5i0=cetz.canvas(length:50%,{
let node0= (pos:(0.08, -0.04))
node(node0.pos)
let node1= (pos:(-0.73, -0.30))
node(node1.pos)
let node2= (pos:(0.43, 0.61))
node(node2.pos)
let node3= (pos:(0.71, 0.09))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((-0.54, 0.39),angle:5.52rad,[])
cetz.draw.hobby((-0.97, 0.89),(-0.03, -0.02),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:5.44rad)
cetz.draw.content((-0.95, -0.23),angle:5.44rad,[])
cetz.draw.hobby((-0.98, -0.11),(-0.84, -0.27),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"wave",angle:1.20rad)
cetz.draw.content((-0.75, -0.69),angle:1.20rad,[])
cetz.draw.hobby((-0.91, -0.93),(-0.71, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.61rad)
cetz.draw.content((0.65, 0.90),angle:0.61rad,[])
cetz.draw.hobby((0.48, 0.71),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.29rad)
cetz.draw.content((0.89, 0.16),angle:-0.29rad,[])
cetz.draw.hobby((0.82, 0.12),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, -1.00),decoration:"wave",angle:-0.81rad)
cetz.draw.content((0.63, -0.44),angle:-0.81rad,[])
cetz.draw.hobby((0.19, -0.07),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.62, 0.38),node3.pos,decoration:"coil",angle:-1.08rad)
cetz.draw.content((0.72, 0.44),angle:-1.08rad,[])
cetz.draw.hobby((0.52, 0.61),(0.67, 0.40),(0.76, 0.16),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.19, 0.19),node2.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((-0.27, 0.28),angle:0.67rad,[])
cetz.draw.hobby((-0.67, -0.15),(-0.22, 0.24),(0.27, 0.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.39, -0.02),node3.pos,decoration:"arrow",angle:0.20rad)
cetz.draw.content((0.42, -0.14),angle:0.20rad,[])
cetz.draw.hobby((0.15, -0.11),(0.42, -0.08),(0.67, 0.00),stroke:stroke,mark: (end: ">"))
})
let graph6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.01, 0.48))
node(node0.pos)
let node1= (pos:(-0.85, -0.46))
node(node1.pos)
let node2= (pos:(0.78, -0.05))
node(node2.pos)
let node3= (pos:(-0.04, -0.13))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.56, 0.64),angle:5.80rad,[])
cetz.draw.hobby((-0.94, 0.90),(-0.13, 0.48),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:5.02rad)
cetz.draw.content((-1.04, -0.27),angle:5.02rad,[])
cetz.draw.hobby((-1.03, -0.11),(-0.94, -0.39),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"wave",angle:1.30rad)
cetz.draw.content((-0.81, -0.76),angle:1.30rad,[])
cetz.draw.hobby((-0.92, -0.92),(-0.82, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.36rad)
cetz.draw.content((0.77, 0.50),angle:1.36rad,[])
cetz.draw.hobby((0.74, 0.06),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.45rad)
cetz.draw.content((0.55, 0.35),angle:-0.45rad,[])
cetz.draw.hobby((0.10, 0.49),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -1.00),decoration:"wave",angle:-1.34rad)
cetz.draw.content((1.00, -0.50),angle:-1.34rad,[])
cetz.draw.hobby((0.86, -0.13),(1.04, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, -0.11),node2.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.39, -0.23),angle:0.11rad,[])
cetz.draw.hobby((0.04, -0.19),(0.37, -0.17),(0.71, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.05, 0.19),node0.pos,decoration:"coil",angle:1.52rad)
cetz.draw.content((-0.17, 0.19),angle:1.52rad,[])
cetz.draw.hobby((-0.11, -0.07),(-0.11, 0.18),(-0.08, 0.43),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.45, -0.31),node3.pos,decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.41, -0.43),angle:0.39rad,[])
cetz.draw.hobby((-0.75, -0.49),(-0.42, -0.37),(-0.10, -0.22),stroke:stroke,mark: (end: ">"))
})
let graph7i0=cetz.canvas(length:50%,{
let node0= (pos:(0.04, 0.53))
node(node0.pos)
let node1= (pos:(0.04, -0.53))
node(node1.pos)
let node2= (pos:(-0.10, 0.00))
node(node2.pos)
let node3= (pos:(0.36, 0.00))
node(node3.pos)
edge(node0.pos,(-1.00, 1.00),decoration:"arrow",angle:5.86rad)
cetz.draw.content((-0.53, 0.66),angle:5.86rad,[])
cetz.draw.hobby((-0.93, 0.90),(-0.07, 0.52),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, 0.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.53, -0.37),angle:5.81rad,[])
cetz.draw.hobby((-0.94, -0.10),(-0.07, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -1.00),decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.46, -0.58),angle:0.84rad,[])
cetz.draw.hobby((-0.89, -0.97),(-0.12, -0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.74rad)
cetz.draw.content((0.37, 0.59),angle:0.74rad,[])
cetz.draw.hobby((-0.07, 0.11),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(1.00, 0.00),decoration:"arrow",angle:-0.51rad)
cetz.draw.content((0.58, 0.37),angle:-0.51rad,[])
cetz.draw.hobby((0.16, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"wave",angle:-0.46rad)
cetz.draw.content((0.57, -0.66),angle:-0.46rad,[])
cetz.draw.hobby((0.16, -0.52),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, 0.33),node0.pos,decoration:"coil",angle:2.15rad)
cetz.draw.content((0.37, 0.40),angle:2.15rad,[])
cetz.draw.hobby((0.42, 0.07),(0.34, 0.35),(0.13, 0.55),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.28, -0.32),node3.pos,decoration:"arrow",angle:1.00rad)
cetz.draw.content((0.38, -0.39),angle:1.00rad,[])
cetz.draw.hobby((0.13, -0.55),(0.34, -0.34),(0.42, -0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.00),node2.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.13, -0.12),angle:-3.14rad,[])
cetz.draw.hobby((0.32, -0.06),(0.13, -0.06),(-0.05, -0.06),stroke:stroke,mark: (end: ">"))
})
[= graph 1 ]
grid(columns: cols,gutter: 20pt,box[#graph1i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 2 ]
grid(columns: cols,gutter: 20pt,box[#graph2i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(4)`],)
pagebreak()
[= graph 3 ]
grid(columns: cols,gutter: 20pt,box[#graph3i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 4 ]
grid(columns: cols,gutter: 20pt,box[#graph4i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(4)`],)
pagebreak()
[= graph 5 ]
grid(columns: cols,gutter: 20pt,box[#graph5i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(4)`],)
pagebreak()
[= graph 6 ]
grid(columns: cols,gutter: 20pt,box[#graph6i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
[= graph 7 ]
grid(columns: cols,gutter: 20pt,box[#graph7i0 2
`[Pdg { pdg: 1 }, Pdg { pdg: 1 }, Pdg { pdg: 22 }]`
`AutG(1)^-1*ExternalFermionOrderingSign(-1)*AntiFermionSpinSumSign(1)*NumeratorIndependentSymmetryGrouping(2)`],)
pagebreak()
}