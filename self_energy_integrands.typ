#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.19))
node(node2.pos)
let node3= (pos:(0.22, -0.11))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node1.pos,(-0.04, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.93),(-0.04, -0.96),(-0.41, -0.95),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.48),node1.pos,decoration:"wave",angle:-1.25rad)
cetz.draw.content((0.48, -0.44),angle:-1.25rad,[q])
cetz.draw.hobby((0.32, -0.19),(0.42, -0.45),(0.50, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.55),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.75, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.65, -0.80),(-0.69, -0.55),(-0.71, -0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"arrow",angle:3.30rad)
cetz.draw.content((0.33, 0.82),angle:3.30rad,[p-2 k[3]])
cetz.draw.hobby((0.11, 0.69),(0.34, 0.76),(0.58, 0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.48, 0.27),node5.pos,decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.58, 0.21),angle:1.05rad,[k[3]])
cetz.draw.hobby((0.35, -0.03),(0.53, 0.24),(0.68, 0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.22, -0.14),node3.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((-0.23, -0.02),angle:0.10rad,[q+k[3]])
cetz.draw.hobby((-0.53, -0.12),(-0.22, -0.08),(0.08, -0.05),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.84, -1.02),(-0.69, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.77, -0.81),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.63, -0.83),(0.87, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
cetz.draw.content((0.59, 0.40),angle:-0.55rad,[k[3]])
cetz.draw.hobby((0.21, 0.56),(0.90, 0.13),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.88, -0.20),angle:5.78rad,[k[3]])
cetz.draw.hobby((-0.90, -0.12),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.76rad)
cetz.draw.content((0.75, 0.93),angle:0.76rad,[p-k[3]])
cetz.draw.hobby((0.74, 0.83),(0.85, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.91rad)
cetz.draw.content((-0.52, 0.68),angle:5.91rad,[p-k[3]])
cetz.draw.hobby((-0.88, 0.89),(-0.11, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.79))
node(node0.pos)
let node1= (pos:(0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.02, -0.06))
node(node2.pos)
let node3= (pos:(0.74, 0.46))
node(node3.pos)
let node4= (pos:(0.43, 0.10))
node(node4.pos)
let node5= (pos:(-0.75, 0.47))
node(node5.pos)
edge(node1.pos,(0.12, -0.77),node0.pos,decoration:"arrow",angle:-3.03rad)
cetz.draw.content((0.14, -0.89),angle:-3.03rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.77),(0.13, -0.83),(-0.25, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, -0.13),node1.pos,decoration:"wave",angle:-1.67rad)
cetz.draw.content((0.87, -0.14),angle:-1.67rad,[q])
cetz.draw.hobby((0.82, 0.29),(0.81, -0.12),(0.75, -0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.42),node2.pos,decoration:"wave",angle:4.18rad)
cetz.draw.content((-0.33, -0.36),angle:4.18rad,[q])
cetz.draw.hobby((-0.41, -0.65),(-0.27, -0.38),(-0.10, -0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, -0.09),node2.pos,decoration:"arrow",angle:-2.78rad)
cetz.draw.content((0.31, -0.21),angle:-2.78rad,[k[3]])
cetz.draw.hobby((0.46, -0.00),(0.29, -0.15),(0.07, -0.15),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.33, 0.33),node3.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((0.26, 0.43),angle:0.58rad,[q+k[3]])
cetz.draw.hobby((0.03, 0.10),(0.27, 0.36),(0.59, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.18, 0.33),node4.pos,decoration:"coil",angle:-0.29rad)
cetz.draw.content((-0.15, 0.44),angle:-0.29rad,[p])
cetz.draw.hobby((-0.55, 0.49),(-0.13, 0.37),(0.28, 0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
cetz.draw.content((-0.66, -1.01),angle:-2.80rad,[-k[0]])
cetz.draw.hobby((-0.84, -1.01),(-0.53, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.39rad)
cetz.draw.content((0.91, -0.75),angle:2.39rad,[-k[0]])
cetz.draw.hobby((0.80, -0.73),(0.93, -0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.97rad)
cetz.draw.content((0.74, 0.17),angle:2.97rad,[p-k[3]])
cetz.draw.hobby((0.59, 0.13),(0.86, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.06rad)
cetz.draw.content((-0.77, 0.18),angle:-2.06rad,[p-k[3]])
cetz.draw.hobby((-0.88, 0.10),(-0.77, 0.31),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.13rad)
cetz.draw.content((0.76, 0.78),angle:1.13rad,[k[3]])
cetz.draw.hobby((0.75, 0.62),(0.88, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-0.99, 0.84),(-0.87, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.86))
node(node0.pos)
let node1= (pos:(0.51, -0.85))
node(node1.pos)
let node2= (pos:(-0.39, -0.11))
node(node2.pos)
let node3= (pos:(0.38, -0.11))
node(node3.pos)
let node4= (pos:(-0.92, 0.45))
node(node4.pos)
let node5= (pos:(0.92, 0.45))
node(node5.pos)
edge(node1.pos,(0.00, -0.89),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -1.01),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(-0.00, -0.95),(-0.37, -0.93),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.49),node1.pos,decoration:"wave",angle:-1.40rad)
cetz.draw.content((0.59, -0.47),angle:-1.40rad,[q])
cetz.draw.hobby((0.47, -0.21),(0.53, -0.47),(0.56, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.48, -0.49),node2.pos,decoration:"wave",angle:4.55rad)
cetz.draw.content((-0.60, -0.47),angle:4.55rad,[q])
cetz.draw.hobby((-0.57, -0.74),(-0.53, -0.47),(-0.48, -0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:-0.81rad)
cetz.draw.content((-0.56, 0.27),angle:-0.81rad,[p])
cetz.draw.hobby((-0.80, 0.42),(-0.60, 0.22),(-0.42, 0.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.19),node5.pos,decoration:"arrow",angle:0.80rad)
cetz.draw.content((0.56, 0.27),angle:0.80rad,[p])
cetz.draw.hobby((0.41, 0.02),(0.60, 0.22),(0.80, 0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, -0.09),node3.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, 0.03),angle:0.00rad,[p+q])
cetz.draw.hobby((-0.28, -0.04),(-0.00, -0.03),(0.27, -0.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
cetz.draw.content((-0.72, -1.04),angle:-2.85rad,[-k[0]])
cetz.draw.hobby((-0.84, -1.01),(-0.64, -0.96),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
cetz.draw.content((0.79, -0.81),angle:2.85rad,[-k[0]])
cetz.draw.hobby((0.67, -0.84),(0.87, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((-0.84, 0.21),angle:1.41rad,[-k[2]])
cetz.draw.hobby((-0.92, 0.14),(-0.89, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.41rad)
cetz.draw.content((1.08, 0.25),angle:-1.41rad,[-k[2]])
cetz.draw.hobby((1.01, 0.31),(1.03, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.43rad)
cetz.draw.content((0.84, 0.74),angle:1.43rad,[p+k[2]])
cetz.draw.hobby((0.89, 0.61),(0.92, 0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.85rad)
cetz.draw.content((-1.08, 0.71),angle:4.85rad,[p+k[2]])
cetz.draw.hobby((-1.04, 0.84),(-1.00, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.83))
node(node0.pos)
let node1= (pos:(0.63, -0.68))
node(node1.pos)
let node2= (pos:(-0.05, -0.13))
node(node2.pos)
let node3= (pos:(0.72, 0.38))
node(node3.pos)
let node4= (pos:(-0.67, 0.15))
node(node4.pos)
let node5= (pos:(-0.10, 0.53))
node(node5.pos)
edge(node1.pos,(0.12, -0.80),node0.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((0.14, -0.91),angle:-3.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.78),(0.12, -0.86),(-0.25, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, -0.16),node1.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((0.83, -0.17),angle:-1.66rad,[q])
cetz.draw.hobby((0.78, 0.22),(0.77, -0.16),(0.72, -0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.24, -0.49),node2.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.35, -0.44),angle:4.24rad,[q])
cetz.draw.hobby((-0.41, -0.70),(-0.29, -0.45),(-0.16, -0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.38, -0.01),node2.pos,decoration:"arrow",angle:5.85rad)
cetz.draw.content((-0.43, -0.12),angle:5.85rad,[k[3]])
cetz.draw.hobby((-0.61, 0.04),(-0.40, -0.07),(-0.17, -0.16),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.34, 0.13),node3.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.28, 0.23),angle:0.59rad,[q+k[3]])
cetz.draw.hobby((0.03, -0.01),(0.30, 0.17),(0.57, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.41, 0.40),node4.pos,decoration:"coil",angle:3.72rad)
cetz.draw.content((-0.48, 0.50),angle:3.72rad,[-p+2 k[3]])
cetz.draw.hobby((-0.22, 0.56),(-0.45, 0.44),(-0.65, 0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.67, -1.03),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.84, -1.02),(-0.54, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.43rad)
cetz.draw.content((0.89, -0.75),angle:2.43rad,[-k[0]])
cetz.draw.hobby((0.78, -0.73),(0.93, -0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.78, -0.03),angle:0.42rad,[p-k[3]])
cetz.draw.hobby((-0.84, 0.01),(-0.78, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.45rad)
cetz.draw.content((0.50, 0.37),angle:-0.45rad,[p-k[3]])
cetz.draw.hobby((0.06, 0.52),(0.89, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.75, 0.74),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.72, 0.54),(0.88, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.60, 0.66),angle:5.81rad,[k[3]])
cetz.draw.hobby((-0.89, 0.88),(-0.26, 0.55),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.79))
node(node0.pos)
let node1= (pos:(0.51, -0.79))
node(node1.pos)
let node2= (pos:(-0.36, -0.00))
node(node2.pos)
let node3= (pos:(0.35, -0.00))
node(node3.pos)
let node4= (pos:(-0.52, 0.79))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node1.pos,(-0.00, -0.83),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.95),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.87),(-0.00, -0.89),(-0.37, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.40),node1.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((0.58, -0.38),angle:-1.38rad,[q])
cetz.draw.hobby((0.45, -0.10),(0.52, -0.38),(0.56, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node2.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.59, -0.38),angle:4.52rad,[q])
cetz.draw.hobby((-0.57, -0.67),(-0.53, -0.38),(-0.46, -0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.47, 0.40),node2.pos,decoration:"arrow",angle:4.90rad)
cetz.draw.content((-0.59, 0.38),angle:4.90rad,[k[3]])
cetz.draw.hobby((-0.57, 0.67),(-0.53, 0.38),(-0.46, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, 0.40),node5.pos,decoration:"arrow",angle:1.38rad)
cetz.draw.content((0.58, 0.38),angle:1.38rad,[k[3]])
cetz.draw.hobby((0.45, 0.10),(0.52, 0.38),(0.56, 0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, 0.00),node3.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, 0.12),angle:0.00rad,[q+k[3]])
cetz.draw.hobby((-0.26, 0.06),(-0.00, 0.06),(0.25, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, 0.83),node4.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[-p+k[3]])
cetz.draw.hobby((0.36, 0.87),(-0.00, 0.89),(-0.37, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.84, -1.00),(-0.63, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.80, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.67, -0.80),(0.89, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.81, 0.79),angle:5.88rad,[p])
cetz.draw.hobby((-0.89, 0.89),(-0.68, 0.80),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((0.71, 1.01),angle:0.40rad,[p])
cetz.draw.hobby((0.63, 0.91),(0.84, 1.00),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.78))
node(node1.pos)
let node2= (pos:(-0.73, -0.00))
node(node2.pos)
let node3= (pos:(0.73, -0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.78))
node(node4.pos)
let node5= (pos:(0.55, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.80),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.92),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.85),(-0.00, -0.86),(-0.39, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.40),node1.pos,decoration:"wave",angle:-1.80rad)
cetz.draw.content((0.76, -0.43),angle:-1.80rad,[q])
cetz.draw.hobby((0.77, -0.13),(0.71, -0.41),(0.64, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.40),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.76, -0.43),angle:4.94rad,[q])
cetz.draw.hobby((-0.64, -0.68),(-0.71, -0.41),(-0.77, -0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.64, 0.40),node2.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.76, 0.43),angle:4.48rad,[k[3]])
cetz.draw.hobby((-0.64, 0.68),(-0.70, 0.41),(-0.76, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.92),angle:3.14rad,[p+q])
cetz.draw.hobby((-0.39, 0.85),(0.00, 0.86),(0.39, 0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.40),node5.pos,decoration:"arrow",angle:1.80rad)
cetz.draw.content((0.77, 0.42),angle:1.80rad,[k[3]])
cetz.draw.hobby((0.77, 0.13),(0.71, 0.40),(0.64, 0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.72, -1.00),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.84, -0.99),(-0.66, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.71, -0.79),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.86, -0.12),angle:3.13rad,[-q-k[3]])
cetz.draw.hobby((-0.85, -0.06),(-0.88, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.15rad)
cetz.draw.content((0.86, 0.12),angle:3.15rad,[-q-k[3]])
cetz.draw.hobby((0.88, 0.06),(0.85, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.45rad)
cetz.draw.content((0.72, 1.00),angle:0.45rad,[p+q+k[3]])
cetz.draw.hobby((0.66, 0.90),(0.84, 0.99),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.83rad)
cetz.draw.content((-0.83, 0.78),angle:5.83rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, 0.88),(-0.71, 0.79),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.62))
node(node0.pos)
let node1= (pos:(0.57, -0.62))
node(node1.pos)
let node2= (pos:(-0.65, 0.49))
node(node2.pos)
let node3= (pos:(0.65, 0.49))
node(node3.pos)
let node4= (pos:(0.35, 0.15))
node(node4.pos)
let node5= (pos:(-0.34, 0.15))
node(node5.pos)
edge(node1.pos,(-0.00, -0.65),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.77),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.70),(-0.00, -0.71),(-0.41, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, -0.09),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.78, -0.10),angle:-1.65rad,[q])
cetz.draw.hobby((0.72, 0.32),(0.72, -0.07),(0.67, -0.47),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[q])
cetz.draw.hobby((-0.67, -0.47),(-0.72, -0.07),(-0.72, 0.33),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.13, 0.40),node2.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.10, 0.52),angle:2.82rad,[k[3]])
cetz.draw.hobby((0.25, 0.29),(-0.10, 0.46),(-0.48, 0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.40),node5.pos,decoration:"arrow",angle:3.46rad)
cetz.draw.content((0.10, 0.52),angle:3.46rad,[k[3]])
cetz.draw.hobby((0.48, 0.54),(0.10, 0.46),(-0.24, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.08),node4.pos,decoration:"coil",angle:6.28rad)
cetz.draw.content((0.00, -0.04),angle:6.28rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.26, 0.06),(0.00, 0.02),(0.26, 0.06),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.42rad)
cetz.draw.content((-0.71, -0.90),angle:-2.42rad,[-k[0]])
cetz.draw.hobby((-0.85, -0.95),(-0.64, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.42rad)
cetz.draw.content((0.86, -0.72),angle:2.42rad,[-k[0]])
cetz.draw.hobby((0.72, -0.68),(0.93, -0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.70, 0.19),angle:2.92rad,[p+q+k[3]])
cetz.draw.hobby((0.51, 0.17),(0.87, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.65, -0.04),angle:-2.92rad,[p+q+k[3]])
cetz.draw.hobby((-0.84, -0.03),(-0.48, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.17rad)
cetz.draw.content((-0.92, 0.68),angle:2.17rad,[-q-k[3]])
cetz.draw.hobby((-0.96, 0.84),(-0.78, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
cetz.draw.content((0.73, 0.81),angle:4.11rad,[-q-k[3]])
cetz.draw.hobby((0.68, 0.65),(0.87, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.56))
node(node0.pos)
let node1= (pos:(0.59, -0.56))
node(node1.pos)
let node2= (pos:(-0.84, 0.52))
node(node2.pos)
let node3= (pos:(0.85, 0.51))
node(node3.pos)
let node4= (pos:(-0.25, 0.82))
node(node4.pos)
let node5= (pos:(0.28, 0.82))
node(node5.pos)
edge(node1.pos,(0.00, -0.58),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.70),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.63),(0.00, -0.64),(-0.41, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.04),node1.pos,decoration:"wave",angle:-1.80rad)
cetz.draw.content((0.86, -0.06),angle:-1.80rad,[q])
cetz.draw.hobby((0.88, 0.34),(0.80, -0.04),(0.70, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.03),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.85, -0.06),angle:4.94rad,[q])
cetz.draw.hobby((-0.69, -0.42),(-0.79, -0.04),(-0.87, 0.35),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.56, 0.68),node2.pos,decoration:"arrow",angle:3.61rad)
cetz.draw.content((-0.61, 0.79),angle:3.61rad,[-p-q])
cetz.draw.hobby((-0.36, 0.84),(-0.58, 0.74),(-0.78, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.01, 0.98),node5.pos,decoration:"arrow",angle:3.15rad)
cetz.draw.content((0.01, 1.10),angle:3.15rad,[k[2]])
cetz.draw.hobby((-0.23, 0.94),(0.01, 1.04),(0.26, 0.94),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.68),node5.pos,decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.64, 0.79),angle:2.65rad,[-p-q])
cetz.draw.hobby((0.80, 0.62),(0.60, 0.74),(0.39, 0.84),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.02, 0.69),node4.pos,decoration:"coil",angle:-3.13rad)
cetz.draw.content((0.02, 0.57),angle:-3.13rad,[-p-q+k[2]])
cetz.draw.hobby((0.25, 0.71),(0.01, 0.63),(-0.22, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.71, -0.86),angle:-2.33rad,[-k[0]])
cetz.draw.hobby((-0.85, -0.93),(-0.65, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.32rad)
cetz.draw.content((0.88, -0.70),angle:2.32rad,[-k[0]])
cetz.draw.hobby((0.74, -0.63),(0.94, -0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.90rad)
cetz.draw.content((-1.03, 0.72),angle:1.90rad,[p])
cetz.draw.hobby((-1.01, 0.84),(-0.94, 0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.41rad)
cetz.draw.content((0.81, 0.79),angle:4.41rad,[p])
cetz.draw.hobby((0.84, 0.68),(0.90, 0.87),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.91, 0.49))
node(node2.pos)
let node3= (pos:(0.91, 0.48))
node(node3.pos)
let node4= (pos:(-0.50, 0.16))
node(node4.pos)
let node5= (pos:(0.50, 0.15))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.76),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.69),(-0.00, -0.70),(-0.43, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.95, 0.30),(0.86, -0.10),(0.73, -0.48),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.10),node2.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[q])
cetz.draw.hobby((-0.73, -0.48),(-0.86, -0.09),(-0.95, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.48),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.49, 0.26),(-0.63, 0.42),(-0.82, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node5.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.47),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.81, 0.52),(0.63, 0.42),(0.49, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.16),node4.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.35, 0.22),(0.00, 0.22),(-0.35, 0.22),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.37rad)
cetz.draw.content((-0.72, -0.89),angle:-2.37rad,[-k[0]])
cetz.draw.hobby((-0.85, -0.94),(-0.67, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((0.88, -0.72),angle:2.38rad,[-k[0]])
cetz.draw.hobby((0.75, -0.68),(0.93, -0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[p+q+k[3]])
cetz.draw.hobby((-0.84, -0.01),(-0.63, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.30rad)
cetz.draw.content((0.79, 0.19),angle:-0.30rad,[p+q+k[3]])
cetz.draw.hobby((0.66, 0.17),(0.87, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.08, 0.72),angle:1.74rad,[-q-k[3]])
cetz.draw.hobby((-1.03, 0.84),(-1.00, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[-q-k[3]])
cetz.draw.hobby((0.88, 0.64),(0.92, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, 0.02))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.36, 0.78))
node(node4.pos)
let node5= (pos:(-0.36, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.81),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.93),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.86),(-0.00, -0.87),(-0.38, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((0.68, -0.39),angle:-1.62rad,[q])
cetz.draw.hobby((0.63, -0.10),(0.62, -0.39),(0.60, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.57, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.69, -0.39),angle:4.76rad,[q])
cetz.draw.hobby((-0.61, -0.67),(-0.63, -0.39),(-0.63, -0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.11, 0.38),node2.pos,decoration:"arrow",angle:-2.46rad)
cetz.draw.content((-0.04, 0.29),angle:-2.46rad,[k[3]])
cetz.draw.hobby((0.26, 0.62),(-0.06, 0.35),(-0.39, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.84),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, 0.96),angle:0.00rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.27, 0.87),(0.00, 0.90),(-0.27, 0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.11, 0.38),node5.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((0.04, 0.29),angle:2.45rad,[k[3]])
cetz.draw.hobby((0.39, 0.08),(0.06, 0.35),(-0.26, 0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -1.00),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.84, -0.99),(-0.64, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.82, -0.78),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.69, -0.79),(0.89, -0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.10rad)
cetz.draw.content((-0.78, -0.11),angle:-3.10rad,[-q-k[3]])
cetz.draw.hobby((-0.85, -0.05),(-0.72, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.10rad)
cetz.draw.content((0.79, 0.13),angle:3.10rad,[-q-k[3]])
cetz.draw.hobby((0.72, 0.07),(0.85, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.81rad)
cetz.draw.content((-0.72, 0.78),angle:2.81rad,[p+q+k[3]])
cetz.draw.hobby((-0.88, 0.89),(-0.52, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.47rad)
cetz.draw.content((0.64, 1.00),angle:3.47rad,[p+q+k[3]])
cetz.draw.hobby((0.48, 0.88),(0.84, 1.01),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [1, 0, -1, -2] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding1i0,)
[= embedding 2 [1, 0, -1, -1] initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding2i0,)
[= embedding 3 [1, 0, 0, -1] initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding3i0,)
[= embedding 4 [1, 0, 1, -1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding4i0,)
[= embedding 5 [1, 0, 1, 0] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding5i0,)
[= embedding 6 [1, 1, -1, 0] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding6i0,)
[= embedding 7 [1, 1, -1, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding7i0,)
[= embedding 8 [1, 1, 0, 1] initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding8i0,)
[= embedding 9 [1, 1, 1, 1] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding9i0,)
[= embedding 10 [1, 1, 1, 2] initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,embedding10i0,)
}