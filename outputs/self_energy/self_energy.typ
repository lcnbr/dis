#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.85))
node(node0.pos)
let node1= (pos:(0.56, -0.88))
node(node1.pos)
let node2= (pos:(-0.22, -0.11))
node(node2.pos)
let node3= (pos:(0.65, -0.20))
node(node3.pos)
let node4= (pos:(-0.67, 0.69))
node(node4.pos)
let node5= (pos:(-0.05, 0.59))
node(node5.pos)
edge(node1.pos,(0.04, -0.90),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.04, -1.02),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.95),(0.04, -0.96),(-0.38, -0.93),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, -0.55),node1.pos,decoration:"wave",angle:-1.70rad)
cetz.draw.content((0.75, -0.56),angle:-1.70rad,[q])
cetz.draw.hobby((0.71, -0.26),(0.69, -0.55),(0.64, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.37, -0.48),node2.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((-0.48, -0.44),angle:4.39rad,[q])
cetz.draw.hobby((-0.51, -0.76),(-0.42, -0.45),(-0.31, -0.15),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.48, 0.28),node2.pos,decoration:"arrow",angle:5.23rad)
cetz.draw.content((-0.58, 0.22),angle:5.23rad,[k[3]])
cetz.draw.hobby((-0.70, 0.58),(-0.53, 0.24),(-0.32, -0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.70),node5.pos,decoration:"arrow",angle:2.98rad)
cetz.draw.content((-0.33, 0.82),angle:2.98rad,[p-2 k[3]])
cetz.draw.hobby((-0.62, 0.76),(-0.34, 0.76),(-0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.22, -0.14),node3.pos,decoration:"arrow",angle:-0.10rad)
cetz.draw.content((0.23, -0.02),angle:-0.10rad,[q+k[3]])
cetz.draw.hobby((-0.13, -0.05),(0.22, -0.08),(0.57, -0.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.87rad)
cetz.draw.content((-0.70, -1.04),angle:-2.87rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.55, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
cetz.draw.content((0.81, -0.83),angle:2.88rad,[-k[0]])
cetz.draw.hobby((0.67, -0.85),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.51rad)
cetz.draw.content((0.77, 0.01),angle:0.51rad,[k[3]])
cetz.draw.hobby((0.70, -0.09),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.55rad)
cetz.draw.content((-0.46, 0.19),angle:0.55rad,[k[3]])
cetz.draw.hobby((-0.88, 0.00),(-0.10, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.37rad)
cetz.draw.content((0.43, 0.91),angle:0.37rad,[p-k[3]])
cetz.draw.hobby((0.02, 0.68),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.52rad)
cetz.draw.content((-0.92, 0.76),angle:5.52rad,[p-k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.79, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.20))
node(node2.pos)
let node3= (pos:(0.22, -0.11))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node1.pos,(-0.05, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.93),(-0.04, -0.96),(-0.46, -0.95),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.48),node1.pos,decoration:"wave",angle:-1.25rad)
cetz.draw.content((0.48, -0.44),angle:-1.25rad,[q])
cetz.draw.hobby((0.30, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.55),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.75, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.64, -0.83),(-0.69, -0.55),(-0.71, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"arrow",angle:3.30rad)
cetz.draw.content((0.33, 0.82),angle:3.30rad,[p-2 k[3]])
cetz.draw.hobby((0.08, 0.67),(0.34, 0.76),(0.62, 0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.48, 0.28),node5.pos,decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.58, 0.22),angle:1.05rad,[k[3]])
cetz.draw.hobby((0.32, -0.07),(0.53, 0.24),(0.70, 0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.22, -0.14),node3.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((-0.23, -0.02),angle:0.11rad,[q+k[3]])
cetz.draw.hobby((-0.57, -0.12),(-0.22, -0.08),(0.13, -0.05),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.77, -0.81),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
cetz.draw.content((0.59, 0.39),angle:-0.55rad,[k[3]])
cetz.draw.hobby((0.17, 0.58),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.88, -0.20),angle:5.78rad,[k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.76rad)
cetz.draw.content((0.75, 0.93),angle:0.76rad,[p-k[3]])
cetz.draw.hobby((0.70, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.91rad)
cetz.draw.content((-0.52, 0.68),angle:5.91rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.78))
node(node0.pos)
let node1= (pos:(-0.53, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.02))
node(node2.pos)
let node3= (pos:(-0.57, 0.02))
node(node3.pos)
let node4= (pos:(-0.36, 0.78))
node(node4.pos)
let node5= (pos:(0.36, 0.78))
node(node5.pos)
edge(node0.pos,(-0.00, -0.81),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.56, -0.39),node1.pos,decoration:"wave",angle:4.75rad)
edge(node0.pos,(0.56, -0.39),node2.pos,decoration:"wave",angle:-1.62rad)
edge(node4.pos,(0.11, 0.38),node2.pos,decoration:"arrow",angle:5.60rad)
edge(node4.pos,(-0.00, 0.84),node5.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.11, 0.38),node5.pos,decoration:"arrow",angle:0.69rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:-0.04rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.04rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.33rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.95rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.79))
node(node0.pos)
let node1= (pos:(0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.02, -0.07))
node(node2.pos)
let node3= (pos:(0.74, 0.46))
node(node3.pos)
let node4= (pos:(0.43, 0.10))
node(node4.pos)
let node5= (pos:(-0.75, 0.47))
node(node5.pos)
edge(node1.pos,(0.12, -0.77),node0.pos,decoration:"arrow",angle:-3.03rad)
cetz.draw.content((0.14, -0.89),angle:-3.03rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.76),(0.13, -0.83),(-0.30, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, -0.13),node1.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((0.87, -0.15),angle:-1.66rad,[q])
cetz.draw.hobby((0.81, 0.35),(0.81, -0.12),(0.74, -0.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.43),node2.pos,decoration:"wave",angle:4.18rad)
cetz.draw.content((-0.33, -0.37),angle:4.18rad,[q])
cetz.draw.hobby((-0.43, -0.69),(-0.27, -0.38),(-0.08, -0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, -0.09),node2.pos,decoration:"arrow",angle:-2.77rad)
cetz.draw.content((0.31, -0.21),angle:-2.77rad,[k[3]])
cetz.draw.hobby((0.47, 0.03),(0.30, -0.15),(0.05, -0.15),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.33, 0.33),node3.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.26, 0.43),angle:0.59rad,[q+k[3]])
cetz.draw.hobby((0.01, 0.05),(0.26, 0.36),(0.64, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.18, 0.33),node4.pos,decoration:"coil",angle:-0.29rad)
cetz.draw.content((-0.15, 0.44),angle:-0.29rad,[p])
cetz.draw.hobby((-0.62, 0.50),(-0.13, 0.37),(0.34, 0.20),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
cetz.draw.content((-0.66, -1.01),angle:-2.80rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.48, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.39rad)
cetz.draw.content((0.90, -0.75),angle:2.39rad,[-k[0]])
cetz.draw.hobby((0.76, -0.70),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.96rad)
cetz.draw.content((0.74, 0.17),angle:2.96rad,[p-k[3]])
cetz.draw.hobby((0.54, 0.14),(0.91, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.06rad)
cetz.draw.content((-0.77, 0.18),angle:-2.06rad,[p-k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.74, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.13rad)
cetz.draw.content((0.76, 0.78),angle:1.13rad,[k[3]])
cetz.draw.hobby((0.73, 0.57),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.79))
node(node0.pos)
let node1= (pos:(0.51, -0.79))
node(node1.pos)
let node2= (pos:(-0.37, 0.00))
node(node2.pos)
let node3= (pos:(0.35, 0.00))
node(node3.pos)
let node4= (pos:(-0.51, 0.80))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node1.pos,(-0.00, -0.83),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.95),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.86),(-0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.40),node1.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((0.58, -0.38),angle:-1.38rad,[q])
cetz.draw.hobby((0.44, -0.06),(0.52, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node2.pos,decoration:"wave",angle:4.53rad)
cetz.draw.content((-0.59, -0.38),angle:4.53rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.53, -0.38),(-0.45, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.47, 0.40),node2.pos,decoration:"arrow",angle:4.89rad)
cetz.draw.content((-0.59, 0.38),angle:4.89rad,[k[3]])
cetz.draw.hobby((-0.57, 0.71),(-0.53, 0.38),(-0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.83),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[p-k[3]])
cetz.draw.hobby((-0.42, 0.87),(-0.00, 0.89),(0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, 0.40),node5.pos,decoration:"arrow",angle:1.38rad)
cetz.draw.content((0.58, 0.38),angle:1.38rad,[k[3]])
cetz.draw.hobby((0.44, 0.06),(0.52, 0.38),(0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.01, 0.00),node3.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.01, -0.12),angle:0.00rad,[q+k[3]])
cetz.draw.hobby((-0.29, -0.06),(-0.01, -0.06),(0.28, -0.06),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.71, -1.01),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.59, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.80, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.63, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
cetz.draw.content((0.71, 1.01),angle:0.40rad,[p])
cetz.draw.hobby((0.58, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.88rad)
cetz.draw.content((-0.80, 0.79),angle:5.88rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding2i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.90))
node(node0.pos)
let node1= (pos:(0.40, -0.82))
node(node1.pos)
let node2= (pos:(-0.78, -0.25))
node(node2.pos)
let node3= (pos:(-0.13, -0.07))
node(node3.pos)
let node4= (pos:(0.76, 0.56))
node(node4.pos)
let node5= (pos:(-0.37, 0.74))
node(node5.pos)
edge(node1.pos,(-0.09, -0.90),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.08, -1.02),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.90),(-0.09, -0.96),(-0.49, -0.97),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.44),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.26, -0.37),angle:-0.95rad,[q])
cetz.draw.hobby((-0.03, -0.10),(0.20, -0.39),(0.41, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.59),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.83, -0.62),angle:5.00rad,[q])
cetz.draw.hobby((-0.67, -0.87),(-0.78, -0.60),(-0.83, -0.32),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.25, 0.35),node5.pos,decoration:"arrow",angle:1.86rad)
cetz.draw.content((-0.14, 0.38),angle:1.86rad,[k[3]])
cetz.draw.hobby((-0.10, 0.03),(-0.19, 0.35),(-0.29, 0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, -0.15),node3.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.49, -0.03),angle:0.27rad,[q+k[3]])
cetz.draw.hobby((-0.74, -0.17),(-0.48, -0.09),(-0.21, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.21, 0.67),node4.pos,decoration:"coil",angle:-0.15rad)
cetz.draw.content((0.22, 0.79),angle:-0.15rad,[p])
cetz.draw.hobby((-0.25, 0.79),(0.21, 0.74),(0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.77, -1.07),angle:-2.91rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.04),(-0.67, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.74, -0.79),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.51, -0.79),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.16rad)
cetz.draw.content((0.99, 0.33),angle:-1.16rad,[k[3]])
cetz.draw.hobby((0.85, 0.49),(1.02, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.44rad)
cetz.draw.content((-0.98, -0.20),angle:5.44rad,[k[3]])
cetz.draw.hobby((-0.98, -0.11),(-0.89, -0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.21rad)
cetz.draw.content((0.77, 0.84),angle:4.21rad,[p-k[3]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((-0.73, 0.76),angle:2.74rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.49, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.92, 0.49))
node(node2.pos)
let node3= (pos:(-0.91, 0.48))
node(node3.pos)
let node4= (pos:(0.51, 0.15))
node(node4.pos)
let node5= (pos:(-0.50, 0.15))
node(node5.pos)
edge(node0.pos,(-0.00, -0.64),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
edge(node0.pos,(0.80, -0.10),node2.pos,decoration:"wave",angle:-1.85rad)
edge(node4.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:0.66rad)
edge(node3.pos,(-0.67, 0.38),node5.pos,decoration:"arrow",angle:-0.66rad)
edge(node5.pos,(0.00, 0.16),node4.pos,decoration:"coil",angle:0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.37rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.37rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.84rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.84rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.41rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.74))
node(node0.pos)
let node1= (pos:(0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.00, 0.04))
node(node2.pos)
let node3= (pos:(0.76, 0.40))
node(node3.pos)
let node4= (pos:(-0.41, 0.59))
node(node4.pos)
let node5= (pos:(-0.75, 0.94))
node(node5.pos)
edge(node1.pos,(0.13, -0.72),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((0.14, -0.84),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.72),(0.13, -0.78),(-0.29, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.13),node1.pos,decoration:"wave",angle:-1.69rad)
cetz.draw.content((0.86, -0.14),angle:-1.69rad,[q])
cetz.draw.hobby((0.82, 0.30),(0.80, -0.13),(0.73, -0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.35),node2.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.32, -0.30),angle:4.24rad,[q])
cetz.draw.hobby((-0.42, -0.63),(-0.26, -0.31),(-0.09, -0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.31),node2.pos,decoration:"arrow",angle:5.36rad)
cetz.draw.content((-0.30, 0.24),angle:5.36rad,[p])
cetz.draw.hobby((-0.42, 0.50),(-0.26, 0.28),(-0.09, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.70, 0.66),node5.pos,decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.78, 0.58),angle:5.46rad,[k[2]])
cetz.draw.hobby((-0.47, 0.52),(-0.74, 0.62),(-0.82, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.39, 0.24),node3.pos,decoration:"arrow",angle:0.45rad)
cetz.draw.content((0.34, 0.34),angle:0.45rad,[p+q])
cetz.draw.hobby((0.05, 0.13),(0.35, 0.28),(0.66, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, 0.88),node4.pos,decoration:"coil",angle:-0.78rad)
cetz.draw.content((-0.39, 0.97),angle:-0.78rad,[p+k[2]])
cetz.draw.hobby((-0.70, 1.02),(-0.42, 0.92),(-0.34, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.65, -0.98),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.47, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.91, -0.74),angle:2.35rad,[-k[0]])
cetz.draw.hobby((0.76, -0.67),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.19rad)
cetz.draw.content((0.77, 0.75),angle:1.19rad,[p])
cetz.draw.hobby((0.74, 0.52),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:6.07rad)
cetz.draw.content((-0.90, 0.86),angle:6.07rad,[p])
cetz.draw.hobby((-0.92, 0.92),(-0.86, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.85))
node(node0.pos)
let node1= (pos:(0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.39, -0.11))
node(node2.pos)
let node3= (pos:(0.38, -0.11))
node(node3.pos)
let node4= (pos:(-0.93, 0.45))
node(node4.pos)
let node5= (pos:(0.93, 0.45))
node(node5.pos)
edge(node1.pos,(-0.00, -0.89),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -1.01),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.93),(-0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.49),node1.pos,decoration:"wave",angle:-1.40rad)
cetz.draw.content((0.59, -0.47),angle:-1.40rad,[q])
cetz.draw.hobby((0.46, -0.17),(0.53, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.48, -0.49),node2.pos,decoration:"wave",angle:4.55rad)
cetz.draw.content((-0.59, -0.47),angle:4.55rad,[q])
cetz.draw.hobby((-0.57, -0.78),(-0.53, -0.47),(-0.47, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:-0.81rad)
cetz.draw.content((-0.56, 0.28),angle:-0.81rad,[p])
cetz.draw.hobby((-0.83, 0.45),(-0.60, 0.23),(-0.39, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.19),node5.pos,decoration:"arrow",angle:0.80rad)
cetz.draw.content((0.56, 0.27),angle:0.80rad,[p])
cetz.draw.hobby((0.39, -0.02),(0.60, 0.22),(0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, -0.09),node3.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((-0.00, 0.03),angle:-0.00rad,[p+q])
cetz.draw.hobby((-0.32, -0.05),(-0.00, -0.03),(0.31, -0.05),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
cetz.draw.content((-0.72, -1.04),angle:-2.85rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.59, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.79, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.62, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((-0.84, 0.21),angle:1.41rad,[-k[2]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.41rad)
cetz.draw.content((1.08, 0.24),angle:-1.41rad,[-k[2]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.44rad)
cetz.draw.content((0.84, 0.74),angle:1.44rad,[p+k[2]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.85rad)
cetz.draw.content((-1.08, 0.71),angle:4.85rad,[p+k[2]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.64))
node(node0.pos)
let node1= (pos:(0.40, -0.76))
node(node1.pos)
let node2= (pos:(-0.75, 0.40))
node(node2.pos)
let node3= (pos:(0.03, 0.00))
node(node3.pos)
let node4= (pos:(0.91, 0.76))
node(node4.pos)
let node5= (pos:(0.56, 0.43))
node(node5.pos)
edge(node1.pos,(-0.13, -0.73),node0.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((-0.14, -0.85),angle:3.03rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.82),(-0.13, -0.79),(-0.55, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.23, -0.38),node1.pos,decoration:"wave",angle:-1.11rad)
cetz.draw.content((0.34, -0.33),angle:-1.11rad,[q])
cetz.draw.hobby((0.12, -0.04),(0.28, -0.35),(0.42, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.13),node2.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.85, -0.14),angle:4.81rad,[q])
cetz.draw.hobby((-0.72, -0.55),(-0.79, -0.13),(-0.81, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.64, 0.72),node5.pos,decoration:"arrow",angle:0.73rad)
cetz.draw.content((0.56, 0.80),angle:0.73rad,[k[2]])
cetz.draw.hobby((0.87, 0.84),(0.59, 0.75),(0.49, 0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, 0.22),node5.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.22, 0.31),angle:0.67rad,[p])
cetz.draw.hobby((0.04, 0.09),(0.26, 0.27),(0.47, 0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.36, 0.22),node3.pos,decoration:"arrow",angle:-0.47rad)
cetz.draw.content((-0.31, 0.33),angle:-0.47rad,[p+q])
cetz.draw.hobby((-0.64, 0.42),(-0.33, 0.27),(-0.02, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.86, 0.49),node4.pos,decoration:"coil",angle:0.79rad)
cetz.draw.content((0.94, 0.40),angle:0.79rad,[p+k[2]])
cetz.draw.hobby((0.61, 0.36),(0.89, 0.44),(0.99, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
cetz.draw.content((-0.74, -0.91),angle:-2.36rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.67, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.75, -0.77),angle:2.76rad,[-k[0]])
cetz.draw.hobby((0.52, -0.74),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.22rad)
cetz.draw.content((0.84, 0.92),angle:1.22rad,[p])
cetz.draw.hobby((0.89, 0.88),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.11rad)
cetz.draw.content((-0.98, 0.65),angle:5.11rad,[p])
cetz.draw.hobby((-1.02, 0.88),(-0.84, 0.47),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.57))
node(node0.pos)
let node1= (pos:(-0.59, -0.56))
node(node1.pos)
let node2= (pos:(0.85, 0.51))
node(node2.pos)
let node3= (pos:(-0.83, 0.52))
node(node3.pos)
let node4= (pos:(0.28, 0.81))
node(node4.pos)
let node5= (pos:(-0.24, 0.81))
node(node5.pos)
edge(node0.pos,(0.01, -0.58),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.73, -0.03),node1.pos,decoration:"wave",angle:4.94rad)
edge(node0.pos,(0.74, -0.04),node2.pos,decoration:"wave",angle:-1.81rad)
edge(node4.pos,(0.58, 0.67),node2.pos,decoration:"arrow",angle:-0.48rad)
edge(node4.pos,(0.01, 0.68),node5.pos,decoration:"arrow",angle:6.27rad)
edge(node3.pos,(-0.56, 0.68),node5.pos,decoration:"arrow",angle:0.47rad)
edge(node5.pos,(0.02, 0.98),node4.pos,decoration:"coil",angle:-0.01rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.32rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.27rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.04rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.83))
node(node0.pos)
let node1= (pos:(0.63, -0.68))
node(node1.pos)
let node2= (pos:(-0.05, -0.13))
node(node2.pos)
let node3= (pos:(0.72, 0.38))
node(node3.pos)
let node4= (pos:(-0.67, 0.15))
node(node4.pos)
let node5= (pos:(-0.10, 0.53))
node(node5.pos)
edge(node1.pos,(0.12, -0.80),node0.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((0.14, -0.92),angle:-3.00rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.77),(0.12, -0.86),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, -0.16),node1.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((0.83, -0.17),angle:-1.66rad,[q])
cetz.draw.hobby((0.78, 0.27),(0.77, -0.16),(0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.24, -0.49),node2.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.35, -0.44),angle:4.24rad,[q])
cetz.draw.hobby((-0.43, -0.73),(-0.29, -0.45),(-0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.38, -0.01),node2.pos,decoration:"arrow",angle:5.85rad)
cetz.draw.content((-0.43, -0.12),angle:5.85rad,[k[3]])
cetz.draw.hobby((-0.64, 0.06),(-0.40, -0.07),(-0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.35, 0.13),node3.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((0.28, 0.23),angle:0.58rad,[q+k[3]])
cetz.draw.hobby((-0.01, -0.03),(0.30, 0.17),(0.61, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.41, 0.40),node4.pos,decoration:"coil",angle:3.72rad)
cetz.draw.content((-0.48, 0.50),angle:3.72rad,[-p+2 k[3]])
cetz.draw.hobby((-0.18, 0.57),(-0.45, 0.44),(-0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.67, -1.03),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.49, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.43rad)
cetz.draw.content((0.89, -0.75),angle:2.43rad,[-k[0]])
cetz.draw.hobby((0.75, -0.70),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.78, -0.04),angle:0.42rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.73, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.45rad)
cetz.draw.content((0.50, 0.37),angle:-0.45rad,[p-k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.75, 0.74),angle:1.15rad,[k[3]])
cetz.draw.hobby((0.71, 0.49),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.60, 0.66),angle:5.81rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.88))
node(node0.pos)
let node1= (pos:(0.47, -0.85))
node(node1.pos)
let node2= (pos:(-0.65, -0.19))
node(node2.pos)
let node3= (pos:(0.22, -0.10))
node(node3.pos)
let node4= (pos:(0.05, 0.59))
node(node4.pos)
let node5= (pos:(0.67, 0.69))
node(node5.pos)
edge(node1.pos,(-0.04, -0.90),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.04, -1.02),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.92),(-0.04, -0.96),(-0.46, -0.95),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, -0.48),node1.pos,decoration:"wave",angle:-1.24rad)
cetz.draw.content((0.48, -0.44),angle:-1.24rad,[q])
cetz.draw.hobby((0.30, -0.15),(0.42, -0.45),(0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.54),node2.pos,decoration:"wave",angle:4.84rad)
cetz.draw.content((-0.75, -0.56),angle:4.84rad,[q])
cetz.draw.hobby((-0.64, -0.83),(-0.69, -0.55),(-0.71, -0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.48, 0.28),node5.pos,decoration:"arrow",angle:1.05rad)
cetz.draw.content((0.58, 0.22),angle:1.05rad,[k[3]])
cetz.draw.hobby((0.32, -0.07),(0.53, 0.24),(0.69, 0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.22, -0.14),node3.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((-0.23, -0.02),angle:0.10rad,[q+k[3]])
cetz.draw.hobby((-0.57, -0.12),(-0.22, -0.08),(0.13, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.35, 0.70),node4.pos,decoration:"coil",angle:3.30rad)
cetz.draw.content((0.33, 0.82),angle:3.30rad,[-p+2 k[3]])
cetz.draw.hobby((0.62, 0.76),(0.34, 0.76),(0.08, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.75, -1.06),angle:-2.88rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.64, -0.97),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.77, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.58, -0.82),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.55rad)
cetz.draw.content((0.59, 0.40),angle:-0.55rad,[k[3]])
cetz.draw.hobby((0.16, 0.59),(0.95, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.88, -0.20),angle:5.78rad,[k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.76, -0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.52, 0.68),angle:5.91rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.07, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.76rad)
cetz.draw.content((0.75, 0.93),angle:0.76rad,[p-k[3]])
cetz.draw.hobby((0.70, 0.80),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.62))
node(node0.pos)
let node1= (pos:(-0.57, -0.62))
node(node1.pos)
let node2= (pos:(0.65, 0.49))
node(node2.pos)
let node3= (pos:(-0.65, 0.49))
node(node3.pos)
let node4= (pos:(-0.35, 0.15))
node(node4.pos)
let node5= (pos:(0.34, 0.14))
node(node5.pos)
edge(node0.pos,(0.00, -0.65),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.66, -0.09),node1.pos,decoration:"wave",angle:4.79rad)
edge(node0.pos,(0.66, -0.09),node2.pos,decoration:"wave",angle:-1.65rad)
edge(node4.pos,(0.14, 0.40),node2.pos,decoration:"arrow",angle:0.33rad)
edge(node3.pos,(-0.14, 0.40),node5.pos,decoration:"arrow",angle:-0.32rad)
edge(node5.pos,(0.00, 0.08),node4.pos,decoration:"coil",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.41rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.41rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.22rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.22rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.97rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.31rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.82))
node(node0.pos)
let node1= (pos:(0.59, -0.90))
node(node1.pos)
let node2= (pos:(0.13, -0.07))
node(node2.pos)
let node3= (pos:(0.78, -0.25))
node(node3.pos)
let node4= (pos:(0.37, 0.73))
node(node4.pos)
let node5= (pos:(-0.76, 0.56))
node(node5.pos)
edge(node1.pos,(0.09, -0.90),node0.pos,decoration:"arrow",angle:3.05rad)
cetz.draw.content((0.08, -1.02),angle:3.05rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.97),(0.09, -0.96),(-0.32, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.59),node1.pos,decoration:"wave",angle:-1.86rad)
cetz.draw.content((0.83, -0.62),angle:-1.86rad,[q])
cetz.draw.hobby((0.83, -0.32),(0.78, -0.60),(0.67, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.44),node2.pos,decoration:"wave",angle:4.09rad)
cetz.draw.content((-0.26, -0.37),angle:4.09rad,[q])
cetz.draw.hobby((-0.41, -0.71),(-0.20, -0.39),(0.03, -0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.25, 0.35),node2.pos,decoration:"arrow",angle:4.42rad)
cetz.draw.content((0.14, 0.38),angle:4.42rad,[k[3]])
cetz.draw.hobby((0.29, 0.67),(0.19, 0.35),(0.10, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.67),node5.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((-0.22, 0.79),angle:0.15rad,[-p])
cetz.draw.hobby((0.25, 0.79),(-0.21, 0.73),(-0.66, 0.65),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.46, -0.15),node3.pos,decoration:"arrow",angle:-0.27rad)
cetz.draw.content((0.49, -0.03),angle:-0.27rad,[q+k[3]])
cetz.draw.hobby((0.21, -0.02),(0.48, -0.09),(0.74, -0.17),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.67, -1.02),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.48, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.90rad)
cetz.draw.content((0.82, -0.83),angle:2.90rad,[-k[0]])
cetz.draw.hobby((0.70, -0.87),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.85rad)
cetz.draw.content((0.80, -0.04),angle:0.85rad,[k[3]])
cetz.draw.hobby((0.80, -0.13),(0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.16rad)
cetz.draw.content((-0.77, 0.23),angle:1.16rad,[k[3]])
cetz.draw.hobby((-0.91, 0.07),(-0.74, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.08rad)
cetz.draw.content((-0.98, 0.72),angle:2.08rad,[p-k[3]])
cetz.draw.hobby((-1.00, 0.88),(-0.86, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.54rad)
cetz.draw.content((0.64, 0.98),angle:3.54rad,[p-k[3]])
cetz.draw.hobby((0.44, 0.83),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.90))
node(node0.pos)
let node1= (pos:(0.40, -0.81))
node(node1.pos)
let node2= (pos:(-0.78, -0.25))
node(node2.pos)
let node3= (pos:(-0.13, -0.07))
node(node3.pos)
let node4= (pos:(0.76, 0.56))
node(node4.pos)
let node5= (pos:(-0.37, 0.73))
node(node5.pos)
edge(node1.pos,(-0.09, -0.89),node0.pos,decoration:"arrow",angle:-3.05rad)
cetz.draw.content((-0.08, -1.01),angle:-3.05rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.89),(-0.09, -0.95),(-0.49, -0.97),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.44),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.26, -0.37),angle:-0.95rad,[q])
cetz.draw.hobby((-0.03, -0.10),(0.20, -0.39),(0.41, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.59),node2.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.83, -0.62),angle:4.99rad,[q])
cetz.draw.hobby((-0.68, -0.87),(-0.78, -0.60),(-0.83, -0.32),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.20, 0.68),node5.pos,decoration:"arrow",angle:-0.15rad)
cetz.draw.content((0.22, 0.79),angle:-0.15rad,[-p])
cetz.draw.hobby((0.66, 0.65),(0.21, 0.74),(-0.25, 0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.25, 0.35),node5.pos,decoration:"arrow",angle:1.86rad)
cetz.draw.content((-0.14, 0.38),angle:1.86rad,[k[3]])
cetz.draw.hobby((-0.10, 0.03),(-0.19, 0.35),(-0.29, 0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, -0.15),node3.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.49, -0.03),angle:0.27rad,[q+k[3]])
cetz.draw.hobby((-0.73, -0.17),(-0.47, -0.09),(-0.21, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((-0.77, -1.07),angle:-2.90rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.67, -0.98),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.74, -0.79),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.51, -0.79),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.16rad)
cetz.draw.content((0.99, 0.33),angle:-1.16rad,[k[3]])
cetz.draw.hobby((0.85, 0.50),(1.02, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.45rad)
cetz.draw.content((-0.98, -0.20),angle:5.45rad,[k[3]])
cetz.draw.hobby((-0.98, -0.11),(-0.89, -0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
cetz.draw.content((-0.73, 0.76),angle:2.74rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.49, 0.72),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.20rad)
cetz.draw.content((0.77, 0.84),angle:4.20rad,[p-k[3]])
cetz.draw.hobby((0.75, 0.68),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.79))
node(node0.pos)
let node1= (pos:(0.51, -0.79))
node(node1.pos)
let node2= (pos:(-0.36, -0.00))
node(node2.pos)
let node3= (pos:(0.35, -0.00))
node(node3.pos)
let node4= (pos:(-0.52, 0.79))
node(node4.pos)
let node5= (pos:(0.51, 0.79))
node(node5.pos)
edge(node1.pos,(-0.00, -0.83),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.95),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.87),(-0.00, -0.89),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, -0.40),node1.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((0.58, -0.38),angle:-1.38rad,[q])
cetz.draw.hobby((0.43, -0.06),(0.52, -0.38),(0.56, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node2.pos,decoration:"wave",angle:4.53rad)
cetz.draw.content((-0.59, -0.38),angle:4.53rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.53, -0.38),(-0.45, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.47, 0.40),node2.pos,decoration:"arrow",angle:4.90rad)
cetz.draw.content((-0.59, 0.38),angle:4.90rad,[k[3]])
cetz.draw.hobby((-0.57, 0.71),(-0.53, 0.38),(-0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, 0.40),node5.pos,decoration:"arrow",angle:1.37rad)
cetz.draw.content((0.58, 0.37),angle:1.37rad,[k[3]])
cetz.draw.hobby((0.43, 0.06),(0.52, 0.38),(0.56, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.01, -0.00),node3.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.01, -0.12),angle:6.28rad,[q+k[3]])
cetz.draw.hobby((-0.29, -0.06),(-0.01, -0.06),(0.28, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, 0.83),node4.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[-p+k[3]])
cetz.draw.hobby((0.42, 0.86),(-0.00, 0.89),(-0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.71, -1.01),angle:-2.74rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.59, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.80, -0.79),angle:2.74rad,[-k[0]])
cetz.draw.hobby((0.63, -0.78),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.81, 0.79),angle:5.88rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((0.71, 1.01),angle:0.40rad,[p])
cetz.draw.hobby((0.58, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.78))
node(node0.pos)
let node1= (pos:(-0.55, -0.78))
node(node1.pos)
let node2= (pos:(0.73, 0.00))
node(node2.pos)
let node3= (pos:(-0.73, 0.00))
node(node3.pos)
let node4= (pos:(0.55, 0.78))
node(node4.pos)
let node5= (pos:(-0.55, 0.78))
node(node5.pos)
edge(node0.pos,(-0.00, -0.80),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.64, -0.40),node1.pos,decoration:"wave",angle:4.94rad)
edge(node0.pos,(0.65, -0.40),node2.pos,decoration:"wave",angle:-1.80rad)
edge(node4.pos,(0.65, 0.40),node2.pos,decoration:"arrow",angle:-1.34rad)
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"arrow",angle:-0.00rad)
edge(node3.pos,(-0.64, 0.40),node5.pos,decoration:"arrow",angle:1.34rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:-0.01rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.00rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.70rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.59rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.78))
node(node1.pos)
let node2= (pos:(-0.73, -0.00))
node(node2.pos)
let node3= (pos:(0.73, 0.00))
node(node3.pos)
let node4= (pos:(-0.55, 0.78))
node(node4.pos)
let node5= (pos:(0.55, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.80),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.92),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.85),(0.00, -0.86),(-0.44, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.40),node1.pos,decoration:"wave",angle:-1.80rad)
cetz.draw.content((0.76, -0.42),angle:-1.80rad,[q])
cetz.draw.hobby((0.77, -0.09),(0.70, -0.41),(0.63, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.40),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.76, -0.43),angle:4.94rad,[q])
cetz.draw.hobby((-0.63, -0.72),(-0.71, -0.41),(-0.77, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.64, 0.40),node2.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.76, 0.43),angle:4.48rad,[k[3]])
cetz.draw.hobby((-0.63, 0.72),(-0.70, 0.41),(-0.77, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.80),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.92),angle:3.14rad,[p+q])
cetz.draw.hobby((-0.44, 0.85),(-0.00, 0.86),(0.44, 0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, 0.40),node5.pos,decoration:"arrow",angle:1.80rad)
cetz.draw.content((0.76, 0.43),angle:1.80rad,[k[3]])
cetz.draw.hobby((0.77, 0.09),(0.70, 0.41),(0.63, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.72, -1.00),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.61, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.83, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.66, -0.77),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.86, -0.12),angle:3.14rad,[-q-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.83, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.86, 0.12),angle:3.14rad,[-q-k[3]])
cetz.draw.hobby((0.83, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.45rad)
cetz.draw.content((0.72, 1.00),angle:0.45rad,[p+q+k[3]])
cetz.draw.hobby((0.61, 0.88),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.83rad)
cetz.draw.content((-0.83, 0.78),angle:5.83rad,[p+q+k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.66, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.90))
node(node0.pos)
let node1= (pos:(-0.40, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.25))
node(node2.pos)
let node3= (pos:(0.13, -0.07))
node(node3.pos)
let node4= (pos:(-0.76, 0.56))
node(node4.pos)
let node5= (pos:(0.37, 0.74))
node(node5.pos)
edge(node0.pos,(0.09, -0.89),node1.pos,decoration:"arrow",angle:3.06rad)
edge(node3.pos,(-0.16, -0.44),node1.pos,decoration:"wave",angle:4.09rad)
edge(node0.pos,(0.72, -0.59),node2.pos,decoration:"wave",angle:-1.85rad)
edge(node4.pos,(-0.20, 0.67),node5.pos,decoration:"arrow",angle:3.29rad)
edge(node3.pos,(0.25, 0.35),node5.pos,decoration:"arrow",angle:1.28rad)
edge(node2.pos,(0.46, -0.15),node3.pos,decoration:"arrow",angle:2.88rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.90rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.98rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.98rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.22rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.81))
node(node0.pos)
let node1= (pos:(-0.59, -0.90))
node(node1.pos)
let node2= (pos:(-0.13, -0.06))
node(node2.pos)
let node3= (pos:(-0.78, -0.25))
node(node3.pos)
let node4= (pos:(-0.37, 0.74))
node(node4.pos)
let node5= (pos:(0.76, 0.56))
node(node5.pos)
edge(node0.pos,(-0.09, -0.89),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node3.pos,(-0.72, -0.59),node1.pos,decoration:"wave",angle:4.99rad)
edge(node0.pos,(0.16, -0.43),node2.pos,decoration:"wave",angle:-0.95rad)
edge(node4.pos,(-0.25, 0.35),node2.pos,decoration:"arrow",angle:-1.28rad)
edge(node4.pos,(0.20, 0.68),node5.pos,decoration:"arrow",angle:2.99rad)
edge(node2.pos,(-0.46, -0.15),node3.pos,decoration:"arrow",angle:3.41rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.90rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.31rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.98rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.06rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.89rad)
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.79))
node(node0.pos)
let node1= (pos:(-0.51, -0.80))
node(node1.pos)
let node2= (pos:(0.36, -0.00))
node(node2.pos)
let node3= (pos:(-0.36, -0.00))
node(node3.pos)
let node4= (pos:(0.52, 0.79))
node(node4.pos)
let node5= (pos:(-0.51, 0.79))
node(node5.pos)
edge(node0.pos,(0.00, -0.83),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.46, -0.40),node1.pos,decoration:"wave",angle:4.52rad)
edge(node0.pos,(0.47, -0.40),node2.pos,decoration:"wave",angle:-1.38rad)
edge(node4.pos,(0.47, 0.40),node2.pos,decoration:"arrow",angle:-1.76rad)
edge(node3.pos,(-0.46, 0.40),node5.pos,decoration:"arrow",angle:1.76rad)
edge(node2.pos,(0.00, -0.00),node3.pos,decoration:"arrow",angle:-3.14rad)
edge(node5.pos,(0.00, 0.83),node4.pos,decoration:"coil",angle:0.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.55rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.74rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.62))
node(node0.pos)
let node1= (pos:(0.57, -0.62))
node(node1.pos)
let node2= (pos:(-0.65, 0.49))
node(node2.pos)
let node3= (pos:(0.65, 0.49))
node(node3.pos)
let node4= (pos:(0.35, 0.15))
node(node4.pos)
let node5= (pos:(-0.34, 0.15))
node(node5.pos)
edge(node1.pos,(-0.00, -0.65),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.77),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.69),(-0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, -0.09),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.78, -0.10),angle:-1.65rad,[q])
cetz.draw.hobby((0.72, 0.38),(0.72, -0.07),(0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[q])
cetz.draw.hobby((-0.66, -0.52),(-0.72, -0.07),(-0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.13, 0.40),node2.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.10, 0.52),angle:2.82rad,[k[3]])
cetz.draw.hobby((0.29, 0.26),(-0.10, 0.46),(-0.54, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.40),node5.pos,decoration:"arrow",angle:3.47rad)
cetz.draw.content((0.10, 0.52),angle:3.47rad,[k[3]])
cetz.draw.hobby((0.54, 0.54),(0.10, 0.45),(-0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.08),node4.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, -0.04),angle:0.00rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.29, 0.07),(0.00, 0.02),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.42rad)
cetz.draw.content((-0.71, -0.90),angle:-2.42rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.98),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.42rad)
cetz.draw.content((0.87, -0.72),angle:2.42rad,[-k[0]])
cetz.draw.hobby((0.69, -0.64),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.70, 0.19),angle:2.92rad,[p+q+k[3]])
cetz.draw.hobby((0.46, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.65, -0.04),angle:-2.92rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.43, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.18rad)
cetz.draw.content((-0.92, 0.68),angle:2.18rad,[-q-k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.75, 0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
cetz.draw.content((0.72, 0.81),angle:4.11rad,[-q-k[3]])
cetz.draw.hobby((0.65, 0.61),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.83))
node(node0.pos)
let node1= (pos:(-0.63, -0.68))
node(node1.pos)
let node2= (pos:(0.05, -0.13))
node(node2.pos)
let node3= (pos:(-0.72, 0.38))
node(node3.pos)
let node4= (pos:(0.67, 0.15))
node(node4.pos)
let node5= (pos:(0.10, 0.53))
node(node5.pos)
edge(node0.pos,(-0.12, -0.79),node1.pos,decoration:"arrow",angle:3.00rad)
edge(node3.pos,(-0.71, -0.16),node1.pos,decoration:"wave",angle:4.80rad)
edge(node0.pos,(0.24, -0.49),node2.pos,decoration:"wave",angle:-1.10rad)
edge(node4.pos,(0.38, -0.01),node2.pos,decoration:"arrow",angle:-2.71rad)
edge(node2.pos,(-0.35, 0.13),node3.pos,decoration:"arrow",angle:2.56rad)
edge(node5.pos,(0.41, 0.40),node4.pos,decoration:"coil",angle:-0.59rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.42rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.72rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.69rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.88))
node(node0.pos)
let node1= (pos:(-0.47, -0.85))
node(node1.pos)
let node2= (pos:(0.65, -0.19))
node(node2.pos)
let node3= (pos:(-0.22, -0.10))
node(node3.pos)
let node4= (pos:(-0.05, 0.59))
node(node4.pos)
let node5= (pos:(-0.67, 0.69))
node(node5.pos)
edge(node0.pos,(0.04, -0.90),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node3.pos,(-0.37, -0.48),node1.pos,decoration:"wave",angle:4.38rad)
edge(node0.pos,(0.63, -0.55),node2.pos,decoration:"wave",angle:-1.70rad)
edge(node3.pos,(-0.48, 0.28),node5.pos,decoration:"arrow",angle:2.09rad)
edge(node2.pos,(0.22, -0.14),node3.pos,decoration:"arrow",angle:3.04rad)
edge(node5.pos,(-0.35, 0.70),node4.pos,decoration:"coil",angle:-0.16rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.59rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.64rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.52rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.57))
node(node0.pos)
let node1= (pos:(0.59, -0.56))
node(node1.pos)
let node2= (pos:(-0.84, 0.52))
node(node2.pos)
let node3= (pos:(0.85, 0.51))
node(node3.pos)
let node4= (pos:(-0.25, 0.80))
node(node4.pos)
let node5= (pos:(0.27, 0.81))
node(node5.pos)
edge(node1.pos,(0.00, -0.58),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((0.00, -0.70),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.04),node1.pos,decoration:"wave",angle:-1.81rad)
cetz.draw.content((0.85, -0.07),angle:-1.81rad,[q])
cetz.draw.hobby((0.89, 0.39),(0.80, -0.05),(0.68, -0.48),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.04),node2.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.85, -0.06),angle:4.94rad,[q])
cetz.draw.hobby((-0.68, -0.48),(-0.79, -0.04),(-0.88, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.56, 0.67),node2.pos,decoration:"arrow",angle:3.60rad)
cetz.draw.content((-0.62, 0.78),angle:3.60rad,[-p-q])
cetz.draw.hobby((-0.34, 0.84),(-0.58, 0.73),(-0.82, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.01, 0.97),node5.pos,decoration:"arrow",angle:3.15rad)
cetz.draw.content((0.01, 1.09),angle:3.15rad,[k[2]])
cetz.draw.hobby((-0.27, 0.90),(0.01, 1.03),(0.28, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, 0.67),node5.pos,decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.63, 0.78),angle:2.66rad,[-p-q])
cetz.draw.hobby((0.82, 0.60),(0.59, 0.73),(0.35, 0.84),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, 0.68),node4.pos,decoration:"coil",angle:-3.13rad)
cetz.draw.content((0.01, 0.56),angle:-3.13rad,[-p-q+k[2]])
cetz.draw.hobby((0.27, 0.72),(0.01, 0.62),(-0.25, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.71, -0.87),angle:-2.33rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.61, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.33rad)
cetz.draw.content((0.88, -0.70),angle:2.33rad,[-k[0]])
cetz.draw.hobby((0.70, -0.60),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.89rad)
cetz.draw.content((-1.03, 0.72),angle:1.89rad,[p])
cetz.draw.hobby((-1.03, 0.89),(-0.93, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.41rad)
cetz.draw.content((0.81, 0.79),angle:4.41rad,[p])
cetz.draw.hobby((0.82, 0.63),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.40, -0.75))
node(node1.pos)
let node2= (pos:(0.76, 0.40))
node(node2.pos)
let node3= (pos:(-0.00, 0.03))
node(node3.pos)
let node4= (pos:(-0.76, 0.92))
node(node4.pos)
let node5= (pos:(-0.42, 0.57))
node(node5.pos)
edge(node0.pos,(0.13, -0.73),node1.pos,decoration:"arrow",angle:-3.04rad)
edge(node3.pos,(-0.22, -0.36),node1.pos,decoration:"wave",angle:4.24rad)
edge(node0.pos,(0.74, -0.13),node2.pos,decoration:"wave",angle:-1.68rad)
edge(node4.pos,(-0.48, 0.87),node5.pos,decoration:"arrow",angle:2.37rad)
edge(node3.pos,(-0.21, 0.30),node5.pos,decoration:"arrow",angle:2.23rad)
edge(node2.pos,(0.39, 0.23),node3.pos,decoration:"arrow",angle:3.60rad)
edge(node5.pos,(-0.71, 0.65),node4.pos,decoration:"coil",angle:2.31rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.83rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.33rad)
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.65, -0.64))
node(node1.pos)
let node2= (pos:(0.00, 0.01))
node(node2.pos)
let node3= (pos:(-0.76, 0.40))
node(node3.pos)
let node4= (pos:(0.49, 0.49))
node(node4.pos)
let node5= (pos:(0.83, 0.82))
node(node5.pos)
edge(node0.pos,(-0.13, -0.73),node1.pos,decoration:"arrow",angle:3.03rad)
edge(node3.pos,(-0.74, -0.13),node1.pos,decoration:"wave",angle:4.82rad)
edge(node0.pos,(0.22, -0.38),node2.pos,decoration:"wave",angle:-1.09rad)
edge(node4.pos,(0.24, 0.25),node2.pos,decoration:"arrow",angle:-2.36rad)
edge(node4.pos,(0.55, 0.77),node5.pos,decoration:"arrow",angle:3.89rad)
edge(node2.pos,(-0.38, 0.22),node3.pos,decoration:"arrow",angle:2.67rad)
edge(node5.pos,(0.77, 0.54),node4.pos,decoration:"coil",angle:-2.34rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.76rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.95rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.95rad)
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.86))
node(node1.pos)
let node2= (pos:(0.39, -0.12))
node(node2.pos)
let node3= (pos:(-0.38, -0.12))
node(node3.pos)
let node4= (pos:(0.93, 0.45))
node(node4.pos)
let node5= (pos:(-0.92, 0.45))
node(node5.pos)
edge(node0.pos,(0.00, -0.89),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.47, -0.49),node1.pos,decoration:"wave",angle:4.54rad)
edge(node0.pos,(0.48, -0.50),node2.pos,decoration:"wave",angle:-1.41rad)
edge(node4.pos,(0.65, 0.19),node2.pos,decoration:"arrow",angle:3.96rad)
edge(node3.pos,(-0.65, 0.19),node5.pos,decoration:"arrow",angle:2.33rad)
edge(node2.pos,(0.01, -0.10),node3.pos,decoration:"arrow",angle:3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:1.73rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.74rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.71rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.58rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.91, 0.49))
node(node2.pos)
let node3= (pos:(0.91, 0.48))
node(node3.pos)
let node4= (pos:(-0.50, 0.15))
node(node4.pos)
let node5= (pos:(0.50, 0.15))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.76),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.69),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.79, -0.11),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.10),(0.70, -0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.10),node2.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.48),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node5.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.59, 0.47),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.62, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, 0.16),node4.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.40, 0.22),(0.00, 0.22),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.37rad)
cetz.draw.content((-0.72, -0.90),angle:-2.37rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.64, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((0.88, -0.72),angle:2.38rad,[-k[0]])
cetz.draw.hobby((0.72, -0.64),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.30rad)
cetz.draw.content((0.79, 0.19),angle:-0.30rad,[p+q+k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.08, 0.72),angle:1.74rad,[-q-k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.84, 0.76),angle:4.54rad,[-q-k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.37, -0.83))
node(node0.pos)
let node1= (pos:(-0.67, -0.71))
node(node1.pos)
let node2= (pos:(-0.19, -0.20))
node(node2.pos)
let node3= (pos:(-0.84, 0.36))
node(node3.pos)
let node4= (pos:(-0.32, 0.27))
node(node4.pos)
let node5= (pos:(0.77, 0.49))
node(node5.pos)
edge(node0.pos,(-0.16, -0.82),node1.pos,decoration:"arrow",angle:3.03rad)
edge(node3.pos,(-0.81, -0.20),node1.pos,decoration:"wave",angle:4.87rad)
edge(node0.pos,(0.12, -0.51),node2.pos,decoration:"wave",angle:-0.84rad)
edge(node4.pos,(-0.16, 0.06),node2.pos,decoration:"arrow",angle:-1.31rad)
edge(node2.pos,(-0.56, 0.06),node3.pos,decoration:"arrow",angle:2.41rad)
edge(node5.pos,(0.24, 0.41),node4.pos,decoration:"coil",angle:3.33rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.41rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.38rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.14rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.81rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.30rad)
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.90))
node(node0.pos)
let node1= (pos:(-0.40, -0.81))
node(node1.pos)
let node2= (pos:(0.78, -0.25))
node(node2.pos)
let node3= (pos:(0.13, -0.07))
node(node3.pos)
let node4= (pos:(-0.76, 0.56))
node(node4.pos)
let node5= (pos:(0.37, 0.74))
node(node5.pos)
edge(node0.pos,(0.09, -0.89),node1.pos,decoration:"arrow",angle:3.05rad)
edge(node3.pos,(-0.16, -0.43),node1.pos,decoration:"wave",angle:4.09rad)
edge(node0.pos,(0.72, -0.59),node2.pos,decoration:"wave",angle:-1.85rad)
edge(node3.pos,(0.25, 0.35),node5.pos,decoration:"arrow",angle:1.28rad)
edge(node2.pos,(0.46, -0.15),node3.pos,decoration:"arrow",angle:2.87rad)
edge(node5.pos,(-0.20, 0.68),node4.pos,decoration:"coil",angle:3.29rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.90rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.98rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.98rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.22rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.40rad)
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.79))
node(node0.pos)
let node1= (pos:(-0.51, -0.79))
node(node1.pos)
let node2= (pos:(0.36, 0.00))
node(node2.pos)
let node3= (pos:(-0.35, 0.00))
node(node3.pos)
let node4= (pos:(0.52, 0.79))
node(node4.pos)
let node5= (pos:(-0.51, 0.79))
node(node5.pos)
edge(node0.pos,(0.00, -0.83),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.46, -0.40),node1.pos,decoration:"wave",angle:4.52rad)
edge(node0.pos,(0.47, -0.40),node2.pos,decoration:"wave",angle:-1.39rad)
edge(node4.pos,(0.47, 0.40),node2.pos,decoration:"arrow",angle:-1.76rad)
edge(node4.pos,(0.00, 0.83),node5.pos,decoration:"arrow",angle:0.00rad)
edge(node3.pos,(-0.46, 0.40),node5.pos,decoration:"arrow",angle:1.76rad)
edge(node2.pos,(0.01, 0.00),node3.pos,decoration:"arrow",angle:-3.14rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.74rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.54rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.78))
node(node0.pos)
let node1= (pos:(0.53, -0.78))
node(node1.pos)
let node2= (pos:(-0.57, 0.02))
node(node2.pos)
let node3= (pos:(0.57, 0.02))
node(node3.pos)
let node4= (pos:(0.36, 0.78))
node(node4.pos)
let node5= (pos:(-0.36, 0.78))
node(node5.pos)
edge(node1.pos,(-0.00, -0.81),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, -0.93),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.85),(-0.00, -0.87),(-0.43, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((0.68, -0.40),angle:-1.62rad,[q])
cetz.draw.hobby((0.63, -0.06),(0.62, -0.39),(0.60, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.39),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.68, -0.39),angle:4.76rad,[q])
cetz.draw.hobby((-0.60, -0.71),(-0.62, -0.38),(-0.63, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.11, 0.38),node2.pos,decoration:"arrow",angle:-2.46rad)
cetz.draw.content((-0.04, 0.29),angle:-2.46rad,[k[3]])
cetz.draw.hobby((0.31, 0.66),(-0.06, 0.35),(-0.44, 0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.84),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.96),angle:0.00rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.30, 0.86),(-0.00, 0.90),(-0.30, 0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.11, 0.38),node5.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((0.04, 0.29),angle:2.45rad,[k[3]])
cetz.draw.hobby((0.44, 0.04),(0.06, 0.35),(-0.31, 0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.72, -1.00),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.60, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.82, -0.78),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.65, -0.77),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.10rad)
cetz.draw.content((-0.78, -0.11),angle:-3.10rad,[-q-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.66, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.10rad)
cetz.draw.content((0.79, 0.13),angle:3.10rad,[-q-k[3]])
cetz.draw.hobby((0.67, 0.07),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.81rad)
cetz.draw.content((-0.72, 0.78),angle:2.81rad,[p+q+k[3]])
cetz.draw.hobby((-0.92, 0.91),(-0.47, 0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.47rad)
cetz.draw.content((0.64, 1.00),angle:3.47rad,[p+q+k[3]])
cetz.draw.hobby((0.43, 0.87),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.88))
node(node0.pos)
let node1= (pos:(-0.47, -0.85))
node(node1.pos)
let node2= (pos:(0.65, -0.20))
node(node2.pos)
let node3= (pos:(-0.21, -0.10))
node(node3.pos)
let node4= (pos:(-0.05, 0.59))
node(node4.pos)
let node5= (pos:(-0.67, 0.69))
node(node5.pos)
edge(node0.pos,(0.04, -0.90),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node3.pos,(-0.36, -0.48),node1.pos,decoration:"wave",angle:4.38rad)
edge(node0.pos,(0.63, -0.55),node2.pos,decoration:"wave",angle:-1.70rad)
edge(node4.pos,(-0.35, 0.70),node5.pos,decoration:"arrow",angle:-0.16rad)
edge(node3.pos,(-0.48, 0.27),node5.pos,decoration:"arrow",angle:2.10rad)
edge(node2.pos,(0.22, -0.14),node3.pos,decoration:"arrow",angle:3.04rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.88rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.59rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.65rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.38rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.52rad)
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.85))
node(node0.pos)
let node1= (pos:(-0.56, -0.88))
node(node1.pos)
let node2= (pos:(0.22, -0.10))
node(node2.pos)
let node3= (pos:(-0.65, -0.19))
node(node3.pos)
let node4= (pos:(0.67, 0.69))
node(node4.pos)
let node5= (pos:(0.05, 0.59))
node(node5.pos)
edge(node0.pos,(-0.05, -0.90),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node3.pos,(-0.63, -0.55),node1.pos,decoration:"wave",angle:4.84rad)
edge(node0.pos,(0.37, -0.48),node2.pos,decoration:"wave",angle:-1.25rad)
edge(node4.pos,(0.48, 0.28),node2.pos,decoration:"arrow",angle:-2.09rad)
edge(node4.pos,(0.35, 0.70),node5.pos,decoration:"arrow",angle:0.16rad)
edge(node2.pos,(-0.22, -0.14),node3.pos,decoration:"arrow",angle:3.25rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.88rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.64rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.59rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.77rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.90rad)
})
[= embedding 1 [1, 0, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 -3+13+17],box[#embedding1i1 -3+9+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 -1+15+17],)
pagebreak()
[= embedding 2 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 -3+10+13],box[#embedding2i1 -3+17],box[#embedding2i2 -3+9+10],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 -1+10+15],)
pagebreak()
[= embedding 3 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-2 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 -3+13],box[#embedding3i1 -3-10+17],box[#embedding3i2 -3+9],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p-q]^-2 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 -1+15],)
pagebreak()
[= embedding 4 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 -3-10+13],box[#embedding4i1 -3+9-10],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 -1-10+15],)
pagebreak()
[= embedding 5 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 -3+13-17],box[#embedding5i1 -3+9-17],box[#embedding5i2 -3-10],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 -1+15-17],)
pagebreak()
[= embedding 6 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 -3-15+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 -1-9+17],box[#embedding6f1 -1-13+17],box[#embedding6f2 -1+10],)
pagebreak()
[= embedding 7 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	-2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 -3+10-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 -1+10-13],box[#embedding7f1 -1-9+10],)
pagebreak()
[= embedding 8 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-2 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 -3-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-2 prop[0,-p+q]^-1 prop[0,-p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 -1-9],box[#embedding8f1 -1-13],box[#embedding8f2 -1+10-17],)
pagebreak()
[= embedding 9 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 -3-10-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 -1-10-13],box[#embedding9f1 -1-9-10],box[#embedding9f2 -1-17],)
pagebreak()
[= embedding 10 [1, 1, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 -3-15-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 -1-9-17],box[#embedding10f1 -1-13-17],)
pagebreak()
}