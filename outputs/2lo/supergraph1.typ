#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.16))
node(node0.pos)
let node1= (pos:(-0.55, 0.63))
node(node1.pos)
let node2= (pos:(-0.52, 0.75))
node(node2.pos)
let node3= (pos:(-0.25, 0.50))
node(node3.pos)
let node4= (pos:(-0.36, 0.08))
node(node4.pos)
let node5= (pos:(-0.32, 0.86))
node(node5.pos)
edge(node1.pos,(-0.55, 0.23),node0.pos,decoration:"arrow",angle:1.63rad)
cetz.draw.content((-0.67, 0.23),angle:1.63rad,[0])
cetz.draw.hobby((-0.62, 0.55),(-0.61, 0.23),(-0.58, -0.09),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((-0.65, 0.83),angle:4.57rad,[k[0]])
cetz.draw.hobby((-0.57, 0.91),(-0.60, 0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.54rad)
cetz.draw.content((-0.38, -0.33),angle:-1.54rad,[-k[0]])
cetz.draw.hobby((-0.45, -0.26),(-0.44, -0.40),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.39, -0.08),node4.pos,decoration:"wave",angle:-2.16rad)
cetz.draw.content((-0.29, -0.14),angle:-2.16rad,[0])
cetz.draw.hobby((-0.46, -0.21),(-0.33, -0.11),(-0.29, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.40, 0.73),node1.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.31, 0.65),angle:0.84rad,[0])
cetz.draw.hobby((-0.28, 0.80),(-0.37, 0.67),(-0.50, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, 0.61),node2.pos,decoration:"coil",angle:-0.76rad)
cetz.draw.content((-0.28, 0.70),angle:-0.76rad,[0])
cetz.draw.hobby((-0.23, 0.57),(-0.34, 0.67),(-0.45, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.37, -0.07),angle:0.50rad,[-p+k[3]])
cetz.draw.hobby((-0.38, -0.00),(-0.42, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.51rad)
cetz.draw.content((-0.63, 0.88),angle:1.51rad,[p-k[3]])
cetz.draw.hobby((-0.57, 0.85),(-0.57, 0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:1.63rad)
cetz.draw.content((-0.39, 0.63),angle:1.63rad,[-k[3]])
cetz.draw.hobby((-0.45, 0.60),(-0.45, 0.65),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.49, 0.84),angle:2.45rad,[k[3]])
cetz.draw.hobby((-0.44, 0.87),(-0.46, 0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.29, 0.28),node3.pos,decoration:"arrow",angle:-1.83rad)
cetz.draw.content((-0.17, 0.25),angle:-1.83rad,[0])
cetz.draw.hobby((-0.29, 0.10),(-0.23, 0.27),(-0.19, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.23, 0.69),node5.pos,decoration:"arrow",angle:-1.36rad)
cetz.draw.content((-0.11, 0.71),angle:-1.36rad,[0])
cetz.draw.hobby((-0.18, 0.52),(-0.17, 0.70),(-0.25, 0.87),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, 0.57))
node(node0.pos)
let node1= (pos:(-0.42, -0.11))
node(node1.pos)
let node2= (pos:(-0.52, 0.82))
node(node2.pos)
let node3= (pos:(-0.66, 0.77))
node(node3.pos)
let node4= (pos:(-0.56, 0.26))
node(node4.pos)
let node5= (pos:(-0.54, 0.38))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.05rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(-0.34, 0.21),node1.pos,decoration:"arrow",angle:1.47rad)
edge(node0.pos,(-0.40, 0.40),node4.pos,decoration:"wave",angle:1.04rad)
edge(node5.pos,(-0.48, 0.11),node1.pos,decoration:"wave",angle:1.83rad)
edge(node3.pos,(-0.64, 0.88),node2.pos,decoration:"coil",angle:3.74rad)
edge(node4.pos,(-0.50, 0.00),decoration:"arrow",angle:1.79rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.48rad)
edge(node5.pos,(-0.55, 0.61),node2.pos,decoration:"arrow",angle:4.64rad)
edge(node4.pos,(-0.66, 0.52),node3.pos,decoration:"arrow",angle:4.90rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:4.37rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:0.95rad)
})
let embedding1f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, 0.74))
node(node0.pos)
let node1= (pos:(-0.64, 0.02))
node(node1.pos)
let node2= (pos:(-0.36, 0.20))
node(node2.pos)
let node3= (pos:(-0.48, 0.39))
node(node3.pos)
let node4= (pos:(-0.34, 0.77))
node(node4.pos)
let node5= (pos:(-0.67, 0.62))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.47rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.30rad)
edge(node0.pos,(-0.63, 0.38),node1.pos,decoration:"arrow",angle:1.46rad)
edge(node0.pos,(-0.45, 0.80),node4.pos,decoration:"wave",angle:3.24rad)
edge(node5.pos,(-0.70, 0.29),node1.pos,decoration:"wave",angle:1.65rad)
edge(node3.pos,(-0.36, 0.31),node2.pos,decoration:"coil",angle:2.04rad)
edge(node2.pos,(-0.31, 0.49),node4.pos,decoration:"arrow",angle:-1.58rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:0.95rad)
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:1.15rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:4.93rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:2.17rad)
edge(node3.pos,(-0.62, 0.49),node5.pos,decoration:"arrow",angle:5.35rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.11))
node(node0.pos)
let node1= (pos:(-0.51, 0.69))
node(node1.pos)
let node2= (pos:(-0.37, 0.67))
node(node2.pos)
let node3= (pos:(-0.60, 0.21))
node(node3.pos)
let node4= (pos:(-0.30, 0.23))
node(node4.pos)
let node5= (pos:(-0.66, 0.76))
node(node5.pos)
edge(node1.pos,(-0.46, 0.31),node0.pos,decoration:"arrow",angle:1.67rad)
cetz.draw.content((-0.34, 0.32),angle:1.67rad,[0])
cetz.draw.hobby((-0.44, 0.62),(-0.40, 0.29),(-0.37, -0.03),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.69rad)
cetz.draw.content((-0.62, 0.85),angle:4.69rad,[k[0]])
cetz.draw.hobby((-0.56, 0.90),(-0.56, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.77rad)
cetz.draw.content((-0.34, -0.33),angle:-1.77rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.22),(-0.42, -0.41),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, 0.03),node4.pos,decoration:"wave",angle:-1.95rad)
cetz.draw.content((-0.22, -0.01),angle:-1.95rad,[0])
cetz.draw.hobby((-0.35, -0.12),(-0.27, 0.02),(-0.24, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.56, 0.81),node1.pos,decoration:"wave",angle:2.87rad)
cetz.draw.content((-0.53, 0.92),angle:2.87rad,[0])
cetz.draw.hobby((-0.69, 0.82),(-0.52, 0.86),(-0.44, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:5.08rad)
cetz.draw.content((-0.55, 0.79),angle:5.08rad,[-p+k[3]])
cetz.draw.hobby((-0.52, 0.89),(-0.46, 0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:2.02rad)
cetz.draw.content((-0.44, 0.16),angle:2.02rad,[p-k[3]])
cetz.draw.hobby((-0.50, 0.15),(-0.49, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.30, 0.45),node4.pos,decoration:"arrow",angle:1.74rad)
cetz.draw.content((-0.18, 0.47),angle:1.74rad,[0])
cetz.draw.hobby((-0.30, 0.65),(-0.24, 0.46),(-0.23, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:0.91rad)
cetz.draw.content((-0.34, 0.51),angle:0.91rad,[-k[3]])
cetz.draw.hobby((-0.39, 0.54),(-0.39, 0.55),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:0.99rad)
cetz.draw.content((-0.68, 0.95),angle:0.99rad,[k[3]])
cetz.draw.hobby((-0.65, 0.87),(-0.61, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.45, 0.21),node3.pos,decoration:"arrow",angle:0.05rad)
cetz.draw.content((-0.44, 0.09),angle:0.05rad,[0])
cetz.draw.hobby((-0.32, 0.16),(-0.45, 0.15),(-0.57, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, 0.48),node5.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-0.78, 0.46),angle:4.82rad,[0])
cetz.draw.hobby((-0.68, 0.25),(-0.72, 0.48),(-0.72, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, 0.60))
node(node0.pos)
let node1= (pos:(-0.44, -0.10))
node(node1.pos)
let node2= (pos:(-0.61, 0.82))
node(node2.pos)
let node3= (pos:(-0.48, 0.59))
node(node3.pos)
let node4= (pos:(-0.30, 0.81))
node(node4.pos)
let node5= (pos:(-0.60, 0.37))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.15rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.72rad)
edge(node0.pos,(-0.36, 0.24),node1.pos,decoration:"arrow",angle:1.39rad)
edge(node0.pos,(-0.21, 0.70),node4.pos,decoration:"wave",angle:-1.61rad)
edge(node5.pos,(-0.53, 0.12),node1.pos,decoration:"wave",angle:1.90rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.17rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.53rad)
edge(node2.pos,(-0.46, 0.85),node4.pos,decoration:"arrow",angle:3.13rad)
edge(node5.pos,(-0.66, 0.59),node2.pos,decoration:"arrow",angle:4.73rad)
edge(node4.pos,(-0.41, 0.72),node3.pos,decoration:"arrow",angle:0.90rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:4.05rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:1.63rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.33, 0.03))
node(node0.pos)
let node1= (pos:(-0.37, 0.70))
node(node1.pos)
let node2= (pos:(-0.26, 0.39))
node(node2.pos)
let node3= (pos:(-0.16, 0.55))
node(node3.pos)
let node4= (pos:(-0.16, 0.25))
node(node4.pos)
let node5= (pos:(-0.27, 0.85))
node(node5.pos)
edge(node1.pos,(-0.38, 0.37),node0.pos,decoration:"arrow",angle:1.63rad)
cetz.draw.content((-0.50, 0.36),angle:1.63rad,[0])
cetz.draw.hobby((-0.44, 0.64),(-0.44, 0.36),(-0.40, 0.09),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.58rad)
cetz.draw.content((-0.47, 0.87),angle:4.58rad,[k[0]])
cetz.draw.hobby((-0.41, 0.91),(-0.42, 0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.58rad)
cetz.draw.content((-0.21, -0.15),angle:-1.58rad,[-k[0]])
cetz.draw.hobby((-0.27, -0.07),(-0.27, -0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.24, 0.13),node4.pos,decoration:"wave",angle:-2.25rad)
cetz.draw.content((-0.15, 0.05),angle:-2.25rad,[0])
cetz.draw.hobby((-0.27, 0.01),(-0.19, 0.10),(-0.13, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.34, 0.79),node1.pos,decoration:"wave",angle:0.98rad)
cetz.draw.content((-0.44, 0.85),angle:0.98rad,[0])
cetz.draw.hobby((-0.32, 0.89),(-0.39, 0.82),(-0.43, 0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.22, 0.48),node2.pos,decoration:"coil",angle:0.99rad)
cetz.draw.content((-0.32, 0.55),angle:0.99rad,[0])
cetz.draw.hobby((-0.21, 0.58),(-0.27, 0.51),(-0.31, 0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.22, 0.31),node4.pos,decoration:"arrow",angle:2.19rad)
cetz.draw.content((-0.32, 0.24),angle:2.19rad,[0])
cetz.draw.hobby((-0.31, 0.35),(-0.27, 0.28),(-0.22, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.33, 0.33),decoration:"arrow",angle:0.67rad)
cetz.draw.content((-0.22, 0.27),angle:0.67rad,[-p])
cetz.draw.hobby((-0.22, 0.35),(-0.30, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.33, 1.00),decoration:"arrow",angle:1.96rad)
cetz.draw.content((-0.41, 0.88),angle:1.96rad,[p])
cetz.draw.hobby((-0.37, 0.92),(-0.35, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.13, 0.40),node3.pos,decoration:"arrow",angle:-1.58rad)
cetz.draw.content((-0.01, 0.40),angle:-1.58rad,[0])
cetz.draw.hobby((-0.09, 0.26),(-0.07, 0.40),(-0.09, 0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.71),node5.pos,decoration:"arrow",angle:-1.21rad)
cetz.draw.content((-0.09, 0.75),angle:-1.21rad,[0])
cetz.draw.hobby((-0.11, 0.60),(-0.14, 0.73),(-0.20, 0.85),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node1.pos,(0.91, 0.93),node0.pos,decoration:"arrow",angle:4.41rad)
cetz.draw.content((0.79, 0.97),angle:4.41rad,[0])
cetz.draw.hobby((5.57, 8.20),(32.14, -7.30),(1.56, -10.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.07, 0.23),angle:5.35rad,[k[0]])
cetz.draw.hobby((-0.49, 0.88),(0.44, -0.36),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.05, -0.76),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.35, -0.81),(-0.42, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((0.18, -0.39),angle:4.79rad,[0])
cetz.draw.hobby((0.35, -0.73),(0.24, -0.27),(0.42, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.65, -0.57),angle:-1.79rad,[0])
cetz.draw.hobby((-0.02, 0.21),(-0.57, -0.75),(0.53, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.81rad)
cetz.draw.content((-0.60, 0.82),angle:4.81rad,[k[2]])
cetz.draw.hobby((-0.55, 0.89),(-0.54, 0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:5.99rad)
cetz.draw.content((-0.21, -0.21),angle:5.99rad,[-k[2]])
cetz.draw.hobby((0.03, -0.22),(-0.42, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:6.00rad)
cetz.draw.content((-0.01, 0.23),angle:6.00rad,[-p-k[2]])
cetz.draw.hobby((-0.42, 0.41),(0.43, 0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.67rad)
cetz.draw.content((-0.60, 0.82),angle:1.67rad,[p+k[2]])
cetz.draw.hobby((-0.54, 0.76),(-0.55, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, -0.57),node2.pos,decoration:"arrow",angle:1.60rad)
cetz.draw.content((0.57, -0.56),angle:1.60rad,[0])
cetz.draw.hobby((0.51, -0.65),(-1.78, -1.71),(-1.22, 0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.97, -0.14),node3.pos,decoration:"arrow",angle:2.54rad)
cetz.draw.content((-1.04, -0.24),angle:2.54rad,[0])
cetz.draw.hobby((0.75, 0.79),(-1.15, 1.54),(-0.45, -0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:1.88rad)
cetz.draw.content((0.38, 0.82),angle:1.88rad,[0])
cetz.draw.hobby((-0.36, -0.71),(-1.99, 0.94),(0.32, 0.79),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, 0.69))
node(node0.pos)
let node1= (pos:(-0.34, 0.04))
node(node1.pos)
let node2= (pos:(-0.20, 0.57))
node(node2.pos)
let node3= (pos:(-0.27, 0.87))
node(node3.pos)
let node4= (pos:(-0.16, 0.75))
node(node4.pos)
let node5= (pos:(-0.26, 0.28))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.59rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.55rad)
edge(node0.pos,(-0.38, 0.38),node1.pos,decoration:"arrow",angle:1.61rad)
edge(node0.pos,(-0.28, 0.73),node4.pos,decoration:"wave",angle:3.44rad)
edge(node5.pos,(-0.30, 0.16),node1.pos,decoration:"wave",angle:1.23rad)
edge(node3.pos,(-0.24, 0.71),node2.pos,decoration:"coil",angle:1.81rad)
edge(node2.pos,(-0.14, 0.65),node4.pos,decoration:"arrow",angle:-1.81rad)
edge(node5.pos,(-0.22, 0.42),node2.pos,decoration:"arrow",angle:-1.78rad)
edge(node4.pos,(-0.18, 0.85),node3.pos,decoration:"arrow",angle:-0.79rad)
edge(node5.pos,(-0.33, 0.33),decoration:"arrow",angle:5.69rad)
edge(node3.pos,(-0.33, 1.00),decoration:"arrow",angle:2.04rad)
})
let embedding3f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, 0.65))
node(node0.pos)
let node1= (pos:(-0.39, -0.11))
node(node1.pos)
let node2= (pos:(-0.40, 0.81))
node(node2.pos)
let node3= (pos:(-0.55, 0.25))
node(node3.pos)
let node4= (pos:(-0.32, 0.96))
node(node4.pos)
let node5= (pos:(-0.27, 0.32))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.88rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.84rad)
edge(node0.pos,(-0.41, 0.24),node1.pos,decoration:"arrow",angle:1.63rad)
edge(node0.pos,(-0.30, 0.75),node4.pos,decoration:"wave",angle:-2.04rad)
edge(node5.pos,(-0.31, 0.08),node1.pos,decoration:"wave",angle:1.27rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:5.22rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.76rad)
edge(node2.pos,(-0.25, 0.87),node4.pos,decoration:"arrow",angle:-1.53rad)
edge(node5.pos,(-0.30, 0.56),node2.pos,decoration:"arrow",angle:-1.34rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:4.52rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:2.90rad)
edge(node3.pos,(-0.41, 0.31),node5.pos,decoration:"arrow",angle:3.37rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.10))
node(node0.pos)
let node1= (pos:(-0.66, 0.65))
node(node1.pos)
let node2= (pos:(-0.35, 0.23))
node(node2.pos)
let node3= (pos:(-0.39, 0.76))
node(node3.pos)
let node4= (pos:(-0.54, 0.29))
node(node4.pos)
let node5= (pos:(-0.64, 0.90))
node(node5.pos)
edge(node1.pos,(-0.69, 0.27),node0.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((-0.81, 0.27),angle:1.61rad,[0])
cetz.draw.hobby((-0.73, 0.59),(-0.75, 0.27),(-0.70, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.29rad)
cetz.draw.content((-0.69, 0.87),angle:4.29rad,[k[0]])
cetz.draw.hobby((-0.60, 0.93),(-0.67, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.28rad)
cetz.draw.content((-0.45, -0.27),angle:-1.28rad,[-k[0]])
cetz.draw.hobby((-0.53, -0.18),(-0.47, -0.39),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.60, 0.08),node4.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.72, 0.10),angle:4.52rad,[0])
cetz.draw.hobby((-0.68, -0.06),(-0.66, 0.11),(-0.61, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.72, 0.78),node1.pos,decoration:"wave",angle:1.51rad)
cetz.draw.content((-0.84, 0.79),angle:1.51rad,[0])
cetz.draw.hobby((-0.70, 0.93),(-0.78, 0.78),(-0.72, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.34, 0.50),node2.pos,decoration:"coil",angle:1.64rad)
cetz.draw.content((-0.22, 0.51),angle:1.64rad,[0])
cetz.draw.hobby((-0.32, 0.72),(-0.28, 0.50),(-0.28, 0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, 0.20),node4.pos,decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.48, 0.08),angle:6.06rad,[0])
cetz.draw.hobby((-0.33, 0.17),(-0.48, 0.14),(-0.59, 0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.00rad)
cetz.draw.content((-0.32, 0.05),angle:1.00rad,[-k[3]])
cetz.draw.hobby((-0.40, 0.05),(-0.35, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:0.63rad)
cetz.draw.content((-0.64, 1.05),angle:0.63rad,[k[3]])
cetz.draw.hobby((-0.59, 1.01),(-0.62, 0.99),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.55, 0.83),angle:5.15rad,[-p+k[3]])
cetz.draw.hobby((-0.51, 0.88),(-0.48, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:1.38rad)
cetz.draw.content((-0.64, 0.42),angle:1.38rad,[p-k[3]])
cetz.draw.hobby((-0.58, 0.40),(-0.58, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.83),node5.pos,decoration:"arrow",angle:-0.51rad)
cetz.draw.content((-0.45, 0.94),angle:-0.51rad,[0])
cetz.draw.hobby((-0.38, 0.83),(-0.48, 0.89),(-0.59, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, 0.75))
node(node0.pos)
let node1= (pos:(-0.62, 0.06))
node(node1.pos)
let node2= (pos:(-0.42, 0.25))
node(node2.pos)
let node3= (pos:(-0.23, 0.56))
node(node3.pos)
let node4= (pos:(-0.35, 0.88))
node(node4.pos)
let node5= (pos:(-0.50, 0.65))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.23rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.36rad)
edge(node0.pos,(-0.67, 0.41),node1.pos,decoration:"arrow",angle:1.59rad)
edge(node0.pos,(-0.50, 0.83),node4.pos,decoration:"wave",angle:3.60rad)
edge(node5.pos,(-0.57, 0.34),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.29, 0.38),node2.pos,decoration:"coil",angle:1.01rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:5.61rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.89rad)
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:5.04rad)
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:1.56rad)
edge(node4.pos,(-0.24, 0.74),node3.pos,decoration:"arrow",angle:1.94rad)
edge(node3.pos,(-0.36, 0.60),node5.pos,decoration:"arrow",angle:5.96rad)
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.59, 0.61),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
edge(node3.pos,(0.82, -0.83),node2.pos,decoration:"coil",angle:2.48rad)
edge(node2.pos,(0.14, 0.76),node4.pos,decoration:"arrow",angle:2.79rad)
edge(node5.pos,(0.45, -0.57),node2.pos,decoration:"arrow",angle:1.60rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node4.pos,(-0.50, 0.00),decoration:"arrow",angle:-2.95rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:5.77rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:2.07rad)
})
let embedding4f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, 0.72))
node(node0.pos)
let node1= (pos:(-0.33, 0.08))
node(node1.pos)
let node2= (pos:(-0.24, 0.81))
node(node2.pos)
let node3= (pos:(-0.29, 0.42))
node(node3.pos)
let node4= (pos:(-0.32, 0.63))
node(node4.pos)
let node5= (pos:(-0.16, 0.42))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.46rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.59rad)
edge(node0.pos,(-0.40, 0.39),node1.pos,decoration:"arrow",angle:1.70rad)
edge(node0.pos,(-0.41, 0.64),node4.pos,decoration:"wave",angle:2.17rad)
edge(node5.pos,(-0.24, 0.23),node1.pos,decoration:"wave",angle:1.11rad)
edge(node2.pos,(-0.33, 1.00),decoration:"coil",angle:5.16rad)
edge(node3.pos,(-0.33, 0.33),decoration:"coil",angle:1.14rad)
edge(node2.pos,(-0.27, 0.72),node4.pos,decoration:"arrow",angle:1.19rad)
edge(node5.pos,(-0.18, 0.62),node2.pos,decoration:"arrow",angle:-1.37rad)
edge(node4.pos,(-0.32, 0.52),node3.pos,decoration:"arrow",angle:1.70rad)
edge(node3.pos,(-0.22, 0.37),node5.pos,decoration:"arrow",angle:-3.03rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.15))
node(node0.pos)
let node1= (pos:(-0.37, 0.64))
node(node1.pos)
let node2= (pos:(-0.62, 0.83))
node(node2.pos)
let node3= (pos:(-0.64, 0.46))
node(node3.pos)
let node4= (pos:(-0.54, 0.11))
node(node4.pos)
let node5= (pos:(-0.35, 0.90))
node(node5.pos)
edge(node1.pos,(-0.36, 0.25),node0.pos,decoration:"arrow",angle:1.52rad)
cetz.draw.content((-0.24, 0.24),angle:1.52rad,[0])
cetz.draw.hobby((-0.30, 0.56),(-0.31, 0.24),(-0.34, -0.08),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.07rad)
cetz.draw.content((-0.55, 0.78),angle:5.07rad,[k[0]])
cetz.draw.hobby((-0.52, 0.89),(-0.46, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.82rad)
cetz.draw.content((-0.34, -0.35),angle:-1.82rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.26),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, -0.01),node4.pos,decoration:"wave",angle:-1.23rad)
cetz.draw.content((-0.29, 0.03),angle:-1.23rad,[0])
cetz.draw.hobby((-0.34, -0.13),(-0.36, 0.04),(-0.48, 0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.29, 0.77),node1.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((-0.17, 0.76),angle:1.50rad,[0])
cetz.draw.hobby((-0.28, 0.92),(-0.23, 0.76),(-0.30, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.65),node2.pos,decoration:"coil",angle:4.67rad)
cetz.draw.content((-0.79, 0.65),angle:4.67rad,[0])
cetz.draw.hobby((-0.71, 0.48),(-0.73, 0.65),(-0.69, 0.82),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.00),decoration:"arrow",angle:1.89rad)
cetz.draw.content((-0.40, 0.09),angle:1.89rad,[-p-q-k[3]])
cetz.draw.hobby((-0.47, 0.11),(-0.45, 0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:0.95rad)
cetz.draw.content((-0.66, 0.99),angle:0.95rad,[p+q+k[3]])
cetz.draw.hobby((-0.61, 0.95),(-0.61, 0.95),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.48, 0.85),node2.pos,decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.45, 0.73),angle:0.25rad,[0])
cetz.draw.hobby((-0.35, 0.84),(-0.47, 0.79),(-0.59, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.61, 0.28),node3.pos,decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.72, 0.25),angle:4.99rad,[0])
cetz.draw.hobby((-0.61, 0.12),(-0.66, 0.26),(-0.69, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.49, 0.85),angle:5.71rad,[q+k[3]])
cetz.draw.hobby((-0.45, 0.90),(-0.47, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.60, 0.60),angle:0.27rad,[-q-k[3]])
cetz.draw.hobby((-0.56, 0.55),(-0.61, 0.53),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.59, 0.61),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
edge(node3.pos,(0.82, -0.83),node2.pos,decoration:"coil",angle:2.48rad)
edge(node4.pos,(-0.50, 0.00),decoration:"arrow",angle:0.19rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.67rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.81rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:2.63rad)
edge(node4.pos,(-0.97, -0.14),node3.pos,decoration:"arrow",angle:2.54rad)
edge(node3.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:1.88rad)
})
let embedding5f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, 0.75))
node(node0.pos)
let node1= (pos:(-0.62, 0.06))
node(node1.pos)
let node2= (pos:(-0.22, 0.56))
node(node2.pos)
let node3= (pos:(-0.41, 0.25))
node(node3.pos)
let node4= (pos:(-0.35, 0.88))
node(node4.pos)
let node5= (pos:(-0.50, 0.65))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.24rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.37rad)
edge(node0.pos,(-0.67, 0.41),node1.pos,decoration:"arrow",angle:1.59rad)
edge(node0.pos,(-0.50, 0.83),node4.pos,decoration:"wave",angle:3.60rad)
edge(node5.pos,(-0.57, 0.34),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.29, 0.38),node2.pos,decoration:"coil",angle:-2.13rad)
edge(node2.pos,(-0.24, 0.74),node4.pos,decoration:"arrow",angle:-1.19rad)
edge(node5.pos,(-0.36, 0.60),node2.pos,decoration:"arrow",angle:2.81rad)
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:1.24rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:2.47rad)
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:4.72rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:1.91rad)
})
let embedding5f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, 0.72))
node(node0.pos)
let node1= (pos:(-0.33, 0.08))
node(node1.pos)
let node2= (pos:(-0.29, 0.42))
node(node2.pos)
let node3= (pos:(-0.24, 0.81))
node(node3.pos)
let node4= (pos:(-0.32, 0.63))
node(node4.pos)
let node5= (pos:(-0.16, 0.42))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.47rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.59rad)
edge(node0.pos,(-0.40, 0.39),node1.pos,decoration:"arrow",angle:1.70rad)
edge(node0.pos,(-0.41, 0.64),node4.pos,decoration:"wave",angle:2.16rad)
edge(node5.pos,(-0.24, 0.23),node1.pos,decoration:"wave",angle:1.11rad)
edge(node2.pos,(-0.33, 0.33),decoration:"coil",angle:1.11rad)
edge(node3.pos,(-0.33, 1.00),decoration:"coil",angle:5.16rad)
edge(node2.pos,(-0.31, 0.52),node4.pos,decoration:"arrow",angle:4.85rad)
edge(node5.pos,(-0.22, 0.37),node2.pos,decoration:"arrow",angle:0.13rad)
edge(node4.pos,(-0.27, 0.72),node3.pos,decoration:"arrow",angle:-1.95rad)
edge(node3.pos,(-0.18, 0.62),node5.pos,decoration:"arrow",angle:1.78rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, -0.08))
node(node0.pos)
let node1= (pos:(-0.38, 0.67))
node(node1.pos)
let node2= (pos:(-0.55, 0.83))
node(node2.pos)
let node3= (pos:(-0.62, 0.46))
node(node3.pos)
let node4= (pos:(-0.46, 0.37))
node(node4.pos)
let node5= (pos:(-0.74, 0.69))
node(node5.pos)
edge(node1.pos,(-0.34, 0.27),node0.pos,decoration:"arrow",angle:1.54rad)
cetz.draw.content((-0.22, 0.27),angle:1.54rad,[0])
cetz.draw.hobby((-0.31, 0.60),(-0.28, 0.29),(-0.32, -0.02),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.05rad)
cetz.draw.content((-0.55, 0.79),angle:5.05rad,[k[0]])
cetz.draw.hobby((-0.52, 0.89),(-0.47, 0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.82rad)
cetz.draw.content((-0.33, -0.32),angle:-1.82rad,[-k[0]])
cetz.draw.hobby((-0.36, -0.19),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.43, 0.13),node4.pos,decoration:"wave",angle:4.85rad)
cetz.draw.content((-0.54, 0.11),angle:4.85rad,[0])
cetz.draw.hobby((-0.46, -0.05),(-0.49, 0.13),(-0.51, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.56, 0.67),node1.pos,decoration:"wave",angle:3.08rad)
cetz.draw.content((-0.56, 0.55),angle:3.08rad,[0])
cetz.draw.hobby((-0.70, 0.62),(-0.56, 0.61),(-0.42, 0.61),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.42rad)
cetz.draw.content((-0.64, 0.95),angle:4.42rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.59, 0.92),(-0.58, 0.94),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.82rad)
cetz.draw.content((-0.44, 0.26),angle:1.82rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.54, 0.38),(-0.47, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.61),node4.pos,decoration:"arrow",angle:1.77rad)
cetz.draw.content((-0.39, 0.63),angle:1.77rad,[0])
cetz.draw.hobby((-0.48, 0.80),(-0.44, 0.61),(-0.41, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.70, 0.82),node2.pos,decoration:"arrow",angle:3.84rad)
cetz.draw.content((-0.78, 0.91),angle:3.84rad,[0])
cetz.draw.hobby((-0.80, 0.71),(-0.73, 0.87),(-0.56, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:4.49rad)
cetz.draw.content((-0.68, 0.76),angle:4.49rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.58, 0.92),(-0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:1.88rad)
cetz.draw.content((-0.59, 0.40),angle:1.88rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.55, 0.45),(-0.53, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.74, 0.54),node5.pos,decoration:"arrow",angle:5.18rad)
cetz.draw.content((-0.85, 0.49),angle:5.18rad,[0])
cetz.draw.hobby((-0.66, 0.41),(-0.80, 0.51),(-0.81, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, 0.74))
node(node0.pos)
let node1= (pos:(-0.40, -0.11))
node(node1.pos)
let node2= (pos:(-0.44, 0.63))
node(node2.pos)
let node3= (pos:(-0.60, 0.22))
node(node3.pos)
let node4= (pos:(-0.62, 0.76))
node(node4.pos)
let node5= (pos:(-0.31, 0.20))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.11rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.82rad)
edge(node0.pos,(-0.40, 0.33),node1.pos,decoration:"arrow",angle:1.56rad)
edge(node0.pos,(-0.50, 0.81),node4.pos,decoration:"wave",angle:-0.11rad)
edge(node5.pos,(-0.32, 0.03),node1.pos,decoration:"wave",angle:1.27rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.88rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:2.00rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:4.24rad)
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:-2.01rad)
edge(node5.pos,(-0.34, 0.43),node2.pos,decoration:"arrow",angle:-1.29rad)
edge(node4.pos,(-0.64, 0.49),node3.pos,decoration:"arrow",angle:1.61rad)
edge(node3.pos,(-0.46, 0.21),node5.pos,decoration:"arrow",angle:3.08rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, -0.09))
node(node0.pos)
let node1= (pos:(-0.34, 0.66))
node(node1.pos)
let node2= (pos:(-0.58, 0.79))
node(node2.pos)
let node3= (pos:(-0.56, 0.21))
node(node3.pos)
let node4= (pos:(-0.54, 0.34))
node(node4.pos)
let node5= (pos:(-0.34, 0.93))
node(node5.pos)
edge(node1.pos,(-0.33, 0.28),node0.pos,decoration:"arrow",angle:1.50rad)
cetz.draw.content((-0.21, 0.28),angle:1.50rad,[0])
cetz.draw.hobby((-0.27, 0.59),(-0.27, 0.28),(-0.32, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.53, 0.78),angle:5.15rad,[k[0]])
cetz.draw.hobby((-0.51, 0.88),(-0.44, 0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.82rad)
cetz.draw.content((-0.33, -0.33),angle:-1.82rad,[-k[0]])
cetz.draw.hobby((-0.36, -0.21),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.44, 0.10),node4.pos,decoration:"wave",angle:-1.27rad)
cetz.draw.content((-0.33, 0.13),angle:-1.27rad,[0])
cetz.draw.hobby((-0.34, -0.04),(-0.39, 0.15),(-0.47, 0.33),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, 0.79),node1.pos,decoration:"wave",angle:1.55rad)
cetz.draw.content((-0.15, 0.79),angle:1.55rad,[0])
cetz.draw.hobby((-0.27, 0.95),(-0.21, 0.79),(-0.28, 0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.35rad)
cetz.draw.content((-0.65, 0.94),angle:4.35rad,[-p-q-k[3]])
cetz.draw.hobby((-0.59, 0.93),(-0.60, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.83rad)
cetz.draw.content((-0.41, 0.14),angle:1.83rad,[p+q+k[3]])
cetz.draw.hobby((-0.47, 0.13),(-0.47, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.59, 0.57),node4.pos,decoration:"arrow",angle:1.65rad)
cetz.draw.content((-0.71, 0.56),angle:1.65rad,[0])
cetz.draw.hobby((-0.65, 0.75),(-0.65, 0.56),(-0.61, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, 0.85),node2.pos,decoration:"arrow",angle:0.52rad)
cetz.draw.content((-0.40, 0.75),angle:0.52rad,[0])
cetz.draw.hobby((-0.33, 0.86),(-0.43, 0.80),(-0.53, 0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.45, 0.27),node3.pos,decoration:"arrow",angle:1.45rad)
cetz.draw.content((-0.33, 0.25),angle:1.45rad,[0])
cetz.draw.hobby((-0.51, 0.41),(-0.39, 0.26),(-0.53, 0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.47, 0.85),angle:5.87rad,[q+k[3]])
cetz.draw.hobby((-0.43, 0.90),(-0.45, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:1.38rad)
cetz.draw.content((-0.65, 0.38),angle:1.38rad,[-q-k[3]])
cetz.draw.hobby((-0.60, 0.32),(-0.58, 0.41),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, 0.04))
node(node0.pos)
let node1= (pos:(-0.37, 0.68))
node(node1.pos)
let node2= (pos:(-0.21, 0.58))
node(node2.pos)
let node3= (pos:(-0.27, 0.88))
node(node3.pos)
let node4= (pos:(-0.26, 0.29))
node(node4.pos)
let node5= (pos:(-0.15, 0.74))
node(node5.pos)
edge(node1.pos,(-0.38, 0.37),node0.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((-0.50, 0.37),angle:1.61rad,[0])
cetz.draw.hobby((-0.43, 0.62),(-0.44, 0.36),(-0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.60rad)
cetz.draw.content((-0.47, 0.86),angle:4.60rad,[k[0]])
cetz.draw.hobby((-0.40, 0.91),(-0.42, 0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.55rad)
cetz.draw.content((-0.22, -0.14),angle:-1.55rad,[-k[0]])
cetz.draw.hobby((-0.28, -0.06),(-0.28, -0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.30, 0.16),node4.pos,decoration:"wave",angle:-1.91rad)
cetz.draw.content((-0.18, 0.12),angle:-1.91rad,[0])
cetz.draw.hobby((-0.28, 0.04),(-0.24, 0.14),(-0.21, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, 0.70),node1.pos,decoration:"wave",angle:0.23rad)
cetz.draw.content((-0.24, 0.58),angle:0.23rad,[0])
cetz.draw.hobby((-0.15, 0.67),(-0.24, 0.64),(-0.34, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.25, 0.74),node2.pos,decoration:"coil",angle:1.75rad)
cetz.draw.content((-0.37, 0.72),angle:1.75rad,[0])
cetz.draw.hobby((-0.33, 0.85),(-0.31, 0.72),(-0.27, 0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.23, 0.43),node4.pos,decoration:"arrow",angle:1.40rad)
cetz.draw.content((-0.11, 0.41),angle:1.40rad,[0])
cetz.draw.hobby((-0.15, 0.54),(-0.17, 0.42),(-0.19, 0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, 0.64),node2.pos,decoration:"arrow",angle:1.24rad)
cetz.draw.content((-0.02, 0.60),angle:1.24rad,[0])
cetz.draw.hobby((-0.09, 0.75),(-0.08, 0.62),(-0.16, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.33, 1.00),decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.40, 0.88),angle:5.22rad,[-p])
cetz.draw.hobby((-0.34, 0.88),(-0.37, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),decoration:"arrow",angle:2.57rad)
cetz.draw.content((-0.36, 0.21),angle:2.57rad,[p])
cetz.draw.hobby((-0.38, 0.29),(-0.28, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.18, 0.84),node5.pos,decoration:"arrow",angle:2.27rad)
cetz.draw.content((-0.09, 0.92),angle:2.27rad,[0])
cetz.draw.hobby((-0.23, 0.94),(-0.13, 0.87),(-0.09, 0.76),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.59, 0.61),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.81rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:5.99rad)
edge(node2.pos,(0.14, 0.76),node4.pos,decoration:"arrow",angle:2.79rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.81rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:2.63rad)
edge(node4.pos,(-0.97, -0.14),node3.pos,decoration:"arrow",angle:2.54rad)
edge(node3.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:1.88rad)
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, 0.70))
node(node0.pos)
let node1= (pos:(-0.33, 0.03))
node(node1.pos)
let node2= (pos:(-0.26, 0.39))
node(node2.pos)
let node3= (pos:(-0.16, 0.55))
node(node3.pos)
let node4= (pos:(-0.27, 0.85))
node(node4.pos)
let node5= (pos:(-0.16, 0.24))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.58rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.58rad)
edge(node0.pos,(-0.38, 0.37),node1.pos,decoration:"arrow",angle:1.63rad)
edge(node0.pos,(-0.34, 0.79),node4.pos,decoration:"wave",angle:4.12rad)
edge(node5.pos,(-0.24, 0.13),node1.pos,decoration:"wave",angle:0.89rad)
edge(node3.pos,(-0.22, 0.48),node2.pos,decoration:"coil",angle:1.00rad)
edge(node4.pos,(-0.33, 1.00),decoration:"arrow",angle:5.11rad)
edge(node2.pos,(-0.33, 0.33),decoration:"arrow",angle:-2.50rad)
edge(node5.pos,(-0.22, 0.31),node2.pos,decoration:"arrow",angle:5.32rad)
edge(node4.pos,(-0.20, 0.71),node3.pos,decoration:"arrow",angle:1.94rad)
edge(node3.pos,(-0.13, 0.40),node5.pos,decoration:"arrow",angle:1.55rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.17))
node(node0.pos)
let node1= (pos:(-0.64, 0.62))
node(node1.pos)
let node2= (pos:(-0.31, 0.46))
node(node2.pos)
let node3= (pos:(-0.39, 0.75))
node(node3.pos)
let node4= (pos:(-0.37, 0.06))
node(node4.pos)
let node5= (pos:(-0.54, 0.81))
node(node5.pos)
edge(node1.pos,(-0.61, 0.22),node0.pos,decoration:"arrow",angle:1.69rad)
cetz.draw.content((-0.73, 0.21),angle:1.69rad,[0])
cetz.draw.hobby((-0.69, 0.54),(-0.67, 0.22),(-0.62, -0.10),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.37rad)
cetz.draw.content((-0.68, 0.85),angle:4.37rad,[k[0]])
cetz.draw.hobby((-0.59, 0.93),(-0.66, 0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.44rad)
cetz.draw.content((-0.40, -0.32),angle:-1.44rad,[-k[0]])
cetz.draw.hobby((-0.47, -0.26),(-0.45, -0.39),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, -0.09),node4.pos,decoration:"wave",angle:-2.24rad)
cetz.draw.content((-0.32, -0.17),angle:-2.24rad,[0])
cetz.draw.hobby((-0.49, -0.22),(-0.36, -0.12),(-0.31, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.75),node1.pos,decoration:"wave",angle:1.17rad)
cetz.draw.content((-0.78, 0.80),angle:1.17rad,[0])
cetz.draw.hobby((-0.57, 0.87),(-0.72, 0.78),(-0.70, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.28, 0.62),node2.pos,decoration:"coil",angle:1.83rad)
cetz.draw.content((-0.17, 0.65),angle:1.83rad,[0])
cetz.draw.hobby((-0.33, 0.78),(-0.23, 0.64),(-0.24, 0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.32, 0.26),node4.pos,decoration:"arrow",angle:1.41rad)
cetz.draw.content((-0.21, 0.24),angle:1.41rad,[0])
cetz.draw.hobby((-0.25, 0.42),(-0.27, 0.25),(-0.30, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.43, 0.61),node2.pos,decoration:"arrow",angle:2.19rad)
cetz.draw.content((-0.53, 0.54),angle:2.19rad,[0])
cetz.draw.hobby((-0.58, 0.74),(-0.49, 0.59),(-0.38, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:5.12rad)
cetz.draw.content((-0.55, 0.82),angle:5.12rad,[-p-q-k[3]])
cetz.draw.hobby((-0.52, 0.88),(-0.48, 0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.00),decoration:"arrow",angle:-2.68rad)
cetz.draw.content((-0.38, -0.08),angle:-2.68rad,[p+q+k[3]])
cetz.draw.hobby((-0.43, -0.03),(-0.38, -0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:4.49rad)
cetz.draw.content((-0.64, 0.93),angle:4.49rad,[q+k[3]])
cetz.draw.hobby((-0.58, 0.92),(-0.58, 0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:-1.99rad)
cetz.draw.content((-0.34, 0.57),angle:-1.99rad,[-q-k[3]])
cetz.draw.hobby((-0.38, 0.63),(-0.40, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.44, 0.71))
node(node0.pos)
let node1= (pos:(-0.40, 0.02))
node(node1.pos)
let node2= (pos:(-0.57, 0.19))
node(node2.pos)
let node3= (pos:(-0.34, 0.52))
node(node3.pos)
let node4= (pos:(-0.31, 0.90))
node(node4.pos)
let node5= (pos:(-0.61, 0.60))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.90rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.76rad)
edge(node0.pos,(-0.37, 0.35),node1.pos,decoration:"arrow",angle:1.61rad)
edge(node0.pos,(-0.41, 0.83),node4.pos,decoration:"wave",angle:4.08rad)
edge(node5.pos,(-0.52, 0.31),node1.pos,decoration:"wave",angle:1.91rad)
edge(node3.pos,(-0.44, 0.33),node2.pos,decoration:"coil",angle:0.96rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:5.78rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.21rad)
edge(node5.pos,(-0.64, 0.40),node2.pos,decoration:"arrow",angle:1.65rad)
edge(node4.pos,(-0.26, 0.71),node3.pos,decoration:"arrow",angle:1.50rad)
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:4.45rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:-3.02rad)
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, 0.61))
node(node0.pos)
let node1= (pos:(-0.43, -0.14))
node(node1.pos)
let node2= (pos:(-0.35, 0.90))
node(node2.pos)
let node3= (pos:(-0.60, 0.74))
node(node3.pos)
let node4= (pos:(-0.29, 0.61))
node(node4.pos)
let node5= (pos:(-0.55, 0.16))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.88rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.76rad)
edge(node0.pos,(-0.41, 0.24),node1.pos,decoration:"arrow",angle:1.58rad)
edge(node0.pos,(-0.33, 0.51),node4.pos,decoration:"wave",angle:-2.77rad)
edge(node5.pos,(-0.42, 0.03),node1.pos,decoration:"wave",angle:1.90rad)
edge(node3.pos,(-0.49, 0.84),node2.pos,decoration:"coil",angle:3.73rad)
edge(node2.pos,(-0.26, 0.78),node4.pos,decoration:"arrow",angle:1.81rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:5.70rad)
edge(node5.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.27rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:4.35rad)
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:-2.64rad)
edge(node3.pos,(-0.60, 0.44),node5.pos,decoration:"arrow",angle:1.66rad)
})
[= embedding 1 [2, -2, -2, -4] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 +2-3-10+11-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 +0-1-10+11-16+17],box[#embedding1f1 +0-1-12+13-14+15],)
pagebreak()
[= embedding 2 [2, 0, -4, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 +2-3+8-9-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 +0-1+8-9-16+17],)
pagebreak()
[= embedding 3 [2, 0, -2, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 +2-3-12+13],box[#embedding3i1 +2-3+8-9-10+11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p-q]^-1 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 +0-1-16+17],box[#embedding3f1 +0-1+8-9-14+15],)
pagebreak()
[= embedding 4 [2, 0, -2, 0] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 +2-3-12+13+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 +0-1+10-11-12+13],box[#embedding4f1 +0-1+14-15-16+17],box[#embedding4f2 +0-1+8-9],)
pagebreak()
[= embedding 5 [2, 0, 2, 0] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 +2-3-10+11+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 +0-1-10+11+12-13],box[#embedding5f1 +0-1-14+15+16-17],box[#embedding5f2 +0-1-8+9],)
pagebreak()
[= embedding 6 [2, 2, -2, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1
	+4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	-(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 +2-3+8-9+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p+q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 +0-1+8-9+10-11],)
pagebreak()
[= embedding 7 [2, 2, 0, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 +2-3+8-9+16-17],box[#embedding7i1 +2-3+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 +0-1+8-9+12-13],box[#embedding7f1 +0-1+10-11],)
pagebreak()
[= embedding 8 [2, 2, 2, 4] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 +2-3+14-15+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 +0-1+10-11+16-17],box[#embedding8f1 +0-1+12-13+14-15],)
pagebreak()
}