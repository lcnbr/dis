#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.84))
node(node0.pos)
let node1= (pos:(0.46, -0.68))
node(node1.pos)
let node2= (pos:(0.08, 0.06))
node(node2.pos)
let node3= (pos:(0.44, 0.60))
node(node3.pos)
let node4= (pos:(-0.60, -0.15))
node(node4.pos)
let node5= (pos:(0.07, 0.49))
node(node5.pos)
edge(node1.pos,(-0.04, -0.80),node0.pos,decoration:"arrow",angle:0.16rad)
cetz.draw.content((-0.02, -0.92),angle:0.16rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.77),(-0.03, -0.86),(-0.44, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.79, -0.74),angle:5.75rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.57, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.73, -1.03),angle:0.33rad,[k[0]])
cetz.draw.hobby((-0.62, -0.93),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.59, -0.51),node4.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.71, -0.52),angle:1.65rad,[q])
cetz.draw.hobby((-0.61, -0.78),(-0.65, -0.50),(-0.66, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.32, -0.13),node1.pos,decoration:"wave",angle:-1.27rad)
cetz.draw.content((0.44, -0.10),angle:-1.27rad,[q])
cetz.draw.hobby((0.18, 0.41),(0.36, -0.06),(0.49, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, 0.29),node2.pos,decoration:"coil",angle:-2.13rad)
cetz.draw.content((0.45, 0.23),angle:-2.13rad,[p-q-3 k[3]])
cetz.draw.hobby((0.50, 0.53),(0.39, 0.25),(0.18, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:3.56rad)
cetz.draw.content((-0.75, -0.35),angle:3.56rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.67, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.59, -0.03),angle:2.74rad,[p-q-2 k[3]])
cetz.draw.hobby((0.20, 0.07),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:9.18rad)
cetz.draw.content((-0.49, 0.08),angle:9.18rad,[k[3]])
cetz.draw.hobby((-0.92, 0.25),(-0.03, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.97rad)
cetz.draw.content((0.55, 0.53),angle:2.97rad,[k[3]])
cetz.draw.hobby((0.18, 0.54),(0.91, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.17, 0.25),node3.pos,decoration:"arrow",angle:3.79rad)
cetz.draw.content((-0.24, 0.34),angle:3.79rad,[p-2 k[3]])
cetz.draw.hobby((-0.55, -0.02),(-0.16, 0.33),(0.30, 0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.98rad)
cetz.draw.content((-0.52, 0.64),angle:8.98rad,[q+k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.05, 0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.76rad)
cetz.draw.content((0.65, 0.90),angle:3.76rad,[q+k[3]])
cetz.draw.hobby((0.49, 0.71),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.81))
node(node0.pos)
let node1= (pos:(-0.42, -0.77))
node(node1.pos)
let node2= (pos:(-0.48, -0.03))
node(node2.pos)
let node3= (pos:(-0.09, 0.65))
node(node3.pos)
let node4= (pos:(0.60, -0.01))
node(node4.pos)
let node5= (pos:(-0.06, 0.17))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.86rad)
cetz.draw.content((0.84, -0.79),angle:5.86rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.90),(0.69, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.66, -1.00),angle:0.38rad,[-q+k[0]])
cetz.draw.hobby((-0.49, -0.86),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.83),node1.pos,decoration:"arrow",angle:6.25rad)
cetz.draw.content((0.07, -0.95),angle:6.25rad,[k[0]])
cetz.draw.hobby((0.48, -0.88),(0.07, -0.89),(-0.33, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.61, -0.42),node4.pos,decoration:"wave",angle:1.54rad)
cetz.draw.content((0.73, -0.42),angle:1.54rad,[-q])
cetz.draw.hobby((0.65, -0.74),(0.67, -0.41),(0.66, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.23, -0.33),node1.pos,decoration:"wave",angle:-1.94rad)
cetz.draw.content((-0.12, -0.37),angle:-1.94rad,[-q])
cetz.draw.hobby((-0.03, 0.05),(-0.17, -0.33),(-0.32, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.36, 0.36),node2.pos,decoration:"coil",angle:4.17rad)
cetz.draw.content((-0.46, 0.43),angle:4.17rad,[p+2 q-3 k[3]])
cetz.draw.hobby((-0.19, 0.65),(-0.41, 0.38),(-0.53, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, -0.08),node4.pos,decoration:"arrow",angle:3.17rad)
cetz.draw.content((0.10, -0.20),angle:3.17rad,[p+2 q-2 k[3]])
cetz.draw.hobby((-0.39, -0.11),(0.06, -0.14),(0.50, -0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:3.68rad)
cetz.draw.content((-0.68, -0.28),angle:3.68rad,[k[3]])
cetz.draw.hobby((-0.88, -0.33),(-0.54, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.52, 0.03),angle:2.70rad,[k[3]])
cetz.draw.hobby((0.06, 0.18),(0.94, -0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:3.48rad)
cetz.draw.content((-0.51, 0.38),angle:3.48rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.89, 0.31),(-0.17, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:3.85rad)
cetz.draw.content((0.72, 0.25),angle:3.85rad,[p+q-2 k[3]])
cetz.draw.hobby((0.63, 0.10),(0.89, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.70rad)
cetz.draw.content((-0.61, 0.49),angle:8.70rad,[-q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.17, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.45rad)
cetz.draw.content((0.42, 0.94),angle:3.45rad,[-q+k[3]])
cetz.draw.hobby((-0.02, 0.74),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.66))
node(node1.pos)
let node2= (pos:(-0.02, 0.60))
node(node2.pos)
let node3= (pos:(0.02, 0.16))
node(node3.pos)
let node4= (pos:(-0.69, -0.16))
node(node4.pos)
let node5= (pos:(0.76, 0.44))
node(node5.pos)
edge(node1.pos,(0.05, -0.78),node0.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((0.06, -0.89),angle:0.15rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.75),(0.05, -0.84),(-0.40, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.59rad)
cetz.draw.content((0.88, -0.74),angle:5.59rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.72, -1.03),angle:0.33rad,[k[0]])
cetz.draw.hobby((-0.60, -0.92),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.51),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((-0.75, -0.54),angle:1.82rad,[q])
cetz.draw.hobby((-0.60, -0.79),(-0.69, -0.52),(-0.74, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.70, -0.13),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.14),angle:-1.72rad,[q])
cetz.draw.hobby((0.81, 0.32),(0.76, -0.13),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, 0.38),node2.pos,decoration:"coil",angle:1.61rad)
cetz.draw.content((-0.23, 0.38),angle:1.61rad,[p-2 k[3]])
cetz.draw.hobby((-0.06, 0.15),(-0.17, 0.36),(-0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:8.93rad)
cetz.draw.content((-0.90, -0.19),angle:8.93rad,[p-k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.61rad)
cetz.draw.content((0.55, 0.40),angle:2.61rad,[p-k[3]])
cetz.draw.hobby((0.10, 0.60),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:9.04rad)
cetz.draw.content((-0.55, 0.69),angle:9.04rad,[k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.13, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.31rad)
cetz.draw.content((0.77, 0.77),angle:4.31rad,[k[3]])
cetz.draw.hobby((0.74, 0.55),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, -0.01),node3.pos,decoration:"arrow",angle:3.57rad)
cetz.draw.content((-0.30, -0.12),angle:3.57rad,[p+q-k[3]])
cetz.draw.hobby((-0.60, -0.19),(-0.31, -0.06),(-0.03, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, 0.30),node5.pos,decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.46, 0.19),angle:3.50rad,[q+k[3]])
cetz.draw.hobby((0.12, 0.13),(0.41, 0.24),(0.71, 0.35),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.45, -0.69))
node(node0.pos)
let node1= (pos:(-0.48, -0.84))
node(node1.pos)
let node2= (pos:(0.82, -0.00))
node(node2.pos)
let node3= (pos:(-0.80, 0.26))
node(node3.pos)
let node4= (pos:(0.09, 0.46))
node(node4.pos)
let node5= (pos:(-0.15, -0.15))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.77rad)
cetz.draw.content((0.78, -0.74),angle:5.77rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.57, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.31rad)
cetz.draw.content((-0.71, -1.03),angle:0.31rad,[-q+k[0]])
cetz.draw.hobby((-0.56, -0.92),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.01, -0.81),node1.pos,decoration:"arrow",angle:0.16rad)
cetz.draw.content((0.01, -0.93),angle:0.16rad,[k[0]])
cetz.draw.hobby((0.38, -0.78),(0.00, -0.87),(-0.39, -0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.26, -0.13),node4.pos,decoration:"wave",angle:1.88rad)
cetz.draw.content((0.15, -0.16),angle:1.88rad,[-q])
cetz.draw.hobby((0.35, -0.59),(0.20, -0.13),(0.06, 0.33),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.34, -0.50),node1.pos,decoration:"wave",angle:4.27rad)
cetz.draw.content((-0.45, -0.44),angle:4.27rad,[-q])
cetz.draw.hobby((-0.24, -0.18),(-0.38, -0.46),(-0.51, -0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"coil",angle:2.06rad)
cetz.draw.content((1.02, -0.11),angle:2.06rad,[p+q-2 k[3]])
cetz.draw.hobby((1.01, -0.22),(0.92, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"coil",angle:-1.90rad)
cetz.draw.content((-0.79, -0.07),angle:-1.90rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.77, 0.15),(-0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:3.26rad)
cetz.draw.content((-0.44, 0.28),angle:3.26rad,[p+q-k[3]])
cetz.draw.hobby((-0.89, 0.29),(-0.01, 0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.80, 0.22),angle:4.22rad,[p+q-k[3]])
cetz.draw.hobby((0.82, 0.12),(0.90, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.37, -0.04),node2.pos,decoration:"arrow",angle:3.28rad)
cetz.draw.content((0.36, 0.08),angle:3.28rad,[k[3]])
cetz.draw.hobby((-0.07, -0.06),(0.32, 0.01),(0.72, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:8.12rad)
cetz.draw.content((-1.02, 0.60),angle:8.12rad,[p-k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.67rad)
cetz.draw.content((0.48, 0.84),angle:3.67rad,[p-k[3]])
cetz.draw.hobby((0.14, 0.57),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.48, 0.07),node5.pos,decoration:"arrow",angle:2.58rad)
cetz.draw.content((-0.42, 0.17),angle:2.58rad,[-q+k[3]])
cetz.draw.hobby((-0.70, 0.27),(-0.44, 0.11),(-0.18, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding2f1=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.75))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.55, 0.21))
node(node2.pos)
let node3= (pos:(0.60, 0.72))
node(node3.pos)
let node4= (pos:(-0.28, -0.00))
node(node4.pos)
let node5= (pos:(-0.60, 0.48))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.92rad)
cetz.draw.content((0.71, -0.76),angle:5.92rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.45, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.73, -0.90),angle:0.79rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.75),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.74),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.17, -0.86),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.24, -0.82),(-0.16, -0.80),(-0.56, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.04, -0.38),node4.pos,decoration:"wave",angle:2.26rad)
cetz.draw.content((0.14, -0.30),angle:2.26rad,[-q])
cetz.draw.hobby((0.33, -0.64),(0.08, -0.33),(-0.17, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, -0.09),node1.pos,decoration:"wave",angle:4.68rad)
cetz.draw.content((-0.79, -0.09),angle:4.68rad,[-q])
cetz.draw.hobby((-0.69, 0.38),(-0.73, -0.08),(-0.71, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, 0.47),node2.pos,decoration:"coil",angle:-1.67rad)
cetz.draw.content((0.78, 0.45),angle:-1.67rad,[p+q-2 k[3]])
cetz.draw.hobby((0.68, 0.70),(0.72, 0.45),(0.63, 0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:9.42rad)
cetz.draw.content((-0.64, -0.12),angle:9.42rad,[p+q-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.38, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.82, 0.22),angle:2.70rad,[p+q-k[3]])
cetz.draw.hobby((0.66, 0.23),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, 0.38),node2.pos,decoration:"arrow",angle:2.92rad)
cetz.draw.content((-0.02, 0.49),angle:2.92rad,[k[3]])
cetz.draw.hobby((-0.48, 0.52),(-0.01, 0.43),(0.45, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.39),node3.pos,decoration:"arrow",angle:3.83rad)
cetz.draw.content((0.08, 0.48),angle:3.83rad,[p-k[3]])
cetz.draw.hobby((-0.24, 0.12),(0.11, 0.43),(0.48, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.50rad)
cetz.draw.content((-0.90, 0.67),angle:8.50rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.71, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.75rad)
cetz.draw.content((0.73, 0.96),angle:3.75rad,[-q+k[3]])
cetz.draw.hobby((0.65, 0.83),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding2f2=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.34, -0.75))
node(node1.pos)
let node2= (pos:(-0.55, 0.21))
node(node2.pos)
let node3= (pos:(-0.60, 0.73))
node(node3.pos)
let node4= (pos:(0.60, 0.47))
node(node4.pos)
let node5= (pos:(0.28, 0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.90, -0.73),angle:5.50rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.75, -0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.36rad)
cetz.draw.content((-0.63, -0.99),angle:0.36rad,[-q+k[0]])
cetz.draw.hobby((-0.41, -0.84),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.74),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.17, -0.86),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.56, -0.72),(0.16, -0.80),(-0.24, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.68, -0.09),node4.pos,decoration:"wave",angle:1.60rad)
cetz.draw.content((0.80, -0.09),angle:1.60rad,[-q])
cetz.draw.hobby((0.71, -0.53),(0.74, -0.08),(0.69, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, -0.38),node1.pos,decoration:"wave",angle:4.03rad)
cetz.draw.content((-0.14, -0.30),angle:4.03rad,[-q])
cetz.draw.hobby((0.17, -0.03),(-0.08, -0.33),(-0.33, -0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, 0.47),node2.pos,decoration:"coil",angle:4.81rad)
cetz.draw.content((-0.78, 0.46),angle:4.81rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.68, 0.70),(-0.72, 0.45),(-0.63, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.04, 0.38),node4.pos,decoration:"arrow",angle:3.36rad)
cetz.draw.content((0.02, 0.49),angle:3.36rad,[p+q-k[3]])
cetz.draw.hobby((-0.45, 0.31),(0.01, 0.43),(0.48, 0.52),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.58rad)
cetz.draw.content((-0.72, -0.00),angle:3.58rad,[k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.61, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.64, 0.12),angle:3.14rad,[k[3]])
cetz.draw.hobby((0.38, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:8.82rad)
cetz.draw.content((-0.87, 0.76),angle:8.82rad,[p-k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.72, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.07rad)
cetz.draw.content((0.71, 0.81),angle:4.07rad,[p-k[3]])
cetz.draw.hobby((0.62, 0.59),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.15, 0.39),node5.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.07, 0.48),angle:2.45rad,[-q+k[3]])
cetz.draw.hobby((-0.47, 0.71),(-0.11, 0.43),(0.24, 0.12),stroke:stroke,mark: (end: ">"))
})
let embedding2f3=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.83))
node(node0.pos)
let node1= (pos:(-0.45, -0.69))
node(node1.pos)
let node2= (pos:(-0.82, 0.00))
node(node2.pos)
let node3= (pos:(0.80, 0.26))
node(node3.pos)
let node4= (pos:(0.15, -0.14))
node(node4.pos)
let node5= (pos:(-0.09, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.97rad)
cetz.draw.content((0.78, -0.80),angle:5.97rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.60, -0.81),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((-0.67, -0.95),angle:0.52rad,[-q+k[0]])
cetz.draw.hobby((-0.51, -0.79),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.81),node1.pos,decoration:"arrow",angle:6.13rad)
cetz.draw.content((-0.01, -0.93),angle:6.13rad,[k[0]])
cetz.draw.hobby((0.39, -0.90),(-0.00, -0.87),(-0.38, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.34, -0.49),node4.pos,decoration:"wave",angle:2.01rad)
cetz.draw.content((0.45, -0.44),angle:2.01rad,[-q])
cetz.draw.hobby((0.51, -0.74),(0.39, -0.45),(0.24, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.14),node1.pos,decoration:"wave",angle:-1.88rad)
cetz.draw.content((-0.16, -0.18),angle:-1.88rad,[-q])
cetz.draw.hobby((-0.07, 0.33),(-0.21, -0.14),(-0.36, -0.60),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"coil",angle:1.07rad)
cetz.draw.content((-0.80, -0.22),angle:1.07rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.90, -0.27),(-0.81, -0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"coil",angle:-1.25rad)
cetz.draw.content((1.01, 0.00),angle:-1.25rad,[p+q-2 k[3]])
cetz.draw.hobby((0.89, 0.18),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.36, -0.03),node4.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((-0.35, 0.09),angle:3.01rad,[p+q-k[3]])
cetz.draw.hobby((-0.72, 0.06),(-0.32, 0.02),(0.07, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:8.36rad)
cetz.draw.content((-1.01, 0.11),angle:8.36rad,[k[3]])
cetz.draw.hobby((-1.00, 0.22),(-0.92, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.03rad)
cetz.draw.content((0.47, 0.52),angle:3.03rad,[k[3]])
cetz.draw.hobby((0.02, 0.51),(0.91, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.49, 0.07),node3.pos,decoration:"arrow",angle:3.69rad)
cetz.draw.content((0.42, 0.18),angle:3.69rad,[p-k[3]])
cetz.draw.hobby((0.18, -0.05),(0.44, 0.12),(0.70, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.89rad)
cetz.draw.content((-0.61, 0.63),angle:8.89rad,[-q+k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.78, 0.66),angle:4.45rad,[-q+k[3]])
cetz.draw.hobby((0.77, 0.37),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.73))
node(node0.pos)
let node1= (pos:(0.55, -0.76))
node(node1.pos)
let node2= (pos:(0.08, 0.14))
node(node2.pos)
let node3= (pos:(0.69, 0.72))
node(node3.pos)
let node4= (pos:(-0.90, 0.11))
node(node4.pos)
let node5= (pos:(0.83, 0.07))
node(node5.pos)
edge(node1.pos,(-0.01, -0.77),node0.pos,decoration:"arrow",angle:6.26rad)
cetz.draw.content((-0.02, -0.89),angle:6.26rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.82),(-0.01, -0.83),(-0.46, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.83, -0.77),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.67, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.56rad)
cetz.draw.content((-0.72, -0.97),angle:0.56rad,[k[0]])
cetz.draw.hobby((-0.62, -0.83),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.30),node4.pos,decoration:"wave",angle:1.95rad)
cetz.draw.content((-0.60, -0.26),angle:1.95rad,[q])
cetz.draw.hobby((-0.54, -0.62),(-0.66, -0.28),(-0.81, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.70, -0.35),node1.pos,decoration:"wave",angle:-1.89rad)
cetz.draw.content((0.81, -0.39),angle:-1.89rad,[q])
cetz.draw.hobby((0.86, -0.03),(0.76, -0.36),(0.64, -0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, 0.46),node2.pos,decoration:"coil",angle:3.90rad)
cetz.draw.content((0.26, 0.55),angle:3.90rad,[k[2]])
cetz.draw.hobby((0.58, 0.72),(0.31, 0.51),(0.08, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:4.50rad)
cetz.draw.content((-0.83, -0.13),angle:4.50rad,[p+q+k[2]])
cetz.draw.hobby((-0.92, -0.25),(-0.87, 0.00),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.67rad)
cetz.draw.content((0.59, 0.01),angle:2.67rad,[p+q+k[2]])
cetz.draw.hobby((0.19, 0.15),(0.94, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:9.25rad)
cetz.draw.content((-0.48, 0.12),angle:9.25rad,[p+q])
cetz.draw.hobby((-0.91, 0.26),(-0.03, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:4.12rad)
cetz.draw.content((0.81, 0.27),angle:4.12rad,[p+q])
cetz.draw.hobby((0.83, 0.19),(0.89, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.02rad)
cetz.draw.content((0.76, 0.95),angle:7.02rad,[p+2 q+k[2]])
cetz.draw.hobby((0.89, 0.98),(0.72, 0.83),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.07, 0.54),angle:4.82rad,[p+2 q+k[2]])
cetz.draw.hobby((-0.97, 0.21),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, 0.41),node5.pos,decoration:"arrow",angle:8.06rad)
cetz.draw.content((0.63, 0.38),angle:8.06rad,[p+2 q])
cetz.draw.hobby((0.64, 0.64),(0.69, 0.38),(0.75, 0.12),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.72))
node(node0.pos)
let node1= (pos:(-0.31, -0.63))
node(node1.pos)
let node2= (pos:(-0.70, 0.74))
node(node2.pos)
let node3= (pos:(-0.05, 0.68))
node(node3.pos)
let node4= (pos:(-0.19, 0.08))
node(node4.pos)
let node5= (pos:(0.57, 0.52))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.79, -0.75),angle:5.80rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.59, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.60, -0.92),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.37, -0.73),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.73),node1.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((0.06, -0.85),angle:6.16rad,[k[0]])
cetz.draw.hobby((0.40, -0.79),(0.07, -0.79),(-0.25, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.33),node4.pos,decoration:"wave",angle:2.26rad)
cetz.draw.content((0.25, -0.25),angle:2.26rad,[-q])
cetz.draw.hobby((0.46, -0.60),(0.20, -0.27),(-0.08, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.17, -0.07),node1.pos,decoration:"wave",angle:-2.23rad)
cetz.draw.content((0.27, -0.14),angle:-2.23rad,[-q])
cetz.draw.hobby((0.55, 0.36),(0.21, -0.12),(-0.16, -0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.38, 0.78),node2.pos,decoration:"coil",angle:3.07rad)
cetz.draw.content((-0.37, 0.90),angle:3.07rad,[k[2]])
cetz.draw.hobby((-0.08, 0.77),(-0.36, 0.84),(-0.65, 0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.38),node4.pos,decoration:"arrow",angle:8.50rad)
cetz.draw.content((-0.60, 0.30),angle:8.50rad,[p+k[2]])
cetz.draw.hobby((-0.73, 0.64),(-0.55, 0.33),(-0.30, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.71rad)
cetz.draw.content((-0.93, 0.78),angle:8.71rad,[p])
cetz.draw.hobby((-0.96, 0.89),(-0.82, 0.76),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.99rad)
cetz.draw.content((0.70, 0.84),angle:3.99rad,[p])
cetz.draw.hobby((0.60, 0.63),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.10, 0.37),node3.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((0.02, 0.34),angle:4.48rad,[p-q+k[2]])
cetz.draw.hobby((-0.11, 0.12),(-0.04, 0.36),(0.01, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, 0.65),node5.pos,decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.33, 0.77),angle:2.87rad,[p-q])
cetz.draw.hobby((0.02, 0.75),(0.30, 0.72),(0.55, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding3f1=cetz.canvas(length:50%,{
let node0= (pos:(0.25, -0.76))
node(node0.pos)
let node1= (pos:(-0.58, -0.68))
node(node1.pos)
let node2= (pos:(0.58, 0.06))
node(node2.pos)
let node3= (pos:(0.94, 0.64))
node(node3.pos)
let node4= (pos:(-0.79, -0.11))
node(node4.pos)
let node5= (pos:(-0.48, 0.44))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.66, -0.77),angle:5.98rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.36, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.66rad)
cetz.draw.content((-0.72, -0.93),angle:0.66rad,[-q+k[0]])
cetz.draw.hobby((-0.62, -0.79),(-0.88, -0.99),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.77),node1.pos,decoration:"arrow",angle:6.19rad)
cetz.draw.content((-0.17, -0.89),angle:6.19rad,[k[0]])
cetz.draw.hobby((0.17, -0.83),(-0.18, -0.83),(-0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.25, -0.41),node4.pos,decoration:"wave",angle:2.57rad)
cetz.draw.content((-0.18, -0.31),angle:2.57rad,[-q])
cetz.draw.hobby((0.19, -0.64),(-0.22, -0.36),(-0.65, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.48, -0.12),node1.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((-0.36, -0.13),angle:-1.66rad,[-q])
cetz.draw.hobby((-0.41, 0.33),(-0.42, -0.13),(-0.50, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, 0.37),node2.pos,decoration:"coil",angle:4.16rad)
cetz.draw.content((0.62, 0.43),angle:4.16rad,[k[2]])
cetz.draw.hobby((0.85, 0.63),(0.67, 0.40),(0.55, 0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:3.96rad)
cetz.draw.content((-0.81, -0.30),angle:3.96rad,[p+k[2]])
cetz.draw.hobby((-0.89, -0.30),(-0.81, -0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.39rad)
cetz.draw.content((0.87, -0.05),angle:2.39rad,[p+k[2]])
cetz.draw.hobby((0.70, 0.03),(0.97, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.05, 0.26),node2.pos,decoration:"arrow",angle:2.80rad)
cetz.draw.content((0.09, 0.38),angle:2.80rad,[p])
cetz.draw.hobby((-0.36, 0.46),(0.08, 0.32),(0.50, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.90rad)
cetz.draw.content((1.09, 0.51),angle:4.90rad,[p-q+k[2]])
cetz.draw.hobby((1.04, 0.44),(1.02, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:5.17rad)
cetz.draw.content((-1.00, 0.06),angle:5.17rad,[p-q+k[2]])
cetz.draw.hobby((-0.88, -0.04),(-1.01, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.60rad)
cetz.draw.content((-0.83, 0.64),angle:8.60rad,[p-q])
cetz.draw.hobby((-0.98, 0.89),(-0.59, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.85, 0.84),angle:4.55rad,[p-q])
cetz.draw.hobby((0.90, 0.75),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding3f2=cetz.canvas(length:50%,{
let node0= (pos:(0.33, -0.59))
node(node0.pos)
let node1= (pos:(-0.48, -0.82))
node(node1.pos)
let node2= (pos:(0.84, 0.42))
node(node2.pos)
let node3= (pos:(-0.71, 0.07))
node(node3.pos)
let node4= (pos:(-0.59, 0.58))
node(node4.pos)
let node5= (pos:(0.02, -0.16))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.73, -0.69),angle:5.74rad,[-q+k[0]])
cetz.draw.hobby((0.95, -0.90),(0.44, -0.60),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.70, -1.02),angle:0.34rad,[-q+k[0]])
cetz.draw.hobby((-0.56, -0.91),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.06, -0.77),node1.pos,decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.03, -0.89),angle:0.27rad,[k[0]])
cetz.draw.hobby((0.29, -0.69),(-0.04, -0.83),(-0.40, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.14, 0.07),node4.pos,decoration:"wave",angle:2.24rad)
cetz.draw.content((-0.05, 0.14),angle:2.24rad,[-q])
cetz.draw.hobby((0.30, -0.44),(-0.05, 0.05),(-0.44, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.25, -0.49),node1.pos,decoration:"wave",angle:4.06rad)
cetz.draw.content((-0.35, -0.42),angle:4.06rad,[-q])
cetz.draw.hobby((-0.08, -0.18),(-0.29, -0.44),(-0.49, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:1.93rad)
cetz.draw.content((1.03, 0.25),angle:1.93rad,[k[2]])
cetz.draw.hobby((1.02, 0.11),(0.94, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.92rad)
cetz.draw.content((-0.83, -0.08),angle:-2.92rad,[k[2]])
cetz.draw.hobby((-0.80, -0.01),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:8.63rad)
cetz.draw.content((-0.88, 0.71),angle:8.63rad,[p+k[2]])
cetz.draw.hobby((-0.97, 0.89),(-0.70, 0.61),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.81, 0.74),angle:4.45rad,[p+k[2]])
cetz.draw.hobby((0.81, 0.53),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.44, 0.15),node2.pos,decoration:"arrow",angle:3.75rad)
cetz.draw.content((0.37, 0.24),angle:3.75rad,[p])
cetz.draw.hobby((0.07, -0.05),(0.40, 0.19),(0.73, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.73, 0.35),node3.pos,decoration:"arrow",angle:7.60rad)
cetz.draw.content((-0.84, 0.38),angle:7.60rad,[p-q+k[2]])
cetz.draw.hobby((-0.68, 0.58),(-0.79, 0.36),(-0.79, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.35, -0.05),node5.pos,decoration:"arrow",angle:9.13rad)
cetz.draw.content((-0.39, -0.16),angle:9.13rad,[p-q])
cetz.draw.hobby((-0.66, -0.01),(-0.36, -0.11),(-0.07, -0.19),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.63))
node(node1.pos)
let node2= (pos:(-0.08, 0.12))
node(node2.pos)
let node3= (pos:(-0.72, 0.62))
node(node3.pos)
let node4= (pos:(-0.79, -0.18))
node(node4.pos)
let node5= (pos:(0.88, 0.52))
node(node5.pos)
edge(node1.pos,(0.06, -0.75),node0.pos,decoration:"arrow",angle:0.18rad)
cetz.draw.content((0.08, -0.87),angle:0.18rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.72),(0.06, -0.81),(-0.39, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.53rad)
cetz.draw.content((0.88, -0.73),angle:5.53rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.72, -1.03),angle:0.34rad,[k[0]])
cetz.draw.hobby((-0.59, -0.92),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.51),node4.pos,decoration:"wave",angle:1.98rad)
cetz.draw.content((-0.76, -0.56),angle:1.98rad,[q])
cetz.draw.hobby((-0.59, -0.79),(-0.71, -0.53),(-0.82, -0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.75, -0.06),node1.pos,decoration:"wave",angle:-1.81rad)
cetz.draw.content((0.87, -0.09),angle:-1.81rad,[q])
cetz.draw.hobby((0.91, 0.39),(0.81, -0.07),(0.69, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, 0.40),node2.pos,decoration:"coil",angle:-0.66rad)
cetz.draw.content((-0.30, 0.50),angle:-0.66rad,[p+q-k[3]])
cetz.draw.hobby((-0.62, 0.63),(-0.33, 0.45),(-0.09, 0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:3.78rad)
cetz.draw.content((-0.82, -0.35),angle:3.78rad,[p+q])
cetz.draw.hobby((-0.88, -0.32),(-0.83, -0.29),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.51, 0.00),angle:2.74rad,[p+q])
cetz.draw.hobby((0.04, 0.14),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:9.20rad)
cetz.draw.content((-0.57, 0.11),angle:9.20rad,[k[3]])
cetz.draw.hobby((-0.92, 0.25),(-0.19, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.16rad)
cetz.draw.content((1.04, 0.49),angle:2.16rad,[k[3]])
cetz.draw.hobby((0.98, 0.47),(0.99, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.78, 0.23),node3.pos,decoration:"arrow",angle:4.62rad)
cetz.draw.content((-0.90, 0.24),angle:4.62rad,[p+2 q])
cetz.draw.hobby((-0.85, -0.10),(-0.84, 0.23),(-0.79, 0.55),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.61rad)
cetz.draw.content((0.82, 0.79),angle:7.61rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.92),(0.84, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.95, 0.74),angle:5.35rad,[q+k[3]])
cetz.draw.hobby((-0.83, 0.66),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.63))
node(node0.pos)
let node1= (pos:(-0.47, -0.73))
node(node1.pos)
let node2= (pos:(0.71, 0.74))
node(node2.pos)
let node3= (pos:(0.05, 0.68))
node(node3.pos)
let node4= (pos:(-0.57, 0.52))
node(node4.pos)
let node5= (pos:(0.19, 0.08))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.71, -0.71),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.43, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.68, -0.97),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.53, -0.82),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.73),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((-0.06, -0.85),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.26, -0.72),(-0.07, -0.79),(-0.40, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.18, -0.07),node4.pos,decoration:"wave",angle:2.22rad)
cetz.draw.content((-0.27, -0.14),angle:2.22rad,[-q])
cetz.draw.hobby((0.17, -0.57),(-0.21, -0.12),(-0.55, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.16, -0.33),node1.pos,decoration:"wave",angle:4.03rad)
cetz.draw.content((-0.25, -0.25),angle:4.03rad,[-q])
cetz.draw.hobby((0.08, 0.04),(-0.19, -0.28),(-0.45, -0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, 0.78),node2.pos,decoration:"coil",angle:0.07rad)
cetz.draw.content((0.37, 0.90),angle:0.07rad,[p-k[3]])
cetz.draw.hobby((0.08, 0.77),(0.37, 0.84),(0.66, 0.82),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:8.58rad)
cetz.draw.content((-0.88, 0.68),angle:8.58rad,[p])
cetz.draw.hobby((-0.98, 0.89),(-0.68, 0.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.87rad)
cetz.draw.content((0.77, 0.96),angle:3.87rad,[p])
cetz.draw.hobby((0.74, 0.85),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.51, 0.37),node2.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((0.60, 0.30),angle:4.06rad,[k[3]])
cetz.draw.hobby((0.30, 0.08),(0.55, 0.33),(0.73, 0.63),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.29, 0.65),node3.pos,decoration:"arrow",angle:3.41rad)
cetz.draw.content((-0.32, 0.77),angle:3.41rad,[p-q])
cetz.draw.hobby((-0.55, 0.61),(-0.29, 0.72),(-0.01, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.10, 0.37),node5.pos,decoration:"arrow",angle:8.09rad)
cetz.draw.content((-0.02, 0.34),angle:8.09rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.61),(0.04, 0.36),(0.11, 0.11),stroke:stroke,mark: (end: ">"))
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.80))
node(node0.pos)
let node1= (pos:(-0.25, -0.74))
node(node1.pos)
let node2= (pos:(-0.60, -0.03))
node(node2.pos)
let node3= (pos:(-0.93, 0.62))
node(node3.pos)
let node4= (pos:(0.48, 0.03))
node(node4.pos)
let node5= (pos:(0.77, 0.16))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((0.85, -0.79),angle:5.81rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.72, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.58, -0.98),angle:0.33rad,[-q+k[0]])
cetz.draw.hobby((-0.32, -0.83),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.17, -0.81),node1.pos,decoration:"arrow",angle:6.21rad)
cetz.draw.content((0.16, -0.93),angle:6.21rad,[k[0]])
cetz.draw.hobby((0.52, -0.87),(0.17, -0.87),(-0.18, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.56, -0.39),node4.pos,decoration:"wave",angle:1.72rad)
cetz.draw.content((0.68, -0.37),angle:1.72rad,[-q])
cetz.draw.hobby((0.65, -0.71),(0.61, -0.37),(0.55, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, -0.30),node1.pos,decoration:"wave",angle:3.86rad)
cetz.draw.content((0.16, -0.21),angle:3.86rad,[-q])
cetz.draw.hobby((0.63, 0.12),(0.22, -0.24),(-0.19, -0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.73, 0.31),node2.pos,decoration:"coil",angle:-1.11rad)
cetz.draw.content((-0.62, 0.36),angle:-1.11rad,[p-k[3]])
cetz.draw.hobby((-0.83, 0.60),(-0.67, 0.34),(-0.56, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.07, 0.02),node4.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.07, 0.14),angle:3.20rad,[p])
cetz.draw.hobby((-0.50, 0.04),(-0.06, 0.08),(0.37, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:3.78rad)
cetz.draw.content((-0.73, -0.28),angle:3.78rad,[k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.64, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.01rad)
cetz.draw.content((0.99, -0.04),angle:2.01rad,[k[3]])
cetz.draw.hobby((0.87, 0.09),(1.01, -0.22),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.47rad)
cetz.draw.content((-0.85, 0.45),angle:4.47rad,[p-q])
cetz.draw.hobby((-0.92, 0.42),(-0.89, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:3.67rad)
cetz.draw.content((0.68, 0.29),angle:3.67rad,[p-q])
cetz.draw.hobby((0.53, 0.13),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.59rad)
cetz.draw.content((0.77, 0.61),angle:7.59rad,[-q+k[3]])
cetz.draw.hobby((0.92, 0.92),(0.74, 0.27),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.90rad)
cetz.draw.content((-1.08, 0.79),angle:4.90rad,[-q+k[3]])
cetz.draw.hobby((-1.01, 0.71),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding4f2=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.78))
node(node0.pos)
let node1= (pos:(-0.30, -0.65))
node(node1.pos)
let node2= (pos:(-0.86, 0.45))
node(node2.pos)
let node3= (pos:(0.71, 0.09))
node(node3.pos)
let node4= (pos:(-0.07, -0.01))
node(node4.pos)
let node5= (pos:(0.62, 0.53))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.79, -0.78),angle:5.88rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.60, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.47rad)
cetz.draw.content((-0.60, -0.93),angle:0.47rad,[-q+k[0]])
cetz.draw.hobby((-0.37, -0.75),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.77),node1.pos,decoration:"arrow",angle:6.11rad)
cetz.draw.content((0.06, -0.89),angle:6.11rad,[k[0]])
cetz.draw.hobby((0.40, -0.85),(0.07, -0.83),(-0.25, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.22, -0.40),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.31, -0.34),angle:2.19rad,[-q])
cetz.draw.hobby((0.47, -0.67),(0.26, -0.36),(0.04, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.20, -0.09),node1.pos,decoration:"wave",angle:-2.23rad)
cetz.draw.content((0.29, -0.16),angle:-2.23rad,[-q])
cetz.draw.hobby((0.59, 0.37),(0.24, -0.12),(-0.15, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:1.27rad)
cetz.draw.content((-0.82, 0.19),angle:1.27rad,[p-k[3]])
cetz.draw.hobby((-0.91, 0.08),(-0.83, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:-0.30rad)
cetz.draw.content((0.89, 0.16),angle:-0.30rad,[p-k[3]])
cetz.draw.hobby((0.82, 0.12),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.47, 0.23),node4.pos,decoration:"arrow",angle:2.62rad)
cetz.draw.content((-0.41, 0.34),angle:2.62rad,[p])
cetz.draw.hobby((-0.75, 0.46),(-0.43, 0.28),(-0.12, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.10rad)
cetz.draw.content((-1.05, 0.69),angle:8.10rad,[k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.94, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.03rad)
cetz.draw.content((0.72, 0.84),angle:4.03rad,[k[3]])
cetz.draw.hobby((0.63, 0.65),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.32, 0.07),node3.pos,decoration:"arrow",angle:3.27rad)
cetz.draw.content((0.31, 0.19),angle:3.27rad,[p-q])
cetz.draw.hobby((-0.01, 0.07),(0.31, 0.13),(0.63, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.79, 0.35),node5.pos,decoration:"arrow",angle:4.97rad)
cetz.draw.content((0.91, 0.38),angle:4.97rad,[-q+k[3]])
cetz.draw.hobby((0.80, 0.10),(0.85, 0.35),(0.70, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.46, -0.87))
node(node0.pos)
let node1= (pos:(0.59, -0.67))
node(node1.pos)
let node2= (pos:(-0.06, 0.50))
node(node2.pos)
let node3= (pos:(-0.54, 0.17))
node(node3.pos)
let node4= (pos:(-0.31, -0.21))
node(node4.pos)
let node5= (pos:(0.61, 0.42))
node(node5.pos)
edge(node1.pos,(0.08, -0.81),node0.pos,decoration:"arrow",angle:0.19rad)
cetz.draw.content((0.10, -0.93),angle:0.19rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.76),(0.08, -0.87),(-0.35, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((0.87, -0.74),angle:5.61rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.70, -1.05),angle:0.23rad,[k[0]])
cetz.draw.hobby((-0.55, -0.96),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.40, -0.56),node4.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((-0.52, -0.53),angle:1.34rad,[q])
cetz.draw.hobby((-0.51, -0.80),(-0.45, -0.53),(-0.39, -0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.63, -0.13),node1.pos,decoration:"wave",angle:-1.59rad)
cetz.draw.content((0.75, -0.14),angle:-1.59rad,[q])
cetz.draw.hobby((0.68, 0.31),(0.69, -0.13),(0.66, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.70rad)
cetz.draw.content((0.52, 0.36),angle:2.70rad,[-p+k[3]])
cetz.draw.hobby((0.94, 0.10),(0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.79rad)
cetz.draw.content((-0.73, -0.03),angle:-2.79rad,[-p+k[3]])
cetz.draw.hobby((-0.61, 0.08),(-0.89, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.14, 0.14),node4.pos,decoration:"arrow",angle:1.24rad)
cetz.draw.content((-0.03, 0.10),angle:1.24rad,[-p+2 k[3]])
cetz.draw.hobby((-0.01, 0.42),(-0.09, 0.11),(-0.22, -0.18),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.94rad)
cetz.draw.content((-0.58, 0.64),angle:8.94rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.17, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.12rad)
cetz.draw.content((0.70, 0.77),angle:4.12rad,[k[3]])
cetz.draw.hobby((0.61, 0.53),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, -0.08),node3.pos,decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.65, -0.14),angle:5.22rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.37, -0.27),(-0.59, -0.12),(-0.62, 0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.25),node5.pos,decoration:"arrow",angle:3.36rad)
cetz.draw.content((0.11, 0.14),angle:3.36rad,[q+k[3]])
cetz.draw.hobby((-0.42, 0.12),(0.06, 0.19),(0.52, 0.32),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.80))
node(node0.pos)
let node1= (pos:(0.42, -0.75))
node(node1.pos)
let node2= (pos:(-0.44, 0.08))
node(node2.pos)
let node3= (pos:(0.71, 0.62))
node(node3.pos)
let node4= (pos:(-0.92, -0.00))
node(node4.pos)
let node5= (pos:(0.09, 0.12))
node(node5.pos)
edge(node1.pos,(-0.09, -0.81),node0.pos,decoration:"arrow",angle:0.04rad)
cetz.draw.content((-0.08, -0.93),angle:0.04rad,[q+k[0]])
cetz.draw.hobby((0.33, -0.83),(-0.09, -0.87),(-0.51, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.76, -0.77),angle:5.88rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.54, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.75, -1.01),angle:0.48rad,[k[0]])
cetz.draw.hobby((-0.67, -0.90),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.78, -0.42),node4.pos,decoration:"wave",angle:1.94rad)
cetz.draw.content((-0.89, -0.47),angle:1.94rad,[q])
cetz.draw.hobby((-0.70, -0.75),(-0.84, -0.43),(-0.95, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, -0.32),node1.pos,decoration:"wave",angle:-1.21rad)
cetz.draw.content((0.39, -0.28),angle:-1.21rad,[q])
cetz.draw.hobby((0.19, 0.06),(0.33, -0.29),(0.45, -0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.43),node2.pos,decoration:"coil",angle:3.57rad)
cetz.draw.content((0.09, 0.53),angle:3.57rad,[-p+k[3]])
cetz.draw.hobby((0.57, 0.64),(0.08, 0.46),(-0.37, 0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.69, 0.13),node4.pos,decoration:"arrow",angle:6.44rad)
cetz.draw.content((-0.71, 0.25),angle:6.44rad,[-p+2 k[3]])
cetz.draw.hobby((-0.46, 0.16),(-0.70, 0.19),(-0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:3.78rad)
cetz.draw.content((-0.65, -0.22),angle:3.78rad,[k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.48, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.60, -0.00),angle:2.68rad,[k[3]])
cetz.draw.hobby((0.21, 0.13),(0.94, -0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.94, 0.56),angle:5.51rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.97, 0.45),(0.82, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:4.95rad)
cetz.draw.content((-1.08, 0.14),angle:4.95rad,[-p+q+2 k[3]])
cetz.draw.hobby((-1.00, 0.08),(-1.03, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.75rad)
cetz.draw.content((-0.53, 0.47),angle:8.75rad,[q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.02, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.06rad)
cetz.draw.content((0.76, 0.88),angle:4.06rad,[q+k[3]])
cetz.draw.hobby((0.72, 0.73),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.88))
node(node0.pos)
let node1= (pos:(-0.59, -0.67))
node(node1.pos)
let node2= (pos:(0.54, 0.17))
node(node2.pos)
let node3= (pos:(0.06, 0.50))
node(node3.pos)
let node4= (pos:(0.31, -0.21))
node(node4.pos)
let node5= (pos:(-0.61, 0.42))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.76, -0.82),angle:6.05rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.92),(0.58, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.72, -0.93),angle:0.68rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.78),(-0.88, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.81),node1.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((-0.10, -0.93),angle:6.09rad,[k[0]])
cetz.draw.hobby((0.35, -0.93),(-0.08, -0.87),(-0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.40, -0.56),node4.pos,decoration:"wave",angle:1.80rad)
cetz.draw.content((0.52, -0.53),angle:1.80rad,[-q])
cetz.draw.hobby((0.51, -0.80),(0.46, -0.53),(0.39, -0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.62, -0.13),node1.pos,decoration:"wave",angle:4.73rad)
cetz.draw.content((-0.74, -0.13),angle:4.73rad,[-q])
cetz.draw.hobby((-0.67, 0.31),(-0.68, -0.13),(-0.66, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.79rad)
cetz.draw.content((0.81, 0.20),angle:2.79rad,[-p-q+k[3]])
cetz.draw.hobby((0.93, 0.09),(0.65, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.70rad)
cetz.draw.content((-0.42, 0.14),angle:-2.70rad,[-p-q+k[3]])
cetz.draw.hobby((-0.01, 0.41),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, -0.08),node4.pos,decoration:"arrow",angle:1.07rad)
cetz.draw.content((0.65, -0.14),angle:1.07rad,[-p-q+2 k[3]])
cetz.draw.hobby((0.62, 0.14),(0.59, -0.12),(0.38, -0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.09, 0.26),node2.pos,decoration:"arrow",angle:9.20rad)
cetz.draw.content((-0.11, 0.14),angle:9.20rad,[k[3]])
cetz.draw.hobby((-0.52, 0.32),(-0.06, 0.19),(0.42, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.15),node3.pos,decoration:"arrow",angle:5.05rad)
cetz.draw.content((0.03, 0.11),angle:5.05rad,[-p-2 q+2 k[3]])
cetz.draw.hobby((0.22, -0.17),(0.10, 0.11),(0.01, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.45rad)
cetz.draw.content((-0.90, 0.64),angle:8.45rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.71, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.47, 0.86),angle:3.63rad,[-q+k[3]])
cetz.draw.hobby((0.12, 0.60),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding5f1=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.84))
node(node0.pos)
let node1= (pos:(-0.42, -0.65))
node(node1.pos)
let node2= (pos:(-0.72, 0.08))
node(node2.pos)
let node3= (pos:(0.51, 0.54))
node(node3.pos)
let node4= (pos:(0.76, -0.19))
node(node4.pos)
let node5= (pos:(-0.09, 0.52))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.82, -0.81),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.68, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.55rad)
cetz.draw.content((-0.65, -0.93),angle:0.55rad,[-q+k[0]])
cetz.draw.hobby((-0.48, -0.75),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.06, -0.78),node1.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((0.04, -0.89),angle:6.09rad,[k[0]])
cetz.draw.hobby((0.46, -0.90),(0.05, -0.83),(-0.34, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.53),node4.pos,decoration:"wave",angle:1.28rad)
cetz.draw.content((0.78, -0.57),angle:1.28rad,[-q])
cetz.draw.hobby((0.64, -0.80),(0.72, -0.54),(0.80, -0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.25, -0.08),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((-0.13, -0.11),angle:-1.85rad,[-q])
cetz.draw.hobby((-0.06, 0.38),(-0.19, -0.09),(-0.33, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, 0.25),node2.pos,decoration:"coil",angle:-2.79rad)
cetz.draw.content((-0.07, 0.13),angle:-2.79rad,[-p-q+k[3]])
cetz.draw.hobby((0.42, 0.42),(-0.06, 0.20),(-0.58, 0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.94, -0.16),angle:5.75rad,[-p-q+2 k[3]])
cetz.draw.hobby((0.94, -0.23),(0.88, -0.19),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.97rad)
cetz.draw.content((-0.76, -0.19),angle:0.97rad,[-p-q+2 k[3]])
cetz.draw.hobby((-0.72, -0.03),(-0.89, -0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:8.70rad)
cetz.draw.content((-0.94, 0.12),angle:8.70rad,[k[3]])
cetz.draw.hobby((-0.96, 0.22),(-0.83, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.98rad)
cetz.draw.content((0.48, 0.54),angle:2.98rad,[k[3]])
cetz.draw.hobby((0.02, 0.56),(0.91, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.65, 0.18),node3.pos,decoration:"arrow",angle:5.04rad)
cetz.draw.content((0.76, 0.22),angle:5.04rad,[-p-2 q+2 k[3]])
cetz.draw.hobby((0.80, -0.10),(0.71, 0.20),(0.60, 0.49),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.94rad)
cetz.draw.content((-0.60, 0.65),angle:8.94rad,[-q+k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.20, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.89rad)
cetz.draw.content((0.67, 0.86),angle:3.89rad,[-q+k[3]])
cetz.draw.hobby((0.54, 0.65),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.79))
node(node0.pos)
let node1= (pos:(0.31, -0.66))
node(node1.pos)
let node2= (pos:(0.63, 0.05))
node(node2.pos)
let node3= (pos:(0.95, 0.64))
node(node3.pos)
let node4= (pos:(-0.95, -0.07))
node(node4.pos)
let node5= (pos:(-0.31, 0.42))
node(node5.pos)
edge(node1.pos,(-0.15, -0.75),node0.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((-0.14, -0.87),angle:0.14rad,[q+k[0]])
cetz.draw.hobby((0.23, -0.74),(-0.15, -0.81),(-0.53, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((0.71, -0.72),angle:5.83rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.43, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((-0.76, -1.00),angle:0.52rad,[k[0]])
cetz.draw.hobby((-0.69, -0.89),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.76, -0.44),node4.pos,decoration:"wave",angle:1.99rad)
cetz.draw.content((-0.65, -0.39),angle:1.99rad,[q])
cetz.draw.hobby((-0.60, -0.69),(-0.72, -0.40),(-0.86, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.01, -0.13),node1.pos,decoration:"wave",angle:5.23rad)
cetz.draw.content((-0.11, -0.19),angle:5.23rad,[q])
cetz.draw.hobby((-0.30, 0.28),(-0.06, -0.16),(0.19, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, 0.37),node2.pos,decoration:"coil",angle:4.21rad)
cetz.draw.content((0.64, 0.43),angle:4.21rad,[k[2]])
cetz.draw.hobby((0.86, 0.63),(0.70, 0.40),(0.59, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:4.51rad)
cetz.draw.content((-0.86, -0.23),angle:4.51rad,[p+k[2]])
cetz.draw.hobby((-0.92, -0.25),(-0.91, -0.18),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.33rad)
cetz.draw.content((0.90, -0.06),angle:2.33rad,[p+k[2]])
cetz.draw.hobby((0.75, 0.02),(0.97, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.26),node2.pos,decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.21, 0.37),angle:2.77rad,[p])
cetz.draw.hobby((-0.19, 0.45),(0.19, 0.31),(0.57, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.86rad)
cetz.draw.content((1.10, 0.51),angle:4.86rad,[p+q+k[2]])
cetz.draw.hobby((1.04, 0.44),(1.03, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:4.84rad)
cetz.draw.content((-1.09, 0.11),angle:4.84rad,[p+q+k[2]])
cetz.draw.hobby((-1.02, 0.02),(-1.05, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.73rad)
cetz.draw.content((-0.73, 0.62),angle:8.73rad,[p+q])
cetz.draw.hobby((-0.96, 0.89),(-0.42, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.58rad)
cetz.draw.content((0.86, 0.84),angle:4.58rad,[p+q])
cetz.draw.hobby((0.91, 0.75),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding6i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.66, -0.66))
node(node0.pos)
let node1= (pos:(0.45, -0.78))
node(node1.pos)
let node2= (pos:(0.91, 0.46))
node(node2.pos)
let node3= (pos:(-0.57, 0.12))
node(node3.pos)
let node4= (pos:(-0.95, 0.48))
node(node4.pos)
let node5= (pos:(0.28, -0.02))
node(node5.pos)
edge(node1.pos,(-0.11, -0.75),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.13, -0.87),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.33, -0.84),(-0.12, -0.81),(-0.57, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((0.77, -0.78),angle:5.91rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.75, -0.91),angle:0.79rad,[k[0]])
cetz.draw.hobby((-0.69, -0.77),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.84, -0.13),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((-0.96, -0.16),angle:1.82rad,[q])
cetz.draw.hobby((-0.76, -0.57),(-0.91, -0.12),(-0.99, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, -0.41),node1.pos,decoration:"wave",angle:-1.36rad)
cetz.draw.content((0.50, -0.38),angle:-1.36rad,[q])
cetz.draw.hobby((0.36, -0.08),(0.44, -0.39),(0.50, -0.70),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:1.76rad)
cetz.draw.content((1.07, 0.25),angle:1.76rad,[k[2]])
cetz.draw.hobby((1.04, 0.11),(0.99, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.87rad)
cetz.draw.content((-0.75, -0.06),angle:-2.87rad,[k[2]])
cetz.draw.hobby((-0.65, 0.03),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:7.96rad)
cetz.draw.content((-1.09, 0.73),angle:7.96rad,[p+k[2]])
cetz.draw.hobby((-1.05, 0.89),(-1.02, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.75),angle:4.55rad,[p+k[2]])
cetz.draw.hobby((0.87, 0.57),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.59, 0.24),node2.pos,decoration:"arrow",angle:3.79rad)
cetz.draw.content((0.52, 0.33),angle:3.79rad,[p])
cetz.draw.hobby((0.30, 0.07),(0.55, 0.28),(0.81, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.71, 0.36),node3.pos,decoration:"arrow",angle:2.40rad)
cetz.draw.content((-0.63, 0.45),angle:2.40rad,[p+q+k[2]])
cetz.draw.hobby((-0.87, 0.52),(-0.66, 0.40),(-0.53, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.14, 0.06),node5.pos,decoration:"arrow",angle:2.98rad)
cetz.draw.content((-0.12, 0.18),angle:2.98rad,[p+q])
cetz.draw.hobby((-0.48, 0.17),(-0.13, 0.12),(0.21, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding6i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.60))
node(node1.pos)
let node2= (pos:(-0.75, 0.75))
node(node2.pos)
let node3= (pos:(-0.06, 0.55))
node(node3.pos)
let node4= (pos:(-0.54, 0.06))
node(node4.pos)
let node5= (pos:(0.74, 0.51))
node(node5.pos)
edge(node1.pos,(0.05, -0.69),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.07, -0.81),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.68),(0.06, -0.75),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.89, -0.72),angle:5.50rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.70, -0.97),angle:0.49rad,[k[0]])
cetz.draw.hobby((-0.57, -0.84),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.35),node4.pos,decoration:"wave",angle:1.62rad)
cetz.draw.content((-0.66, -0.36),angle:1.62rad,[q])
cetz.draw.hobby((-0.58, -0.66),(-0.61, -0.34),(-0.61, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.05),node1.pos,decoration:"wave",angle:-1.69rad)
cetz.draw.content((0.81, -0.07),angle:-1.69rad,[q])
cetz.draw.hobby((0.79, 0.39),(0.75, -0.06),(0.68, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.71),node2.pos,decoration:"coil",angle:2.87rad)
cetz.draw.content((-0.36, 0.83),angle:2.87rad,[k[2]])
cetz.draw.hobby((-0.09, 0.64),(-0.37, 0.77),(-0.67, 0.81),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.71, 0.39),node4.pos,decoration:"arrow",angle:8.13rad)
cetz.draw.content((-0.82, 0.36),angle:8.13rad,[p+k[2]])
cetz.draw.hobby((-0.81, 0.67),(-0.76, 0.37),(-0.64, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.64rad)
cetz.draw.content((-0.96, 0.79),angle:8.64rad,[p])
cetz.draw.hobby((-0.97, 0.89),(-0.86, 0.77),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.76, 0.81),angle:4.22rad,[p])
cetz.draw.hobby((0.73, 0.62),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.27, 0.28),node3.pos,decoration:"arrow",angle:3.93rad)
cetz.draw.content((-0.19, 0.19),angle:3.93rad,[p+q+k[2]])
cetz.draw.hobby((-0.45, 0.05),(-0.23, 0.24),(-0.05, 0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, 0.55),node5.pos,decoration:"arrow",angle:3.08rad)
cetz.draw.content((0.36, 0.67),angle:3.08rad,[p+q])
cetz.draw.hobby((0.02, 0.61),(0.34, 0.61),(0.67, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.74))
node(node0.pos)
let node1= (pos:(-0.60, -0.60))
node(node1.pos)
let node2= (pos:(0.06, 0.55))
node(node2.pos)
let node3= (pos:(0.74, 0.75))
node(node3.pos)
let node4= (pos:(0.55, 0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.51))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.81, -0.76),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.72, -0.89),angle:0.78rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.72),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.05, -0.69),node1.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.07, -0.81),angle:6.16rad,[k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.50, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.55, -0.35),node4.pos,decoration:"wave",angle:1.52rad)
cetz.draw.content((0.67, -0.36),angle:1.52rad,[-q])
cetz.draw.hobby((0.58, -0.67),(0.61, -0.34),(0.61, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.69, -0.05),node1.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.81, -0.07),angle:4.83rad,[-q])
cetz.draw.hobby((-0.79, 0.39),(-0.75, -0.06),(-0.68, -0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.71),node2.pos,decoration:"coil",angle:3.42rad)
cetz.draw.content((0.36, 0.83),angle:3.42rad,[k[2]])
cetz.draw.hobby((0.67, 0.81),(0.37, 0.77),(0.09, 0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.28, 0.28),node4.pos,decoration:"arrow",angle:8.64rad)
cetz.draw.content((0.19, 0.19),angle:8.64rad,[p+q+k[2]])
cetz.draw.hobby((0.05, 0.46),(0.23, 0.23),(0.46, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.35, 0.55),node2.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.36, 0.67),angle:3.20rad,[p+q])
cetz.draw.hobby((-0.67, 0.58),(-0.34, 0.61),(-0.02, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.39),node3.pos,decoration:"arrow",angle:4.44rad)
cetz.draw.content((0.83, 0.36),angle:4.44rad,[p+k[2]])
cetz.draw.hobby((0.64, 0.09),(0.77, 0.37),(0.81, 0.67),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.34rad)
cetz.draw.content((-0.97, 0.70),angle:8.34rad,[p])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.92rad)
cetz.draw.content((0.79, 0.96),angle:3.92rad,[p])
cetz.draw.hobby((0.77, 0.86),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.73))
node(node0.pos)
let node1= (pos:(-0.32, -0.70))
node(node1.pos)
let node2= (pos:(-0.95, 0.06))
node(node2.pos)
let node3= (pos:(-0.62, 0.69))
node(node3.pos)
let node4= (pos:(0.94, 0.11))
node(node4.pos)
let node5= (pos:(0.29, 0.21))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.64rad)
cetz.draw.content((0.89, -0.77),angle:5.64rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.61, -0.96),angle:0.42rad,[-q+k[0]])
cetz.draw.hobby((-0.39, -0.80),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.75),node1.pos,decoration:"arrow",angle:6.25rad)
cetz.draw.content((0.15, -0.87),angle:6.25rad,[k[0]])
cetz.draw.hobby((0.55, -0.80),(0.15, -0.81),(-0.24, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.76, -0.31),node4.pos,decoration:"wave",angle:1.23rad)
cetz.draw.content((0.64, -0.27),angle:1.23rad,[-q])
cetz.draw.hobby((0.60, -0.63),(0.70, -0.28),(0.84, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.02, -0.24),node1.pos,decoration:"wave",angle:4.12rad)
cetz.draw.content((-0.12, -0.18),angle:4.12rad,[-q])
cetz.draw.hobby((0.18, 0.16),(-0.07, -0.21),(-0.31, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.75, 0.37),node2.pos,decoration:"coil",angle:-2.05rad)
cetz.draw.content((-0.64, 0.32),angle:-2.05rad,[k[2]])
cetz.draw.hobby((-0.58, 0.60),(-0.70, 0.33),(-0.86, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:4.86rad)
cetz.draw.content((1.09, -0.10),angle:4.86rad,[p+q+k[2]])
cetz.draw.hobby((1.05, -0.23),(1.01, 0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.45rad)
cetz.draw.content((-0.86, -0.15),angle:1.45rad,[p+q+k[2]])
cetz.draw.hobby((-0.90, -0.05),(-0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:8.03rad)
cetz.draw.content((-1.09, 0.18),angle:8.03rad,[p+q])
cetz.draw.hobby((-1.04, 0.22),(-1.03, 0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.31rad)
cetz.draw.content((0.62, 0.39),angle:3.31rad,[p+q])
cetz.draw.hobby((0.38, 0.29),(0.89, 0.38),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:8.74rad)
cetz.draw.content((-0.88, 0.75),angle:8.74rad,[p+k[2]])
cetz.draw.hobby((-0.96, 0.89),(-0.73, 0.70),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.64rad)
cetz.draw.content((0.85, 0.56),angle:4.64rad,[p+k[2]])
cetz.draw.hobby((0.88, 0.21),(0.93, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.15, 0.47),node5.pos,decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.10, 0.58),angle:2.66rad,[p])
cetz.draw.hobby((-0.50, 0.70),(-0.13, 0.52),(0.23, 0.32),stroke:stroke,mark: (end: ">"))
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(0.66, -0.66))
node(node0.pos)
let node1= (pos:(-0.45, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.12))
node(node2.pos)
let node3= (pos:(-0.91, 0.46))
node(node3.pos)
let node4= (pos:(0.95, 0.48))
node(node4.pos)
let node5= (pos:(-0.28, -0.02))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.92, -0.74),angle:5.49rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.78, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.68, -1.00),angle:0.38rad,[-q+k[0]])
cetz.draw.hobby((-0.52, -0.87),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.75),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.13, -0.87),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.57, -0.74),(0.12, -0.81),(-0.33, -0.84),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.85, -0.14),node4.pos,decoration:"wave",angle:1.31rad)
cetz.draw.content((0.96, -0.17),angle:1.31rad,[-q])
cetz.draw.hobby((0.76, -0.57),(0.91, -0.12),(1.00, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, -0.41),node1.pos,decoration:"wave",angle:4.50rad)
cetz.draw.content((-0.50, -0.38),angle:4.50rad,[-q])
cetz.draw.hobby((-0.36, -0.08),(-0.44, -0.38),(-0.50, -0.69),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.82, 0.18),angle:2.87rad,[k[2]])
cetz.draw.hobby((0.92, 0.08),(0.69, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-1.77rad)
cetz.draw.content((-0.84, 0.21),angle:-1.77rad,[k[2]])
cetz.draw.hobby((-0.87, 0.35),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.71, 0.36),node4.pos,decoration:"arrow",angle:3.88rad)
cetz.draw.content((0.63, 0.45),angle:3.88rad,[p+q+k[2]])
cetz.draw.hobby((0.53, 0.19),(0.66, 0.40),(0.88, 0.52),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.06),node2.pos,decoration:"arrow",angle:3.31rad)
cetz.draw.content((0.12, 0.18),angle:3.31rad,[p+q])
cetz.draw.hobby((-0.21, 0.05),(0.14, 0.12),(0.48, 0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:8.02rad)
cetz.draw.content((-1.07, 0.71),angle:8.02rad,[p+k[2]])
cetz.draw.hobby((-1.04, 0.89),(-0.98, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.85, 0.75),angle:4.61rad,[p+k[2]])
cetz.draw.hobby((0.90, 0.58),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.59, 0.24),node5.pos,decoration:"arrow",angle:2.49rad)
cetz.draw.content((-0.52, 0.33),angle:2.49rad,[p])
cetz.draw.hobby((-0.81, 0.46),(-0.55, 0.28),(-0.30, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.63))
node(node0.pos)
let node1= (pos:(0.45, -0.86))
node(node1.pos)
let node2= (pos:(1.00, 0.00))
node(node2.pos)
let node3= (pos:(0.03, 0.32))
node(node3.pos)
let node4= (pos:(-0.88, 0.52))
node(node4.pos)
let node5= (pos:(0.43, -0.19))
node(node5.pos)
edge(node1.pos,(-0.10, -0.77),node0.pos,decoration:"arrow",angle:6.08rad)
cetz.draw.content((-0.12, -0.89),angle:6.08rad,[q+k[0]])
cetz.draw.hobby((0.33, -0.90),(-0.11, -0.83),(-0.54, -0.72),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.99, -0.99),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.75, -0.81),angle:6.03rad,[k[0]])
cetz.draw.hobby((0.91, -0.91),(0.56, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.99, -0.99),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.73, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.66, -0.75),(-0.88, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.76, -0.06),node4.pos,decoration:"wave",angle:1.79rad)
cetz.draw.content((-0.88, -0.09),angle:1.79rad,[q])
cetz.draw.hobby((-0.71, -0.53),(-0.82, -0.07),(-0.92, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.44, -0.54),node1.pos,decoration:"wave",angle:-1.54rad)
cetz.draw.content((0.56, -0.53),angle:-1.54rad,[q])
cetz.draw.hobby((0.49, -0.25),(0.50, -0.52),(0.51, -0.79),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.99, -0.33),decoration:"coil",angle:1.55rad)
cetz.draw.content((1.12, -0.17),angle:1.55rad,[-p-q])
cetz.draw.hobby((1.06, -0.23),(1.06, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.99, -0.33),decoration:"coil",angle:-2.58rad)
cetz.draw.content((-0.42, -0.11),angle:-2.58rad,[-p-q])
cetz.draw.hobby((-0.02, 0.21),(-0.88, -0.33),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.99, 0.33),decoration:"arrow",angle:4.17rad)
cetz.draw.content((-0.84, 0.36),angle:4.17rad,[-p-q+k[3]])
cetz.draw.hobby((-0.89, 0.39),(-0.88, 0.40),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.99, 0.33),decoration:"arrow",angle:4.73rad)
cetz.draw.content((0.88, 0.17),angle:4.73rad,[-p-q+k[3]])
cetz.draw.hobby((0.94, 0.10),(0.94, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.72, -0.07),node2.pos,decoration:"arrow",angle:3.47rad)
cetz.draw.content((0.68, 0.04),angle:3.47rad,[k[3]])
cetz.draw.hobby((0.46, -0.11),(0.69, -0.02),(0.93, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.99, 0.99),decoration:"arrow",angle:6.90rad)
cetz.draw.content((0.44, 0.75),angle:6.90rad,[-p+k[3]])
cetz.draw.hobby((0.88, 0.99),(0.08, 0.42),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.99, 0.99),decoration:"arrow",angle:4.94rad)
cetz.draw.content((-1.06, 0.73),angle:4.94rad,[-p+k[3]])
cetz.draw.hobby((-0.96, 0.60),(-1.03, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.22, 0.07),node5.pos,decoration:"arrow",angle:8.52rad)
cetz.draw.content((0.12, -0.00),angle:8.52rad,[q+k[3]])
cetz.draw.hobby((0.02, 0.23),(0.18, 0.02),(0.34, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.63))
node(node0.pos)
let node1= (pos:(0.52, -0.77))
node(node1.pos)
let node2= (pos:(-0.48, 0.29))
node(node2.pos)
let node3= (pos:(0.57, 0.67))
node(node3.pos)
let node4= (pos:(-0.93, 0.49))
node(node4.pos)
let node5= (pos:(0.74, -0.05))
node(node5.pos)
edge(node1.pos,(-0.05, -0.72),node0.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.07, -0.84),angle:6.16rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.82),(-0.06, -0.78),(-0.52, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.81, -0.78),angle:5.84rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.64, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.73, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.65, -0.75),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node4.pos,decoration:"wave",angle:1.84rad)
cetz.draw.content((-0.91, -0.13),angle:1.84rad,[q])
cetz.draw.hobby((-0.72, -0.54),(-0.86, -0.09),(-0.97, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.64, -0.42),node1.pos,decoration:"wave",angle:-1.87rad)
cetz.draw.content((0.76, -0.46),angle:-1.87rad,[q])
cetz.draw.hobby((0.78, -0.14),(0.70, -0.43),(0.60, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, 0.49),node2.pos,decoration:"coil",angle:3.49rad)
cetz.draw.content((0.00, 0.61),angle:3.49rad,[-p-q])
cetz.draw.hobby((0.45, 0.69),(0.02, 0.55),(-0.40, 0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.67, 0.47),node4.pos,decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.63, 0.58),angle:5.87rad,[-p-q+k[3]])
cetz.draw.hobby((-0.46, 0.37),(-0.64, 0.52),(-0.88, 0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.65rad)
cetz.draw.content((-0.68, 0.04),angle:3.65rad,[k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.54, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:3.34rad)
cetz.draw.content((0.85, 0.09),angle:3.34rad,[k[3]])
cetz.draw.hobby((0.83, 0.03),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.95rad)
cetz.draw.content((0.71, 0.93),angle:6.95rad,[-p+k[3]])
cetz.draw.hobby((0.88, 0.99),(0.61, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.85rad)
cetz.draw.content((-1.08, 0.73),angle:4.85rad,[-p+k[3]])
cetz.draw.hobby((-1.00, 0.58),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.32),node5.pos,decoration:"arrow",angle:1.80rad)
cetz.draw.content((0.78, 0.35),angle:1.80rad,[q+k[3]])
cetz.draw.hobby((0.65, 0.61),(0.73, 0.32),(0.79, 0.03),stroke:stroke,mark: (end: ">"))
})
let embedding7i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.89))
node(node0.pos)
let node1= (pos:(0.62, -0.65))
node(node1.pos)
let node2= (pos:(-0.00, 0.02))
node(node2.pos)
let node3= (pos:(-0.83, 0.29))
node(node3.pos)
let node4= (pos:(-0.51, -0.24))
node(node4.pos)
let node5= (pos:(0.88, 0.52))
node(node5.pos)
edge(node1.pos,(0.09, -0.80),node0.pos,decoration:"arrow",angle:0.22rad)
cetz.draw.content((0.12, -0.91),angle:0.22rad,[q+k[0]])
cetz.draw.hobby((0.54, -0.74),(0.10, -0.86),(-0.35, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.53rad)
cetz.draw.content((0.89, -0.74),angle:5.53rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.74, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.21rad)
cetz.draw.content((-0.71, -1.06),angle:0.21rad,[k[0]])
cetz.draw.hobby((-0.56, -0.97),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.52, -0.58),node4.pos,decoration:"wave",angle:1.64rad)
cetz.draw.content((-0.64, -0.59),angle:1.64rad,[q])
cetz.draw.hobby((-0.54, -0.84),(-0.58, -0.57),(-0.58, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, -0.07),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.88, -0.09),angle:-1.79rad,[q])
cetz.draw.hobby((0.92, 0.39),(0.82, -0.08),(0.71, -0.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"coil",angle:2.81rad)
cetz.draw.content((0.54, -0.05),angle:2.81rad,[-p-q])
cetz.draw.hobby((0.93, -0.24),(0.11, 0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"coil",angle:-1.84rad)
cetz.draw.content((-0.80, -0.05),angle:-1.84rad,[-p-q])
cetz.draw.hobby((-0.79, 0.18),(-0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, -0.12),node4.pos,decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.19, -0.22),angle:0.48rad,[-p-q+k[3]])
cetz.draw.hobby((-0.02, -0.06),(-0.22, -0.17),(-0.43, -0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:9.12rad)
cetz.draw.content((-0.54, 0.06),angle:9.12rad,[k[3]])
cetz.draw.hobby((-0.92, 0.25),(-0.12, -0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.13rad)
cetz.draw.content((1.04, 0.49),angle:2.13rad,[k[3]])
cetz.draw.hobby((0.99, 0.47),(1.00, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.69, 0.03),node3.pos,decoration:"arrow",angle:5.24rad)
cetz.draw.content((-0.80, -0.03),angle:5.24rad,[-p+k[3]])
cetz.draw.hobby((-0.59, -0.23),(-0.73, -0.02),(-0.85, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.62rad)
cetz.draw.content((0.83, 0.79),angle:7.62rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.92),(0.85, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.95rad)
cetz.draw.content((-1.03, 0.62),angle:4.95rad,[q+k[3]])
cetz.draw.hobby((-0.91, 0.37),(-1.03, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.81))
node(node0.pos)
let node1= (pos:(-0.30, -0.63))
node(node1.pos)
let node2= (pos:(-0.87, 0.50))
node(node2.pos)
let node3= (pos:(-0.03, 0.39))
node(node3.pos)
let node4= (pos:(0.69, -0.11))
node(node4.pos)
let node5= (pos:(0.52, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.86, -0.80),angle:5.84rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.72, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.59, -0.92),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.73),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.76),node1.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((0.12, -0.87),angle:6.09rad,[k[0]])
cetz.draw.hobby((0.51, -0.87),(0.14, -0.82),(-0.23, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.67, -0.47),node4.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.79, -0.49),angle:1.46rad,[-q])
cetz.draw.hobby((0.68, -0.76),(0.74, -0.47),(0.75, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.09, -0.07),node1.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.00, -0.00),angle:4.10rad,[-q])
cetz.draw.hobby((0.39, 0.46),(0.06, -0.01),(-0.27, -0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.46),node2.pos,decoration:"coil",angle:3.01rad)
cetz.draw.content((-0.44, 0.58),angle:3.01rad,[-p])
cetz.draw.hobby((-0.10, 0.46),(-0.44, 0.52),(-0.78, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:6.63rad)
cetz.draw.content((0.80, 0.06),angle:6.63rad,[-p+k[3]])
cetz.draw.hobby((0.89, 0.02),(0.76, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:1.31rad)
cetz.draw.content((-0.82, 0.22),angle:1.31rad,[-p+k[3]])
cetz.draw.hobby((-0.84, 0.39),(-0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.11rad)
cetz.draw.content((-1.05, 0.72),angle:8.11rad,[k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.95, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.91rad)
cetz.draw.content((0.68, 0.86),angle:3.91rad,[k[3]])
cetz.draw.hobby((0.55, 0.65),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.32, 0.12),node3.pos,decoration:"arrow",angle:5.67rad)
cetz.draw.content((0.25, 0.02),angle:5.67rad,[-p-q+k[3]])
cetz.draw.hobby((0.58, -0.12),(0.28, 0.07),(0.00, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.23, 0.55),node5.pos,decoration:"arrow",angle:3.40rad)
cetz.draw.content((0.20, 0.66),angle:3.40rad,[-q+k[3]])
cetz.draw.hobby((-0.03, 0.48),(0.21, 0.60),(0.48, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.78))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(-0.02, 0.44))
node(node2.pos)
let node3= (pos:(0.85, 0.51))
node(node3.pos)
let node4= (pos:(-0.42, -0.13))
node(node4.pos)
let node5= (pos:(-0.78, 0.53))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.97rad)
cetz.draw.content((0.69, -0.77),angle:5.97rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.42, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.87rad)
cetz.draw.content((-0.75, -0.90),angle:0.87rad,[-q+k[0]])
cetz.draw.hobby((-0.71, -0.75),(-0.89, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.20, -0.76),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.21, -0.88),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.21, -0.84),(-0.21, -0.82),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.03, -0.45),node4.pos,decoration:"wave",angle:2.41rad)
cetz.draw.content((0.05, -0.36),angle:2.41rad,[-q])
cetz.draw.hobby((0.28, -0.66),(-0.00, -0.39),(-0.30, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.79, -0.06),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.91, -0.07),angle:4.79rad,[-q])
cetz.draw.hobby((-0.85, 0.41),(-0.85, -0.06),(-0.78, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.43, 0.49),node2.pos,decoration:"coil",angle:3.22rad)
cetz.draw.content((0.42, 0.61),angle:3.22rad,[-p])
cetz.draw.hobby((0.76, 0.57),(0.41, 0.55),(0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.20, 0.15),node4.pos,decoration:"arrow",angle:0.96rad)
cetz.draw.content((-0.10, 0.08),angle:0.96rad,[-p+k[3]])
cetz.draw.hobby((0.00, 0.35),(-0.15, 0.11),(-0.32, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.40, 0.53),node2.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.39, 0.65),angle:3.04rad,[k[3]])
cetz.draw.hobby((-0.71, 0.59),(-0.39, 0.59),(-0.07, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:4.99rad)
cetz.draw.content((1.04, 0.29),angle:4.99rad,[-p-q+k[3]])
cetz.draw.hobby((1.03, 0.11),(0.94, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.73, -0.18),angle:6.06rad,[-p-q+k[3]])
cetz.draw.hobby((-0.53, -0.17),(-0.92, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.28rad)
cetz.draw.content((-1.00, 0.71),angle:8.28rad,[-q+k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.88, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.42rad)
cetz.draw.content((0.81, 0.79),angle:4.42rad,[-q+k[3]])
cetz.draw.hobby((0.82, 0.62),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding7f2=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.73))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(0.59, 0.71))
node(node2.pos)
let node3= (pos:(-0.59, 0.71))
node(node3.pos)
let node4= (pos:(0.27, 0.16))
node(node4.pos)
let node5= (pos:(-0.27, 0.16))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((0.81, -0.76),angle:5.78rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.72),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.69, -0.97),angle:0.50rad,[-q+k[0]])
cetz.draw.hobby((-0.56, -0.83),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.76),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.88),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.41, -0.80),(0.00, -0.82),(-0.41, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.41, -0.29),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((0.52, -0.26),angle:1.82rad,[-q])
cetz.draw.hobby((0.54, -0.62),(0.46, -0.26),(0.36, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.41, -0.29),node1.pos,decoration:"wave",angle:4.46rad)
cetz.draw.content((-0.52, -0.26),angle:4.46rad,[-q])
cetz.draw.hobby((-0.36, 0.09),(-0.46, -0.26),(-0.54, -0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:3.76rad)
cetz.draw.content((0.73, 0.96),angle:3.76rad,[-p])
cetz.draw.hobby((0.88, 0.99),(0.64, 0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:2.52rad)
cetz.draw.content((-0.87, 0.76),angle:2.52rad,[-p])
cetz.draw.hobby((-0.71, 0.72),(-0.95, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.49, 0.42),node4.pos,decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.60, 0.36),angle:1.06rad,[-p+k[3]])
cetz.draw.hobby((0.64, 0.64),(0.54, 0.38),(0.36, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.50),node2.pos,decoration:"arrow",angle:3.71rad)
cetz.draw.content((0.08, 0.60),angle:3.71rad,[k[3]])
cetz.draw.hobby((-0.24, 0.27),(0.10, 0.54),(0.47, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.14, 0.50),node3.pos,decoration:"arrow",angle:5.72rad)
cetz.draw.content((-0.08, 0.60),angle:5.72rad,[-p-q+k[3]])
cetz.draw.hobby((0.24, 0.28),(-0.10, 0.54),(-0.47, 0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.42),node5.pos,decoration:"arrow",angle:8.36rad)
cetz.draw.content((-0.60, 0.36),angle:8.36rad,[-q+k[3]])
cetz.draw.hobby((-0.64, 0.63),(-0.54, 0.37),(-0.36, 0.15),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.79))
node(node0.pos)
let node1= (pos:(0.56, -0.73))
node(node1.pos)
let node2= (pos:(-0.61, -0.01))
node(node2.pos)
let node3= (pos:(-0.07, 0.60))
node(node3.pos)
let node4= (pos:(-1.00, -0.02))
node(node4.pos)
let node5= (pos:(0.89, 0.11))
node(node5.pos)
edge(node1.pos,(-0.00, -0.78),node0.pos,decoration:"arrow",angle:0.05rad)
cetz.draw.content((0.00, -0.90),angle:0.05rad,[q+k[0]])
cetz.draw.hobby((0.45, -0.81),(-0.00, -0.84),(-0.46, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.99, -0.99),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.84, -0.76),angle:5.74rad,[k[0]])
cetz.draw.hobby((0.94, -0.89),(0.68, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.99, -0.99),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.73, -1.00),angle:0.45rad,[k[0]])
cetz.draw.hobby((-0.64, -0.89),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.44),node4.pos,decoration:"wave",angle:2.08rad)
cetz.draw.content((-0.91, -0.50),angle:2.08rad,[q])
cetz.draw.hobby((-0.68, -0.76),(-0.87, -0.45),(-1.02, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.70, -0.30),node1.pos,decoration:"wave",angle:4.34rad)
cetz.draw.content((0.59, -0.26),angle:4.34rad,[q])
cetz.draw.hobby((0.80, 0.06),(0.65, -0.28),(0.53, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.33, 0.31),node2.pos,decoration:"coil",angle:-2.29rad)
cetz.draw.content((-0.24, 0.23),angle:-2.29rad,[-p-2 q-k[3]])
cetz.draw.hobby((-0.08, 0.50),(-0.29, 0.25),(-0.51, 0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.81, 0.12),node4.pos,decoration:"arrow",angle:6.30rad)
cetz.draw.content((-0.81, 0.24),angle:6.30rad,[-p-2 q])
cetz.draw.hobby((-0.58, 0.07),(-0.81, 0.18),(-1.03, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.99, -0.33),decoration:"arrow",angle:3.84rad)
cetz.draw.content((-0.72, -0.26),angle:3.84rad,[k[3]])
cetz.draw.hobby((-0.88, -0.31),(-0.65, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.99, -0.33),decoration:"arrow",angle:1.79rad)
cetz.draw.content((1.06, -0.08),angle:1.79rad,[k[3]])
cetz.draw.hobby((0.97, 0.03),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.99, 0.33),decoration:"arrow",angle:6.04rad)
cetz.draw.content((0.49, 0.58),angle:6.04rad,[-p-q])
cetz.draw.hobby((0.91, 0.41),(0.04, 0.63),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.99, 0.33),decoration:"arrow",angle:4.69rad)
cetz.draw.content((-1.12, 0.16),angle:4.69rad,[-p-q])
cetz.draw.hobby((-1.06, 0.08),(-1.06, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.99, 0.99),decoration:"arrow",angle:7.74rad)
cetz.draw.content((0.82, 0.57),angle:7.74rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.90),(0.84, 0.22),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.99, 0.99),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.58, 0.69),angle:5.88rad,[q+k[3]])
cetz.draw.hobby((-0.19, 0.58),(-0.93, 0.90),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.78))
node(node0.pos)
let node1= (pos:(-0.30, -0.65))
node(node1.pos)
let node2= (pos:(0.71, 0.09))
node(node2.pos)
let node3= (pos:(-0.86, 0.45))
node(node3.pos)
let node4= (pos:(-0.07, -0.01))
node(node4.pos)
let node5= (pos:(0.62, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.79, -0.78),angle:5.88rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.60, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.47rad)
cetz.draw.content((-0.60, -0.93),angle:0.47rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.74),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.77),node1.pos,decoration:"arrow",angle:6.11rad)
cetz.draw.content((0.06, -0.89),angle:6.11rad,[k[0]])
cetz.draw.hobby((0.41, -0.85),(0.07, -0.83),(-0.25, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.22, -0.40),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.31, -0.33),angle:2.19rad,[-q])
cetz.draw.hobby((0.48, -0.67),(0.26, -0.36),(0.04, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.20, -0.08),node1.pos,decoration:"wave",angle:-2.23rad)
cetz.draw.content((0.30, -0.16),angle:-2.23rad,[-q])
cetz.draw.hobby((0.60, 0.38),(0.25, -0.12),(-0.15, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.83rad)
cetz.draw.content((0.89, 0.16),angle:2.83rad,[-p+q-k[3]])
cetz.draw.hobby((0.92, 0.09),(0.83, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-1.87rad)
cetz.draw.content((-0.82, 0.19),angle:-1.87rad,[-p+q-k[3]])
cetz.draw.hobby((-0.83, 0.33),(-0.91, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.32, 0.07),node4.pos,decoration:"arrow",angle:6.41rad)
cetz.draw.content((0.31, 0.19),angle:6.41rad,[-p+q])
cetz.draw.hobby((0.63, 0.15),(0.31, 0.13),(-0.00, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.79, 0.35),node2.pos,decoration:"arrow",angle:1.82rad)
cetz.draw.content((0.91, 0.38),angle:1.82rad,[k[3]])
cetz.draw.hobby((0.70, 0.57),(0.86, 0.35),(0.80, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.47, 0.23),node3.pos,decoration:"arrow",angle:5.77rad)
cetz.draw.content((-0.41, 0.34),angle:5.77rad,[-p])
cetz.draw.hobby((-0.11, 0.09),(-0.43, 0.28),(-0.75, 0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.17rad)
cetz.draw.content((0.72, 0.84),angle:7.17rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.96),(0.64, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-1.05, 0.69),angle:4.96rad,[-q+k[3]])
cetz.draw.hobby((-0.94, 0.53),(-1.03, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.63))
node(node0.pos)
let node1= (pos:(-0.47, -0.72))
node(node1.pos)
let node2= (pos:(0.05, 0.68))
node(node2.pos)
let node3= (pos:(0.70, 0.74))
node(node3.pos)
let node4= (pos:(-0.57, 0.52))
node(node4.pos)
let node5= (pos:(0.19, 0.07))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.71, -0.71),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.43, -0.62),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.68, -0.97),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.53, -0.82),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.07, -0.73),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((-0.06, -0.85),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.26, -0.72),(-0.06, -0.79),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.17, -0.07),node4.pos,decoration:"wave",angle:2.22rad)
cetz.draw.content((-0.27, -0.14),angle:2.22rad,[-q])
cetz.draw.hobby((0.17, -0.57),(-0.21, -0.12),(-0.55, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.16, -0.33),node1.pos,decoration:"wave",angle:4.02rad)
cetz.draw.content((-0.25, -0.25),angle:4.02rad,[-q])
cetz.draw.hobby((0.08, 0.04),(-0.19, -0.28),(-0.45, -0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, 0.78),node2.pos,decoration:"coil",angle:3.22rad)
cetz.draw.content((0.37, 0.90),angle:3.22rad,[-p+q-k[3]])
cetz.draw.hobby((0.65, 0.82),(0.37, 0.84),(0.09, 0.77),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.29, 0.65),node4.pos,decoration:"arrow",angle:6.55rad)
cetz.draw.content((-0.32, 0.77),angle:6.55rad,[-p+q])
cetz.draw.hobby((-0.01, 0.74),(-0.29, 0.71),(-0.55, 0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.10, 0.37),node2.pos,decoration:"arrow",angle:4.94rad)
cetz.draw.content((-0.01, 0.34),angle:4.94rad,[k[3]])
cetz.draw.hobby((0.12, 0.11),(0.04, 0.36),(-0.00, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.00rad)
cetz.draw.content((0.77, 0.96),angle:7.00rad,[-p])
cetz.draw.hobby((0.89, 0.98),(0.74, 0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.44rad)
cetz.draw.content((-0.88, 0.68),angle:5.44rad,[-p])
cetz.draw.hobby((-0.68, 0.55),(-0.98, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.51, 0.37),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((0.60, 0.30),angle:0.93rad,[-q+k[3]])
cetz.draw.hobby((0.73, 0.64),(0.55, 0.33),(0.30, 0.08),stroke:stroke,mark: (end: ">"))
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.84))
node(node0.pos)
let node1= (pos:(-0.27, -0.64))
node(node1.pos)
let node2= (pos:(-0.95, 0.05))
node(node2.pos)
let node3= (pos:(-0.54, 0.58))
node(node3.pos)
let node4= (pos:(0.54, -0.16))
node(node4.pos)
let node5= (pos:(0.70, 0.47))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((0.84, -0.81),angle:5.91rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.70, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.58, -0.93),angle:0.46rad,[-q+k[0]])
cetz.draw.hobby((-0.33, -0.74),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.15, -0.78),node1.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.12, -0.89),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.50, -0.89),(0.14, -0.84),(-0.21, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.58, -0.51),node4.pos,decoration:"wave",angle:1.63rad)
cetz.draw.content((0.70, -0.50),angle:1.63rad,[-q])
cetz.draw.hobby((0.65, -0.77),(0.64, -0.50),(0.61, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.18, -0.07),node1.pos,decoration:"wave",angle:3.99rad)
cetz.draw.content((0.09, 0.01),angle:3.99rad,[-q])
cetz.draw.hobby((0.55, 0.41),(0.15, -0.02),(-0.23, -0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.72, 0.31),node2.pos,decoration:"coil",angle:-2.21rad)
cetz.draw.content((-0.62, 0.24),angle:-2.21rad,[-p+q-k[3]])
cetz.draw.hobby((-0.52, 0.50),(-0.68, 0.26),(-0.86, 0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.81, -0.14),angle:5.93rad,[-p+q])
cetz.draw.hobby((0.93, -0.24),(0.66, -0.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.44rad)
cetz.draw.content((-0.86, -0.16),angle:1.44rad,[-p+q])
cetz.draw.hobby((-0.90, -0.06),(-0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:8.03rad)
cetz.draw.content((-1.09, 0.17),angle:8.03rad,[k[3]])
cetz.draw.hobby((-1.04, 0.22),(-1.03, 0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:2.72rad)
cetz.draw.content((0.90, 0.51),angle:2.72rad,[k[3]])
cetz.draw.hobby((0.82, 0.48),(0.93, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.23),node3.pos,decoration:"arrow",angle:5.68rad)
cetz.draw.content((0.07, 0.33),angle:5.68rad,[-p])
cetz.draw.hobby((0.47, -0.04),(0.04, 0.27),(-0.40, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.35rad)
cetz.draw.content((0.75, 0.79),angle:7.35rad,[-q+k[3]])
cetz.draw.hobby((0.90, 0.94),(0.70, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((-0.85, 0.70),angle:5.55rad,[-q+k[3]])
cetz.draw.hobby((-0.66, 0.61),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.65))
node(node0.pos)
let node1= (pos:(0.47, -0.89))
node(node1.pos)
let node2= (pos:(0.00, 0.02))
node(node2.pos)
let node3= (pos:(0.83, 0.28))
node(node3.pos)
let node4= (pos:(-0.89, 0.52))
node(node4.pos)
let node5= (pos:(0.51, -0.25))
node(node5.pos)
edge(node1.pos,(-0.09, -0.79),node0.pos,decoration:"arrow",angle:6.07rad)
cetz.draw.content((-0.11, -0.91),angle:6.07rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.93),(-0.10, -0.85),(-0.54, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.07rad)
cetz.draw.content((0.76, -0.83),angle:6.07rad,[k[0]])
cetz.draw.hobby((0.91, -0.92),(0.58, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.76rad)
cetz.draw.content((-0.73, -0.91),angle:0.76rad,[k[0]])
cetz.draw.hobby((-0.66, -0.76),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.77, -0.07),node4.pos,decoration:"wave",angle:1.79rad)
cetz.draw.content((-0.88, -0.09),angle:1.79rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.83, -0.08),(-0.92, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.52, -0.58),node1.pos,decoration:"wave",angle:-1.63rad)
cetz.draw.content((0.64, -0.59),angle:-1.63rad,[q])
cetz.draw.hobby((0.57, -0.31),(0.58, -0.57),(0.55, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"coil",angle:0.34rad)
cetz.draw.content((-0.46, -0.27),angle:0.34rad,[p+q])
cetz.draw.hobby((-0.89, -0.36),(-0.07, -0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"coil",angle:-1.30rad)
cetz.draw.content((1.03, 0.01),angle:-1.30rad,[p+q])
cetz.draw.hobby((0.91, 0.20),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:4.16rad)
cetz.draw.content((-0.84, 0.36),angle:4.16rad,[p+q+k[3]])
cetz.draw.hobby((-0.90, 0.39),(-0.89, 0.40),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:3.45rad)
cetz.draw.content((0.47, 0.29),angle:3.45rad,[p+q+k[3]])
cetz.draw.hobby((0.08, 0.10),(0.89, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, -0.12),node2.pos,decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.19, -0.22),angle:5.80rad,[k[3]])
cetz.draw.hobby((0.43, -0.28),(0.22, -0.18),(0.02, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.62rad)
cetz.draw.content((0.80, 0.67),angle:7.62rad,[p+2 q+k[3]])
cetz.draw.hobby((0.92, 0.92),(0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.95rad)
cetz.draw.content((-1.06, 0.73),angle:4.95rad,[p+2 q+k[3]])
cetz.draw.hobby((-0.97, 0.60),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, 0.02),node5.pos,decoration:"arrow",angle:1.03rad)
cetz.draw.content((0.79, -0.04),angle:1.03rad,[q+k[3]])
cetz.draw.hobby((0.85, 0.20),(0.73, -0.02),(0.59, -0.23),stroke:stroke,mark: (end: ">"))
})
let embedding9i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.45, -0.85))
node(node0.pos)
let node1= (pos:(0.62, -0.63))
node(node1.pos)
let node2= (pos:(-1.00, 0.00))
node(node2.pos)
let node3= (pos:(-0.03, 0.32))
node(node3.pos)
let node4= (pos:(-0.43, -0.19))
node(node4.pos)
let node5= (pos:(0.88, 0.52))
node(node5.pos)
edge(node1.pos,(0.10, -0.77),node0.pos,decoration:"arrow",angle:0.20rad)
cetz.draw.content((0.12, -0.89),angle:0.20rad,[q+k[0]])
cetz.draw.hobby((0.53, -0.72),(0.10, -0.83),(-0.33, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.99, -0.99),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.73),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.96, -0.88),(0.74, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.99, -0.99),decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.69, -1.04),angle:0.25rad,[k[0]])
cetz.draw.hobby((-0.53, -0.94),(-0.88, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.44, -0.53),node4.pos,decoration:"wave",angle:1.54rad)
cetz.draw.content((-0.56, -0.53),angle:1.54rad,[q])
cetz.draw.hobby((-0.51, -0.79),(-0.50, -0.52),(-0.49, -0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, -0.06),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.88, -0.09),angle:-1.79rad,[q])
cetz.draw.hobby((0.92, 0.39),(0.82, -0.07),(0.71, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.99, -0.33),decoration:"coil",angle:1.59rad)
cetz.draw.content((-0.88, -0.16),angle:1.59rad,[p+q])
cetz.draw.hobby((-0.93, -0.23),(-0.94, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.99, -0.33),decoration:"coil",angle:-0.57rad)
cetz.draw.content((0.54, 0.10),angle:-0.57rad,[p+q])
cetz.draw.hobby((0.08, 0.32),(0.94, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.72, -0.07),node4.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.68, 0.05),angle:2.82rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.05),(-0.69, -0.01),(-0.46, -0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.99, 0.33),decoration:"arrow",angle:7.83rad)
cetz.draw.content((-1.12, 0.17),angle:7.83rad,[k[3]])
cetz.draw.hobby((-1.05, 0.23),(-1.06, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.99, 0.33),decoration:"arrow",angle:2.10rad)
cetz.draw.content((1.04, 0.49),angle:2.10rad,[k[3]])
cetz.draw.hobby((0.98, 0.46),(0.99, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.22, 0.08),node3.pos,decoration:"arrow",angle:4.04rad)
cetz.draw.content((-0.32, 0.15),angle:4.04rad,[p+2 q+k[3]])
cetz.draw.hobby((-0.44, -0.10),(-0.28, 0.10),(-0.12, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.99, 0.99),decoration:"arrow",angle:7.63rad)
cetz.draw.content((0.82, 0.78),angle:7.63rad,[q+k[3]])
cetz.draw.hobby((0.91, 0.91),(0.85, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.99, 0.99),decoration:"arrow",angle:5.67rad)
cetz.draw.content((-0.58, 0.56),angle:5.67rad,[q+k[3]])
cetz.draw.hobby((-0.15, 0.33),(-0.95, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding9i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.77))
node(node0.pos)
let node1= (pos:(0.62, -0.63))
node(node1.pos)
let node2= (pos:(0.48, 0.29))
node(node2.pos)
let node3= (pos:(-0.57, 0.67))
node(node3.pos)
let node4= (pos:(-0.74, -0.05))
node(node4.pos)
let node5= (pos:(0.93, 0.49))
node(node5.pos)
edge(node1.pos,(0.06, -0.72),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.07, -0.84),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.52, -0.71),(0.06, -0.78),(-0.40, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.90, -0.73),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.74, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.71, -1.00),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.59, -0.87),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.42),node4.pos,decoration:"wave",angle:1.87rad)
cetz.draw.content((-0.75, -0.46),angle:1.87rad,[q])
cetz.draw.hobby((-0.60, -0.72),(-0.70, -0.43),(-0.78, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.84rad)
cetz.draw.content((0.91, -0.13),angle:-1.84rad,[q])
cetz.draw.hobby((0.97, 0.36),(0.86, -0.09),(0.72, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.04, 0.49),node2.pos,decoration:"coil",angle:-0.35rad)
cetz.draw.content((-0.00, 0.61),angle:-0.35rad,[p+q])
cetz.draw.hobby((-0.45, 0.69),(-0.02, 0.55),(0.40, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:9.23rad)
cetz.draw.content((-0.89, -0.14),angle:9.23rad,[p+q+k[3]])
cetz.draw.hobby((-0.91, -0.08),(-0.85, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((0.80, 0.25),angle:2.64rad,[p+q+k[3]])
cetz.draw.hobby((0.60, 0.29),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.68, 0.47),node2.pos,decoration:"arrow",angle:6.69rad)
cetz.draw.content((0.63, 0.58),angle:6.69rad,[k[3]])
cetz.draw.hobby((0.89, 0.56),(0.65, 0.52),(0.46, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.32),node3.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.78, 0.35),angle:4.48rad,[p+2 q+k[3]])
cetz.draw.hobby((-0.79, 0.03),(-0.73, 0.32),(-0.65, 0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.72rad)
cetz.draw.content((0.85, 0.76),angle:7.72rad,[q+k[3]])
cetz.draw.hobby((0.93, 0.91),(0.89, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.62rad)
cetz.draw.content((-0.86, 0.74),angle:5.62rad,[q+k[3]])
cetz.draw.hobby((-0.69, 0.68),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.78))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(0.85, 0.51))
node(node2.pos)
let node3= (pos:(-0.01, 0.44))
node(node3.pos)
let node4= (pos:(-0.42, -0.13))
node(node4.pos)
let node5= (pos:(-0.78, 0.53))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.97rad)
cetz.draw.content((0.69, -0.77),angle:5.97rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.42, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.87rad)
cetz.draw.content((-0.75, -0.90),angle:0.87rad,[-q+k[0]])
cetz.draw.hobby((-0.71, -0.75),(-0.89, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.20, -0.76),node1.pos,decoration:"arrow",angle:6.15rad)
cetz.draw.content((-0.21, -0.88),angle:6.15rad,[k[0]])
cetz.draw.hobby((0.21, -0.84),(-0.21, -0.82),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.03, -0.45),node4.pos,decoration:"wave",angle:2.41rad)
cetz.draw.content((0.05, -0.36),angle:2.41rad,[-q])
cetz.draw.hobby((0.28, -0.66),(-0.00, -0.39),(-0.30, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.79, -0.06),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.91, -0.06),angle:4.79rad,[-q])
cetz.draw.hobby((-0.85, 0.41),(-0.85, -0.06),(-0.78, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.43, 0.49),node2.pos,decoration:"coil",angle:0.08rad)
cetz.draw.content((0.42, 0.61),angle:0.08rad,[p])
cetz.draw.hobby((0.06, 0.51),(0.41, 0.55),(0.77, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:9.20rad)
cetz.draw.content((-0.74, -0.18),angle:9.20rad,[p+k[3]])
cetz.draw.hobby((-0.92, -0.08),(-0.53, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:1.85rad)
cetz.draw.content((1.04, 0.29),angle:1.85rad,[p+k[3]])
cetz.draw.hobby((0.94, 0.43),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:7.56rad)
cetz.draw.content((0.81, 0.79),angle:7.56rad,[k[3]])
cetz.draw.hobby((0.91, 0.92),(0.82, 0.62),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-1.00, 0.71),angle:5.14rad,[k[3]])
cetz.draw.hobby((-0.88, 0.59),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.15),node3.pos,decoration:"arrow",angle:4.10rad)
cetz.draw.content((-0.10, 0.08),angle:4.10rad,[p-q+k[3]])
cetz.draw.hobby((-0.33, -0.12),(-0.15, 0.11),(0.00, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.40, 0.54),node5.pos,decoration:"arrow",angle:6.18rad)
cetz.draw.content((-0.39, 0.66),angle:6.18rad,[-q+k[3]])
cetz.draw.hobby((-0.07, 0.52),(-0.39, 0.60),(-0.71, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.81))
node(node0.pos)
let node1= (pos:(-0.30, -0.63))
node(node1.pos)
let node2= (pos:(-0.03, 0.39))
node(node2.pos)
let node3= (pos:(-0.87, 0.50))
node(node3.pos)
let node4= (pos:(0.69, -0.12))
node(node4.pos)
let node5= (pos:(0.52, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.86, -0.80),angle:5.84rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.73, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.59, -0.92),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.73),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.76),node1.pos,decoration:"arrow",angle:6.08rad)
cetz.draw.content((0.12, -0.88),angle:6.08rad,[k[0]])
cetz.draw.hobby((0.51, -0.87),(0.14, -0.82),(-0.23, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.67, -0.48),node4.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.79, -0.49),angle:1.46rad,[-q])
cetz.draw.hobby((0.68, -0.76),(0.73, -0.48),(0.75, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.09, -0.07),node1.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.00, -0.01),angle:4.10rad,[-q])
cetz.draw.hobby((0.39, 0.45),(0.06, -0.01),(-0.27, -0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.46),node2.pos,decoration:"coil",angle:-0.13rad)
cetz.draw.content((-0.44, 0.57),angle:-0.13rad,[p])
cetz.draw.hobby((-0.78, 0.55),(-0.44, 0.51),(-0.10, 0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.32, 0.11),node4.pos,decoration:"arrow",angle:8.81rad)
cetz.draw.content((0.25, 0.02),angle:8.81rad,[p+k[3]])
cetz.draw.hobby((0.00, 0.28),(0.28, 0.07),(0.58, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.23, 0.54),node2.pos,decoration:"arrow",angle:6.54rad)
cetz.draw.content((0.20, 0.66),angle:6.54rad,[k[3]])
cetz.draw.hobby((0.48, 0.61),(0.21, 0.60),(-0.02, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:4.45rad)
cetz.draw.content((-0.82, 0.22),angle:4.45rad,[p-q+k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.83, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.80, 0.05),angle:3.50rad,[p-q+k[3]])
cetz.draw.hobby((0.76, -0.03),(0.89, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.06rad)
cetz.draw.content((0.68, 0.85),angle:7.06rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.97),(0.55, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.97rad)
cetz.draw.content((-1.05, 0.72),angle:4.97rad,[-q+k[3]])
cetz.draw.hobby((-0.95, 0.58),(-1.03, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.73))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.60, 0.70))
node(node2.pos)
let node3= (pos:(0.59, 0.71))
node(node3.pos)
let node4= (pos:(0.26, 0.15))
node(node4.pos)
let node5= (pos:(-0.27, 0.14))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.81, -0.76),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.69, -0.97),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.56, -0.83),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.77),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.89),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.41, -0.80),(-0.00, -0.83),(-0.41, -0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.41, -0.30),node4.pos,decoration:"wave",angle:1.83rad)
cetz.draw.content((0.52, -0.27),angle:1.83rad,[-q])
cetz.draw.hobby((0.54, -0.63),(0.46, -0.27),(0.35, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.41, -0.30),node1.pos,decoration:"wave",angle:4.46rad)
cetz.draw.content((-0.52, -0.27),angle:4.46rad,[-q])
cetz.draw.hobby((-0.36, 0.08),(-0.46, -0.27),(-0.54, -0.63),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:5.64rad)
cetz.draw.content((-0.87, 0.75),angle:5.64rad,[p])
cetz.draw.hobby((-0.96, 0.89),(-0.72, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:0.62rad)
cetz.draw.content((0.73, 0.95),angle:0.62rad,[p])
cetz.draw.hobby((0.64, 0.81),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.15, 0.49),node4.pos,decoration:"arrow",angle:2.58rad)
cetz.draw.content((-0.09, 0.59),angle:2.58rad,[p+k[3]])
cetz.draw.hobby((-0.48, 0.72),(-0.10, 0.53),(0.23, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 0.40),node2.pos,decoration:"arrow",angle:5.23rad)
cetz.draw.content((-0.60, 0.34),angle:5.23rad,[k[3]])
cetz.draw.hobby((-0.36, 0.14),(-0.54, 0.36),(-0.65, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.49, 0.41),node3.pos,decoration:"arrow",angle:4.20rad)
cetz.draw.content((0.59, 0.35),angle:4.20rad,[p-q+k[3]])
cetz.draw.hobby((0.35, 0.15),(0.53, 0.37),(0.64, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.49),node5.pos,decoration:"arrow",angle:6.85rad)
cetz.draw.content((0.08, 0.59),angle:6.85rad,[-q+k[3]])
cetz.draw.hobby((0.47, 0.73),(0.09, 0.53),(-0.24, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.77))
node(node0.pos)
let node1= (pos:(0.62, -0.66))
node(node1.pos)
let node2= (pos:(0.62, 0.06))
node(node2.pos)
let node3= (pos:(0.05, 0.61))
node(node3.pos)
let node4= (pos:(-0.91, -0.07))
node(node4.pos)
let node5= (pos:(0.89, 0.54))
node(node5.pos)
edge(node1.pos,(0.04, -0.73),node0.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((0.05, -0.85),angle:0.10rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.73),(0.05, -0.79),(-0.42, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.89, -0.74),angle:5.55rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.73, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.72, -0.99),angle:0.46rad,[k[0]])
cetz.draw.hobby((-0.60, -0.87),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.71, -0.43),node4.pos,decoration:"wave",angle:2.06rad)
cetz.draw.content((-0.60, -0.37),angle:2.06rad,[q])
cetz.draw.hobby((-0.52, -0.68),(-0.66, -0.39),(-0.82, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.83, -0.11),node1.pos,decoration:"wave",angle:-1.82rad)
cetz.draw.content((0.95, -0.14),angle:-1.82rad,[q])
cetz.draw.hobby((0.96, 0.42),(0.90, -0.09),(0.73, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.31, 0.33),node2.pos,decoration:"coil",angle:5.51rad)
cetz.draw.content((0.22, 0.25),angle:5.51rad,[k[2]])
cetz.draw.hobby((0.06, 0.51),(0.28, 0.28),(0.52, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:4.39rad)
cetz.draw.content((-0.84, -0.24),angle:4.39rad,[-p-2 q+k[2]])
cetz.draw.hobby((-0.91, -0.26),(-0.89, -0.19),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.33rad)
cetz.draw.content((0.90, -0.05),angle:2.33rad,[-p-2 q+k[2]])
cetz.draw.hobby((0.73, 0.03),(0.97, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, 0.31),node2.pos,decoration:"arrow",angle:7.34rad)
cetz.draw.content((0.66, 0.37),angle:7.34rad,[-p-2 q])
cetz.draw.hobby((0.81, 0.53),(0.70, 0.33),(0.59, 0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.56, 0.59),angle:6.00rad,[-p-q+k[2]])
cetz.draw.hobby((0.92, 0.42),(0.17, 0.64),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:4.92rad)
cetz.draw.content((-1.07, 0.10),angle:4.92rad,[-p-q+k[2]])
cetz.draw.hobby((-0.99, 0.01),(-1.04, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.63rad)
cetz.draw.content((0.83, 0.80),angle:7.63rad,[-p-q])
cetz.draw.hobby((0.92, 0.92),(0.86, 0.66),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((-0.51, 0.69),angle:5.93rad,[-p-q])
cetz.draw.hobby((-0.06, 0.59),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.72))
node(node0.pos)
let node1= (pos:(-0.31, -0.63))
node(node1.pos)
let node2= (pos:(-0.04, 0.69))
node(node2.pos)
let node3= (pos:(-0.70, 0.74))
node(node3.pos)
let node4= (pos:(-0.19, 0.08))
node(node4.pos)
let node5= (pos:(0.58, 0.52))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.79, -0.75),angle:5.80rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.59, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.60, -0.92),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.37, -0.73),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.73),node1.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((0.06, -0.85),angle:6.16rad,[k[0]])
cetz.draw.hobby((0.40, -0.79),(0.07, -0.79),(-0.25, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.32),node4.pos,decoration:"wave",angle:2.25rad)
cetz.draw.content((0.26, -0.25),angle:2.25rad,[-q])
cetz.draw.hobby((0.46, -0.60),(0.20, -0.27),(-0.07, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.18, -0.06),node1.pos,decoration:"wave",angle:-2.22rad)
cetz.draw.content((0.27, -0.14),angle:-2.22rad,[-q])
cetz.draw.hobby((0.55, 0.37),(0.21, -0.11),(-0.16, -0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.38, 0.79),node2.pos,decoration:"coil",angle:-0.07rad)
cetz.draw.content((-0.37, 0.91),angle:-0.07rad,[k[2]])
cetz.draw.hobby((-0.65, 0.82),(-0.36, 0.85),(-0.08, 0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.10, 0.38),node4.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((0.02, 0.35),angle:1.34rad,[-p+q+k[2]])
cetz.draw.hobby((0.01, 0.62),(-0.04, 0.37),(-0.11, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.29, 0.66),node2.pos,decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.33, 0.78),angle:6.00rad,[-p+q])
cetz.draw.hobby((0.55, 0.61),(0.30, 0.72),(0.02, 0.75),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.38),node3.pos,decoration:"arrow",angle:5.37rad)
cetz.draw.content((-0.60, 0.31),angle:5.37rad,[-p+k[2]])
cetz.draw.hobby((-0.29, 0.09),(-0.54, 0.34),(-0.72, 0.64),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.13rad)
cetz.draw.content((0.70, 0.84),angle:7.13rad,[-p])
cetz.draw.hobby((0.89, 0.96),(0.60, 0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.58rad)
cetz.draw.content((-0.93, 0.78),angle:5.58rad,[-p])
cetz.draw.hobby((-0.81, 0.76),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.24, -0.71))
node(node0.pos)
let node1= (pos:(-0.59, -0.72))
node(node1.pos)
let node2= (pos:(0.94, 0.06))
node(node2.pos)
let node3= (pos:(0.57, 0.68))
node(node3.pos)
let node4= (pos:(-0.78, 0.13))
node(node4.pos)
let node5= (pos:(-0.46, 0.24))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.92rad)
cetz.draw.content((0.66, -0.74),angle:5.92rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.36, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.60rad)
cetz.draw.content((-0.73, -0.96),angle:0.60rad,[-q+k[0]])
cetz.draw.hobby((-0.64, -0.83),(-0.88, -0.99),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.17, -0.76),node1.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((-0.17, -0.88),angle:0.02rad,[k[0]])
cetz.draw.hobby((0.17, -0.78),(-0.17, -0.82),(-0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.25, -0.28),node4.pos,decoration:"wave",angle:2.45rad)
cetz.draw.content((-0.17, -0.19),angle:2.45rad,[-q])
cetz.draw.hobby((0.18, -0.57),(-0.22, -0.23),(-0.64, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, -0.26),node1.pos,decoration:"wave",angle:4.58rad)
cetz.draw.content((-0.65, -0.24),angle:4.58rad,[-q])
cetz.draw.hobby((-0.53, 0.15),(-0.59, -0.24),(-0.64, -0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.73, 0.37),node2.pos,decoration:"coil",angle:5.24rad)
cetz.draw.content((0.63, 0.31),angle:5.24rad,[k[2]])
cetz.draw.hobby((0.55, 0.59),(0.68, 0.33),(0.85, 0.08),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, -0.33),decoration:"arrow",angle:4.28rad)
cetz.draw.content((-0.78, -0.15),angle:4.28rad,[-p+q+k[2]])
cetz.draw.hobby((-0.90, -0.27),(-0.77, 0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.73rad)
cetz.draw.content((1.09, -0.12),angle:1.73rad,[-p+q+k[2]])
cetz.draw.hobby((1.01, -0.03),(1.04, -0.23),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:7.63rad)
cetz.draw.content((0.85, 0.22),angle:7.63rad,[-p+q])
cetz.draw.hobby((0.92, 0.25),(0.90, 0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:6.10rad)
cetz.draw.content((-0.75, 0.17),angle:6.10rad,[-p+q])
cetz.draw.hobby((-0.57, 0.19),(-0.91, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.92rad)
cetz.draw.content((0.72, 0.94),angle:6.92rad,[-p+k[2]])
cetz.draw.hobby((0.88, 0.99),(0.62, 0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-1.01, 0.54),angle:4.96rad,[-p+k[2]])
cetz.draw.hobby((-0.86, 0.22),(-1.03, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.05, 0.48),node5.pos,decoration:"arrow",angle:6.69rad)
cetz.draw.content((0.00, 0.59),angle:6.69rad,[-p])
cetz.draw.hobby((0.45, 0.70),(0.02, 0.53),(-0.39, 0.34),stroke:stroke,mark: (end: ">"))
})
let embedding10f2=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.65))
node(node0.pos)
let node1= (pos:(-0.48, -0.78))
node(node1.pos)
let node2= (pos:(-0.71, 0.09))
node(node2.pos)
let node3= (pos:(0.86, 0.45))
node(node3.pos)
let node4= (pos:(-0.62, 0.53))
node(node4.pos)
let node5= (pos:(0.07, -0.01))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((0.71, -0.72),angle:5.81rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.42, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.69, -1.00),angle:0.40rad,[-q+k[0]])
cetz.draw.hobby((-0.55, -0.87),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.77),node1.pos,decoration:"arrow",angle:0.17rad)
cetz.draw.content((-0.06, -0.89),angle:0.17rad,[k[0]])
cetz.draw.hobby((0.25, -0.74),(-0.07, -0.83),(-0.40, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.20, -0.08),node4.pos,decoration:"wave",angle:2.23rad)
cetz.draw.content((-0.29, -0.16),angle:2.23rad,[-q])
cetz.draw.hobby((0.15, -0.58),(-0.24, -0.12),(-0.59, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.22, -0.40),node1.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.31, -0.33),angle:4.10rad,[-q])
cetz.draw.hobby((-0.04, -0.05),(-0.26, -0.36),(-0.47, -0.67),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:0.31rad)
cetz.draw.content((-0.82, -0.07),angle:0.31rad,[k[2]])
cetz.draw.hobby((-0.89, -0.03),(-0.79, 0.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:-1.27rad)
cetz.draw.content((1.04, 0.26),angle:-1.27rad,[k[2]])
cetz.draw.hobby((0.95, 0.37),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.79, 0.35),node4.pos,decoration:"arrow",angle:4.46rad)
cetz.draw.content((-0.91, 0.38),angle:4.46rad,[-p+q+k[2]])
cetz.draw.hobby((-0.80, 0.10),(-0.85, 0.35),(-0.70, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.32, 0.07),node2.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.31, 0.19),angle:6.16rad,[-p+q])
cetz.draw.hobby((0.01, 0.07),(-0.31, 0.13),(-0.63, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.61rad)
cetz.draw.content((0.81, 0.75),angle:7.61rad,[-p+k[2]])
cetz.draw.hobby((0.92, 0.92),(0.83, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.40rad)
cetz.draw.content((-0.90, 0.69),angle:5.40rad,[-p+k[2]])
cetz.draw.hobby((-0.73, 0.57),(-0.98, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, 0.23),node5.pos,decoration:"arrow",angle:6.80rad)
cetz.draw.content((0.41, 0.34),angle:6.80rad,[-p])
cetz.draw.hobby((0.75, 0.46),(0.43, 0.28),(0.11, 0.09),stroke:stroke,mark: (end: ">"))
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.67))
node(node0.pos)
let node1= (pos:(0.46, -0.87))
node(node1.pos)
let node2= (pos:(0.54, 0.17))
node(node2.pos)
let node3= (pos:(0.06, 0.50))
node(node3.pos)
let node4= (pos:(-0.61, 0.42))
node(node4.pos)
let node5= (pos:(0.31, -0.21))
node(node5.pos)
edge(node1.pos,(-0.08, -0.81),node0.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((-0.10, -0.93),angle:6.09rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.93),(-0.08, -0.87),(-0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.76, -0.82),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.92, -0.92),(0.58, -0.84),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.67rad)
cetz.draw.content((-0.72, -0.93),angle:0.67rad,[k[0]])
cetz.draw.hobby((-0.63, -0.78),(-0.88, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.62, -0.13),node4.pos,decoration:"wave",angle:1.59rad)
cetz.draw.content((-0.74, -0.13),angle:1.59rad,[q])
cetz.draw.hobby((-0.66, -0.57),(-0.68, -0.13),(-0.67, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.40, -0.56),node1.pos,decoration:"wave",angle:-1.35rad)
cetz.draw.content((0.52, -0.53),angle:-1.35rad,[q])
cetz.draw.hobby((0.39, -0.26),(0.46, -0.53),(0.51, -0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.79rad)
cetz.draw.content((0.81, 0.20),angle:2.79rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.93, 0.09),(0.65, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.70rad)
cetz.draw.content((-0.42, 0.14),angle:-2.70rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.01, 0.40),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.09, 0.26),node4.pos,decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.11, 0.14),angle:6.06rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.42, 0.12),(-0.06, 0.19),(-0.52, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, -0.08),node2.pos,decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.65, -0.14),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.38, -0.27),(0.59, -0.12),(0.62, 0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.77rad)
cetz.draw.content((0.47, 0.86),angle:6.77rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.88, 1.01),(0.12, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.31rad)
cetz.draw.content((-0.90, 0.64),angle:5.31rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.71, 0.47),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.15, 0.14),node5.pos,decoration:"arrow",angle:8.19rad)
cetz.draw.content((0.03, 0.10),angle:8.19rad,[q+k[3]])
cetz.draw.hobby((0.01, 0.41),(0.10, 0.11),(0.22, -0.17),stroke:stroke,mark: (end: ">"))
})
let embedding11i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.75))
node(node1.pos)
let node2= (pos:(-0.71, 0.17))
node(node2.pos)
let node3= (pos:(0.48, 0.72))
node(node3.pos)
let node4= (pos:(-0.08, 0.12))
node(node4.pos)
let node5= (pos:(0.79, 0.11))
node(node5.pos)
edge(node1.pos,(0.09, -0.78),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.09, -0.90),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.82),(0.09, -0.84),(-0.32, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.73rad)
cetz.draw.content((0.86, -0.77),angle:5.73rad,[k[0]])
cetz.draw.hobby((0.95, -0.90),(0.71, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.66, -0.98),angle:0.41rad,[k[0]])
cetz.draw.hobby((-0.49, -0.84),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.26, -0.31),node4.pos,decoration:"wave",angle:1.20rad)
cetz.draw.content((-0.37, -0.27),angle:1.20rad,[q])
cetz.draw.hobby((-0.44, -0.64),(-0.31, -0.29),(-0.17, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.70, -0.33),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.82, -0.36),angle:-1.79rad,[q])
cetz.draw.hobby((0.83, 0.01),(0.76, -0.34),(0.68, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.13, 0.50),node2.pos,decoration:"coil",angle:3.58rad)
cetz.draw.content((-0.18, 0.61),angle:3.58rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.33, 0.74),(-0.17, 0.55),(-0.63, 0.29),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.51, 0.01),angle:5.88rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.93, -0.24),(0.03, 0.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.04rad)
cetz.draw.content((-0.75, -0.15),angle:1.04rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.71, 0.05),(-0.90, -0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:8.90rad)
cetz.draw.content((-0.91, 0.15),angle:8.90rad,[k[3]])
cetz.draw.hobby((-0.94, 0.23),(-0.82, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.81, 0.30),angle:3.95rad,[k[3]])
cetz.draw.hobby((0.81, 0.22),(0.89, 0.30),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.78rad)
cetz.draw.content((0.68, 0.97),angle:6.78rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.88, 1.01),(0.54, 0.82),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((-0.62, 0.48),angle:5.52rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.20, 0.15),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.63, 0.43),node5.pos,decoration:"arrow",angle:2.04rad)
cetz.draw.content((0.74, 0.48),angle:2.04rad,[q+k[3]])
cetz.draw.hobby((0.56, 0.69),(0.69, 0.44),(0.81, 0.19),stroke:stroke,mark: (end: ">"))
})
let embedding11f0=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.81))
node(node0.pos)
let node1= (pos:(-0.64, -0.65))
node(node1.pos)
let node2= (pos:(-0.44, 0.11))
node(node2.pos)
let node3= (pos:(0.71, 0.60))
node(node3.pos)
let node4= (pos:(0.09, -0.13))
node(node4.pos)
let node5= (pos:(-0.83, 0.53))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.96rad)
cetz.draw.content((0.75, -0.79),angle:5.96rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.53, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.74, -0.91),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.77),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.89),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.31, -0.87),(-0.13, -0.83),(-0.55, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, -0.47),node4.pos,decoration:"wave",angle:2.02rad)
cetz.draw.content((0.38, -0.42),angle:2.02rad,[-q])
cetz.draw.hobby((0.45, -0.72),(0.33, -0.44),(0.18, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.79, -0.08),node1.pos,decoration:"wave",angle:4.87rad)
cetz.draw.content((-0.91, -0.10),angle:4.87rad,[-q])
cetz.draw.hobby((-0.89, 0.41),(-0.85, -0.08),(-0.74, -0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.39),node2.pos,decoration:"coil",angle:3.55rad)
cetz.draw.content((0.09, 0.50),angle:3.55rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.57, 0.62),(0.10, 0.44),(-0.36, 0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:6.06rad)
cetz.draw.content((0.57, -0.12),angle:6.06rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.92, -0.25),(0.20, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.67rad)
cetz.draw.content((-0.65, -0.21),angle:0.67rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.48, -0.00),(-0.88, -0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.61, 0.35),node2.pos,decoration:"arrow",angle:2.32rad)
cetz.draw.content((-0.53, 0.44),angle:2.32rad,[k[3]])
cetz.draw.hobby((-0.75, 0.55),(-0.56, 0.39),(-0.42, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:5.54rad)
cetz.draw.content((0.93, 0.56),angle:5.54rad,[-1/2 p-q+1/2 k[3]])
cetz.draw.hobby((0.97, 0.45),(0.82, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.50, -0.01),angle:5.88rad,[-1/2 p-q+1/2 k[3]])
cetz.draw.hobby((-0.02, -0.15),(-0.93, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.20rad)
cetz.draw.content((-1.03, 0.72),angle:8.20rad,[-q+k[3]])
cetz.draw.hobby((-1.02, 0.89),(-0.92, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.07rad)
cetz.draw.content((0.76, 0.87),angle:4.07rad,[-q+k[3]])
cetz.draw.hobby((0.72, 0.72),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding11f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.67))
node(node0.pos)
let node1= (pos:(-0.46, -0.87))
node(node1.pos)
let node2= (pos:(-0.06, 0.50))
node(node2.pos)
let node3= (pos:(-0.54, 0.17))
node(node3.pos)
let node4= (pos:(0.61, 0.42))
node(node4.pos)
let node5= (pos:(-0.31, -0.21))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((0.87, -0.74),angle:5.61rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.70, -1.05),angle:0.23rad,[-q+k[0]])
cetz.draw.hobby((-0.55, -0.96),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.81),node1.pos,decoration:"arrow",angle:0.19rad)
cetz.draw.content((0.10, -0.93),angle:0.19rad,[k[0]])
cetz.draw.hobby((0.51, -0.76),(0.08, -0.87),(-0.35, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.63, -0.13),node4.pos,decoration:"wave",angle:1.56rad)
cetz.draw.content((0.75, -0.14),angle:1.56rad,[-q])
cetz.draw.hobby((0.66, -0.57),(0.69, -0.13),(0.68, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.40, -0.56),node1.pos,decoration:"wave",angle:4.49rad)
cetz.draw.content((-0.52, -0.53),angle:4.49rad,[-q])
cetz.draw.hobby((-0.39, -0.26),(-0.46, -0.53),(-0.51, -0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.70rad)
cetz.draw.content((0.52, 0.36),angle:2.70rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.94, 0.10),(0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.79rad)
cetz.draw.content((-0.73, -0.03),angle:-2.79rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.61, 0.08),(-0.89, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:7.26rad)
cetz.draw.content((0.70, 0.77),angle:7.26rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.89, 0.95),(0.61, 0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.58, 0.64),angle:5.80rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.17, 0.49),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, 0.14),node2.pos,decoration:"arrow",angle:4.38rad)
cetz.draw.content((-0.03, 0.10),angle:4.38rad,[k[3]])
cetz.draw.hobby((-0.22, -0.18),(-0.09, 0.11),(-0.01, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.09, 0.25),node3.pos,decoration:"arrow",angle:0.22rad)
cetz.draw.content((0.11, 0.14),angle:0.22rad,[-1/2 p-q+1/2 k[3]])
cetz.draw.hobby((0.52, 0.32),(0.06, 0.19),(-0.42, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, -0.08),node5.pos,decoration:"arrow",angle:8.36rad)
cetz.draw.content((-0.65, -0.14),angle:8.36rad,[-q+k[3]])
cetz.draw.hobby((-0.62, 0.14),(-0.59, -0.12),(-0.38, -0.27),stroke:stroke,mark: (end: ">"))
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.45, -0.78))
node(node0.pos)
let node1= (pos:(0.66, -0.66))
node(node1.pos)
let node2= (pos:(0.57, 0.12))
node(node2.pos)
let node3= (pos:(-0.91, 0.46))
node(node3.pos)
let node4= (pos:(-0.28, -0.02))
node(node4.pos)
let node5= (pos:(0.95, 0.48))
node(node5.pos)
edge(node1.pos,(0.11, -0.75),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.13, -0.87),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.74),(0.12, -0.81),(-0.33, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.92, -0.74),angle:5.49rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.78, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.68, -1.00),angle:0.38rad,[k[0]])
cetz.draw.hobby((-0.52, -0.87),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.38, -0.41),node4.pos,decoration:"wave",angle:1.36rad)
cetz.draw.content((-0.50, -0.38),angle:1.36rad,[q])
cetz.draw.hobby((-0.49, -0.69),(-0.44, -0.39),(-0.36, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.85, -0.13),node1.pos,decoration:"wave",angle:-1.83rad)
cetz.draw.content((0.96, -0.16),angle:-1.83rad,[q])
cetz.draw.hobby((1.00, 0.35),(0.91, -0.12),(0.76, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.82, 0.18),angle:2.87rad,[-p-q-k[3]])
cetz.draw.hobby((0.92, 0.08),(0.68, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-1.77rad)
cetz.draw.content((-0.84, 0.21),angle:-1.77rad,[-p-q-k[3]])
cetz.draw.hobby((-0.87, 0.35),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.06),node4.pos,decoration:"arrow",angle:6.45rad)
cetz.draw.content((0.12, 0.18),angle:6.45rad,[-p-q])
cetz.draw.hobby((0.48, 0.17),(0.13, 0.12),(-0.21, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, 0.36),node2.pos,decoration:"arrow",angle:7.02rad)
cetz.draw.content((0.63, 0.45),angle:7.02rad,[k[3]])
cetz.draw.hobby((0.88, 0.52),(0.66, 0.40),(0.53, 0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.59, 0.24),node3.pos,decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.52, 0.33),angle:5.63rad,[-p])
cetz.draw.hobby((-0.30, 0.07),(-0.55, 0.28),(-0.81, 0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.75rad)
cetz.draw.content((0.85, 0.75),angle:7.75rad,[q+k[3]])
cetz.draw.hobby((0.93, 0.91),(0.90, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.71),angle:4.88rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.55),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding12i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.60))
node(node0.pos)
let node1= (pos:(0.51, -0.74))
node(node1.pos)
let node2= (pos:(0.06, 0.55))
node(node2.pos)
let node3= (pos:(0.75, 0.74))
node(node3.pos)
let node4= (pos:(-0.74, 0.50))
node(node4.pos)
let node5= (pos:(0.55, 0.06))
node(node5.pos)
edge(node1.pos,(-0.05, -0.69),node0.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.07, -0.81),angle:6.16rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.50, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.81, -0.76),angle:5.80rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.72, -0.89),angle:0.78rad,[k[0]])
cetz.draw.hobby((-0.63, -0.72),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.69, -0.06),node4.pos,decoration:"wave",angle:1.69rad)
cetz.draw.content((-0.81, -0.07),angle:1.69rad,[q])
cetz.draw.hobby((-0.68, -0.50),(-0.75, -0.06),(-0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, -0.35),node1.pos,decoration:"wave",angle:-1.63rad)
cetz.draw.content((0.67, -0.36),angle:-1.63rad,[q])
cetz.draw.hobby((0.61, -0.02),(0.61, -0.34),(0.58, -0.67),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.71),node2.pos,decoration:"coil",angle:3.42rad)
cetz.draw.content((0.36, 0.82),angle:3.42rad,[-p-q-k[3]])
cetz.draw.hobby((0.67, 0.81),(0.37, 0.76),(0.09, 0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.35, 0.54),node4.pos,decoration:"arrow",angle:6.34rad)
cetz.draw.content((-0.36, 0.66),angle:6.34rad,[-p-q])
cetz.draw.hobby((-0.02, 0.61),(-0.34, 0.61),(-0.67, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, 0.28),node2.pos,decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.19, 0.19),angle:5.50rad,[k[3]])
cetz.draw.hobby((0.46, 0.05),(0.24, 0.23),(0.05, 0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.07rad)
cetz.draw.content((0.79, 0.96),angle:7.07rad,[-p])
cetz.draw.hobby((0.89, 0.97),(0.77, 0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((-0.97, 0.70),angle:5.20rad,[-p])
cetz.draw.hobby((-0.84, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, 0.39),node5.pos,decoration:"arrow",angle:1.29rad)
cetz.draw.content((0.83, 0.35),angle:1.29rad,[q+k[3]])
cetz.draw.hobby((0.81, 0.67),(0.77, 0.37),(0.64, 0.09),stroke:stroke,mark: (end: ">"))
})
let embedding12i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.80))
node(node0.pos)
let node1= (pos:(0.68, -0.64))
node(node1.pos)
let node2= (pos:(-0.96, 0.04))
node(node2.pos)
let node3= (pos:(-0.60, 0.59))
node(node3.pos)
let node4= (pos:(0.28, -0.17))
node(node4.pos)
let node5= (pos:(0.92, 0.53))
node(node5.pos)
edge(node1.pos,(0.19, -0.77),node0.pos,decoration:"arrow",angle:0.16rad)
cetz.draw.content((0.21, -0.89),angle:0.16rad,[q+k[0]])
cetz.draw.hobby((0.61, -0.73),(0.20, -0.83),(-0.22, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.43rad)
cetz.draw.content((0.93, -0.74),angle:5.43rad,[k[0]])
cetz.draw.hobby((0.98, -0.89),(0.80, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.63, -1.01),angle:0.29rad,[k[0]])
cetz.draw.hobby((-0.40, -0.88),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.48),node4.pos,decoration:"wave",angle:0.80rad)
cetz.draw.content((-0.12, -0.39),angle:0.80rad,[q])
cetz.draw.hobby((-0.31, -0.69),(-0.08, -0.43),(0.18, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.82, -0.05),node1.pos,decoration:"wave",angle:-1.77rad)
cetz.draw.content((0.94, -0.08),angle:-1.77rad,[q])
cetz.draw.hobby((0.96, 0.41),(0.88, -0.07),(0.77, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.74, 0.31),node2.pos,decoration:"coil",angle:-2.15rad)
cetz.draw.content((-0.64, 0.24),angle:-2.15rad,[-p-q-k[3]])
cetz.draw.hobby((-0.57, 0.51),(-0.70, 0.26),(-0.87, 0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:6.06rad)
cetz.draw.content((0.67, -0.14),angle:6.06rad,[-p-q])
cetz.draw.hobby((0.92, -0.25),(0.40, -0.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.47rad)
cetz.draw.content((-0.86, -0.16),angle:1.47rad,[-p-q])
cetz.draw.hobby((-0.91, -0.06),(-0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:7.98rad)
cetz.draw.content((-1.10, 0.17),angle:7.98rad,[k[3]])
cetz.draw.hobby((-1.05, 0.23),(-1.03, 0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:1.95rad)
cetz.draw.content((1.07, 0.48),angle:1.95rad,[k[3]])
cetz.draw.hobby((1.01, 0.46),(1.02, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.15, 0.22),node3.pos,decoration:"arrow",angle:5.57rad)
cetz.draw.content((-0.07, 0.31),angle:5.57rad,[-p])
cetz.draw.hobby((0.24, -0.05),(-0.11, 0.27),(-0.47, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.68rad)
cetz.draw.content((0.84, 0.79),angle:7.68rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.88, 0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.49rad)
cetz.draw.content((-0.89, 0.71),angle:5.49rad,[q+k[3]])
cetz.draw.hobby((-0.71, 0.62),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding12f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.60))
node(node0.pos)
let node1= (pos:(-0.51, -0.74))
node(node1.pos)
let node2= (pos:(-0.75, 0.74))
node(node2.pos)
let node3= (pos:(-0.06, 0.55))
node(node3.pos)
let node4= (pos:(0.74, 0.51))
node(node4.pos)
let node5= (pos:(-0.55, 0.06))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.89, -0.72),angle:5.50rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.70, -0.98),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.57, -0.84),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.05, -0.70),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.07, -0.81),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.50, -0.69),(0.06, -0.76),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.06),node4.pos,decoration:"wave",angle:1.45rad)
cetz.draw.content((0.81, -0.07),angle:1.45rad,[-q])
cetz.draw.hobby((0.68, -0.51),(0.75, -0.06),(0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, -0.35),node1.pos,decoration:"wave",angle:4.77rad)
cetz.draw.content((-0.67, -0.36),angle:4.77rad,[-q])
cetz.draw.hobby((-0.61, -0.02),(-0.61, -0.35),(-0.58, -0.67),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.71),node2.pos,decoration:"coil",angle:2.87rad)
cetz.draw.content((-0.36, 0.83),angle:2.87rad,[-p-k[3]])
cetz.draw.hobby((-0.09, 0.64),(-0.37, 0.77),(-0.67, 0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:7.36rad)
cetz.draw.content((0.76, 0.81),angle:7.36rad,[-p])
cetz.draw.hobby((0.90, 0.94),(0.73, 0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((-0.96, 0.79),angle:5.50rad,[-p])
cetz.draw.hobby((-0.86, 0.77),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.71, 0.39),node2.pos,decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.82, 0.36),angle:4.99rad,[k[3]])
cetz.draw.hobby((-0.64, 0.09),(-0.76, 0.37),(-0.81, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.55),node3.pos,decoration:"arrow",angle:6.23rad)
cetz.draw.content((0.36, 0.67),angle:6.23rad,[-p-q])
cetz.draw.hobby((0.67, 0.58),(0.34, 0.61),(0.02, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.28, 0.28),node5.pos,decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.19, 0.19),angle:0.79rad,[-q+k[3]])
cetz.draw.hobby((-0.05, 0.46),(-0.23, 0.23),(-0.45, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding12f1=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.77))
node(node0.pos)
let node1= (pos:(-0.65, -0.75))
node(node1.pos)
let node2= (pos:(0.65, -0.03))
node(node2.pos)
let node3= (pos:(0.94, 0.63))
node(node3.pos)
let node4= (pos:(-0.29, 0.03))
node(node4.pos)
let node5= (pos:(-0.94, 0.11))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.96rad)
cetz.draw.content((0.70, -0.77),angle:5.96rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.43, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.62rad)
cetz.draw.content((-0.75, -0.97),angle:0.62rad,[-q+k[0]])
cetz.draw.hobby((-0.69, -0.86),(-0.88, -0.99),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.17, -0.80),node1.pos,decoration:"arrow",angle:6.26rad)
cetz.draw.content((-0.17, -0.92),angle:6.26rad,[k[0]])
cetz.draw.hobby((0.23, -0.84),(-0.17, -0.86),(-0.56, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.02, -0.37),node4.pos,decoration:"wave",angle:2.22rad)
cetz.draw.content((-0.08, -0.45),angle:2.22rad,[-q])
cetz.draw.hobby((0.21, -0.73),(-0.04, -0.41),(-0.28, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.76, -0.32),node1.pos,decoration:"wave",angle:-1.25rad)
cetz.draw.content((-0.65, -0.28),angle:-1.25rad,[-q])
cetz.draw.hobby((-0.84, 0.05),(-0.71, -0.29),(-0.61, -0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, 0.32),node2.pos,decoration:"coil",angle:4.30rad)
cetz.draw.content((0.64, 0.37),angle:4.30rad,[-p-k[3]])
cetz.draw.hobby((0.84, 0.61),(0.69, 0.34),(0.60, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.18, 0.03),node4.pos,decoration:"arrow",angle:6.22rad)
cetz.draw.content((0.19, 0.15),angle:6.22rad,[-p])
cetz.draw.hobby((0.56, 0.05),(0.18, 0.09),(-0.20, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:5.57rad)
cetz.draw.content((0.90, -0.09),angle:5.57rad,[k[3]])
cetz.draw.hobby((0.96, -0.22),(0.76, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:1.43rad)
cetz.draw.content((-0.85, -0.13),angle:1.43rad,[k[3]])
cetz.draw.hobby((-0.89, 0.00),(-0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.93rad)
cetz.draw.content((1.09, 0.51),angle:4.93rad,[-p-q])
cetz.draw.hobby((1.04, 0.44),(1.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.69, 0.07),angle:5.88rad,[-p-q])
cetz.draw.hobby((-0.41, 0.02),(-0.93, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:7.92rad)
cetz.draw.content((-1.09, 0.55),angle:7.92rad,[-q+k[3]])
cetz.draw.hobby((-1.05, 0.90),(-1.00, 0.20),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.85, 0.83),angle:4.54rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.74),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding12f2=cetz.canvas(length:50%,{
let node0= (pos:(0.45, -0.78))
node(node0.pos)
let node1= (pos:(-0.66, -0.66))
node(node1.pos)
let node2= (pos:(0.91, 0.46))
node(node2.pos)
let node3= (pos:(-0.57, 0.12))
node(node3.pos)
let node4= (pos:(0.28, -0.03))
node(node4.pos)
let node5= (pos:(-0.94, 0.48))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((0.77, -0.78),angle:5.91rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.75, -0.91),angle:0.79rad,[-q+k[0]])
cetz.draw.hobby((-0.69, -0.77),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.75),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.13, -0.87),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.33, -0.84),(-0.12, -0.81),(-0.56, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.38, -0.41),node4.pos,decoration:"wave",angle:1.78rad)
cetz.draw.content((0.50, -0.39),angle:1.78rad,[-q])
cetz.draw.hobby((0.50, -0.70),(0.44, -0.39),(0.36, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.84, -0.13),node1.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.96, -0.16),angle:4.97rad,[-q])
cetz.draw.hobby((-0.99, 0.36),(-0.91, -0.12),(-0.76, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:1.77rad)
cetz.draw.content((1.07, 0.25),angle:1.77rad,[-p-k[3]])
cetz.draw.hobby((1.04, 0.11),(0.99, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.87rad)
cetz.draw.content((-0.75, -0.06),angle:-2.87rad,[-p-k[3]])
cetz.draw.hobby((-0.65, 0.03),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.59, 0.23),node4.pos,decoration:"arrow",angle:6.94rad)
cetz.draw.content((0.52, 0.33),angle:6.94rad,[-p])
cetz.draw.hobby((0.81, 0.46),(0.55, 0.27),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:7.69rad)
cetz.draw.content((0.84, 0.75),angle:7.69rad,[k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.09, 0.73),angle:4.82rad,[k[3]])
cetz.draw.hobby((-1.01, 0.57),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.14, 0.06),node3.pos,decoration:"arrow",angle:6.11rad)
cetz.draw.content((-0.12, 0.17),angle:6.11rad,[-p-q])
cetz.draw.hobby((0.21, 0.05),(-0.13, 0.12),(-0.48, 0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.71, 0.36),node5.pos,decoration:"arrow",angle:5.54rad)
cetz.draw.content((-0.63, 0.45),angle:5.54rad,[-q+k[3]])
cetz.draw.hobby((-0.53, 0.19),(-0.66, 0.40),(-0.87, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.66))
node(node1.pos)
let node2= (pos:(0.02, 0.16))
node(node2.pos)
let node3= (pos:(-0.02, 0.60))
node(node3.pos)
let node4= (pos:(-0.69, -0.16))
node(node4.pos)
let node5= (pos:(0.76, 0.44))
node(node5.pos)
edge(node1.pos,(0.04, -0.78),node0.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((0.06, -0.89),angle:0.15rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.75),(0.05, -0.84),(-0.41, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.59rad)
cetz.draw.content((0.88, -0.74),angle:5.59rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.72, -1.03),angle:0.34rad,[k[0]])
cetz.draw.hobby((-0.60, -0.92),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.51),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((-0.75, -0.54),angle:1.82rad,[q])
cetz.draw.hobby((-0.61, -0.79),(-0.69, -0.52),(-0.74, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.70, -0.13),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.15),angle:-1.72rad,[q])
cetz.draw.hobby((0.82, 0.32),(0.77, -0.13),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.10, 0.38),node2.pos,decoration:"coil",angle:4.76rad)
cetz.draw.content((-0.22, 0.37),angle:4.76rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((-0.10, 0.59),(-0.16, 0.36),(-0.06, 0.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.34, -0.01),node4.pos,decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.29, -0.12),angle:0.42rad,[-p-2 q-k[3]])
cetz.draw.hobby((-0.02, 0.07),(-0.31, -0.06),(-0.59, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.42, 0.30),node2.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.46, 0.19),angle:0.36rad,[k[3]])
cetz.draw.hobby((0.71, 0.35),(0.42, 0.24),(0.12, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.55, 0.40),angle:5.75rad,[-p-q-k[3]])
cetz.draw.hobby((0.94, 0.10),(0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.90, -0.19),angle:5.80rad,[-p-q-k[3]])
cetz.draw.hobby((-0.81, -0.17),(-0.94, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.46rad)
cetz.draw.content((0.77, 0.76),angle:7.46rad,[q+k[3]])
cetz.draw.hobby((0.91, 0.93),(0.75, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.55, 0.69),angle:5.89rad,[q+k[3]])
cetz.draw.hobby((-0.13, 0.58),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding13f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.67))
node(node0.pos)
let node1= (pos:(-0.47, -0.84))
node(node1.pos)
let node2= (pos:(-0.90, 0.00))
node(node2.pos)
let node3= (pos:(0.76, 0.26))
node(node3.pos)
let node4= (pos:(0.08, 0.47))
node(node4.pos)
let node5= (pos:(-0.17, -0.13))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.73rad)
cetz.draw.content((0.80, -0.74),angle:5.73rad,[-q+k[0]])
cetz.draw.hobby((0.95, -0.90),(0.59, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.70, -1.03),angle:0.30rad,[-q+k[0]])
cetz.draw.hobby((-0.55, -0.92),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.80),node1.pos,decoration:"arrow",angle:0.17rad)
cetz.draw.content((0.03, -0.92),angle:0.17rad,[k[0]])
cetz.draw.hobby((0.40, -0.76),(0.02, -0.86),(-0.37, -0.90),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.30, -0.12),node4.pos,decoration:"wave",angle:1.90rad)
cetz.draw.content((0.41, -0.08),angle:1.90rad,[-q])
cetz.draw.hobby((0.49, -0.54),(0.35, -0.08),(0.18, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.33, -0.49),node1.pos,decoration:"wave",angle:4.31rad)
cetz.draw.content((-0.44, -0.45),angle:4.31rad,[-q])
cetz.draw.hobby((-0.26, -0.18),(-0.38, -0.46),(-0.50, -0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"coil",angle:1.27rad)
cetz.draw.content((-0.83, -0.20),angle:1.27rad,[-p+q-2 k[3]])
cetz.draw.hobby((-0.91, -0.26),(-0.87, -0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"coil",angle:-1.19rad)
cetz.draw.content((0.99, 0.01),angle:-1.19rad,[-p+q-2 k[3]])
cetz.draw.hobby((0.85, 0.19),(1.02, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:6.13rad)
cetz.draw.content((0.56, 0.52),angle:6.13rad,[-p+q-k[3]])
cetz.draw.hobby((0.91, 0.41),(0.19, 0.52),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:5.01rad)
cetz.draw.content((-1.06, 0.13),angle:5.01rad,[-p+q-k[3]])
cetz.draw.hobby((-0.98, 0.08),(-1.03, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.04),node2.pos,decoration:"arrow",angle:6.10rad)
cetz.draw.content((-0.52, 0.07),angle:6.10rad,[k[3]])
cetz.draw.hobby((-0.23, -0.06),(-0.52, 0.01),(-0.82, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.54rad)
cetz.draw.content((0.77, 0.67),angle:7.54rad,[-p-k[3]])
cetz.draw.hobby((0.91, 0.92),(0.73, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((-0.51, 0.63),angle:5.83rad,[-p-k[3]])
cetz.draw.hobby((-0.03, 0.46),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.31, 0.08),node5.pos,decoration:"arrow",angle:6.69rad)
cetz.draw.content((0.26, 0.19),angle:6.69rad,[-q+k[3]])
cetz.draw.hobby((0.64, 0.28),(0.27, 0.12),(-0.10, -0.04),stroke:stroke,mark: (end: ">"))
})
let embedding13f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.75))
node(node0.pos)
let node1= (pos:(-0.33, -0.64))
node(node1.pos)
let node2= (pos:(-0.63, 0.21))
node(node2.pos)
let node3= (pos:(-0.54, 0.73))
node(node3.pos)
let node4= (pos:(0.55, 0.03))
node(node4.pos)
let node5= (pos:(0.34, 0.47))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.86, -0.77),angle:5.74rad,[-q+k[0]])
cetz.draw.hobby((0.95, -0.90),(0.71, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.61, -0.93),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.39, -0.74),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.73),node1.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((0.11, -0.85),angle:6.16rad,[k[0]])
cetz.draw.hobby((0.50, -0.82),(0.12, -0.79),(-0.26, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.59, -0.37),node4.pos,decoration:"wave",angle:1.62rad)
cetz.draw.content((0.71, -0.36),angle:1.62rad,[-q])
cetz.draw.hobby((0.66, -0.68),(0.65, -0.36),(0.62, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.00, -0.10),node1.pos,decoration:"wave",angle:-2.11rad)
cetz.draw.content((0.10, -0.16),angle:-2.11rad,[-q])
cetz.draw.hobby((0.33, 0.33),(0.06, -0.12),(-0.21, -0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, 0.49),node2.pos,decoration:"coil",angle:4.52rad)
cetz.draw.content((-0.78, 0.52),angle:4.52rad,[-p+q-2 k[3]])
cetz.draw.hobby((-0.62, 0.73),(-0.72, 0.50),(-0.71, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:6.21rad)
cetz.draw.content((0.79, 0.14),angle:6.21rad,[-p+q-k[3]])
cetz.draw.hobby((0.90, 0.07),(0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.53rad)
cetz.draw.content((-0.75, 0.00),angle:0.53rad,[-p+q-k[3]])
cetz.draw.hobby((-0.69, 0.11),(-0.88, -0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.16, 0.35),node2.pos,decoration:"arrow",angle:6.54rad)
cetz.draw.content((-0.19, 0.46),angle:6.54rad,[k[3]])
cetz.draw.hobby((0.23, 0.51),(-0.16, 0.41),(-0.55, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.01, 0.40),node3.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((0.07, 0.50),angle:5.71rad,[-p-k[3]])
cetz.draw.hobby((0.48, 0.16),(0.05, 0.44),(-0.39, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:6.96rad)
cetz.draw.content((0.60, 0.83),angle:6.96rad,[-q+k[3]])
cetz.draw.hobby((0.88, 0.98),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.83, 0.76),angle:5.76rad,[-q+k[3]])
cetz.draw.hobby((-0.65, 0.73),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
})
let embedding13f2=cetz.canvas(length:50%,{
let node0= (pos:(0.33, -0.64))
node(node0.pos)
let node1= (pos:(-0.59, -0.75))
node(node1.pos)
let node2= (pos:(0.63, 0.22))
node(node2.pos)
let node3= (pos:(0.54, 0.74))
node(node3.pos)
let node4= (pos:(-0.34, 0.47))
node(node4.pos)
let node5= (pos:(-0.55, 0.03))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.72, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.45, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.73, -0.98),angle:0.54rad,[-q+k[0]])
cetz.draw.hobby((-0.65, -0.86),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.74),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((-0.11, -0.86),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.26, -0.73),(-0.12, -0.80),(-0.50, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.10),node4.pos,decoration:"wave",angle:2.11rad)
cetz.draw.content((-0.10, -0.16),angle:2.11rad,[-q])
cetz.draw.hobby((0.21, -0.57),(-0.06, -0.12),(-0.33, 0.33),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.59, -0.37),node1.pos,decoration:"wave",angle:4.66rad)
cetz.draw.content((-0.71, -0.36),angle:4.66rad,[-q])
cetz.draw.hobby((-0.62, -0.04),(-0.65, -0.36),(-0.66, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.49),node2.pos,decoration:"coil",angle:-1.38rad)
cetz.draw.content((0.78, 0.52),angle:-1.38rad,[-p+q-2 k[3]])
cetz.draw.hobby((0.62, 0.73),(0.73, 0.50),(0.71, 0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.16, 0.34),node4.pos,decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.19, 0.46),angle:6.03rad,[-p+q-k[3]])
cetz.draw.hobby((0.55, 0.30),(0.16, 0.41),(-0.23, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.88, 0.21),angle:5.75rad,[k[3]])
cetz.draw.hobby((0.94, 0.10),(0.75, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.08rad)
cetz.draw.content((-0.77, -0.10),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.65, -0.03),(-0.90, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.80rad)
cetz.draw.content((0.71, 0.97),angle:6.80rad,[-p-k[3]])
cetz.draw.hobby((0.88, 1.00),(0.59, 0.84),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.75, 0.64),angle:5.61rad,[-p-k[3]])
cetz.draw.hobby((-0.46, 0.49),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.40),node5.pos,decoration:"arrow",angle:6.85rad)
cetz.draw.content((-0.07, 0.50),angle:6.85rad,[-q+k[3]])
cetz.draw.hobby((0.40, 0.72),(-0.05, 0.44),(-0.48, 0.16),stroke:stroke,mark: (end: ">"))
})
let embedding13f3=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.84))
node(node0.pos)
let node1= (pos:(-0.47, -0.68))
node(node1.pos)
let node2= (pos:(0.90, 0.00))
node(node2.pos)
let node3= (pos:(-0.76, 0.26))
node(node3.pos)
let node4= (pos:(0.17, -0.13))
node(node4.pos)
let node5= (pos:(-0.08, 0.47))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.77, -0.80),angle:5.98rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.58, -0.81),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.55rad)
cetz.draw.content((-0.67, -0.94),angle:0.55rad,[-q+k[0]])
cetz.draw.hobby((-0.52, -0.78),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.01, -0.80),node1.pos,decoration:"arrow",angle:6.11rad)
cetz.draw.content((-0.03, -0.92),angle:6.11rad,[k[0]])
cetz.draw.hobby((0.37, -0.90),(-0.02, -0.86),(-0.40, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.33, -0.49),node4.pos,decoration:"wave",angle:1.97rad)
cetz.draw.content((0.44, -0.45),angle:1.97rad,[-q])
cetz.draw.hobby((0.50, -0.74),(0.38, -0.46),(0.26, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.30, -0.12),node1.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((-0.41, -0.08),angle:4.39rad,[-q])
cetz.draw.hobby((-0.18, 0.38),(-0.35, -0.08),(-0.49, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"coil",angle:1.87rad)
cetz.draw.content((1.06, -0.13),angle:1.87rad,[-p+q-2 k[3]])
cetz.draw.hobby((1.03, -0.22),(0.98, -0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"coil",angle:-1.96rad)
cetz.draw.content((-0.77, -0.08),angle:-1.96rad,[-p+q-2 k[3]])
cetz.draw.hobby((-0.74, 0.15),(-0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, -0.04),node4.pos,decoration:"arrow",angle:6.47rad)
cetz.draw.content((0.52, 0.08),angle:6.47rad,[-p+q-k[3]])
cetz.draw.hobby((0.82, 0.06),(0.52, 0.01),(0.23, -0.05),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:7.55rad)
cetz.draw.content((0.83, 0.20),angle:7.55rad,[k[3]])
cetz.draw.hobby((0.91, 0.26),(0.87, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:0.15rad)
cetz.draw.content((-0.52, 0.28),angle:0.15rad,[k[3]])
cetz.draw.hobby((-0.17, 0.40),(-0.89, 0.29),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.31, 0.08),node3.pos,decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.26, 0.19),angle:5.88rad,[-p-k[3]])
cetz.draw.hobby((0.10, -0.04),(-0.27, 0.12),(-0.64, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:6.74rad)
cetz.draw.content((0.41, 0.84),angle:6.74rad,[-q+k[3]])
cetz.draw.hobby((0.88, 1.01),(-0.02, 0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.03rad)
cetz.draw.content((-0.99, 0.59),angle:5.03rad,[-q+k[3]])
cetz.draw.hobby((-0.85, 0.34),(-1.03, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.84))
node(node0.pos)
let node1= (pos:(0.59, -0.68))
node(node1.pos)
let node2= (pos:(-0.47, 0.10))
node(node2.pos)
let node3= (pos:(-0.08, 0.67))
node(node3.pos)
let node4= (pos:(-0.07, -0.17))
node(node4.pos)
let node5= (pos:(0.59, 0.42))
node(node5.pos)
edge(node1.pos,(0.09, -0.80),node0.pos,decoration:"arrow",angle:0.16rad)
cetz.draw.content((0.11, -0.92),angle:0.16rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.77),(0.10, -0.86),(-0.32, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.62rad)
cetz.draw.content((0.87, -0.74),angle:5.62rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.70, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.68, -1.03),angle:0.28rad,[k[0]])
cetz.draw.hobby((-0.50, -0.92),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.26, -0.51),node4.pos,decoration:"wave",angle:1.09rad)
cetz.draw.content((-0.37, -0.45),angle:1.09rad,[q])
cetz.draw.hobby((-0.45, -0.74),(-0.31, -0.47),(-0.16, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.62, -0.13),node1.pos,decoration:"wave",angle:-1.57rad)
cetz.draw.content((0.74, -0.13),angle:-1.57rad,[q])
cetz.draw.hobby((0.66, 0.31),(0.68, -0.13),(0.66, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.32, 0.42),node2.pos,decoration:"coil",angle:4.12rad)
cetz.draw.content((-0.42, 0.49),angle:4.12rad,[-1/2 p-q-3/2 k[3]])
cetz.draw.hobby((-0.18, 0.67),(-0.38, 0.45),(-0.51, 0.18),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:6.13rad)
cetz.draw.content((0.48, -0.13),angle:6.13rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.91, -0.26),(0.04, -0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.66, -0.21),angle:0.68rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((-0.51, -0.01),(-0.88, -0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.08, 0.26),node2.pos,decoration:"arrow",angle:0.29rad)
cetz.draw.content((0.12, 0.15),angle:0.29rad,[k[3]])
cetz.draw.hobby((0.50, 0.33),(0.08, 0.20),(-0.34, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.49, 0.62),angle:5.98rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.92, 0.42),(0.03, 0.70),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:5.79rad)
cetz.draw.content((-0.59, -0.02),angle:5.79rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.19, -0.17),(-0.94, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.24rad)
cetz.draw.content((0.70, 0.78),angle:7.24rad,[q+k[3]])
cetz.draw.hobby((0.89, 0.95),(0.60, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((-0.58, 0.72),angle:5.94rad,[q+k[3]])
cetz.draw.hobby((-0.20, 0.65),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding14f0=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.58, -0.72))
node(node1.pos)
let node2= (pos:(0.20, 0.13))
node(node2.pos)
let node3= (pos:(0.45, 0.76))
node(node3.pos)
let node4= (pos:(-0.03, 0.10))
node(node4.pos)
let node5= (pos:(-0.58, 0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((0.75, -0.77),angle:5.89rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.60rad)
cetz.draw.content((-0.72, -0.96),angle:0.60rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.82),(-0.88, -0.99),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.09, -0.78),node1.pos,decoration:"arrow",angle:6.24rad)
cetz.draw.content((-0.10, -0.90),angle:6.24rad,[k[0]])
cetz.draw.hobby((0.31, -0.83),(-0.09, -0.84),(-0.49, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.20, -0.35),node4.pos,decoration:"wave",angle:2.04rad)
cetz.draw.content((0.09, -0.40),angle:2.04rad,[-q])
cetz.draw.hobby((0.31, -0.70),(0.13, -0.35),(-0.04, -0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.61, -0.24),node1.pos,decoration:"wave",angle:4.72rad)
cetz.draw.content((-0.73, -0.24),angle:4.72rad,[-q])
cetz.draw.hobby((-0.65, 0.16),(-0.67, -0.24),(-0.65, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, 0.45),node2.pos,decoration:"coil",angle:-1.94rad)
cetz.draw.content((0.47, 0.41),angle:-1.94rad,[-1/2 p+1/2 q-3/2 k[3]])
cetz.draw.hobby((0.49, 0.68),(0.41, 0.41),(0.28, 0.16),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, -0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.53, -0.00),angle:5.88rad,[-1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.93, -0.24),(0.09, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.37rad)
cetz.draw.content((-0.36, -0.21),angle:0.37rad,[-1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.13, 0.04),(-0.89, -0.35),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:6.53rad)
cetz.draw.content((0.57, 0.35),angle:6.53rad,[k[3]])
cetz.draw.hobby((0.89, 0.37),(0.28, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:6.08rad)
cetz.draw.content((-0.82, 0.17),angle:6.08rad,[k[3]])
cetz.draw.hobby((-0.69, 0.21),(-0.91, 0.25),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.70rad)
cetz.draw.content((0.68, 0.99),angle:6.70rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.88, 1.01),(0.52, 0.85),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.54rad)
cetz.draw.content((-0.60, 0.46),angle:5.54rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.14, 0.13),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.10, 0.57),node5.pos,decoration:"arrow",angle:6.74rad)
cetz.draw.content((-0.15, 0.68),angle:6.74rad,[-q+k[3]])
cetz.draw.hobby((0.32, 0.79),(-0.13, 0.62),(-0.53, 0.37),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [2, -2, -4, -6] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1 prop[0,p-q-3 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/6 (dot[p,q]+1/2 dot[q,q])^-1 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1
	-1/6 (dot[p,q]+1/2 dot[q,q])^-1 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/3 (dot[p,q]+1/2 dot[q,q])^-1 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+1/3 (dot[p,q]+1/2 dot[q,q])^-1 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/6 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 (1/6 dot[p,p]+2/3 dot[p,q]+2/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1
	+1/4 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 (1/6 dot[p,p]+2/3 dot[p,q]+2/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-3 k[3]]^-1
	+1/2 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 (1/6 dot[p,p]+2/3 dot[p,q]+2/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-3 k[3]]^-1
	-1/3 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 (1/6 dot[p,p]+2/3 dot[p,q]+2/3 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+1/2 (1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 (1/6 dot[p,p]+2/3 dot[p,q]+2/3 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-q-2 k[3]]^-1 prop[0,p-q-3 k[3]]^-1
	+(1/6 dot[p,p]-1/3 dot[p,q]+1/6 dot[q,q])^-1 (1/6 dot[p,p]+2/3 dot[p,q]+2/3 dot[q,q])^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1 prop[0,p-q-3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 +2-3-10+11-12+13-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,p+q-2 k[3]]^-1 prop[0,p+2 q-2 k[3]]^-1 prop[0,p+2 q-3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 +0-1-12+13-14+15-16+17],)
pagebreak()
[= embedding 2 [2, -2, -2, -4] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 +2-3-10+11-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,p+q-k[3]]^-1 prop[0,p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 +0-1+8-9-10+11-14+15],box[#embedding2f1 +0-1-10+11-16+17],box[#embedding2f2 +0-1-12+13-14+15],box[#embedding2f3 +0-1-8+9-12+13-16+17],)
pagebreak()
[= embedding 3 [2, -2, -2, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+2 q]^-1 prop[0,p+q+k[2]]^-1 prop[0,p+2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+q+k[2]]^-1 prop[0,p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 +2-3-10+11-12+13+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p-q]^-1 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 +0-1-12+13],box[#embedding3f1 +0-1-10+11+14-15-16+17],box[#embedding3f2 +0-1+8-9-10+11],)
pagebreak()
[= embedding 4 [2, -2, 0, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q]^-1 prop[0,p+q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 +2-3-10+11-12+13+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p-q]^-1 prop[0,p-k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 +0-1-10+11],box[#embedding4f1 +0-1-12+13-14+15+16-17],box[#embedding4f2 +0-1-8+9-12+13],)
pagebreak()
[= embedding 5 [2, 0, -4, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 +2-3+8-9-12+13],box[#embedding5i1 +2-3-12+13+14-15-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-q+k[3]]^-1 prop[0,-p-q+2 k[3]]^-1 prop[0,-p-2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 +0-1+8-9-16+17],box[#embedding5f1 +0-1+10-11-12+13-16+17],)
pagebreak()
[= embedding 6 [2, 0, -2, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 +2-3-10+11+14-15-16+17],box[#embedding6i1 +2-3+8-9-10+11],box[#embedding6i2 +2-3-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 +0-1-16+17],box[#embedding6f1 +0-1+10-11-12+13-14+15],box[#embedding6f2 +0-1+8-9-14+15],)
pagebreak()
[= embedding 7 [2, 0, -2, 0] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 +2-3+8-9-10+11+14-15],box[#embedding7i1 +2-3-12+13+14-15],box[#embedding7i2 +2-3+8-9-12+13+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p+k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 +0-1+10-11-12+13],box[#embedding7f1 +0-1+14-15-16+17],box[#embedding7f2 +0-1+8-9],)
pagebreak()
[= embedding 8 [2, 0, 0, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-2 q]^-1 prop[0,-p-2 q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 +2-3-12+13+14-15+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p+q]^-1 prop[0,-q+k[3]]^-1 prop[0,-p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 +0-1+8-9+16-17],box[#embedding8f1 +0-1+14-15],box[#embedding8f2 +0-1+10-11-12+13+16-17],)
pagebreak()
[= embedding 9 [2, 0, 2, 0] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 +2-3-8+9-10+11+14-15],box[#embedding9i1 +2-3-8+9-12+13+16-17],box[#embedding9i2 +2-3-10+11+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 +0-1-10+11+12-13],box[#embedding9f1 +0-1-14+15+16-17],box[#embedding9f2 +0-1-8+9],)
pagebreak()
[= embedding 10 [2, 0, 2, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p-q]^-1 prop[0,-p-2 q]^-1 prop[0,-p-q+k[2]]^-1 prop[0,-p-2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 prop[0,-p-2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 +2-3-10+11+14-15+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p+q]^-1 prop[0,-p+k[2]]^-1 prop[0,-p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 +0-1+16-17],box[#embedding10f1 +0-1-10+11+12-13+14-15],box[#embedding10f2 +0-1-8+9+14-15],)
pagebreak()
[= embedding 11 [2, 2, -2, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1
	+4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	-(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11i0 +2-3+8-9+14-15],box[#embedding11i1 +2-3+10-11-12+13+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11f0 +0-1+10-11+14-15-16+17],box[#embedding11f1 +0-1+8-9+10-11],)
pagebreak()
[= embedding 12 [2, 2, 0, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12i0 +2-3+8-9+16-17],box[#embedding12i1 +2-3+14-15],box[#embedding12i2 +2-3+10-11-12+13+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12f0 +0-1+10-11],box[#embedding12f1 +0-1+12-13+14-15-16+17],box[#embedding12f2 +0-1+8-9+12-13],)
pagebreak()
[= embedding 13 [2, 2, 2, 4] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13i0 +2-3+14-15+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p+q-k[3]]^-1 prop[0,-p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13f0 +0-1-8+9+10-11+14-15],box[#embedding13f1 +0-1+10-11+16-17],box[#embedding13f2 +0-1+12-13+14-15],box[#embedding13f3 +0-1+8-9+12-13+16-17],)
pagebreak()
[= embedding 14 [2, 4, 2, 6] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 prop[0,-1/2 p-q-3/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
4/3 (-2 dot[p,q]-dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1
	-4/3 (-2 dot[p,q]-dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	-2/3 (-2 dot[p,q]-dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	+2/3 (-2 dot[p,q]-dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	-4/3 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1
	+4 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-q-3/2 k[3]]^-1
	+2 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-3/2 k[3]]^-1
	-2/3 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	+2 (1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 prop[0,-1/2 p-q-3/2 k[3]]^-1
	+(1/3 dot[p,p]-2/3 dot[p,q]+1/3 dot[q,q])^-1 (1/3 dot[p,p]+4/3 dot[p,q]+4/3 dot[q,q])^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 prop[0,-1/2 p-q-3/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14i0 +2-3+10-11+14-15+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q-3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14f0 +0-1+10-11+12-13+14-15],)
pagebreak()
}