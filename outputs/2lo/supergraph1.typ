#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.66))
node(node1.pos)
let node2= (pos:(-0.02, 0.60))
node(node2.pos)
let node3= (pos:(0.02, 0.16))
node(node3.pos)
let node4= (pos:(-0.69, -0.16))
node(node4.pos)
let node5= (pos:(0.76, 0.44))
node(node5.pos)
edge(node1.pos,(0.04, -0.77),node0.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((0.06, -0.89),angle:0.15rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.75),(0.05, -0.83),(-0.40, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.58rad)
cetz.draw.content((0.88, -0.74),angle:5.58rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.72, -1.03),angle:0.34rad,[k[0]])
cetz.draw.hobby((-0.60, -0.92),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.51),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((-0.75, -0.54),angle:1.82rad,[q])
cetz.draw.hobby((-0.60, -0.79),(-0.69, -0.52),(-0.75, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, -0.13),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.14),angle:-1.72rad,[q])
cetz.draw.hobby((0.82, 0.32),(0.77, -0.13),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, 0.38),node2.pos,decoration:"coil",angle:1.61rad)
cetz.draw.content((-0.23, 0.38),angle:1.61rad,[p-2 k[3]])
cetz.draw.hobby((-0.06, 0.15),(-0.17, 0.36),(-0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:8.94rad)
cetz.draw.content((-0.90, -0.19),angle:8.94rad,[p-k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.61rad)
cetz.draw.content((0.55, 0.40),angle:2.61rad,[p-k[3]])
cetz.draw.hobby((0.10, 0.60),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:9.04rad)
cetz.draw.content((-0.55, 0.69),angle:9.04rad,[k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.13, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.31rad)
cetz.draw.content((0.77, 0.77),angle:4.31rad,[k[3]])
cetz.draw.hobby((0.75, 0.55),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, -0.01),node3.pos,decoration:"arrow",angle:3.57rad)
cetz.draw.content((-0.29, -0.12),angle:3.57rad,[p+q-k[3]])
cetz.draw.hobby((-0.60, -0.19),(-0.31, -0.06),(-0.02, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, 0.30),node5.pos,decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.46, 0.19),angle:3.50rad,[q+k[3]])
cetz.draw.hobby((0.12, 0.13),(0.42, 0.24),(0.71, 0.35),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.34, -0.75))
node(node1.pos)
let node2= (pos:(-0.54, 0.21))
node(node2.pos)
let node3= (pos:(-0.60, 0.73))
node(node3.pos)
let node4= (pos:(0.60, 0.47))
node(node4.pos)
let node5= (pos:(0.28, 0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.90, -0.73),angle:5.50rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.75, -0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.36rad)
cetz.draw.content((-0.63, -0.99),angle:0.36rad,[-q+k[0]])
cetz.draw.hobby((-0.41, -0.84),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.74),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.17, -0.86),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.56, -0.72),(0.16, -0.80),(-0.24, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.68, -0.09),node4.pos,decoration:"wave",angle:1.60rad)
cetz.draw.content((0.80, -0.09),angle:1.60rad,[-q])
cetz.draw.hobby((0.71, -0.54),(0.73, -0.08),(0.69, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, -0.38),node1.pos,decoration:"wave",angle:4.03rad)
cetz.draw.content((-0.13, -0.30),angle:4.03rad,[-q])
cetz.draw.hobby((0.17, -0.03),(-0.08, -0.33),(-0.33, -0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, 0.47),node2.pos,decoration:"coil",angle:4.81rad)
cetz.draw.content((-0.77, 0.46),angle:4.81rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.68, 0.70),(-0.71, 0.45),(-0.63, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.04, 0.38),node4.pos,decoration:"arrow",angle:3.36rad)
cetz.draw.content((0.02, 0.49),angle:3.36rad,[p+q-k[3]])
cetz.draw.hobby((-0.45, 0.31),(0.01, 0.43),(0.48, 0.52),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.58rad)
cetz.draw.content((-0.72, -0.00),angle:3.58rad,[k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.61, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.64, 0.12),angle:3.14rad,[k[3]])
cetz.draw.hobby((0.38, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:8.82rad)
cetz.draw.content((-0.87, 0.76),angle:8.82rad,[p-k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.72, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.07rad)
cetz.draw.content((0.71, 0.81),angle:4.07rad,[p-k[3]])
cetz.draw.hobby((0.62, 0.59),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.15, 0.39),node5.pos,decoration:"arrow",angle:2.46rad)
cetz.draw.content((-0.07, 0.48),angle:2.46rad,[-q+k[3]])
cetz.draw.hobby((-0.47, 0.71),(-0.11, 0.43),(0.24, 0.12),stroke:stroke,mark: (end: ">"))
})
let embedding1f1=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.75))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.55, 0.21))
node(node2.pos)
let node3= (pos:(0.60, 0.73))
node(node3.pos)
let node4= (pos:(-0.28, 0.00))
node(node4.pos)
let node5= (pos:(-0.60, 0.47))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.92rad)
cetz.draw.content((0.71, -0.76),angle:5.92rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.45, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.74, -0.90),angle:0.79rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.75),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.74),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.17, -0.86),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.24, -0.81),(-0.16, -0.80),(-0.56, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.04, -0.38),node4.pos,decoration:"wave",angle:2.26rad)
cetz.draw.content((0.14, -0.30),angle:2.26rad,[-q])
cetz.draw.hobby((0.33, -0.64),(0.08, -0.33),(-0.17, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, -0.09),node1.pos,decoration:"wave",angle:4.68rad)
cetz.draw.content((-0.79, -0.08),angle:4.68rad,[-q])
cetz.draw.hobby((-0.69, 0.38),(-0.73, -0.08),(-0.72, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, 0.47),node2.pos,decoration:"coil",angle:-1.66rad)
cetz.draw.content((0.78, 0.46),angle:-1.66rad,[p+q-2 k[3]])
cetz.draw.hobby((0.68, 0.70),(0.72, 0.45),(0.63, 0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.64, -0.12),angle:3.14rad,[p+q-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.38, -0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.82, 0.22),angle:2.70rad,[p+q-k[3]])
cetz.draw.hobby((0.66, 0.23),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, 0.38),node2.pos,decoration:"arrow",angle:2.92rad)
cetz.draw.content((-0.01, 0.50),angle:2.92rad,[k[3]])
cetz.draw.hobby((-0.48, 0.52),(-0.01, 0.43),(0.45, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.39),node3.pos,decoration:"arrow",angle:3.83rad)
cetz.draw.content((0.08, 0.48),angle:3.83rad,[p-k[3]])
cetz.draw.hobby((-0.24, 0.12),(0.11, 0.43),(0.47, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.50rad)
cetz.draw.content((-0.90, 0.67),angle:8.50rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.71, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.75rad)
cetz.draw.content((0.73, 0.96),angle:3.75rad,[-q+k[3]])
cetz.draw.hobby((0.65, 0.83),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.87))
node(node0.pos)
let node1= (pos:(0.59, -0.67))
node(node1.pos)
let node2= (pos:(-0.06, 0.50))
node(node2.pos)
let node3= (pos:(-0.54, 0.17))
node(node3.pos)
let node4= (pos:(-0.31, -0.21))
node(node4.pos)
let node5= (pos:(0.61, 0.42))
node(node5.pos)
edge(node1.pos,(0.08, -0.81),node0.pos,decoration:"arrow",angle:0.19rad)
cetz.draw.content((0.10, -0.93),angle:0.19rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.76),(0.08, -0.87),(-0.35, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((0.87, -0.74),angle:5.61rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.71, -1.05),angle:0.23rad,[k[0]])
cetz.draw.hobby((-0.55, -0.96),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.40, -0.56),node4.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((-0.52, -0.53),angle:1.34rad,[q])
cetz.draw.hobby((-0.51, -0.80),(-0.45, -0.53),(-0.38, -0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.63, -0.13),node1.pos,decoration:"wave",angle:-1.59rad)
cetz.draw.content((0.75, -0.13),angle:-1.59rad,[q])
cetz.draw.hobby((0.68, 0.31),(0.69, -0.13),(0.66, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.70rad)
cetz.draw.content((0.52, 0.36),angle:2.70rad,[-p+k[3]])
cetz.draw.hobby((0.94, 0.10),(0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.79rad)
cetz.draw.content((-0.73, -0.03),angle:-2.79rad,[-p+k[3]])
cetz.draw.hobby((-0.61, 0.08),(-0.89, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.14, 0.14),node4.pos,decoration:"arrow",angle:1.24rad)
cetz.draw.content((-0.03, 0.10),angle:1.24rad,[-p+2 k[3]])
cetz.draw.hobby((-0.01, 0.41),(-0.09, 0.11),(-0.22, -0.18),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.94rad)
cetz.draw.content((-0.58, 0.64),angle:8.94rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.17, 0.49),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.12rad)
cetz.draw.content((0.70, 0.78),angle:4.12rad,[k[3]])
cetz.draw.hobby((0.61, 0.53),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, -0.08),node3.pos,decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.65, -0.14),angle:5.22rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.37, -0.27),(-0.59, -0.12),(-0.62, 0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.26),node5.pos,decoration:"arrow",angle:3.37rad)
cetz.draw.content((0.11, 0.14),angle:3.37rad,[q+k[3]])
cetz.draw.hobby((-0.41, 0.12),(0.06, 0.19),(0.52, 0.32),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.46, -0.87))
node(node0.pos)
let node1= (pos:(-0.59, -0.67))
node(node1.pos)
let node2= (pos:(0.54, 0.17))
node(node2.pos)
let node3= (pos:(0.06, 0.50))
node(node3.pos)
let node4= (pos:(0.31, -0.21))
node(node4.pos)
let node5= (pos:(-0.61, 0.42))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.76, -0.82),angle:6.05rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.92),(0.58, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.68rad)
cetz.draw.content((-0.72, -0.93),angle:0.68rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.78),(-0.88, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.81),node1.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((-0.10, -0.92),angle:6.09rad,[k[0]])
cetz.draw.hobby((0.35, -0.93),(-0.08, -0.87),(-0.51, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.40, -0.56),node4.pos,decoration:"wave",angle:1.80rad)
cetz.draw.content((0.52, -0.53),angle:1.80rad,[-q])
cetz.draw.hobby((0.51, -0.80),(0.46, -0.53),(0.39, -0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.62, -0.13),node1.pos,decoration:"wave",angle:4.73rad)
cetz.draw.content((-0.74, -0.13),angle:4.73rad,[-q])
cetz.draw.hobby((-0.67, 0.31),(-0.68, -0.13),(-0.66, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.79rad)
cetz.draw.content((0.81, 0.20),angle:2.79rad,[-p-q+k[3]])
cetz.draw.hobby((0.93, 0.09),(0.65, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.70rad)
cetz.draw.content((-0.42, 0.14),angle:-2.70rad,[-p-q+k[3]])
cetz.draw.hobby((-0.01, 0.41),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, -0.08),node4.pos,decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.65, -0.14),angle:1.06rad,[-p-q+2 k[3]])
cetz.draw.hobby((0.62, 0.14),(0.59, -0.12),(0.38, -0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.09, 0.25),node2.pos,decoration:"arrow",angle:9.20rad)
cetz.draw.content((-0.11, 0.14),angle:9.20rad,[k[3]])
cetz.draw.hobby((-0.52, 0.32),(-0.06, 0.19),(0.42, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.15),node3.pos,decoration:"arrow",angle:5.05rad)
cetz.draw.content((0.03, 0.11),angle:5.05rad,[-p-2 q+2 k[3]])
cetz.draw.hobby((0.22, -0.17),(0.09, 0.11),(0.01, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.45rad)
cetz.draw.content((-0.90, 0.64),angle:8.45rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.71, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.47, 0.86),angle:3.63rad,[-q+k[3]])
cetz.draw.hobby((0.12, 0.60),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.66, -0.66))
node(node0.pos)
let node1= (pos:(0.45, -0.78))
node(node1.pos)
let node2= (pos:(0.91, 0.46))
node(node2.pos)
let node3= (pos:(-0.57, 0.12))
node(node3.pos)
let node4= (pos:(-0.95, 0.48))
node(node4.pos)
let node5= (pos:(0.28, -0.02))
node(node5.pos)
edge(node1.pos,(-0.11, -0.75),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.12, -0.87),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.33, -0.84),(-0.12, -0.81),(-0.56, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.77, -0.78),angle:5.90rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.75, -0.91),angle:0.79rad,[k[0]])
cetz.draw.hobby((-0.69, -0.77),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.84, -0.13),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((-0.96, -0.17),angle:1.82rad,[q])
cetz.draw.hobby((-0.76, -0.57),(-0.91, -0.12),(-0.99, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, -0.41),node1.pos,decoration:"wave",angle:-1.36rad)
cetz.draw.content((0.50, -0.38),angle:-1.36rad,[q])
cetz.draw.hobby((0.36, -0.08),(0.44, -0.38),(0.50, -0.69),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:1.76rad)
cetz.draw.content((1.07, 0.25),angle:1.76rad,[k[2]])
cetz.draw.hobby((1.04, 0.11),(0.99, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.87rad)
cetz.draw.content((-0.75, -0.06),angle:-2.87rad,[k[2]])
cetz.draw.hobby((-0.65, 0.03),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:7.96rad)
cetz.draw.content((-1.09, 0.73),angle:7.96rad,[p+k[2]])
cetz.draw.hobby((-1.05, 0.89),(-1.02, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.75),angle:4.55rad,[p+k[2]])
cetz.draw.hobby((0.87, 0.57),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.60, 0.24),node2.pos,decoration:"arrow",angle:3.79rad)
cetz.draw.content((0.52, 0.33),angle:3.79rad,[p])
cetz.draw.hobby((0.30, 0.07),(0.55, 0.28),(0.81, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.71, 0.36),node3.pos,decoration:"arrow",angle:2.40rad)
cetz.draw.content((-0.63, 0.45),angle:2.40rad,[p+q+k[2]])
cetz.draw.hobby((-0.87, 0.52),(-0.66, 0.40),(-0.53, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.14, 0.06),node5.pos,decoration:"arrow",angle:2.98rad)
cetz.draw.content((-0.12, 0.18),angle:2.98rad,[p+q])
cetz.draw.hobby((-0.48, 0.17),(-0.13, 0.12),(0.21, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.60))
node(node1.pos)
let node2= (pos:(-0.74, 0.75))
node(node2.pos)
let node3= (pos:(-0.06, 0.55))
node(node3.pos)
let node4= (pos:(-0.54, 0.06))
node(node4.pos)
let node5= (pos:(0.74, 0.51))
node(node5.pos)
edge(node1.pos,(0.06, -0.69),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.07, -0.81),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.68),(0.06, -0.75),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.89, -0.72),angle:5.50rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.70, -0.97),angle:0.49rad,[k[0]])
cetz.draw.hobby((-0.56, -0.84),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.35),node4.pos,decoration:"wave",angle:1.62rad)
cetz.draw.content((-0.66, -0.36),angle:1.62rad,[q])
cetz.draw.hobby((-0.58, -0.67),(-0.60, -0.34),(-0.61, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.05),node1.pos,decoration:"wave",angle:-1.69rad)
cetz.draw.content((0.81, -0.07),angle:-1.69rad,[q])
cetz.draw.hobby((0.79, 0.39),(0.75, -0.06),(0.68, -0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.71),node2.pos,decoration:"coil",angle:2.87rad)
cetz.draw.content((-0.35, 0.83),angle:2.87rad,[k[2]])
cetz.draw.hobby((-0.09, 0.64),(-0.37, 0.77),(-0.67, 0.81),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.71, 0.39),node4.pos,decoration:"arrow",angle:8.13rad)
cetz.draw.content((-0.82, 0.36),angle:8.13rad,[p+k[2]])
cetz.draw.hobby((-0.81, 0.67),(-0.76, 0.37),(-0.64, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.65rad)
cetz.draw.content((-0.96, 0.79),angle:8.65rad,[p])
cetz.draw.hobby((-0.97, 0.89),(-0.86, 0.77),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.76, 0.81),angle:4.22rad,[p])
cetz.draw.hobby((0.73, 0.62),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.27, 0.28),node3.pos,decoration:"arrow",angle:3.93rad)
cetz.draw.content((-0.19, 0.19),angle:3.93rad,[p+q+k[2]])
cetz.draw.hobby((-0.45, 0.05),(-0.23, 0.24),(-0.05, 0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, 0.55),node5.pos,decoration:"arrow",angle:3.08rad)
cetz.draw.content((0.36, 0.67),angle:3.08rad,[p+q])
cetz.draw.hobby((0.02, 0.61),(0.34, 0.61),(0.67, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.74))
node(node0.pos)
let node1= (pos:(-0.60, -0.60))
node(node1.pos)
let node2= (pos:(0.06, 0.55))
node(node2.pos)
let node3= (pos:(0.74, 0.75))
node(node3.pos)
let node4= (pos:(0.54, 0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.51))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.81, -0.76),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.72, -0.89),angle:0.79rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.71),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.06, -0.69),node1.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.07, -0.81),angle:6.16rad,[k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.50, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.35),node4.pos,decoration:"wave",angle:1.52rad)
cetz.draw.content((0.66, -0.36),angle:1.52rad,[-q])
cetz.draw.hobby((0.58, -0.66),(0.60, -0.34),(0.61, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.69, -0.05),node1.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.81, -0.07),angle:4.83rad,[-q])
cetz.draw.hobby((-0.79, 0.39),(-0.75, -0.06),(-0.68, -0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.71),node2.pos,decoration:"coil",angle:3.41rad)
cetz.draw.content((0.36, 0.83),angle:3.41rad,[k[2]])
cetz.draw.hobby((0.67, 0.81),(0.37, 0.77),(0.09, 0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.27, 0.28),node4.pos,decoration:"arrow",angle:8.64rad)
cetz.draw.content((0.19, 0.20),angle:8.64rad,[p+q+k[2]])
cetz.draw.hobby((0.05, 0.46),(0.23, 0.24),(0.45, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.35, 0.55),node2.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.36, 0.67),angle:3.20rad,[p+q])
cetz.draw.hobby((-0.67, 0.58),(-0.34, 0.61),(-0.02, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.39),node3.pos,decoration:"arrow",angle:4.43rad)
cetz.draw.content((0.82, 0.36),angle:4.43rad,[p+k[2]])
cetz.draw.hobby((0.64, 0.09),(0.76, 0.37),(0.81, 0.67),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.34rad)
cetz.draw.content((-0.97, 0.70),angle:8.34rad,[p])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.92rad)
cetz.draw.content((0.79, 0.96),angle:3.92rad,[p])
cetz.draw.hobby((0.77, 0.86),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding3f1=cetz.canvas(length:50%,{
let node0= (pos:(0.66, -0.66))
node(node0.pos)
let node1= (pos:(-0.45, -0.78))
node(node1.pos)
let node2= (pos:(0.57, 0.12))
node(node2.pos)
let node3= (pos:(-0.91, 0.46))
node(node3.pos)
let node4= (pos:(0.95, 0.48))
node(node4.pos)
let node5= (pos:(-0.28, -0.02))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.92, -0.74),angle:5.49rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.78, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.68, -1.00),angle:0.38rad,[-q+k[0]])
cetz.draw.hobby((-0.52, -0.87),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.75),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.13, -0.87),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.57, -0.74),(0.12, -0.81),(-0.33, -0.84),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.85, -0.13),node4.pos,decoration:"wave",angle:1.32rad)
cetz.draw.content((0.96, -0.16),angle:1.32rad,[-q])
cetz.draw.hobby((0.76, -0.57),(0.91, -0.12),(1.00, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, -0.41),node1.pos,decoration:"wave",angle:4.50rad)
cetz.draw.content((-0.50, -0.38),angle:4.50rad,[-q])
cetz.draw.hobby((-0.36, -0.08),(-0.44, -0.39),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.82, 0.17),angle:2.87rad,[k[2]])
cetz.draw.hobby((0.92, 0.08),(0.68, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-1.77rad)
cetz.draw.content((-0.84, 0.20),angle:-1.77rad,[k[2]])
cetz.draw.hobby((-0.87, 0.35),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.71, 0.36),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((0.63, 0.45),angle:3.89rad,[p+q+k[2]])
cetz.draw.hobby((0.53, 0.19),(0.66, 0.40),(0.87, 0.52),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.06),node2.pos,decoration:"arrow",angle:3.31rad)
cetz.draw.content((0.12, 0.17),angle:3.31rad,[p+q])
cetz.draw.hobby((-0.21, 0.05),(0.13, 0.12),(0.48, 0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:8.02rad)
cetz.draw.content((-1.07, 0.71),angle:8.02rad,[p+k[2]])
cetz.draw.hobby((-1.04, 0.89),(-0.98, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.85, 0.75),angle:4.61rad,[p+k[2]])
cetz.draw.hobby((0.90, 0.58),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.59, 0.23),node5.pos,decoration:"arrow",angle:2.49rad)
cetz.draw.content((-0.52, 0.33),angle:2.49rad,[p])
cetz.draw.hobby((-0.81, 0.46),(-0.55, 0.28),(-0.30, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.63))
node(node0.pos)
let node1= (pos:(0.52, -0.77))
node(node1.pos)
let node2= (pos:(-0.48, 0.29))
node(node2.pos)
let node3= (pos:(0.57, 0.67))
node(node3.pos)
let node4= (pos:(-0.93, 0.49))
node(node4.pos)
let node5= (pos:(0.74, -0.05))
node(node5.pos)
edge(node1.pos,(-0.05, -0.72),node0.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.07, -0.84),angle:6.16rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.83),(-0.06, -0.78),(-0.52, -0.72),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.81, -0.78),angle:5.84rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.64, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.73, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.65, -0.75),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node4.pos,decoration:"wave",angle:1.84rad)
cetz.draw.content((-0.91, -0.13),angle:1.84rad,[q])
cetz.draw.hobby((-0.72, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.64, -0.42),node1.pos,decoration:"wave",angle:-1.86rad)
cetz.draw.content((0.76, -0.46),angle:-1.86rad,[q])
cetz.draw.hobby((0.78, -0.14),(0.70, -0.43),(0.61, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, 0.49),node2.pos,decoration:"coil",angle:3.49rad)
cetz.draw.content((0.00, 0.60),angle:3.49rad,[-p-q])
cetz.draw.hobby((0.45, 0.69),(0.02, 0.55),(-0.40, 0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.67, 0.47),node4.pos,decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.62, 0.58),angle:5.87rad,[-p-q+k[3]])
cetz.draw.hobby((-0.46, 0.37),(-0.64, 0.52),(-0.88, 0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.65rad)
cetz.draw.content((-0.68, 0.04),angle:3.65rad,[k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.54, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:3.33rad)
cetz.draw.content((0.85, 0.09),angle:3.33rad,[k[3]])
cetz.draw.hobby((0.83, 0.03),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.95rad)
cetz.draw.content((0.71, 0.93),angle:6.95rad,[-p+k[3]])
cetz.draw.hobby((0.88, 0.99),(0.61, 0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.86rad)
cetz.draw.content((-1.08, 0.73),angle:4.86rad,[-p+k[3]])
cetz.draw.hobby((-1.00, 0.58),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.32),node5.pos,decoration:"arrow",angle:1.80rad)
cetz.draw.content((0.78, 0.35),angle:1.80rad,[q+k[3]])
cetz.draw.hobby((0.65, 0.61),(0.73, 0.32),(0.79, 0.03),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.81))
node(node0.pos)
let node1= (pos:(-0.30, -0.63))
node(node1.pos)
let node2= (pos:(-0.87, 0.50))
node(node2.pos)
let node3= (pos:(-0.03, 0.39))
node(node3.pos)
let node4= (pos:(0.68, -0.11))
node(node4.pos)
let node5= (pos:(0.52, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.86, -0.80),angle:5.84rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.72, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.59, -0.92),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.73),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.76),node1.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((0.12, -0.87),angle:6.09rad,[k[0]])
cetz.draw.hobby((0.51, -0.87),(0.14, -0.82),(-0.23, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.67, -0.47),node4.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.79, -0.49),angle:1.46rad,[-q])
cetz.draw.hobby((0.68, -0.76),(0.73, -0.47),(0.75, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.09, -0.07),node1.pos,decoration:"wave",angle:-2.18rad)
cetz.draw.content((0.19, -0.14),angle:-2.18rad,[-q])
cetz.draw.hobby((0.49, 0.39),(0.16, -0.08),(-0.17, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.46),node2.pos,decoration:"coil",angle:3.01rad)
cetz.draw.content((-0.44, 0.57),angle:3.01rad,[-p])
cetz.draw.hobby((-0.10, 0.46),(-0.44, 0.51),(-0.78, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:6.63rad)
cetz.draw.content((0.80, 0.06),angle:6.63rad,[-p+k[3]])
cetz.draw.hobby((0.89, 0.02),(0.76, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:1.31rad)
cetz.draw.content((-0.82, 0.22),angle:1.31rad,[-p+k[3]])
cetz.draw.hobby((-0.84, 0.39),(-0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:8.11rad)
cetz.draw.content((-1.05, 0.72),angle:8.11rad,[k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.95, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.91rad)
cetz.draw.content((0.68, 0.86),angle:3.91rad,[k[3]])
cetz.draw.hobby((0.55, 0.65),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.32, 0.12),node3.pos,decoration:"arrow",angle:5.67rad)
cetz.draw.content((0.25, 0.02),angle:5.67rad,[-p-q+k[3]])
cetz.draw.hobby((0.58, -0.12),(0.28, 0.07),(-0.00, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.23, 0.55),node5.pos,decoration:"arrow",angle:3.40rad)
cetz.draw.content((0.20, 0.66),angle:3.40rad,[-q+k[3]])
cetz.draw.hobby((-0.03, 0.47),(0.21, 0.60),(0.48, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.78))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(-0.01, 0.44))
node(node2.pos)
let node3= (pos:(0.85, 0.51))
node(node3.pos)
let node4= (pos:(-0.42, -0.13))
node(node4.pos)
let node5= (pos:(-0.78, 0.53))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.97rad)
cetz.draw.content((0.69, -0.77),angle:5.97rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.42, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.87rad)
cetz.draw.content((-0.75, -0.90),angle:0.87rad,[-q+k[0]])
cetz.draw.hobby((-0.71, -0.75),(-0.89, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.20, -0.76),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.21, -0.88),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.21, -0.84),(-0.21, -0.82),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.03, -0.45),node4.pos,decoration:"wave",angle:2.41rad)
cetz.draw.content((0.05, -0.36),angle:2.41rad,[-q])
cetz.draw.hobby((0.28, -0.66),(-0.00, -0.39),(-0.30, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.79, -0.06),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.91, -0.07),angle:4.79rad,[-q])
cetz.draw.hobby((-0.85, 0.41),(-0.85, -0.06),(-0.78, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.43, 0.49),node2.pos,decoration:"coil",angle:3.22rad)
cetz.draw.content((0.42, 0.61),angle:3.22rad,[-p])
cetz.draw.hobby((0.77, 0.57),(0.41, 0.55),(0.07, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.20, 0.15),node4.pos,decoration:"arrow",angle:0.96rad)
cetz.draw.content((-0.10, 0.08),angle:0.96rad,[-p+k[3]])
cetz.draw.hobby((0.00, 0.35),(-0.15, 0.11),(-0.33, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.40, 0.54),node2.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.39, 0.66),angle:3.04rad,[k[3]])
cetz.draw.hobby((-0.71, 0.60),(-0.39, 0.59),(-0.07, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:4.99rad)
cetz.draw.content((1.04, 0.29),angle:4.99rad,[-p-q+k[3]])
cetz.draw.hobby((1.03, 0.11),(0.94, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.73, -0.18),angle:6.06rad,[-p-q+k[3]])
cetz.draw.hobby((-0.53, -0.17),(-0.92, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:8.28rad)
cetz.draw.content((-1.00, 0.71),angle:8.28rad,[-q+k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.88, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.42rad)
cetz.draw.content((0.81, 0.79),angle:4.42rad,[-q+k[3]])
cetz.draw.hobby((0.83, 0.62),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding4f2=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.73))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(0.59, 0.71))
node(node2.pos)
let node3= (pos:(-0.60, 0.71))
node(node3.pos)
let node4= (pos:(0.26, 0.16))
node(node4.pos)
let node5= (pos:(-0.27, 0.16))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((0.81, -0.76),angle:5.78rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.72),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.69, -0.97),angle:0.50rad,[-q+k[0]])
cetz.draw.hobby((-0.56, -0.83),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.76),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.88),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.41, -0.80),(0.00, -0.82),(-0.41, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.41, -0.29),node4.pos,decoration:"wave",angle:1.83rad)
cetz.draw.content((0.53, -0.26),angle:1.83rad,[-q])
cetz.draw.hobby((0.55, -0.62),(0.46, -0.26),(0.35, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.41, -0.29),node1.pos,decoration:"wave",angle:4.46rad)
cetz.draw.content((-0.52, -0.26),angle:4.46rad,[-q])
cetz.draw.hobby((-0.36, 0.09),(-0.46, -0.26),(-0.54, -0.63),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:3.75rad)
cetz.draw.content((0.73, 0.96),angle:3.75rad,[-p])
cetz.draw.hobby((0.88, 0.99),(0.64, 0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:2.52rad)
cetz.draw.content((-0.87, 0.76),angle:2.52rad,[-p])
cetz.draw.hobby((-0.71, 0.72),(-0.95, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.49, 0.42),node4.pos,decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.59, 0.36),angle:1.06rad,[-p+k[3]])
cetz.draw.hobby((0.64, 0.64),(0.53, 0.38),(0.36, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.50),node2.pos,decoration:"arrow",angle:3.71rad)
cetz.draw.content((0.08, 0.60),angle:3.71rad,[k[3]])
cetz.draw.hobby((-0.24, 0.27),(0.09, 0.54),(0.47, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.15, 0.50),node3.pos,decoration:"arrow",angle:5.72rad)
cetz.draw.content((-0.08, 0.60),angle:5.72rad,[-p-q+k[3]])
cetz.draw.hobby((0.23, 0.28),(-0.10, 0.54),(-0.48, 0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.49, 0.42),node5.pos,decoration:"arrow",angle:8.37rad)
cetz.draw.content((-0.60, 0.36),angle:8.37rad,[-q+k[3]])
cetz.draw.hobby((-0.64, 0.63),(-0.54, 0.37),(-0.36, 0.15),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.77))
node(node0.pos)
let node1= (pos:(0.62, -0.63))
node(node1.pos)
let node2= (pos:(0.48, 0.29))
node(node2.pos)
let node3= (pos:(-0.57, 0.66))
node(node3.pos)
let node4= (pos:(-0.74, -0.05))
node(node4.pos)
let node5= (pos:(0.93, 0.49))
node(node5.pos)
edge(node1.pos,(0.05, -0.72),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.07, -0.84),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.52, -0.71),(0.06, -0.78),(-0.40, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.90, -0.73),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.74, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.71, -0.99),angle:0.45rad,[k[0]])
cetz.draw.hobby((-0.59, -0.87),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.42),node4.pos,decoration:"wave",angle:1.86rad)
cetz.draw.content((-0.76, -0.46),angle:1.86rad,[q])
cetz.draw.hobby((-0.61, -0.72),(-0.70, -0.43),(-0.78, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.79, -0.10),node1.pos,decoration:"wave",angle:-1.84rad)
cetz.draw.content((0.91, -0.13),angle:-1.84rad,[q])
cetz.draw.hobby((0.97, 0.36),(0.86, -0.09),(0.72, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.05, 0.49),node2.pos,decoration:"coil",angle:-0.34rad)
cetz.draw.content((-0.00, 0.61),angle:-0.34rad,[p+q])
cetz.draw.hobby((-0.45, 0.69),(-0.02, 0.55),(0.40, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:9.23rad)
cetz.draw.content((-0.89, -0.14),angle:9.23rad,[p+q+k[3]])
cetz.draw.hobby((-0.91, -0.08),(-0.85, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((0.80, 0.25),angle:2.64rad,[p+q+k[3]])
cetz.draw.hobby((0.59, 0.29),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.47),node2.pos,decoration:"arrow",angle:6.69rad)
cetz.draw.content((0.63, 0.58),angle:6.69rad,[k[3]])
cetz.draw.hobby((0.88, 0.56),(0.64, 0.52),(0.46, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.32),node3.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.79, 0.35),angle:4.48rad,[p+2 q+k[3]])
cetz.draw.hobby((-0.79, 0.03),(-0.73, 0.32),(-0.65, 0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.72rad)
cetz.draw.content((0.85, 0.76),angle:7.72rad,[q+k[3]])
cetz.draw.hobby((0.93, 0.91),(0.88, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.62rad)
cetz.draw.content((-0.86, 0.74),angle:5.62rad,[q+k[3]])
cetz.draw.hobby((-0.69, 0.68),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.78))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(0.85, 0.51))
node(node2.pos)
let node3= (pos:(-0.01, 0.44))
node(node3.pos)
let node4= (pos:(-0.42, -0.13))
node(node4.pos)
let node5= (pos:(-0.78, 0.53))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.97rad)
cetz.draw.content((0.69, -0.77),angle:5.97rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.42, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.86rad)
cetz.draw.content((-0.75, -0.90),angle:0.86rad,[-q+k[0]])
cetz.draw.hobby((-0.71, -0.75),(-0.89, -0.96),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.20, -0.76),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.21, -0.88),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.21, -0.84),(-0.21, -0.82),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.03, -0.45),node4.pos,decoration:"wave",angle:2.41rad)
cetz.draw.content((0.05, -0.36),angle:2.41rad,[-q])
cetz.draw.hobby((0.28, -0.67),(-0.00, -0.39),(-0.30, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.78, -0.06),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.90, -0.06),angle:4.79rad,[-q])
cetz.draw.hobby((-0.85, 0.41),(-0.84, -0.06),(-0.77, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.43, 0.49),node2.pos,decoration:"coil",angle:0.08rad)
cetz.draw.content((0.42, 0.61),angle:0.08rad,[p])
cetz.draw.hobby((0.06, 0.51),(0.41, 0.55),(0.77, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:9.20rad)
cetz.draw.content((-0.74, -0.18),angle:9.20rad,[p+k[3]])
cetz.draw.hobby((-0.92, -0.08),(-0.53, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:1.85rad)
cetz.draw.content((1.04, 0.29),angle:1.85rad,[p+k[3]])
cetz.draw.hobby((0.94, 0.43),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:7.57rad)
cetz.draw.content((0.81, 0.79),angle:7.57rad,[k[3]])
cetz.draw.hobby((0.91, 0.92),(0.82, 0.62),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-1.00, 0.71),angle:5.15rad,[k[3]])
cetz.draw.hobby((-0.88, 0.59),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.14),node3.pos,decoration:"arrow",angle:4.10rad)
cetz.draw.content((-0.10, 0.07),angle:4.10rad,[p-q+k[3]])
cetz.draw.hobby((-0.32, -0.12),(-0.15, 0.11),(0.01, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.40, 0.54),node5.pos,decoration:"arrow",angle:6.18rad)
cetz.draw.content((-0.39, 0.65),angle:6.18rad,[-q+k[3]])
cetz.draw.hobby((-0.07, 0.52),(-0.39, 0.59),(-0.71, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding5f1=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.81))
node(node0.pos)
let node1= (pos:(-0.30, -0.63))
node(node1.pos)
let node2= (pos:(-0.03, 0.39))
node(node2.pos)
let node3= (pos:(-0.87, 0.50))
node(node3.pos)
let node4= (pos:(0.69, -0.11))
node(node4.pos)
let node5= (pos:(0.52, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.86, -0.80),angle:5.84rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.73, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.59, -0.92),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.73),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.76),node1.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((0.12, -0.88),angle:6.09rad,[k[0]])
cetz.draw.hobby((0.51, -0.87),(0.14, -0.82),(-0.23, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.67, -0.47),node4.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.79, -0.49),angle:1.46rad,[-q])
cetz.draw.hobby((0.69, -0.76),(0.74, -0.47),(0.75, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.09, -0.07),node1.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.00, -0.00),angle:4.10rad,[-q])
cetz.draw.hobby((0.39, 0.46),(0.06, -0.01),(-0.27, -0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.46),node2.pos,decoration:"coil",angle:-0.13rad)
cetz.draw.content((-0.44, 0.58),angle:-0.13rad,[p])
cetz.draw.hobby((-0.78, 0.55),(-0.44, 0.52),(-0.10, 0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.32, 0.12),node4.pos,decoration:"arrow",angle:8.81rad)
cetz.draw.content((0.26, 0.02),angle:8.81rad,[p+k[3]])
cetz.draw.hobby((0.00, 0.28),(0.28, 0.07),(0.58, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.23, 0.55),node2.pos,decoration:"arrow",angle:6.54rad)
cetz.draw.content((0.20, 0.66),angle:6.54rad,[k[3]])
cetz.draw.hobby((0.48, 0.61),(0.21, 0.60),(-0.03, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:4.45rad)
cetz.draw.content((-0.82, 0.22),angle:4.45rad,[p-q+k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.83, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.80, 0.06),angle:3.49rad,[p-q+k[3]])
cetz.draw.hobby((0.76, -0.02),(0.89, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.05rad)
cetz.draw.content((0.68, 0.86),angle:7.05rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.97),(0.55, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.97rad)
cetz.draw.content((-1.05, 0.72),angle:4.97rad,[-q+k[3]])
cetz.draw.hobby((-0.95, 0.58),(-1.03, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding5f2=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.73))
node(node0.pos)
let node1= (pos:(-0.49, -0.74))
node(node1.pos)
let node2= (pos:(-0.63, 0.69))
node(node2.pos)
let node3= (pos:(0.62, 0.71))
node(node3.pos)
let node4= (pos:(0.20, 0.18))
node(node4.pos)
let node5= (pos:(-0.20, 0.14))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.80, -0.76),angle:5.80rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.60, -0.72),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.47rad)
cetz.draw.content((-0.69, -0.98),angle:0.47rad,[-q+k[0]])
cetz.draw.hobby((-0.55, -0.84),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.77),node1.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((-0.00, -0.89),angle:0.02rad,[k[0]])
cetz.draw.hobby((0.39, -0.80),(-0.00, -0.83),(-0.40, -0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.36, -0.28),node4.pos,decoration:"wave",angle:1.87rad)
cetz.draw.content((0.47, -0.25),angle:1.87rad,[-q])
cetz.draw.hobby((0.52, -0.62),(0.41, -0.25),(0.29, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, -0.33),node1.pos,decoration:"wave",angle:4.40rad)
cetz.draw.content((-0.48, -0.29),angle:4.40rad,[-q])
cetz.draw.hobby((-0.29, 0.08),(-0.41, -0.28),(-0.52, -0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:5.58rad)
cetz.draw.content((-0.89, 0.75),angle:5.58rad,[p])
cetz.draw.hobby((-0.96, 0.89),(-0.74, 0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:0.65rad)
cetz.draw.content((0.74, 0.95),angle:0.65rad,[p])
cetz.draw.hobby((0.66, 0.82),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.20, 0.50),node4.pos,decoration:"arrow",angle:2.60rad)
cetz.draw.content((-0.14, 0.60),angle:2.60rad,[p+k[3]])
cetz.draw.hobby((-0.51, 0.71),(-0.15, 0.54),(0.17, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.48, 0.40),node2.pos,decoration:"arrow",angle:5.36rad)
cetz.draw.content((-0.57, 0.32),angle:5.36rad,[k[3]])
cetz.draw.hobby((-0.29, 0.13),(-0.51, 0.34),(-0.66, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.46, 0.42),node3.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((0.55, 0.35),angle:4.05rad,[p-q+k[3]])
cetz.draw.hobby((0.29, 0.17),(0.50, 0.37),(0.65, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.24, 0.51),node5.pos,decoration:"arrow",angle:6.85rad)
cetz.draw.content((0.18, 0.61),angle:6.85rad,[-q+k[3]])
cetz.draw.hobby((0.50, 0.73),(0.15, 0.52),(-0.17, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.67))
node(node0.pos)
let node1= (pos:(0.46, -0.88))
node(node1.pos)
let node2= (pos:(0.54, 0.17))
node(node2.pos)
let node3= (pos:(0.06, 0.50))
node(node3.pos)
let node4= (pos:(-0.60, 0.42))
node(node4.pos)
let node5= (pos:(0.31, -0.21))
node(node5.pos)
edge(node1.pos,(-0.08, -0.81),node0.pos,decoration:"arrow",angle:6.09rad)
cetz.draw.content((-0.10, -0.93),angle:6.09rad,[q+k[0]])
cetz.draw.hobby((0.35, -0.93),(-0.08, -0.87),(-0.50, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((0.76, -0.82),angle:6.06rad,[k[0]])
cetz.draw.hobby((0.92, -0.92),(0.58, -0.84),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.67rad)
cetz.draw.content((-0.72, -0.93),angle:0.67rad,[k[0]])
cetz.draw.hobby((-0.63, -0.78),(-0.88, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.62, -0.13),node4.pos,decoration:"wave",angle:1.59rad)
cetz.draw.content((-0.74, -0.13),angle:1.59rad,[q])
cetz.draw.hobby((-0.66, -0.57),(-0.68, -0.13),(-0.67, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.40, -0.56),node1.pos,decoration:"wave",angle:-1.35rad)
cetz.draw.content((0.52, -0.53),angle:-1.35rad,[q])
cetz.draw.hobby((0.39, -0.26),(0.46, -0.53),(0.51, -0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.79rad)
cetz.draw.content((0.81, 0.20),angle:2.79rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.93, 0.09),(0.65, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.70rad)
cetz.draw.content((-0.42, 0.14),angle:-2.70rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.01, 0.41),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.08, 0.25),node4.pos,decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.11, 0.14),angle:6.06rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.42, 0.12),(-0.06, 0.19),(-0.52, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, -0.08),node2.pos,decoration:"arrow",angle:4.21rad)
cetz.draw.content((0.65, -0.14),angle:4.21rad,[k[3]])
cetz.draw.hobby((0.38, -0.27),(0.59, -0.12),(0.62, 0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.77rad)
cetz.draw.content((0.47, 0.86),angle:6.77rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.88, 1.01),(0.12, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.31rad)
cetz.draw.content((-0.90, 0.64),angle:5.31rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.71, 0.46),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.15, 0.14),node5.pos,decoration:"arrow",angle:8.19rad)
cetz.draw.content((0.03, 0.10),angle:8.19rad,[q+k[3]])
cetz.draw.hobby((0.01, 0.42),(0.09, 0.11),(0.22, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.67))
node(node0.pos)
let node1= (pos:(-0.46, -0.88))
node(node1.pos)
let node2= (pos:(-0.06, 0.50))
node(node2.pos)
let node3= (pos:(-0.54, 0.17))
node(node3.pos)
let node4= (pos:(0.61, 0.41))
node(node4.pos)
let node5= (pos:(-0.31, -0.21))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((0.87, -0.74),angle:5.61rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.70, -1.06),angle:0.23rad,[-q+k[0]])
cetz.draw.hobby((-0.55, -0.96),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.81),node1.pos,decoration:"arrow",angle:0.19rad)
cetz.draw.content((0.10, -0.93),angle:0.19rad,[k[0]])
cetz.draw.hobby((0.51, -0.76),(0.08, -0.87),(-0.35, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.63, -0.13),node4.pos,decoration:"wave",angle:1.56rad)
cetz.draw.content((0.75, -0.14),angle:1.56rad,[-q])
cetz.draw.hobby((0.66, -0.57),(0.69, -0.13),(0.67, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.40, -0.56),node1.pos,decoration:"wave",angle:4.49rad)
cetz.draw.content((-0.52, -0.53),angle:4.49rad,[-q])
cetz.draw.hobby((-0.39, -0.26),(-0.45, -0.53),(-0.51, -0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.70rad)
cetz.draw.content((0.52, 0.36),angle:2.70rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.94, 0.10),(0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.79rad)
cetz.draw.content((-0.73, -0.03),angle:-2.79rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.61, 0.08),(-0.89, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:7.26rad)
cetz.draw.content((0.70, 0.77),angle:7.26rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.89, 0.95),(0.61, 0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.58, 0.64),angle:5.80rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.17, 0.49),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.15, 0.14),node2.pos,decoration:"arrow",angle:4.38rad)
cetz.draw.content((-0.03, 0.10),angle:4.38rad,[k[3]])
cetz.draw.hobby((-0.22, -0.18),(-0.09, 0.11),(-0.01, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.08, 0.25),node3.pos,decoration:"arrow",angle:0.22rad)
cetz.draw.content((0.11, 0.14),angle:0.22rad,[-1/2 p-q+1/2 k[3]])
cetz.draw.hobby((0.52, 0.32),(0.06, 0.19),(-0.42, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, -0.09),node5.pos,decoration:"arrow",angle:8.37rad)
cetz.draw.content((-0.65, -0.14),angle:8.37rad,[-q+k[3]])
cetz.draw.hobby((-0.62, 0.14),(-0.59, -0.12),(-0.37, -0.27),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.45, -0.78))
node(node0.pos)
let node1= (pos:(0.66, -0.66))
node(node1.pos)
let node2= (pos:(0.57, 0.12))
node(node2.pos)
let node3= (pos:(-0.91, 0.46))
node(node3.pos)
let node4= (pos:(-0.28, -0.03))
node(node4.pos)
let node5= (pos:(0.95, 0.48))
node(node5.pos)
edge(node1.pos,(0.11, -0.75),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.12, -0.87),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.74),(0.12, -0.81),(-0.33, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.92, -0.74),angle:5.49rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.78, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.68, -1.00),angle:0.38rad,[k[0]])
cetz.draw.hobby((-0.52, -0.87),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.38, -0.41),node4.pos,decoration:"wave",angle:1.35rad)
cetz.draw.content((-0.50, -0.38),angle:1.35rad,[q])
cetz.draw.hobby((-0.50, -0.69),(-0.44, -0.39),(-0.36, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.84, -0.13),node1.pos,decoration:"wave",angle:-1.82rad)
cetz.draw.content((0.96, -0.16),angle:-1.82rad,[q])
cetz.draw.hobby((0.99, 0.36),(0.91, -0.12),(0.76, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.82, 0.18),angle:2.87rad,[-p-q-k[3]])
cetz.draw.hobby((0.92, 0.08),(0.68, 0.15),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-1.77rad)
cetz.draw.content((-0.84, 0.21),angle:-1.77rad,[-p-q-k[3]])
cetz.draw.hobby((-0.87, 0.35),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.06),node4.pos,decoration:"arrow",angle:6.45rad)
cetz.draw.content((0.12, 0.17),angle:6.45rad,[-p-q])
cetz.draw.hobby((0.48, 0.17),(0.13, 0.12),(-0.21, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, 0.36),node2.pos,decoration:"arrow",angle:7.03rad)
cetz.draw.content((0.63, 0.45),angle:7.03rad,[k[3]])
cetz.draw.hobby((0.87, 0.52),(0.66, 0.40),(0.53, 0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.59, 0.24),node3.pos,decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.52, 0.33),angle:5.63rad,[-p])
cetz.draw.hobby((-0.30, 0.07),(-0.55, 0.28),(-0.81, 0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.75rad)
cetz.draw.content((0.85, 0.75),angle:7.75rad,[q+k[3]])
cetz.draw.hobby((0.93, 0.91),(0.90, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.71),angle:4.88rad,[q+k[3]])
cetz.draw.hobby((-0.98, 0.55),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.60))
node(node0.pos)
let node1= (pos:(0.51, -0.74))
node(node1.pos)
let node2= (pos:(0.06, 0.54))
node(node2.pos)
let node3= (pos:(0.75, 0.74))
node(node3.pos)
let node4= (pos:(-0.74, 0.50))
node(node4.pos)
let node5= (pos:(0.55, 0.06))
node(node5.pos)
edge(node1.pos,(-0.05, -0.70),node0.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((-0.07, -0.81),angle:6.16rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.76),(-0.50, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.81, -0.76),angle:5.80rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.62, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.72, -0.89),angle:0.78rad,[k[0]])
cetz.draw.hobby((-0.63, -0.72),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.69, -0.06),node4.pos,decoration:"wave",angle:1.69rad)
cetz.draw.content((-0.81, -0.07),angle:1.69rad,[q])
cetz.draw.hobby((-0.68, -0.51),(-0.75, -0.06),(-0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, -0.35),node1.pos,decoration:"wave",angle:-1.63rad)
cetz.draw.content((0.67, -0.36),angle:-1.63rad,[q])
cetz.draw.hobby((0.61, -0.02),(0.61, -0.35),(0.58, -0.67),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.39, 0.71),node2.pos,decoration:"coil",angle:3.42rad)
cetz.draw.content((0.36, 0.82),angle:3.42rad,[-p-q-k[3]])
cetz.draw.hobby((0.67, 0.81),(0.37, 0.76),(0.09, 0.64),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.35, 0.54),node4.pos,decoration:"arrow",angle:6.34rad)
cetz.draw.content((-0.36, 0.66),angle:6.34rad,[-p-q])
cetz.draw.hobby((-0.02, 0.61),(-0.34, 0.60),(-0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, 0.27),node2.pos,decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.20, 0.19),angle:5.50rad,[k[3]])
cetz.draw.hobby((0.46, 0.05),(0.24, 0.23),(0.05, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:7.08rad)
cetz.draw.content((0.79, 0.96),angle:7.08rad,[-p])
cetz.draw.hobby((0.89, 0.97),(0.77, 0.86),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((-0.97, 0.70),angle:5.20rad,[-p])
cetz.draw.hobby((-0.84, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, 0.39),node5.pos,decoration:"arrow",angle:1.30rad)
cetz.draw.content((0.83, 0.36),angle:1.30rad,[q+k[3]])
cetz.draw.hobby((0.81, 0.67),(0.77, 0.37),(0.64, 0.09),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.45, -0.78))
node(node0.pos)
let node1= (pos:(-0.66, -0.66))
node(node1.pos)
let node2= (pos:(0.91, 0.46))
node(node2.pos)
let node3= (pos:(-0.57, 0.12))
node(node3.pos)
let node4= (pos:(0.28, -0.02))
node(node4.pos)
let node5= (pos:(-0.94, 0.48))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.77, -0.78),angle:5.90rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.75, -0.91),angle:0.79rad,[-q+k[0]])
cetz.draw.hobby((-0.69, -0.77),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.75),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.13, -0.87),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.33, -0.84),(-0.12, -0.81),(-0.56, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.38, -0.41),node4.pos,decoration:"wave",angle:1.78rad)
cetz.draw.content((0.50, -0.38),angle:1.78rad,[-q])
cetz.draw.hobby((0.50, -0.69),(0.44, -0.39),(0.36, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.84, -0.13),node1.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.96, -0.16),angle:4.97rad,[-q])
cetz.draw.hobby((-0.99, 0.35),(-0.91, -0.12),(-0.76, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:1.76rad)
cetz.draw.content((1.07, 0.25),angle:1.76rad,[-p-k[3]])
cetz.draw.hobby((1.04, 0.11),(0.99, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:-2.87rad)
cetz.draw.content((-0.75, -0.06),angle:-2.87rad,[-p-k[3]])
cetz.draw.hobby((-0.65, 0.03),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.60, 0.24),node4.pos,decoration:"arrow",angle:6.94rad)
cetz.draw.content((0.52, 0.33),angle:6.94rad,[-p])
cetz.draw.hobby((0.81, 0.46),(0.55, 0.28),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:7.69rad)
cetz.draw.content((0.84, 0.75),angle:7.69rad,[k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.82rad)
cetz.draw.content((-1.09, 0.73),angle:4.82rad,[k[3]])
cetz.draw.hobby((-1.01, 0.57),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.14, 0.06),node3.pos,decoration:"arrow",angle:6.12rad)
cetz.draw.content((-0.12, 0.18),angle:6.12rad,[-p-q])
cetz.draw.hobby((0.21, 0.05),(-0.13, 0.12),(-0.48, 0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.71, 0.36),node5.pos,decoration:"arrow",angle:5.54rad)
cetz.draw.content((-0.63, 0.45),angle:5.54rad,[-q+k[3]])
cetz.draw.hobby((-0.53, 0.19),(-0.66, 0.40),(-0.87, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.60))
node(node0.pos)
let node1= (pos:(-0.50, -0.74))
node(node1.pos)
let node2= (pos:(-0.75, 0.74))
node(node2.pos)
let node3= (pos:(-0.06, 0.55))
node(node3.pos)
let node4= (pos:(0.74, 0.50))
node(node4.pos)
let node5= (pos:(-0.55, 0.06))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.89, -0.72),angle:5.50rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.70, -0.97),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.56, -0.84),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.06, -0.69),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.07, -0.81),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.50, -0.68),(0.06, -0.75),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.06),node4.pos,decoration:"wave",angle:1.45rad)
cetz.draw.content((0.81, -0.07),angle:1.45rad,[-q])
cetz.draw.hobby((0.68, -0.50),(0.75, -0.06),(0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, -0.35),node1.pos,decoration:"wave",angle:4.77rad)
cetz.draw.content((-0.67, -0.36),angle:4.77rad,[-q])
cetz.draw.hobby((-0.61, -0.02),(-0.61, -0.34),(-0.58, -0.67),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.71),node2.pos,decoration:"coil",angle:2.87rad)
cetz.draw.content((-0.36, 0.82),angle:2.87rad,[-p-k[3]])
cetz.draw.hobby((-0.09, 0.64),(-0.37, 0.76),(-0.67, 0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:7.37rad)
cetz.draw.content((0.76, 0.81),angle:7.37rad,[-p])
cetz.draw.hobby((0.90, 0.94),(0.73, 0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((-0.96, 0.79),angle:5.50rad,[-p])
cetz.draw.hobby((-0.86, 0.77),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.71, 0.39),node2.pos,decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.82, 0.36),angle:4.99rad,[k[3]])
cetz.draw.hobby((-0.64, 0.09),(-0.76, 0.37),(-0.81, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.55),node3.pos,decoration:"arrow",angle:6.23rad)
cetz.draw.content((0.36, 0.67),angle:6.23rad,[-p-q])
cetz.draw.hobby((0.67, 0.58),(0.34, 0.61),(0.02, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.28, 0.28),node5.pos,decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.19, 0.19),angle:0.79rad,[-q+k[3]])
cetz.draw.hobby((-0.05, 0.45),(-0.23, 0.23),(-0.45, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.66))
node(node1.pos)
let node2= (pos:(0.02, 0.16))
node(node2.pos)
let node3= (pos:(-0.02, 0.60))
node(node3.pos)
let node4= (pos:(-0.69, -0.17))
node(node4.pos)
let node5= (pos:(0.76, 0.44))
node(node5.pos)
edge(node1.pos,(0.04, -0.77),node0.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((0.06, -0.89),angle:0.15rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.75),(0.05, -0.83),(-0.40, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.58rad)
cetz.draw.content((0.88, -0.74),angle:5.58rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.71, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.72, -1.03),angle:0.34rad,[k[0]])
cetz.draw.hobby((-0.60, -0.92),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.63, -0.51),node4.pos,decoration:"wave",angle:1.82rad)
cetz.draw.content((-0.75, -0.54),angle:1.82rad,[q])
cetz.draw.hobby((-0.60, -0.79),(-0.69, -0.52),(-0.75, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, -0.13),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.14),angle:-1.72rad,[q])
cetz.draw.hobby((0.81, 0.32),(0.77, -0.12),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, 0.38),node2.pos,decoration:"coil",angle:4.75rad)
cetz.draw.content((-0.23, 0.38),angle:4.75rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((-0.10, 0.60),(-0.17, 0.36),(-0.06, 0.14),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.34, -0.01),node4.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((-0.29, -0.12),angle:0.43rad,[-p-2 q-k[3]])
cetz.draw.hobby((-0.03, 0.07),(-0.31, -0.06),(-0.60, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.41, 0.30),node2.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.45, 0.19),angle:0.36rad,[k[3]])
cetz.draw.hobby((0.71, 0.35),(0.41, 0.24),(0.12, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.55, 0.40),angle:5.75rad,[-p-q-k[3]])
cetz.draw.hobby((0.94, 0.10),(0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((-0.90, -0.19),angle:5.79rad,[-p-q-k[3]])
cetz.draw.hobby((-0.81, -0.17),(-0.94, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:7.45rad)
cetz.draw.content((0.77, 0.77),angle:7.45rad,[q+k[3]])
cetz.draw.hobby((0.91, 0.93),(0.74, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.55, 0.69),angle:5.89rad,[q+k[3]])
cetz.draw.hobby((-0.13, 0.58),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.33, -0.64))
node(node0.pos)
let node1= (pos:(-0.59, -0.75))
node(node1.pos)
let node2= (pos:(0.63, 0.22))
node(node2.pos)
let node3= (pos:(0.54, 0.74))
node(node3.pos)
let node4= (pos:(-0.34, 0.47))
node(node4.pos)
let node5= (pos:(-0.55, 0.04))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.72, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.45, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.73, -0.98),angle:0.54rad,[-q+k[0]])
cetz.draw.hobby((-0.65, -0.86),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.73),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((-0.11, -0.85),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.26, -0.73),(-0.12, -0.79),(-0.50, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.10),node4.pos,decoration:"wave",angle:2.11rad)
cetz.draw.content((-0.10, -0.16),angle:2.11rad,[-q])
cetz.draw.hobby((0.21, -0.56),(-0.06, -0.12),(-0.33, 0.33),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.59, -0.37),node1.pos,decoration:"wave",angle:4.66rad)
cetz.draw.content((-0.71, -0.36),angle:4.66rad,[-q])
cetz.draw.hobby((-0.62, -0.04),(-0.65, -0.36),(-0.66, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, 0.50),node2.pos,decoration:"coil",angle:-1.38rad)
cetz.draw.content((0.78, 0.52),angle:-1.38rad,[-p+q-2 k[3]])
cetz.draw.hobby((0.62, 0.73),(0.72, 0.50),(0.71, 0.25),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.16, 0.34),node4.pos,decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.19, 0.46),angle:6.03rad,[-p+q-k[3]])
cetz.draw.hobby((0.55, 0.30),(0.16, 0.41),(-0.23, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.88, 0.21),angle:5.75rad,[k[3]])
cetz.draw.hobby((0.94, 0.10),(0.75, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.08rad)
cetz.draw.content((-0.77, -0.10),angle:0.08rad,[k[3]])
cetz.draw.hobby((-0.65, -0.03),(-0.90, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:6.80rad)
cetz.draw.content((0.71, 0.97),angle:6.80rad,[-p-k[3]])
cetz.draw.hobby((0.88, 1.00),(0.59, 0.84),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.75, 0.64),angle:5.61rad,[-p-k[3]])
cetz.draw.hobby((-0.46, 0.49),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.40),node5.pos,decoration:"arrow",angle:6.85rad)
cetz.draw.content((-0.07, 0.50),angle:6.85rad,[-q+k[3]])
cetz.draw.hobby((0.39, 0.72),(-0.05, 0.45),(-0.48, 0.16),stroke:stroke,mark: (end: ">"))
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.76))
node(node0.pos)
let node1= (pos:(-0.33, -0.65))
node(node1.pos)
let node2= (pos:(-0.63, 0.21))
node(node2.pos)
let node3= (pos:(-0.54, 0.73))
node(node3.pos)
let node4= (pos:(0.55, 0.03))
node(node4.pos)
let node5= (pos:(0.34, 0.47))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.86, -0.78),angle:5.75rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.71, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.61, -0.93),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.39, -0.75),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.74),node1.pos,decoration:"arrow",angle:6.16rad)
cetz.draw.content((0.11, -0.86),angle:6.16rad,[k[0]])
cetz.draw.hobby((0.50, -0.82),(0.12, -0.80),(-0.26, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.59, -0.37),node4.pos,decoration:"wave",angle:1.62rad)
cetz.draw.content((0.71, -0.36),angle:1.62rad,[-q])
cetz.draw.hobby((0.66, -0.68),(0.65, -0.36),(0.62, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.00, -0.10),node1.pos,decoration:"wave",angle:-2.11rad)
cetz.draw.content((0.10, -0.17),angle:-2.11rad,[-q])
cetz.draw.hobby((0.33, 0.33),(0.06, -0.12),(-0.21, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, 0.49),node2.pos,decoration:"coil",angle:4.53rad)
cetz.draw.content((-0.78, 0.51),angle:4.53rad,[-p+q-2 k[3]])
cetz.draw.hobby((-0.62, 0.73),(-0.72, 0.50),(-0.71, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:6.21rad)
cetz.draw.content((0.78, 0.14),angle:6.21rad,[-p+q-k[3]])
cetz.draw.hobby((0.90, 0.07),(0.66, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((-0.75, 0.00),angle:0.52rad,[-p+q-k[3]])
cetz.draw.hobby((-0.69, 0.11),(-0.88, -0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.16, 0.34),node2.pos,decoration:"arrow",angle:6.54rad)
cetz.draw.content((-0.19, 0.46),angle:6.54rad,[k[3]])
cetz.draw.hobby((0.23, 0.50),(-0.16, 0.40),(-0.55, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.40),node3.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((0.07, 0.50),angle:5.71rad,[-p-k[3]])
cetz.draw.hobby((0.48, 0.15),(0.05, 0.44),(-0.39, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:6.96rad)
cetz.draw.content((0.60, 0.83),angle:6.96rad,[-q+k[3]])
cetz.draw.hobby((0.88, 0.98),(0.38, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.83, 0.76),angle:5.76rad,[-q+k[3]])
cetz.draw.hobby((-0.65, 0.73),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [2, -2, -2, -4] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 +2-3-10+11-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,p+q-k[3]]^-1 prop[0,p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 +0-1-12+13-14+15],box[#embedding1f1 +0-1-10+11-16+17],)
pagebreak()
[= embedding 2 [2, 0, -4, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 +2-3+8-9-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-q+k[3]]^-1 prop[0,-p-q+2 k[3]]^-1 prop[0,-p-2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 +0-1+8-9-16+17],)
pagebreak()
[= embedding 3 [2, 0, -2, -2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 +2-3+8-9-10+11],box[#embedding3i1 +2-3-12+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 +0-1-16+17],box[#embedding3f1 +0-1+8-9-14+15],)
pagebreak()
[= embedding 4 [2, 0, -2, 0] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 +2-3-12+13+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p+k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 +0-1+10-11-12+13],box[#embedding4f1 +0-1+14-15-16+17],box[#embedding4f2 +0-1+8-9],)
pagebreak()
[= embedding 5 [2, 0, 2, 0] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 +2-3-10+11+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 +0-1-10+11+12-13],box[#embedding5f1 +0-1-14+15+16-17],box[#embedding5f2 +0-1-8+9],)
pagebreak()
[= embedding 6 [2, 2, -2, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1
	+4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	-(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 +2-3+8-9+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 +0-1+8-9+10-11],)
pagebreak()
[= embedding 7 [2, 2, 0, 2] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 +2-3+8-9+16-17],box[#embedding7i1 +2-3+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 +0-1+8-9+12-13],box[#embedding7f1 +0-1+10-11],)
pagebreak()
[= embedding 8 [2, 2, 2, 4] with multiplicity 2
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 +2-3+14-15+16-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p+q-k[3]]^-1 prop[0,-p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 +0-1+12-13+14-15],box[#embedding8f1 +0-1+10-11+16-17],)
pagebreak()
}