#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, -0.85))
node(node0.pos)
let node1= (pos:(0.43, -0.85))
node(node1.pos)
let node2= (pos:(-0.90, 0.44))
node(node2.pos)
let node3= (pos:(0.90, 0.44))
node(node3.pos)
let node4= (pos:(0.24, -0.10))
node(node4.pos)
let node5= (pos:(-0.24, -0.10))
node(node5.pos)
edge(node1.pos,(0.00, -0.92),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -1.04),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.74, -0.81),angle:6.03rad,[k[0]])
cetz.draw.hobby((0.92, -0.92),(0.54, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.68, -1.04),angle:0.25rad,[k[0]])
cetz.draw.hobby((-0.51, -0.93),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.50),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.02, -0.58),angle:0.84rad,[q])
cetz.draw.hobby((-0.31, -0.82),(-0.05, -0.52),(0.22, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.11, -0.50),node1.pos,decoration:"wave",angle:5.44rad)
cetz.draw.content((0.02, -0.58),angle:5.44rad,[q])
cetz.draw.hobby((-0.21, -0.22),(0.05, -0.52),(0.32, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.83, 0.19),angle:4.48rad,[p+k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.86, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.80rad)
cetz.draw.content((1.07, 0.25),angle:1.80rad,[p+k[3]])
cetz.draw.hobby((0.98, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.75rad)
cetz.draw.content((-1.07, 0.70),angle:1.75rad,[p+2 k[3]])
cetz.draw.hobby((-0.97, 0.53),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.83, 0.74),angle:4.53rad,[p+2 k[3]])
cetz.draw.hobby((0.92, 0.91),(0.86, 0.55),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.57, 0.19),node2.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.50, 0.28),angle:2.45rad,[k[3]])
cetz.draw.hobby((-0.26, -0.00),(-0.52, 0.22),(-0.79, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.19),node4.pos,decoration:"arrow",angle:3.84rad)
cetz.draw.content((0.50, 0.28),angle:3.84rad,[k[3]])
cetz.draw.hobby((0.79, 0.44),(0.53, 0.22),(0.27, -0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.01),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.13),angle:3.14rad,[q+k[3]])
cetz.draw.hobby((0.24, -0.02),(0.00, 0.07),(-0.24, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.84))
node(node0.pos)
let node1= (pos:(0.34, -0.69))
node(node1.pos)
let node2= (pos:(0.10, 0.53))
node(node2.pos)
let node3= (pos:(0.57, 0.09))
node(node3.pos)
let node4= (pos:(-0.31, -0.16))
node(node4.pos)
let node5= (pos:(-0.55, 0.42))
node(node5.pos)
edge(node1.pos,(-0.10, -0.82),node0.pos,decoration:"arrow",angle:0.18rad)
cetz.draw.content((-0.08, -0.93),angle:0.18rad,[q+k[0]])
cetz.draw.hobby((0.27, -0.78),(-0.09, -0.87),(-0.46, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.72, -0.73),angle:5.84rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.45, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.74, -1.04),angle:0.33rad,[k[0]])
cetz.draw.hobby((-0.63, -0.93),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.46, -0.51),node4.pos,decoration:"wave",angle:1.23rad)
cetz.draw.content((-0.58, -0.47),angle:1.23rad,[q])
cetz.draw.hobby((-0.60, -0.76),(-0.52, -0.47),(-0.40, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, -0.14),node1.pos,decoration:"wave",angle:-0.91rad)
cetz.draw.content((0.05, -0.06),angle:-0.91rad,[q])
cetz.draw.hobby((-0.40, 0.36),(-0.02, -0.07),(0.31, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.59rad)
cetz.draw.content((-0.40, 0.16),angle:3.59rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.01),(0.03, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.94rad)
cetz.draw.content((0.81, 0.16),angle:2.94rad,[p+k[3]])
cetz.draw.hobby((0.68, 0.12),(0.91, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.37, 0.35),node3.pos,decoration:"coil",angle:-0.74rad)
cetz.draw.content((0.46, 0.44),angle:-0.74rad,[p+2 k[3]])
cetz.draw.hobby((0.18, 0.56),(0.42, 0.40),(0.59, 0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.23rad)
cetz.draw.content((-0.87, 0.64),angle:2.23rad,[k[3]])
cetz.draw.hobby((-0.65, 0.46),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.49, 0.87),angle:3.62rad,[k[3]])
cetz.draw.hobby((0.88, 1.01),(0.16, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.15, -0.05),node4.pos,decoration:"arrow",angle:-2.87rad)
cetz.draw.content((0.19, -0.17),angle:-2.87rad,[k[3]])
cetz.draw.hobby((0.51, -0.00),(0.15, -0.11),(-0.21, -0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.48, 0.12),node5.pos,decoration:"arrow",angle:1.94rad)
cetz.draw.content((-0.59, 0.08),angle:1.94rad,[q+k[3]])
cetz.draw.hobby((-0.40, -0.15),(-0.53, 0.09),(-0.60, 0.35),stroke:stroke,mark: (end: ">"))
})
let embedding1i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, -0.69))
node(node0.pos)
let node1= (pos:(0.56, -0.84))
node(node1.pos)
let node2= (pos:(-0.57, 0.09))
node(node2.pos)
let node3= (pos:(-0.09, 0.53))
node(node3.pos)
let node4= (pos:(0.55, 0.42))
node(node4.pos)
let node5= (pos:(0.31, -0.16))
node(node5.pos)
edge(node1.pos,(0.10, -0.81),node0.pos,decoration:"arrow",angle:6.11rad)
cetz.draw.content((0.08, -0.93),angle:6.11rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.90),(0.09, -0.87),(-0.27, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.82, -0.81),angle:5.94rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.67, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.62, -0.95),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.40, -0.78),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.04, -0.14),node4.pos,decoration:"wave",angle:0.91rad)
cetz.draw.content((-0.05, -0.06),angle:0.91rad,[q])
cetz.draw.hobby((-0.31, -0.53),(0.02, -0.07),(0.40, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, -0.50),node1.pos,decoration:"wave",angle:-1.23rad)
cetz.draw.content((0.58, -0.46),angle:-1.23rad,[q])
cetz.draw.hobby((0.40, -0.20),(0.52, -0.47),(0.60, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.35rad)
cetz.draw.content((-0.76, -0.07),angle:3.35rad,[p+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.66, 0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.51, 0.37),angle:2.69rad,[p+k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.37, 0.35),node3.pos,decoration:"coil",angle:0.74rad)
cetz.draw.content((-0.45, 0.44),angle:0.74rad,[p+2 k[3]])
cetz.draw.hobby((-0.59, 0.18),(-0.41, 0.40),(-0.18, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.15, -0.05),node2.pos,decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.19, -0.16),angle:2.86rad,[k[3]])
cetz.draw.hobby((0.21, -0.20),(-0.15, -0.11),(-0.51, 0.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.60, 0.66),angle:2.66rad,[k[3]])
cetz.draw.hobby((-0.21, 0.52),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.05rad)
cetz.draw.content((0.68, 0.78),angle:4.05rad,[k[3]])
cetz.draw.hobby((0.89, 0.96),(0.56, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.13),node5.pos,decoration:"arrow",angle:-1.94rad)
cetz.draw.content((0.59, 0.08),angle:-1.94rad,[q+k[3]])
cetz.draw.hobby((0.60, 0.35),(0.53, 0.09),(0.40, -0.15),stroke:stroke,mark: (end: ">"))
})
let embedding1i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.90))
node(node0.pos)
let node1= (pos:(0.36, -0.66))
node(node1.pos)
let node2= (pos:(0.72, 0.47))
node(node2.pos)
let node3= (pos:(-0.59, 0.19))
node(node3.pos)
let node4= (pos:(-0.48, -0.25))
node(node4.pos)
let node5= (pos:(-0.44, 0.46))
node(node5.pos)
edge(node1.pos,(-0.08, -0.82),node0.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.88),(-0.45, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.22rad)
cetz.draw.content((-0.75, -1.07),angle:0.22rad,[k[0]])
cetz.draw.hobby((-0.63, -0.98),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.59),node4.pos,decoration:"wave",angle:1.47rad)
cetz.draw.content((-0.66, -0.58),angle:1.47rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.59, -0.57),(-0.56, -0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, -0.10),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.11, -0.03),angle:-0.95rad,[q])
cetz.draw.hobby((-0.31, 0.40),(0.04, -0.04),(0.34, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.35),node2.pos,decoration:"arrow",angle:3.35rad)
cetz.draw.content((0.06, 0.47),angle:3.35rad,[p+k[3]])
cetz.draw.hobby((-0.48, 0.28),(0.05, 0.40),(0.57, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.03rad)
cetz.draw.content((0.96, 0.30),angle:-1.03rad,[p+2 k[3]])
cetz.draw.hobby((0.82, 0.42),(1.00, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.43rad)
cetz.draw.content((-0.75, -0.02),angle:0.43rad,[p+2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.80, 0.64),angle:2.37rad,[k[3]])
cetz.draw.hobby((-0.56, 0.49),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.75, 0.79),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.90, 0.94),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node4.pos,decoration:"arrow",angle:4.97rad)
cetz.draw.content((-0.78, -0.10),angle:4.97rad,[k[3]])
cetz.draw.hobby((-0.68, 0.18),(-0.72, -0.08),(-0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.10),node5.pos,decoration:"arrow",angle:1.52rad)
cetz.draw.content((-0.22, 0.10),angle:1.52rad,[q+k[3]])
cetz.draw.hobby((-0.39, -0.22),(-0.28, 0.09),(-0.35, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding1i4=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.67))
node(node0.pos)
let node1= (pos:(0.60, -0.88))
node(node1.pos)
let node2= (pos:(0.36, 0.18))
node(node2.pos)
let node3= (pos:(-0.76, 0.47))
node(node3.pos)
let node4= (pos:(0.64, 0.44))
node(node4.pos)
let node5= (pos:(0.71, -0.23))
node(node5.pos)
edge(node1.pos,(0.14, -0.81),node0.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.93),angle:6.05rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.84, -0.82),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.13),node4.pos,decoration:"wave",angle:0.87rad)
cetz.draw.content((0.03, -0.06),angle:0.87rad,[q])
cetz.draw.hobby((-0.26, -0.51),(0.11, -0.06),(0.50, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.57),node1.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((0.81, -0.59),angle:-1.74rad,[q])
cetz.draw.hobby((0.77, -0.29),(0.75, -0.57),(0.68, -0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.22, 0.34),node2.pos,decoration:"arrow",angle:2.89rad)
cetz.draw.content((-0.19, 0.46),angle:2.89rad,[p+k[3]])
cetz.draw.hobby((-0.64, 0.50),(-0.18, 0.39),(0.26, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.27rad)
cetz.draw.content((0.71, 0.20),angle:-0.27rad,[p+2 k[3]])
cetz.draw.hobby((0.47, 0.21),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.10rad)
cetz.draw.content((-0.77, 0.18),angle:1.10rad,[p+2 k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.75, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.08),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.38, -0.15),angle:2.28rad,[k[3]])
cetz.draw.hobby((0.63, -0.26),(0.43, -0.12),(0.31, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.99, 0.68),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.86, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.15rad)
cetz.draw.content((0.72, 0.79),angle:4.15rad,[k[3]])
cetz.draw.hobby((0.90, 0.95),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((0.89, 0.15),angle:-1.45rad,[q+k[3]])
cetz.draw.hobby((0.74, 0.41),(0.83, 0.12),(0.79, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.62))
node(node0.pos)
let node1= (pos:(0.57, -0.62))
node(node1.pos)
let node2= (pos:(-0.35, 0.15))
node(node2.pos)
let node3= (pos:(0.35, 0.15))
node(node3.pos)
let node4= (pos:(-0.65, 0.49))
node(node4.pos)
let node5= (pos:(0.65, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.65),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -0.77),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.69),(0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.87, -0.72),angle:5.56rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.73rad)
cetz.draw.content((-0.71, -0.90),angle:0.73rad,[k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node4.pos,decoration:"wave",angle:1.64rad)
cetz.draw.content((-0.78, -0.10),angle:1.64rad,[q])
cetz.draw.hobby((-0.66, -0.53),(-0.72, -0.07),(-0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, -0.09),node1.pos,decoration:"wave",angle:-1.64rad)
cetz.draw.content((0.78, -0.10),angle:-1.64rad,[q])
cetz.draw.hobby((0.72, 0.38),(0.72, -0.07),(0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.36rad)
cetz.draw.content((-0.65, -0.04),angle:3.36rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.43, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.70, 0.19),angle:2.92rad,[p+q+k[3]])
cetz.draw.hobby((0.46, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.08),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, -0.04),angle:0.00rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.30, 0.07),(0.00, 0.02),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.13, 0.40),node2.pos,decoration:"arrow",angle:3.47rad)
cetz.draw.content((0.10, 0.52),angle:3.47rad,[k[3]])
cetz.draw.hobby((0.53, 0.55),(0.10, 0.46),(-0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.13, 0.40),node4.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.10, 0.52),angle:2.82rad,[k[3]])
cetz.draw.hobby((0.29, 0.26),(-0.10, 0.46),(-0.53, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.18rad)
cetz.draw.content((-0.92, 0.68),angle:2.18rad,[q+k[3]])
cetz.draw.hobby((-0.75, 0.54),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
cetz.draw.content((0.72, 0.81),angle:4.11rad,[q+k[3]])
cetz.draw.hobby((0.89, 0.95),(0.65, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.63, -0.68))
node(node0.pos)
let node1= (pos:(-0.41, -0.83))
node(node1.pos)
let node2= (pos:(-0.66, 0.15))
node(node2.pos)
let node3= (pos:(-0.09, 0.53))
node(node3.pos)
let node4= (pos:(0.72, 0.38))
node(node4.pos)
let node5= (pos:(-0.05, -0.13))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((0.89, -0.75),angle:5.57rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[-q+k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.80),node1.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.86),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.16),node4.pos,decoration:"wave",angle:1.48rad)
cetz.draw.content((0.83, -0.17),angle:1.48rad,[-q])
cetz.draw.hobby((0.71, -0.59),(0.77, -0.16),(0.79, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, -0.49),node1.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.35, -0.44),angle:4.24rad,[-q])
cetz.draw.hobby((-0.14, -0.17),(-0.29, -0.45),(-0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.56rad)
cetz.draw.content((-0.78, -0.04),angle:3.56rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.73, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.51, 0.37),angle:2.69rad,[p+k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.41, 0.40),node3.pos,decoration:"coil",angle:0.59rad)
cetz.draw.content((-0.48, 0.50),angle:0.59rad,[p+2 k[3]])
cetz.draw.hobby((-0.67, 0.24),(-0.45, 0.44),(-0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, -0.02),node2.pos,decoration:"arrow",angle:2.71rad)
cetz.draw.content((-0.43, -0.12),angle:2.71rad,[k[3]])
cetz.draw.hobby((-0.13, -0.17),(-0.39, -0.07),(-0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.60, 0.66),angle:2.66rad,[k[3]])
cetz.draw.hobby((-0.21, 0.52),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.29rad)
cetz.draw.content((0.75, 0.74),angle:4.29rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.71, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:3.73rad)
cetz.draw.content((0.28, 0.23),angle:3.73rad,[-q+k[3]])
cetz.draw.hobby((0.61, 0.38),(0.30, 0.17),(-0.01, -0.03),stroke:stroke,mark: (end: ">"))
})
let embedding2f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.93, 0.45))
node(node2.pos)
let node3= (pos:(0.93, 0.45))
node(node3.pos)
let node4= (pos:(0.39, -0.12))
node(node4.pos)
let node5= (pos:(-0.39, -0.12))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.79, -0.81),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[-q+k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.89),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.01),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.49),node4.pos,decoration:"wave",angle:1.74rad)
cetz.draw.content((0.60, -0.47),angle:1.74rad,[-q])
cetz.draw.hobby((0.57, -0.78),(0.54, -0.47),(0.47, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, -0.49),node1.pos,decoration:"wave",angle:4.55rad)
cetz.draw.content((-0.59, -0.47),angle:4.55rad,[-q])
cetz.draw.hobby((-0.47, -0.17),(-0.53, -0.47),(-0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((-0.84, 0.21),angle:4.55rad,[p+k[3]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.73rad)
cetz.draw.content((1.08, 0.25),angle:1.73rad,[p+k[3]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.71rad)
cetz.draw.content((-1.08, 0.71),angle:1.71rad,[p+2 k[3]])
cetz.draw.hobby((-1.00, 0.54),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.58rad)
cetz.draw.content((0.84, 0.74),angle:4.58rad,[p+2 k[3]])
cetz.draw.hobby((0.93, 0.91),(0.88, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:2.33rad)
cetz.draw.content((-0.56, 0.27),angle:2.33rad,[k[3]])
cetz.draw.hobby((-0.39, -0.02),(-0.60, 0.22),(-0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.19),node4.pos,decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.56, 0.27),angle:3.95rad,[k[3]])
cetz.draw.hobby((0.83, 0.44),(0.60, 0.22),(0.39, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, -0.10),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.02),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.31, -0.05),(-0.00, -0.04),(-0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding2f2=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.83))
node(node0.pos)
let node1= (pos:(-0.63, -0.68))
node(node1.pos)
let node2= (pos:(0.10, 0.53))
node(node2.pos)
let node3= (pos:(0.67, 0.15))
node(node3.pos)
let node4= (pos:(0.05, -0.13))
node(node4.pos)
let node5= (pos:(-0.72, 0.38))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.74, -0.93),angle:0.72rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.80),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.13, -0.86),(-0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.49),node4.pos,decoration:"wave",angle:2.04rad)
cetz.draw.content((0.35, -0.44),angle:2.04rad,[-q])
cetz.draw.hobby((0.43, -0.73),(0.29, -0.45),(0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.71, -0.16),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.83, -0.17),angle:4.80rad,[-q])
cetz.draw.hobby((-0.78, 0.27),(-0.77, -0.16),(-0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.59rad)
cetz.draw.content((-0.40, 0.16),angle:3.59rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.01),(0.03, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.73rad)
cetz.draw.content((0.88, 0.18),angle:2.73rad,[p+k[3]])
cetz.draw.hobby((0.78, 0.16),(0.93, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.41, 0.40),node3.pos,decoration:"coil",angle:-0.59rad)
cetz.draw.content((0.48, 0.50),angle:-0.59rad,[p+2 k[3]])
cetz.draw.hobby((0.18, 0.57),(0.45, 0.44),(0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.97, 0.64),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.82, 0.45),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.49, 0.87),angle:3.62rad,[k[3]])
cetz.draw.hobby((0.88, 1.01),(0.16, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, -0.02),node4.pos,decoration:"arrow",angle:-2.71rad)
cetz.draw.content((0.43, -0.13),angle:-2.71rad,[k[3]])
cetz.draw.hobby((0.64, 0.06),(0.40, -0.07),(0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.13),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.28, 0.23),angle:2.56rad,[-q+k[3]])
cetz.draw.hobby((0.01, -0.03),(-0.30, 0.17),(-0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding2f3=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.83))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.37))
node(node4.pos)
let node5= (pos:(0.19, -0.20))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.81),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.93),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.87),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.51),node1.pos,decoration:"wave",angle:3.99rad)
cetz.draw.content((-0.21, -0.43),angle:3.99rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.37, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.24, 0.41),node2.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((-0.22, 0.52),angle:2.95rad,[p+k[3]])
cetz.draw.hobby((-0.65, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.38rad)
cetz.draw.content((0.70, 0.25),angle:-0.38rad,[p+2 k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.14rad)
cetz.draw.content((-0.78, 0.19),angle:1.14rad,[p+2 k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.31rad)
cetz.draw.content((0.04, 0.09),angle:1.31rad,[k[3]])
cetz.draw.hobby((0.11, -0.17),(0.10, 0.08),(0.24, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding2f4=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.75, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.43),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.36),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.87, -0.14),angle:4.80rad,[-q])
cetz.draw.hobby((-0.81, 0.35),(-0.81, -0.11),(-0.73, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.18, 0.33),node2.pos,decoration:"arrow",angle:3.43rad)
cetz.draw.content((0.15, 0.44),angle:3.43rad,[p+k[3]])
cetz.draw.hobby((-0.34, 0.21),(0.13, 0.38),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.08rad)
cetz.draw.content((0.98, 0.29),angle:-1.08rad,[p+2 k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.18rad)
cetz.draw.content((-0.69, -0.07),angle:0.18rad,[p+2 k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.02rad)
cetz.draw.content((-0.98, 0.68),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.26, -0.09),node4.pos,decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.31, -0.20),angle:5.92rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.14),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.32, 0.33),node5.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.26, 0.43),angle:2.55rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.26, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.68),(-0.00, -0.70),(-0.49, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.64, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.16),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[p+2 q+k[3]])
cetz.draw.hobby((-0.40, 0.22),(0.00, 0.22),(0.40, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.30rad)
cetz.draw.content((0.79, 0.19),angle:-0.30rad,[p+2 q+2 k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[p+2 q+2 k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.48),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.63, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.47),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.07, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.57),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.37, -0.63))
node(node0.pos)
let node1= (pos:(-0.37, -0.65))
node(node1.pos)
let node2= (pos:(-0.44, 0.13))
node(node2.pos)
let node3= (pos:(0.44, 0.16))
node(node3.pos)
let node4= (pos:(-0.41, 0.54))
node(node4.pos)
let node5= (pos:(0.42, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.76rad)
cetz.draw.content((0.75, -0.71),angle:5.76rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.49, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.51rad)
cetz.draw.content((-0.63, -0.93),angle:0.51rad,[-q+k[0]])
cetz.draw.hobby((-0.43, -0.75),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.70),node1.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((0.00, -0.82),angle:0.02rad,[k[0]])
cetz.draw.hobby((0.32, -0.71),(0.00, -0.76),(-0.31, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.06, -0.08),node4.pos,decoration:"wave",angle:2.16rad)
cetz.draw.content((-0.16, -0.15),angle:2.16rad,[-q])
cetz.draw.hobby((0.23, -0.57),(-0.11, -0.11),(-0.41, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.07, -0.13),node1.pos,decoration:"wave",angle:-2.18rad)
cetz.draw.content((0.16, -0.20),angle:-2.18rad,[-q])
cetz.draw.hobby((0.41, 0.34),(0.13, -0.15),(-0.23, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.37rad)
cetz.draw.content((-0.69, -0.05),angle:3.37rad,[p-q+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.75, 0.19),angle:2.87rad,[p-q+k[3]])
cetz.draw.hobby((0.55, 0.19),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.09),node3.pos,decoration:"coil",angle:0.03rad)
cetz.draw.content((0.01, -0.03),angle:0.03rad,[p-q+2 k[3]])
cetz.draw.hobby((-0.36, 0.06),(0.00, 0.03),(0.36, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, 0.34),node2.pos,decoration:"arrow",angle:3.54rad)
cetz.draw.content((-0.08, 0.45),angle:3.54rad,[k[3]])
cetz.draw.hobby((0.31, 0.53),(-0.05, 0.40),(-0.39, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.03, 0.45),node4.pos,decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, 0.56),angle:2.75rad,[k[3]])
cetz.draw.hobby((0.41, 0.27),(0.08, 0.50),(-0.31, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.78, 0.67),angle:2.47rad,[-q+k[3]])
cetz.draw.hobby((-0.53, 0.55),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.86rad)
cetz.draw.content((0.63, 0.84),angle:3.86rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.98),(0.45, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.92))
node(node0.pos)
let node1= (pos:(0.52, -0.92))
node(node1.pos)
let node2= (pos:(0.15, 0.46))
node(node2.pos)
let node3= (pos:(-0.14, 0.46))
node(node3.pos)
let node4= (pos:(-0.31, -0.24))
node(node4.pos)
let node5= (pos:(0.32, -0.24))
node(node5.pos)
edge(node1.pos,(0.00, -0.97),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -1.09),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.42, -1.00),(0.00, -1.03),(-0.42, -1.00),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.12rad)
cetz.draw.content((0.78, -0.84),angle:6.12rad,[k[0]])
cetz.draw.hobby((0.91, -0.92),(0.62, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.16rad)
cetz.draw.content((-0.74, -1.08),angle:0.16rad,[k[0]])
cetz.draw.hobby((-0.60, -1.00),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.45, -0.58),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((-0.56, -0.55),angle:1.29rad,[q])
cetz.draw.hobby((-0.56, -0.84),(-0.50, -0.55),(-0.40, -0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, -0.58),node1.pos,decoration:"wave",angle:-1.30rad)
cetz.draw.content((0.57, -0.55),angle:-1.30rad,[q])
cetz.draw.hobby((0.41, -0.28),(0.51, -0.55),(0.57, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.52rad)
cetz.draw.content((-0.38, 0.12),angle:3.52rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.88, -0.02),(0.07, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.47, 0.34),angle:2.76rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.03, 0.48),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:0.56rad)
cetz.draw.content((0.51, 0.83),angle:0.56rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.20, 0.56),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:5.72rad)
cetz.draw.content((-0.64, 0.63),angle:5.72rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.95, 0.90),(-0.26, 0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.29, 0.13),node2.pos,decoration:"arrow",angle:1.82rad)
cetz.draw.content((0.40, 0.16),angle:1.82rad,[k[3]])
cetz.draw.hobby((0.38, -0.17),(0.35, 0.14),(0.23, 0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.28, 0.13),node4.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.40, 0.16),angle:4.48rad,[k[3]])
cetz.draw.hobby((-0.23, 0.42),(-0.34, 0.14),(-0.37, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.27),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.01, -0.39),angle:0.00rad,[q+k[3]])
cetz.draw.hobby((-0.26, -0.31),(0.01, -0.33),(0.27, -0.31),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.83))
node(node0.pos)
let node1= (pos:(0.67, -0.71))
node(node1.pos)
let node2= (pos:(-0.77, 0.49))
node(node2.pos)
let node3= (pos:(0.32, 0.27))
node(node3.pos)
let node4= (pos:(0.19, -0.21))
node(node4.pos)
let node5= (pos:(0.84, 0.36))
node(node5.pos)
edge(node1.pos,(0.16, -0.82),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.94),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.88),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.51),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.21, -0.44),angle:0.84rad,[q])
cetz.draw.hobby((-0.37, -0.72),(-0.15, -0.46),(0.09, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.81, -0.20),node1.pos,decoration:"wave",angle:-1.73rad)
cetz.draw.content((0.93, -0.22),angle:-1.73rad,[q])
cetz.draw.hobby((0.90, 0.25),(0.87, -0.19),(0.77, -0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((-0.78, 0.19),angle:4.28rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.70, 0.25),angle:2.76rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:-0.19rad)
cetz.draw.content((-0.22, 0.53),angle:-0.19rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.66, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.33rad)
cetz.draw.content((0.80, 0.71),angle:1.33rad,[k[3]])
cetz.draw.hobby((0.81, 0.48),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-1.00, 0.70),angle:5.13rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.87, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, 0.06),node4.pos,decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.05, 0.09),angle:4.45rad,[k[3]])
cetz.draw.hobby((0.23, 0.29),(0.10, 0.07),(0.11, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:0.73rad)
cetz.draw.content((0.65, -0.03),angle:0.73rad,[q+k[3]])
cetz.draw.hobby((0.30, -0.21),(0.59, -0.00),(0.84, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding4i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.78))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.02, -0.06))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:6.18rad)
cetz.draw.content((-0.13, -0.89),angle:6.18rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.75, -0.78),angle:5.93rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.87, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.73, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.23, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.08, -0.09),(0.27, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.32rad)
cetz.draw.content((-0.69, -0.07),angle:3.32rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.06rad)
cetz.draw.content((0.98, 0.29),angle:2.06rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:0.29rad)
cetz.draw.content((0.15, 0.44),angle:0.29rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.34, 0.21),(0.13, 0.38),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.26, -0.09),node2.pos,decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.31, -0.20),angle:2.78rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.14),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.26, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.64, 0.52),(-0.27, 0.37),(-0.00, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding4i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.89))
node(node0.pos)
let node1= (pos:(0.36, -0.66))
node(node1.pos)
let node2= (pos:(0.72, 0.47))
node(node2.pos)
let node3= (pos:(-0.59, 0.19))
node(node3.pos)
let node4= (pos:(-0.48, -0.25))
node(node4.pos)
let node5= (pos:(-0.44, 0.46))
node(node5.pos)
edge(node1.pos,(-0.08, -0.82),node0.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.88),(-0.45, -0.95),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.75, -1.06),angle:0.23rad,[k[0]])
cetz.draw.hobby((-0.63, -0.98),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.59),node4.pos,decoration:"wave",angle:1.47rad)
cetz.draw.content((-0.65, -0.57),angle:1.47rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.59, -0.56),(-0.55, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, -0.10),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.11, -0.03),angle:-0.95rad,[q])
cetz.draw.hobby((-0.31, 0.40),(0.04, -0.04),(0.34, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.35),node2.pos,decoration:"arrow",angle:3.35rad)
cetz.draw.content((0.07, 0.47),angle:3.35rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.48, 0.28),(0.05, 0.40),(0.57, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.03rad)
cetz.draw.content((0.96, 0.30),angle:-1.03rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.82, 0.41),(1.00, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.43rad)
cetz.draw.content((-0.75, -0.01),angle:0.43rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.81, 0.65),angle:2.37rad,[k[3]])
cetz.draw.hobby((-0.56, 0.49),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.75, 0.79),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.90, 0.94),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node4.pos,decoration:"arrow",angle:4.98rad)
cetz.draw.content((-0.78, -0.10),angle:4.98rad,[k[3]])
cetz.draw.hobby((-0.68, 0.18),(-0.72, -0.08),(-0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.22, 0.10),angle:1.53rad,[q+k[3]])
cetz.draw.hobby((-0.39, -0.22),(-0.28, 0.10),(-0.35, 0.43),stroke:stroke,mark: (end: ">"))
})
let embedding4i4=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.67))
node(node0.pos)
let node1= (pos:(0.60, -0.88))
node(node1.pos)
let node2= (pos:(0.36, 0.18))
node(node2.pos)
let node3= (pos:(-0.76, 0.47))
node(node3.pos)
let node4= (pos:(0.64, 0.44))
node(node4.pos)
let node5= (pos:(0.71, -0.23))
node(node5.pos)
edge(node1.pos,(0.13, -0.81),node0.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.92),angle:6.05rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.13),node4.pos,decoration:"wave",angle:0.87rad)
cetz.draw.content((0.03, -0.06),angle:0.87rad,[q])
cetz.draw.hobby((-0.26, -0.51),(0.11, -0.06),(0.50, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.57),node1.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((0.81, -0.59),angle:-1.74rad,[q])
cetz.draw.hobby((0.77, -0.29),(0.75, -0.57),(0.68, -0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, 0.34),node2.pos,decoration:"arrow",angle:2.89rad)
cetz.draw.content((-0.18, 0.45),angle:2.89rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.63, 0.50),(-0.18, 0.39),(0.27, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.27rad)
cetz.draw.content((0.71, 0.20),angle:-0.27rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.47, 0.21),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.10rad)
cetz.draw.content((-0.77, 0.18),angle:1.10rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.75, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.08),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.38, -0.15),angle:2.28rad,[k[3]])
cetz.draw.hobby((0.63, -0.26),(0.43, -0.12),(0.31, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.99, 0.68),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.86, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.14rad)
cetz.draw.content((0.72, 0.78),angle:4.14rad,[k[3]])
cetz.draw.hobby((0.90, 0.95),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((0.89, 0.15),angle:-1.45rad,[q+k[3]])
cetz.draw.hobby((0.73, 0.41),(0.83, 0.12),(0.79, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.64),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.76),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.49, -0.68),(0.00, -0.70),(-0.49, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.53),(0.86, -0.09),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.70, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.44rad)
cetz.draw.content((-0.72, -0.04),angle:3.44rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, 0.16),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((-0.00, 0.28),angle:0.00rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.40, 0.22),(0.00, 0.22),(0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.67rad)
cetz.draw.content((-0.60, 0.47),angle:-0.67rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.63, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.60, 0.48),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((0.84, 0.76),angle:1.41rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.60),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.89))
node(node0.pos)
let node1= (pos:(0.36, -0.66))
node(node1.pos)
let node2= (pos:(0.72, 0.47))
node(node2.pos)
let node3= (pos:(-0.59, 0.19))
node(node3.pos)
let node4= (pos:(-0.48, -0.25))
node(node4.pos)
let node5= (pos:(-0.44, 0.46))
node(node5.pos)
edge(node1.pos,(-0.08, -0.81),node0.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[q+k[0]])
cetz.draw.hobby((0.29, -0.75),(-0.07, -0.87),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.58),node4.pos,decoration:"wave",angle:1.47rad)
cetz.draw.content((-0.66, -0.57),angle:1.47rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.60, -0.56),(-0.55, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, -0.10),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.11, -0.03),angle:-0.95rad,[q])
cetz.draw.hobby((-0.31, 0.40),(0.04, -0.04),(0.34, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.35),node2.pos,decoration:"arrow",angle:3.35rad)
cetz.draw.content((0.07, 0.47),angle:3.35rad,[p])
cetz.draw.hobby((-0.48, 0.28),(0.05, 0.40),(0.57, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.03rad)
cetz.draw.content((0.96, 0.30),angle:-1.03rad,[p+k[3]])
cetz.draw.hobby((0.82, 0.42),(1.00, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.43rad)
cetz.draw.content((-0.75, -0.02),angle:0.43rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.81, 0.65),angle:2.37rad,[k[3]])
cetz.draw.hobby((-0.56, 0.49),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.75, 0.79),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.90, 0.94),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node4.pos,decoration:"arrow",angle:4.97rad)
cetz.draw.content((-0.78, -0.10),angle:4.97rad,[k[3]])
cetz.draw.hobby((-0.68, 0.18),(-0.72, -0.08),(-0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.22, 0.10),angle:1.53rad,[q+k[3]])
cetz.draw.hobby((-0.39, -0.22),(-0.28, 0.10),(-0.35, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.48, -0.76))
node(node0.pos)
let node1= (pos:(0.47, -0.83))
node(node1.pos)
let node2= (pos:(-0.48, 0.76))
node(node2.pos)
let node3= (pos:(0.47, 0.84))
node(node3.pos)
let node4= (pos:(0.03, 0.14))
node(node4.pos)
let node5= (pos:(0.04, -0.13))
node(node5.pos)
edge(node1.pos,(-0.01, -0.85),node0.pos,decoration:"arrow",angle:6.20rad)
cetz.draw.content((-0.02, -0.97),angle:6.20rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.91),(-0.01, -0.91),(-0.40, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.77, -0.80),angle:5.98rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.58, -0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.43rad)
cetz.draw.content((-0.69, -0.99),angle:0.43rad,[k[0]])
cetz.draw.hobby((-0.54, -0.86),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.32),node4.pos,decoration:"wave",angle:1.07rad)
cetz.draw.content((-0.39, -0.27),angle:1.07rad,[q])
cetz.draw.hobby((-0.49, -0.64),(-0.31, -0.26),(-0.08, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, -0.49),node1.pos,decoration:"wave",angle:-1.02rad)
cetz.draw.content((0.38, -0.43),angle:-1.02rad,[q])
cetz.draw.hobby((0.13, -0.17),(0.32, -0.44),(0.48, -0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:9.00rad)
cetz.draw.content((-0.79, 0.77),angle:9.00rad,[p])
cetz.draw.hobby((-0.93, 0.90),(-0.59, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.44rad)
cetz.draw.content((0.70, 1.03),angle:3.44rad,[p])
cetz.draw.hobby((0.54, 0.92),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.01, 0.85),node3.pos,decoration:"coil",angle:0.08rad)
cetz.draw.content((-0.02, 0.97),angle:0.08rad,[p+k[3]])
cetz.draw.hobby((-0.40, 0.85),(-0.01, 0.91),(0.38, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.28, 0.33),node2.pos,decoration:"arrow",angle:2.07rad)
cetz.draw.content((-0.38, 0.27),angle:2.07rad,[k[3]])
cetz.draw.hobby((-0.08, -0.09),(-0.31, 0.26),(-0.49, 0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, 0.50),node4.pos,decoration:"arrow",angle:-2.12rad)
cetz.draw.content((0.38, 0.43),angle:-2.12rad,[k[3]])
cetz.draw.hobby((0.48, 0.74),(0.32, 0.45),(0.13, 0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.24, 0.01),node5.pos,decoration:"arrow",angle:-1.56rad)
cetz.draw.content((0.36, 0.01),angle:-1.56rad,[q+k[3]])
cetz.draw.hobby((0.09, 0.21),(0.30, 0.01),(0.09, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.66))
node(node0.pos)
let node1= (pos:(0.60, -0.87))
node(node1.pos)
let node2= (pos:(0.36, 0.18))
node(node2.pos)
let node3= (pos:(-0.76, 0.47))
node(node3.pos)
let node4= (pos:(0.65, 0.44))
node(node4.pos)
let node5= (pos:(0.71, -0.23))
node(node5.pos)
edge(node1.pos,(0.13, -0.81),node0.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.92),angle:6.05rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.84, -0.82),angle:5.98rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.60, -0.94),angle:0.45rad,[k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.13),node4.pos,decoration:"wave",angle:0.87rad)
cetz.draw.content((0.03, -0.05),angle:0.87rad,[q])
cetz.draw.hobby((-0.26, -0.51),(0.11, -0.06),(0.50, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.57),node1.pos,decoration:"wave",angle:-1.75rad)
cetz.draw.content((0.81, -0.59),angle:-1.75rad,[q])
cetz.draw.hobby((0.77, -0.29),(0.75, -0.57),(0.68, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, 0.34),node2.pos,decoration:"arrow",angle:2.89rad)
cetz.draw.content((-0.18, 0.46),angle:2.89rad,[p])
cetz.draw.hobby((-0.63, 0.50),(-0.18, 0.39),(0.27, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.27rad)
cetz.draw.content((0.71, 0.20),angle:-0.27rad,[p+k[3]])
cetz.draw.hobby((0.47, 0.21),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.10rad)
cetz.draw.content((-0.77, 0.18),angle:1.10rad,[p+k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.75, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.07),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.38, -0.15),angle:2.28rad,[k[3]])
cetz.draw.hobby((0.63, -0.26),(0.43, -0.11),(0.31, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-0.99, 0.68),angle:2.00rad,[k[3]])
cetz.draw.hobby((-0.86, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.15rad)
cetz.draw.content((0.72, 0.79),angle:4.15rad,[k[3]])
cetz.draw.hobby((0.90, 0.95),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((0.89, 0.14),angle:-1.45rad,[q+k[3]])
cetz.draw.hobby((0.74, 0.41),(0.83, 0.12),(0.79, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, -0.85))
node(node0.pos)
let node1= (pos:(0.43, -0.85))
node(node1.pos)
let node2= (pos:(-0.90, 0.44))
node(node2.pos)
let node3= (pos:(0.90, 0.44))
node(node3.pos)
let node4= (pos:(0.24, -0.10))
node(node4.pos)
let node5= (pos:(-0.24, -0.10))
node(node5.pos)
edge(node1.pos,(0.00, -0.92),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.04),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.74, -0.81),angle:6.03rad,[k[0]])
cetz.draw.hobby((0.92, -0.92),(0.54, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.68, -1.04),angle:0.26rad,[k[0]])
cetz.draw.hobby((-0.51, -0.93),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.50),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.02, -0.58),angle:0.84rad,[q])
cetz.draw.hobby((-0.31, -0.82),(-0.05, -0.52),(0.22, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.50),node1.pos,decoration:"wave",angle:5.44rad)
cetz.draw.content((0.03, -0.58),angle:5.44rad,[q])
cetz.draw.hobby((-0.21, -0.22),(0.05, -0.52),(0.32, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.49rad)
cetz.draw.content((-0.83, 0.19),angle:4.49rad,[k[2]])
cetz.draw.hobby((-0.92, 0.08),(-0.86, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.80rad)
cetz.draw.content((1.07, 0.25),angle:1.80rad,[k[2]])
cetz.draw.hobby((0.98, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.75rad)
cetz.draw.content((-1.07, 0.70),angle:1.75rad,[-p+k[2]])
cetz.draw.hobby((-0.98, 0.53),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.83, 0.74),angle:4.53rad,[-p+k[2]])
cetz.draw.hobby((0.92, 0.91),(0.86, 0.55),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.57, 0.19),node2.pos,decoration:"arrow",angle:2.46rad)
cetz.draw.content((-0.50, 0.28),angle:2.46rad,[-p])
cetz.draw.hobby((-0.26, 0.00),(-0.52, 0.22),(-0.79, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.19),node4.pos,decoration:"arrow",angle:3.83rad)
cetz.draw.content((0.50, 0.28),angle:3.83rad,[-p])
cetz.draw.hobby((0.79, 0.44),(0.53, 0.22),(0.26, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.02),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.14),angle:3.14rad,[-p+q])
cetz.draw.hobby((0.24, -0.02),(0.00, 0.08),(-0.24, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding6i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.64))
node(node0.pos)
let node1= (pos:(0.57, -0.77))
node(node1.pos)
let node2= (pos:(-0.29, 0.53))
node(node2.pos)
let node3= (pos:(-0.74, 0.85))
node(node3.pos)
let node4= (pos:(0.59, 0.47))
node(node4.pos)
let node5= (pos:(0.39, -0.00))
node(node5.pos)
edge(node1.pos,(0.12, -0.75),node0.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((0.10, -0.87),angle:6.14rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.83),(0.11, -0.81),(-0.25, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.84, -0.78),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.69, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.60, -0.93),angle:0.48rad,[k[0]])
cetz.draw.hobby((-0.38, -0.74),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.11),node4.pos,decoration:"wave",angle:0.89rad)
cetz.draw.content((-0.01, -0.03),angle:0.89rad,[q])
cetz.draw.hobby((-0.28, -0.49),(0.07, -0.03),(0.45, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.51, -0.39),node1.pos,decoration:"wave",angle:-1.35rad)
cetz.draw.content((0.63, -0.37),angle:-1.35rad,[q])
cetz.draw.hobby((0.48, -0.06),(0.56, -0.37),(0.62, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.60, 0.58),node2.pos,decoration:"arrow",angle:8.78rad)
cetz.draw.content((-0.67, 0.49),angle:8.78rad,[k[2]])
cetz.draw.hobby((-0.79, 0.77),(-0.63, 0.53),(-0.35, 0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.44, 0.81),node3.pos,decoration:"coil",angle:2.55rad)
cetz.draw.content((-0.37, 0.91),angle:2.55rad,[-p+k[2]])
cetz.draw.hobby((-0.24, 0.60),(-0.40, 0.85),(-0.69, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, 0.26),node2.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.03, 0.17),angle:2.48rad,[-p])
cetz.draw.hobby((0.29, 0.00),(0.01, 0.21),(-0.26, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.61rad)
cetz.draw.content((-0.93, 0.82),angle:2.61rad,[-p])
cetz.draw.hobby((-0.86, 0.85),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.06rad)
cetz.draw.content((0.70, 0.81),angle:4.06rad,[-p])
cetz.draw.hobby((0.89, 0.96),(0.61, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.58, 0.21),node5.pos,decoration:"arrow",angle:-1.94rad)
cetz.draw.content((0.69, 0.17),angle:-1.94rad,[-p+q])
cetz.draw.hobby((0.66, 0.43),(0.63, 0.18),(0.47, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding6i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.77))
node(node0.pos)
let node1= (pos:(0.32, -0.64))
node(node1.pos)
let node2= (pos:(0.75, 0.84))
node(node2.pos)
let node3= (pos:(0.30, 0.52))
node(node3.pos)
let node4= (pos:(-0.39, -0.00))
node(node4.pos)
let node5= (pos:(-0.59, 0.47))
node(node5.pos)
edge(node1.pos,(-0.11, -0.75),node0.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((-0.10, -0.87),angle:0.14rad,[q+k[0]])
cetz.draw.hobby((0.25, -0.73),(-0.11, -0.81),(-0.48, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.72, -0.72),angle:5.80rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.44, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.73, -0.99),angle:0.49rad,[k[0]])
cetz.draw.hobby((-0.63, -0.87),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.51, -0.39),node4.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((-0.62, -0.37),angle:1.34rad,[q])
cetz.draw.hobby((-0.62, -0.68),(-0.56, -0.37),(-0.47, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.08, -0.11),node1.pos,decoration:"wave",angle:-0.89rad)
cetz.draw.content((0.01, -0.03),angle:-0.89rad,[q])
cetz.draw.hobby((-0.45, 0.41),(-0.07, -0.03),(0.29, -0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.61, 0.57),node2.pos,decoration:"arrow",angle:3.79rad)
cetz.draw.content((0.69, 0.47),angle:3.79rad,[k[2]])
cetz.draw.hobby((0.36, 0.44),(0.64, 0.51),(0.80, 0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.45, 0.79),node3.pos,decoration:"coil",angle:3.74rad)
cetz.draw.content((0.38, 0.89),angle:3.74rad,[-p+k[2]])
cetz.draw.hobby((0.70, 0.91),(0.41, 0.84),(0.25, 0.59),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.23rad)
cetz.draw.content((-0.89, 0.66),angle:2.23rad,[-p])
cetz.draw.hobby((-0.70, 0.51),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.72rad)
cetz.draw.content((0.81, 1.02),angle:3.72rad,[-p])
cetz.draw.hobby((0.88, 1.00),(0.80, 0.94),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.03, 0.26),node4.pos,decoration:"arrow",angle:-2.49rad)
cetz.draw.content((0.05, 0.16),angle:-2.49rad,[-p])
cetz.draw.hobby((0.27, 0.41),(0.00, 0.20),(-0.28, -0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.57, 0.21),node5.pos,decoration:"arrow",angle:1.95rad)
cetz.draw.content((-0.69, 0.16),angle:1.95rad,[-p+q])
cetz.draw.hobby((-0.47, -0.02),(-0.62, 0.17),(-0.66, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, -0.85))
node(node0.pos)
let node1= (pos:(0.43, -0.85))
node(node1.pos)
let node2= (pos:(-0.90, 0.44))
node(node2.pos)
let node3= (pos:(0.90, 0.44))
node(node3.pos)
let node4= (pos:(0.24, -0.10))
node(node4.pos)
let node5= (pos:(-0.24, -0.10))
node(node5.pos)
edge(node1.pos,(0.00, -0.92),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.04),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.93),(0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.74, -0.81),angle:6.03rad,[k[0]])
cetz.draw.hobby((0.92, -0.92),(0.54, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.68, -1.04),angle:0.25rad,[k[0]])
cetz.draw.hobby((-0.51, -0.93),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.50),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.02, -0.58),angle:0.84rad,[q])
cetz.draw.hobby((-0.31, -0.82),(-0.05, -0.52),(0.22, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.11, -0.50),node1.pos,decoration:"wave",angle:5.44rad)
cetz.draw.content((0.02, -0.58),angle:5.44rad,[q])
cetz.draw.hobby((-0.21, -0.21),(0.05, -0.51),(0.32, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.83, 0.20),angle:4.48rad,[-p-2 k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.86, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.80rad)
cetz.draw.content((1.07, 0.25),angle:1.80rad,[-p-2 k[3]])
cetz.draw.hobby((0.98, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.75rad)
cetz.draw.content((-1.07, 0.70),angle:1.75rad,[-p-k[3]])
cetz.draw.hobby((-0.97, 0.53),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.83, 0.74),angle:4.53rad,[-p-k[3]])
cetz.draw.hobby((0.92, 0.91),(0.86, 0.55),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.57, 0.19),node2.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.50, 0.28),angle:2.45rad,[k[3]])
cetz.draw.hobby((-0.26, 0.00),(-0.52, 0.23),(-0.79, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, 0.19),node4.pos,decoration:"arrow",angle:3.83rad)
cetz.draw.content((0.50, 0.28),angle:3.83rad,[k[3]])
cetz.draw.hobby((0.79, 0.44),(0.52, 0.23),(0.26, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.02),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.14),angle:3.14rad,[q+k[3]])
cetz.draw.hobby((0.24, -0.02),(0.00, 0.08),(-0.24, -0.01),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.89))
node(node0.pos)
let node1= (pos:(0.36, -0.66))
node(node1.pos)
let node2= (pos:(0.72, 0.47))
node(node2.pos)
let node3= (pos:(-0.59, 0.19))
node(node3.pos)
let node4= (pos:(-0.48, -0.25))
node(node4.pos)
let node5= (pos:(-0.44, 0.46))
node(node5.pos)
edge(node1.pos,(-0.08, -0.81),node0.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.04, -0.93),angle:0.26rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.87),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.48, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.58),node4.pos,decoration:"wave",angle:1.47rad)
cetz.draw.content((-0.65, -0.57),angle:1.47rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.59, -0.56),(-0.55, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, -0.10),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.11, -0.03),angle:-0.95rad,[q])
cetz.draw.hobby((-0.31, 0.40),(0.04, -0.04),(0.34, -0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.25rad)
cetz.draw.content((0.96, 0.30),angle:5.25rad,[-p-2 k[3]])
cetz.draw.hobby((1.00, 0.12),(0.82, 0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.43rad)
cetz.draw.content((-0.75, -0.01),angle:0.43rad,[-p-2 k[3]])
cetz.draw.hobby((-0.66, 0.09),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, 0.35),node3.pos,decoration:"coil",angle:3.35rad)
cetz.draw.content((0.07, 0.47),angle:3.35rad,[-p-k[3]])
cetz.draw.hobby((0.57, 0.51),(0.05, 0.40),(-0.48, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.81, 0.64),angle:2.37rad,[k[3]])
cetz.draw.hobby((-0.56, 0.49),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.75, 0.79),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.90, 0.94),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node4.pos,decoration:"arrow",angle:4.98rad)
cetz.draw.content((-0.78, -0.10),angle:4.98rad,[k[3]])
cetz.draw.hobby((-0.68, 0.18),(-0.72, -0.08),(-0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.22, 0.10),angle:1.53rad,[q+k[3]])
cetz.draw.hobby((-0.38, -0.22),(-0.28, 0.10),(-0.35, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding7i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.67))
node(node0.pos)
let node1= (pos:(0.60, -0.88))
node(node1.pos)
let node2= (pos:(0.36, 0.18))
node(node2.pos)
let node3= (pos:(-0.76, 0.47))
node(node3.pos)
let node4= (pos:(0.64, 0.44))
node(node4.pos)
let node5= (pos:(0.71, -0.23))
node(node5.pos)
edge(node1.pos,(0.13, -0.81),node0.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.93),angle:6.05rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.13),node4.pos,decoration:"wave",angle:0.87rad)
cetz.draw.content((0.03, -0.05),angle:0.87rad,[q])
cetz.draw.hobby((-0.26, -0.51),(0.11, -0.06),(0.50, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.57),node1.pos,decoration:"wave",angle:-1.75rad)
cetz.draw.content((0.80, -0.59),angle:-1.75rad,[q])
cetz.draw.hobby((0.77, -0.30),(0.75, -0.57),(0.68, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.01rad)
cetz.draw.content((0.71, 0.20),angle:6.01rad,[-p-2 k[3]])
cetz.draw.hobby((0.92, 0.08),(0.47, 0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.10rad)
cetz.draw.content((-0.77, 0.18),angle:1.10rad,[-p-2 k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.34),node3.pos,decoration:"coil",angle:2.89rad)
cetz.draw.content((-0.18, 0.46),angle:2.89rad,[-p-k[3]])
cetz.draw.hobby((0.27, 0.27),(-0.18, 0.39),(-0.63, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.07),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.38, -0.15),angle:2.28rad,[k[3]])
cetz.draw.hobby((0.63, -0.26),(0.43, -0.11),(0.31, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.99, 0.68),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.86, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.15rad)
cetz.draw.content((0.72, 0.78),angle:4.15rad,[k[3]])
cetz.draw.hobby((0.90, 0.95),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((0.89, 0.14),angle:-1.45rad,[q+k[3]])
cetz.draw.hobby((0.74, 0.41),(0.83, 0.12),(0.79, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding7i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.84))
node(node0.pos)
let node1= (pos:(0.34, -0.69))
node(node1.pos)
let node2= (pos:(0.09, 0.53))
node(node2.pos)
let node3= (pos:(0.57, 0.09))
node(node3.pos)
let node4= (pos:(-0.31, -0.16))
node(node4.pos)
let node5= (pos:(-0.55, 0.42))
node(node5.pos)
edge(node1.pos,(-0.10, -0.81),node0.pos,decoration:"arrow",angle:0.18rad)
cetz.draw.content((-0.07, -0.93),angle:0.18rad,[q+k[0]])
cetz.draw.hobby((0.27, -0.78),(-0.09, -0.87),(-0.46, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.72, -0.74),angle:5.84rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.45, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.74, -1.04),angle:0.33rad,[k[0]])
cetz.draw.hobby((-0.63, -0.93),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.51),node4.pos,decoration:"wave",angle:1.24rad)
cetz.draw.content((-0.58, -0.47),angle:1.24rad,[q])
cetz.draw.hobby((-0.60, -0.76),(-0.52, -0.48),(-0.40, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, -0.14),node1.pos,decoration:"wave",angle:-0.91rad)
cetz.draw.content((0.05, -0.06),angle:-0.91rad,[q])
cetz.draw.hobby((-0.40, 0.36),(-0.02, -0.07),(0.31, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, 0.35),node2.pos,decoration:"arrow",angle:5.54rad)
cetz.draw.content((0.46, 0.44),angle:5.54rad,[-p-2 k[3]])
cetz.draw.hobby((0.59, 0.17),(0.42, 0.40),(0.18, 0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.69rad)
cetz.draw.content((-0.40, 0.16),angle:-2.69rad,[-p-k[3]])
cetz.draw.hobby((0.03, 0.43),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.94rad)
cetz.draw.content((0.81, 0.16),angle:2.94rad,[-p-k[3]])
cetz.draw.hobby((0.91, 0.08),(0.68, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.23rad)
cetz.draw.content((-0.87, 0.63),angle:2.23rad,[k[3]])
cetz.draw.hobby((-0.65, 0.46),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.49, 0.87),angle:3.62rad,[k[3]])
cetz.draw.hobby((0.88, 1.01),(0.15, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.15, -0.05),node4.pos,decoration:"arrow",angle:-2.86rad)
cetz.draw.content((0.19, -0.17),angle:-2.86rad,[k[3]])
cetz.draw.hobby((0.51, -0.00),(0.15, -0.11),(-0.21, -0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.48, 0.12),node5.pos,decoration:"arrow",angle:1.94rad)
cetz.draw.content((-0.59, 0.08),angle:1.94rad,[q+k[3]])
cetz.draw.hobby((-0.40, -0.15),(-0.53, 0.09),(-0.60, 0.35),stroke:stroke,mark: (end: ">"))
})
let embedding7i4=cetz.canvas(length:50%,{
let node0= (pos:(-0.33, -0.69))
node(node0.pos)
let node1= (pos:(0.56, -0.84))
node(node1.pos)
let node2= (pos:(-0.57, 0.09))
node(node2.pos)
let node3= (pos:(-0.09, 0.53))
node(node3.pos)
let node4= (pos:(0.55, 0.42))
node(node4.pos)
let node5= (pos:(0.32, -0.16))
node(node5.pos)
edge(node1.pos,(0.10, -0.81),node0.pos,decoration:"arrow",angle:6.10rad)
cetz.draw.content((0.08, -0.93),angle:6.10rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.91),(0.09, -0.87),(-0.27, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.95rad)
cetz.draw.content((0.82, -0.81),angle:5.95rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.67, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.62, -0.95),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.40, -0.78),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.04, -0.14),node4.pos,decoration:"wave",angle:0.91rad)
cetz.draw.content((-0.05, -0.06),angle:0.91rad,[q])
cetz.draw.hobby((-0.31, -0.53),(0.02, -0.07),(0.40, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.51),node1.pos,decoration:"wave",angle:-1.24rad)
cetz.draw.content((0.58, -0.47),angle:-1.24rad,[q])
cetz.draw.hobby((0.40, -0.20),(0.52, -0.47),(0.60, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, 0.36),node2.pos,decoration:"arrow",angle:7.02rad)
cetz.draw.content((-0.45, 0.44),angle:7.02rad,[-p-2 k[3]])
cetz.draw.hobby((-0.18, 0.56),(-0.42, 0.40),(-0.59, 0.18),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.94rad)
cetz.draw.content((-0.76, -0.07),angle:-2.94rad,[-p-k[3]])
cetz.draw.hobby((-0.66, 0.01),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.69rad)
cetz.draw.content((0.51, 0.37),angle:2.69rad,[-p-k[3]])
cetz.draw.hobby((0.94, 0.10),(0.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.15, -0.05),node2.pos,decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.18, -0.17),angle:2.86rad,[k[3]])
cetz.draw.hobby((0.21, -0.20),(-0.15, -0.11),(-0.51, -0.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.60, 0.66),angle:2.66rad,[k[3]])
cetz.draw.hobby((-0.21, 0.52),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.05rad)
cetz.draw.content((0.68, 0.78),angle:4.05rad,[k[3]])
cetz.draw.hobby((0.89, 0.96),(0.56, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.12),node5.pos,decoration:"arrow",angle:-1.94rad)
cetz.draw.content((0.59, 0.08),angle:-1.94rad,[q+k[3]])
cetz.draw.hobby((0.60, 0.35),(0.53, 0.09),(0.40, -0.15),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.62))
node(node0.pos)
let node1= (pos:(0.61, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.92, 0.49))
node(node5.pos)
edge(node1.pos,(0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.69),(0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.11),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.16),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.40, 0.21),(-0.00, 0.22),(0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.30rad)
cetz.draw.content((0.79, 0.19),angle:-0.30rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.80rad)
cetz.draw.content((0.60, 0.48),angle:3.80rad,[k[3]])
cetz.draw.hobby((0.85, 0.53),(0.63, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.60, 0.47),angle:2.47rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.08, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.58),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.66))
node(node0.pos)
let node1= (pos:(-0.55, -0.89))
node(node1.pos)
let node2= (pos:(-0.59, 0.19))
node(node2.pos)
let node3= (pos:(0.72, 0.47))
node(node3.pos)
let node4= (pos:(-0.44, 0.46))
node(node4.pos)
let node5= (pos:(-0.48, -0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.48, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.82),node1.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.88),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.10),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.11, -0.03),angle:2.19rad,[-q])
cetz.draw.hobby((0.34, -0.51),(0.04, -0.04),(-0.31, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.58),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((-0.66, -0.57),angle:4.61rad,[-q])
cetz.draw.hobby((-0.55, -0.30),(-0.60, -0.56),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.57rad)
cetz.draw.content((-0.75, -0.02),angle:3.57rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.12rad)
cetz.draw.content((0.96, 0.30),angle:2.12rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.82, 0.41),(1.00, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, 0.35),node3.pos,decoration:"coil",angle:0.21rad)
cetz.draw.content((0.06, 0.46),angle:0.21rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.48, 0.28),(0.05, 0.40),(0.57, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, -0.07),node2.pos,decoration:"arrow",angle:1.83rad)
cetz.draw.content((-0.78, -0.10),angle:1.83rad,[k[3]])
cetz.draw.hobby((-0.56, -0.28),(-0.72, -0.08),(-0.68, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.75, 0.79),angle:1.08rad,[k[3]])
cetz.draw.hobby((0.71, 0.59),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((-0.81, 0.64),angle:5.51rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:-1.62rad)
cetz.draw.content((-0.22, 0.10),angle:-1.62rad,[-q+k[3]])
cetz.draw.hobby((-0.35, 0.42),(-0.28, 0.10),(-0.39, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.93))
node(node0.pos)
let node1= (pos:(-0.51, -0.93))
node(node1.pos)
let node2= (pos:(0.09, 0.42))
node(node2.pos)
let node3= (pos:(-0.08, 0.51))
node(node3.pos)
let node4= (pos:(0.28, -0.25))
node(node4.pos)
let node5= (pos:(-0.28, -0.26))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.14rad)
cetz.draw.content((0.77, -0.85),angle:6.14rad,[-q+k[0]])
cetz.draw.hobby((0.91, -0.93),(0.62, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.14rad)
cetz.draw.content((-0.74, -1.08),angle:0.14rad,[-q+k[0]])
cetz.draw.hobby((-0.60, -1.00),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.97),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -1.09),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.42, -1.00),(0.00, -1.03),(-0.42, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.44, -0.59),node4.pos,decoration:"wave",angle:1.89rad)
cetz.draw.content((0.56, -0.55),angle:1.89rad,[-q])
cetz.draw.hobby((0.56, -0.85),(0.50, -0.56),(0.37, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.44, -0.59),node1.pos,decoration:"wave",angle:4.39rad)
cetz.draw.content((-0.55, -0.56),angle:4.39rad,[-q])
cetz.draw.hobby((-0.37, -0.29),(-0.49, -0.56),(-0.56, -0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.51rad)
cetz.draw.content((-0.41, 0.10),angle:3.51rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.02),(0.01, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.51, 0.37),angle:2.70rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.03, 0.53),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:0.57rad)
cetz.draw.content((0.48, 0.81),angle:0.57rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.14, 0.52),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:5.80rad)
cetz.draw.content((-0.60, 0.65),angle:5.80rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.20, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, 0.10),node2.pos,decoration:"arrow",angle:1.07rad)
cetz.draw.content((-0.25, 0.16),angle:1.07rad,[k[3]])
cetz.draw.hobby((-0.32, -0.17),(-0.19, 0.13),(-0.01, 0.40),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.12),node4.pos,decoration:"arrow",angle:-1.14rad)
cetz.draw.content((0.25, 0.17),angle:-1.14rad,[k[3]])
cetz.draw.hobby((0.02, 0.47),(0.18, 0.17),(0.31, -0.15),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.31),node5.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((0.00, -0.43),angle:-3.13rad,[-q+k[3]])
cetz.draw.hobby((0.25, -0.33),(0.00, -0.37),(-0.25, -0.33),stroke:stroke,mark: (end: ">"))
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.88))
node(node0.pos)
let node1= (pos:(-0.30, -0.66))
node(node1.pos)
let node2= (pos:(-0.76, 0.47))
node(node2.pos)
let node3= (pos:(0.36, 0.18))
node(node3.pos)
let node4= (pos:(0.71, -0.23))
node(node4.pos)
let node5= (pos:(0.64, 0.44))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.84, -0.82),angle:5.99rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.60, -0.94),angle:0.45rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.81),node1.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.92),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.57),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((0.81, -0.59),angle:1.40rad,[-q])
cetz.draw.hobby((0.68, -0.84),(0.75, -0.57),(0.77, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.13),node1.pos,decoration:"wave",angle:4.01rad)
cetz.draw.content((0.03, -0.05),angle:4.01rad,[-q])
cetz.draw.hobby((0.50, 0.38),(0.11, -0.06),(-0.26, -0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.24rad)
cetz.draw.content((-0.77, 0.18),angle:4.24rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.75, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.71, 0.21),angle:2.87rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.47, 0.21),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.34),node3.pos,decoration:"coil",angle:-0.25rad)
cetz.draw.content((-0.18, 0.46),angle:-0.25rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.63, 0.50),(-0.18, 0.39),(0.27, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.00rad)
cetz.draw.content((0.72, 0.78),angle:1.00rad,[k[3]])
cetz.draw.hobby((0.65, 0.56),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.99, 0.68),angle:5.13rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.86, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.07),node4.pos,decoration:"arrow",angle:5.42rad)
cetz.draw.content((0.38, -0.15),angle:5.42rad,[k[3]])
cetz.draw.hobby((0.31, 0.11),(0.43, -0.11),(0.63, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:1.69rad)
cetz.draw.content((0.89, 0.14),angle:1.69rad,[-q+k[3]])
cetz.draw.hobby((0.79, -0.18),(0.83, 0.12),(0.74, 0.41),stroke:stroke,mark: (end: ">"))
})
let embedding8f3=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.83))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.20))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.54rad)
cetz.draw.content((0.92, -0.76),angle:5.54rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.81),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.93),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.87),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.51),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.21, -0.43),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.37, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.24, 0.41),node2.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((-0.22, 0.52),angle:2.95rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.65, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.38rad)
cetz.draw.content((0.70, 0.25),angle:-0.38rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.13rad)
cetz.draw.content((-0.78, 0.19),angle:1.13rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.32rad)
cetz.draw.content((0.05, 0.09),angle:1.32rad,[k[3]])
cetz.draw.hobby((0.11, -0.18),(0.10, 0.07),(0.23, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.55),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding8f4=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.74, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.43),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.36),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.87, -0.14),angle:4.80rad,[-q])
cetz.draw.hobby((-0.81, 0.35),(-0.81, -0.11),(-0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.19, 0.33),node2.pos,decoration:"arrow",angle:3.43rad)
cetz.draw.content((0.15, 0.44),angle:3.43rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.34, 0.21),(0.13, 0.38),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.09rad)
cetz.draw.content((0.98, 0.29),angle:-1.09rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.18rad)
cetz.draw.content((-0.69, -0.07),angle:0.18rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.02rad)
cetz.draw.content((-0.98, 0.68),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.26, -0.09),node4.pos,decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.31, -0.20),angle:5.92rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.14),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.26, 0.43),angle:2.56rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.26, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.69),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.89, -0.72),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.64, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.11),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.16),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[p+q])
cetz.draw.hobby((-0.40, 0.21),(-0.00, 0.22),(0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.30rad)
cetz.draw.content((0.79, 0.19),angle:-0.30rad,[p+q+k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.48),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.62, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.47),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.08, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.57),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.84, 0.76),angle:4.54rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.82))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.20))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.81),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.17, -0.93),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.87),(-0.27, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.51),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.20, -0.43),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.37, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.24, 0.41),node2.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((-0.22, 0.52),angle:2.95rad,[p])
cetz.draw.hobby((-0.66, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.38rad)
cetz.draw.content((0.70, 0.25),angle:-0.38rad,[p+k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.14rad)
cetz.draw.content((-0.78, 0.19),angle:1.14rad,[p+k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.31rad)
cetz.draw.content((0.05, 0.09),angle:1.31rad,[k[3]])
cetz.draw.hobby((0.12, -0.18),(0.10, 0.07),(0.23, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.55),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.75, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.43),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.37),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.87, -0.14),angle:4.80rad,[-q])
cetz.draw.hobby((-0.81, 0.35),(-0.81, -0.11),(-0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.19, 0.33),node2.pos,decoration:"arrow",angle:3.44rad)
cetz.draw.content((0.15, 0.44),angle:3.44rad,[p])
cetz.draw.hobby((-0.34, 0.21),(0.13, 0.38),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.09rad)
cetz.draw.content((0.98, 0.29),angle:-1.09rad,[p+k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.18rad)
cetz.draw.content((-0.69, -0.07),angle:0.18rad,[p+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.02rad)
cetz.draw.content((-0.98, 0.68),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.27, -0.09),node4.pos,decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.31, -0.20),angle:5.91rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.15),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.32, 0.33),node5.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.26, 0.43),angle:2.55rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.26, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.79))
node(node0.pos)
let node1= (pos:(-0.51, -0.79))
node(node1.pos)
let node2= (pos:(-0.51, 0.79))
node(node2.pos)
let node3= (pos:(0.52, 0.80))
node(node3.pos)
let node4= (pos:(0.36, 0.00))
node(node4.pos)
let node5= (pos:(-0.36, 0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.71, -1.01),angle:0.40rad,[-q+k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.83),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.95),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.87),(0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.40),node4.pos,decoration:"wave",angle:1.76rad)
cetz.draw.content((0.59, -0.38),angle:1.76rad,[-q])
cetz.draw.hobby((0.57, -0.71),(0.53, -0.38),(0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.38),angle:4.52rad,[-q])
cetz.draw.hobby((-0.44, -0.06),(-0.52, -0.38),(-0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:9.03rad)
cetz.draw.content((-0.80, 0.79),angle:9.03rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
cetz.draw.content((0.71, 1.01),angle:3.54rad,[p])
cetz.draw.hobby((0.58, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.83),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.95),angle:0.00rad,[p+k[3]])
cetz.draw.hobby((-0.42, 0.87),(0.00, 0.89),(0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, 0.40),node2.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.58, 0.38),angle:1.76rad,[k[3]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, 0.40),node4.pos,decoration:"arrow",angle:-1.76rad)
cetz.draw.content((0.59, 0.38),angle:-1.76rad,[k[3]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.00),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.12),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.29, -0.06),(0.00, -0.06),(-0.29, -0.06),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.56))
node(node0.pos)
let node1= (pos:(0.59, -0.56))
node(node1.pos)
let node2= (pos:(0.27, 0.82))
node(node2.pos)
let node3= (pos:(-0.25, 0.82))
node(node3.pos)
let node4= (pos:(-0.84, 0.52))
node(node4.pos)
let node5= (pos:(0.85, 0.52))
node(node5.pos)
edge(node1.pos,(0.00, -0.58),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.70),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.46rad)
cetz.draw.content((0.88, -0.70),angle:5.46rad,[k[0]])
cetz.draw.hobby((0.98, -0.89),(0.70, -0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.71, -0.86),angle:0.81rad,[k[0]])
cetz.draw.hobby((-0.61, -0.68),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.03),node4.pos,decoration:"wave",angle:1.80rad)
cetz.draw.content((-0.85, -0.06),angle:1.80rad,[q])
cetz.draw.hobby((-0.68, -0.47),(-0.79, -0.04),(-0.88, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.74, -0.03),node1.pos,decoration:"wave",angle:-1.80rad)
cetz.draw.content((0.85, -0.06),angle:-1.80rad,[q])
cetz.draw.hobby((0.89, 0.40),(0.80, -0.04),(0.68, -0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.69),node2.pos,decoration:"arrow",angle:3.15rad)
cetz.draw.content((0.01, 0.57),angle:3.15rad,[k[2]])
cetz.draw.hobby((-0.25, 0.73),(0.01, 0.63),(0.27, 0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.01, 0.98),node3.pos,decoration:"coil",angle:3.15rad)
cetz.draw.content((0.01, 1.10),angle:3.15rad,[-p-q+k[2]])
cetz.draw.hobby((0.28, 0.92),(0.01, 1.04),(-0.26, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.58, 0.68),node2.pos,decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.64, 0.79),angle:2.65rad,[-p-q])
cetz.draw.hobby((0.83, 0.60),(0.60, 0.74),(0.35, 0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.56, 0.68),node4.pos,decoration:"arrow",angle:3.62rad)
cetz.draw.content((-0.62, 0.79),angle:3.62rad,[-p-q])
cetz.draw.hobby((-0.34, 0.85),(-0.58, 0.74),(-0.81, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.90rad)
cetz.draw.content((-1.03, 0.72),angle:1.90rad,[-p])
cetz.draw.hobby((-0.92, 0.59),(-1.02, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.40rad)
cetz.draw.content((0.81, 0.79),angle:4.40rad,[-p])
cetz.draw.hobby((0.91, 0.92),(0.82, 0.63),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.92, 0.45))
node(node2.pos)
let node3= (pos:(0.92, 0.45))
node(node3.pos)
let node4= (pos:(0.39, -0.12))
node(node4.pos)
let node5= (pos:(-0.39, -0.12))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.79, -0.81),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[-q+k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.89),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -1.01),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.93),(-0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.49),node4.pos,decoration:"wave",angle:1.74rad)
cetz.draw.content((0.59, -0.47),angle:1.74rad,[-q])
cetz.draw.hobby((0.57, -0.78),(0.53, -0.47),(0.47, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.48, -0.49),node1.pos,decoration:"wave",angle:4.55rad)
cetz.draw.content((-0.60, -0.47),angle:4.55rad,[-q])
cetz.draw.hobby((-0.47, -0.17),(-0.53, -0.47),(-0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((-0.84, 0.21),angle:4.54rad,[k[2]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((1.08, 0.24),angle:1.74rad,[k[2]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.71rad)
cetz.draw.content((-1.08, 0.71),angle:1.71rad,[-p+k[2]])
cetz.draw.hobby((-1.00, 0.54),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.58rad)
cetz.draw.content((0.84, 0.74),angle:4.58rad,[-p+k[2]])
cetz.draw.hobby((0.93, 0.91),(0.88, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:2.33rad)
cetz.draw.content((-0.56, 0.27),angle:2.33rad,[-p])
cetz.draw.hobby((-0.39, -0.02),(-0.60, 0.22),(-0.82, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.19),node4.pos,decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.56, 0.27),angle:3.95rad,[-p])
cetz.draw.hobby((0.83, 0.44),(0.60, 0.22),(0.39, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, -0.10),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.02),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.31, -0.05),(-0.00, -0.04),(-0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.40, -0.76))
node(node1.pos)
let node2= (pos:(-0.47, 0.50))
node(node2.pos)
let node3= (pos:(-0.80, 0.85))
node(node3.pos)
let node4= (pos:(0.76, 0.40))
node(node4.pos)
let node5= (pos:(-0.00, 0.01))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.91, -0.74),angle:5.50rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.76, -0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.65, -0.99),angle:0.39rad,[-q+k[0]])
cetz.draw.hobby((-0.47, -0.85),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.13, -0.74),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.14, -0.86),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.55, -0.73),(0.13, -0.80),(-0.30, -0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.73, -0.13),node4.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.85, -0.14),angle:1.46rad,[-q])
cetz.draw.hobby((0.73, -0.55),(0.79, -0.13),(0.82, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.22, -0.38),node1.pos,decoration:"wave",angle:4.23rad)
cetz.draw.content((-0.32, -0.32),angle:4.23rad,[-q])
cetz.draw.hobby((-0.10, -0.04),(-0.26, -0.34),(-0.42, -0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.76, 0.57),node2.pos,decoration:"arrow",angle:8.59rad)
cetz.draw.content((-0.84, 0.49),angle:8.59rad,[k[2]])
cetz.draw.hobby((-0.88, 0.80),(-0.79, 0.52),(-0.52, 0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.79),node3.pos,decoration:"coil",angle:2.38rad)
cetz.draw.content((-0.45, 0.88),angle:2.38rad,[-p+k[2]])
cetz.draw.hobby((-0.39, 0.55),(-0.48, 0.83),(-0.75, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, 0.26),node2.pos,decoration:"arrow",angle:2.33rad)
cetz.draw.content((-0.32, 0.17),angle:2.33rad,[-p])
cetz.draw.hobby((-0.09, 0.02),(-0.28, 0.21),(-0.47, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.49rad)
cetz.draw.content((-0.97, 0.83),angle:2.49rad,[-p])
cetz.draw.hobby((-0.92, 0.86),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.33rad)
cetz.draw.content((0.77, 0.75),angle:4.33rad,[-p])
cetz.draw.hobby((0.91, 0.93),(0.74, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.38, 0.22),node5.pos,decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.33, 0.33),angle:3.62rad,[-p-q])
cetz.draw.hobby((0.65, 0.42),(0.34, 0.27),(0.04, 0.10),stroke:stroke,mark: (end: ">"))
})
let embedding10f2=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.92, 0.76))
node(node2.pos)
let node3= (pos:(0.56, 0.43))
node(node3.pos)
let node4= (pos:(0.03, 0.00))
node(node4.pos)
let node5= (pos:(-0.74, 0.40))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.75, -0.77),angle:5.90rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.74, -0.91),angle:0.78rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.76),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.13, -0.74),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.86),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.82),(-0.13, -0.80),(-0.55, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.39),node4.pos,decoration:"wave",angle:2.03rad)
cetz.draw.content((0.34, -0.34),angle:2.03rad,[-q])
cetz.draw.hobby((0.42, -0.66),(0.28, -0.35),(0.12, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.73, -0.13),node1.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.85, -0.14),angle:4.81rad,[-q])
cetz.draw.hobby((-0.81, 0.29),(-0.79, -0.13),(-0.72, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.86, 0.48),node2.pos,decoration:"arrow",angle:3.93rad)
cetz.draw.content((0.94, 0.40),angle:3.93rad,[k[2]])
cetz.draw.hobby((0.61, 0.35),(0.89, 0.43),(0.99, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.64, 0.71),node3.pos,decoration:"coil",angle:3.87rad)
cetz.draw.content((0.56, 0.80),angle:3.87rad,[-p+k[2]])
cetz.draw.hobby((0.87, 0.83),(0.60, 0.75),(0.49, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.97rad)
cetz.draw.content((-0.98, 0.65),angle:1.97rad,[-p])
cetz.draw.hobby((-0.84, 0.47),(-1.02, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.39rad)
cetz.draw.content((0.85, 0.92),angle:4.39rad,[-p])
cetz.draw.hobby((0.91, 0.92),(0.89, 0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, 0.22),node4.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.22, 0.31),angle:3.81rad,[-p])
cetz.draw.hobby((0.47, 0.43),(0.26, 0.27),(0.04, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.22),node5.pos,decoration:"arrow",angle:2.67rad)
cetz.draw.content((-0.31, 0.33),angle:2.67rad,[-p-q])
cetz.draw.hobby((-0.02, 0.10),(-0.32, 0.27),(-0.64, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.62))
node(node0.pos)
let node1= (pos:(0.57, -0.62))
node(node1.pos)
let node2= (pos:(-0.34, 0.15))
node(node2.pos)
let node3= (pos:(0.35, 0.15))
node(node3.pos)
let node4= (pos:(-0.65, 0.49))
node(node4.pos)
let node5= (pos:(0.65, 0.49))
node(node5.pos)
edge(node1.pos,(0.00, -0.65),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.77),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.69),(-0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.86, -0.72),angle:5.56rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.73rad)
cetz.draw.content((-0.71, -0.90),angle:0.73rad,[k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node4.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.78, -0.10),angle:1.65rad,[q])
cetz.draw.hobby((-0.66, -0.52),(-0.72, -0.07),(-0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, -0.09),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.78, -0.10),angle:-1.65rad,[q])
cetz.draw.hobby((0.72, 0.38),(0.72, -0.07),(0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.08),node2.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.04),angle:0.00rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.30, 0.07),(0.00, 0.02),(-0.29, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.92rad)
cetz.draw.content((-0.65, -0.04),angle:-2.92rad,[-p-q-k[3]])
cetz.draw.hobby((-0.43, 0.07),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.92rad)
cetz.draw.content((0.70, 0.19),angle:2.92rad,[-p-q-k[3]])
cetz.draw.hobby((0.92, 0.08),(0.46, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.40),node2.pos,decoration:"arrow",angle:3.47rad)
cetz.draw.content((0.10, 0.52),angle:3.47rad,[k[3]])
cetz.draw.hobby((0.54, 0.55),(0.10, 0.46),(-0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.14, 0.40),node4.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.10, 0.52),angle:2.82rad,[k[3]])
cetz.draw.hobby((0.29, 0.26),(-0.10, 0.46),(-0.54, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.18rad)
cetz.draw.content((-0.92, 0.68),angle:2.18rad,[q+k[3]])
cetz.draw.hobby((-0.75, 0.54),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
cetz.draw.content((0.72, 0.81),angle:4.11rad,[q+k[3]])
cetz.draw.hobby((0.89, 0.95),(0.65, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding11f0=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.83))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.20))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.82),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.17, -0.94),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.88),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.51),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.20, -0.43),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.37, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.70, 0.25),angle:5.90rad,[-p-2 k[3]])
cetz.draw.hobby((0.93, 0.09),(0.43, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.13rad)
cetz.draw.content((-0.78, 0.19),angle:1.13rad,[-p-2 k[3]])
cetz.draw.hobby((-0.76, 0.37),(-0.90, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:2.95rad)
cetz.draw.content((-0.22, 0.52),angle:2.95rad,[-p-k[3]])
cetz.draw.hobby((0.23, 0.36),(-0.21, 0.46),(-0.65, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.31rad)
cetz.draw.content((0.04, 0.09),angle:1.31rad,[k[3]])
cetz.draw.hobby((0.11, -0.18),(0.10, 0.07),(0.23, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.69),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.55),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding11f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.93, 0.45))
node(node2.pos)
let node3= (pos:(0.93, 0.45))
node(node3.pos)
let node4= (pos:(0.39, -0.12))
node(node4.pos)
let node5= (pos:(-0.39, -0.11))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.79, -0.81),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[-q+k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.89),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.01),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.48, -0.49),node4.pos,decoration:"wave",angle:1.74rad)
cetz.draw.content((0.59, -0.47),angle:1.74rad,[-q])
cetz.draw.hobby((0.57, -0.78),(0.53, -0.47),(0.47, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, -0.49),node1.pos,decoration:"wave",angle:4.55rad)
cetz.draw.content((-0.59, -0.47),angle:4.55rad,[-q])
cetz.draw.hobby((-0.47, -0.17),(-0.53, -0.47),(-0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((-0.84, 0.21),angle:4.55rad,[-p-2 k[3]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.73rad)
cetz.draw.content((1.08, 0.25),angle:1.73rad,[-p-2 k[3]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.71rad)
cetz.draw.content((-1.08, 0.71),angle:1.71rad,[-p-k[3]])
cetz.draw.hobby((-1.00, 0.54),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.58rad)
cetz.draw.content((0.84, 0.74),angle:4.58rad,[-p-k[3]])
cetz.draw.hobby((0.93, 0.91),(0.88, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:2.34rad)
cetz.draw.content((-0.56, 0.27),angle:2.34rad,[k[3]])
cetz.draw.hobby((-0.39, -0.02),(-0.60, 0.22),(-0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.19),node4.pos,decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.56, 0.27),angle:3.95rad,[k[3]])
cetz.draw.hobby((0.83, 0.44),(0.60, 0.22),(0.39, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, -0.10),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.02),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.31, -0.05),(-0.00, -0.04),(-0.31, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding11f2=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.78))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.75, -0.78),angle:5.93rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.42),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.36),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.87, -0.14),angle:4.80rad,[-q])
cetz.draw.hobby((-0.81, 0.35),(-0.81, -0.11),(-0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((0.98, 0.29),angle:5.20rad,[-p-2 k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.18rad)
cetz.draw.content((-0.69, -0.07),angle:0.18rad,[-p-2 k[3]])
cetz.draw.hobby((-0.52, 0.03),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.18, 0.33),node3.pos,decoration:"coil",angle:3.43rad)
cetz.draw.content((0.15, 0.45),angle:3.43rad,[-p-k[3]])
cetz.draw.hobby((0.62, 0.50),(0.13, 0.38),(-0.34, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.02rad)
cetz.draw.content((-0.98, 0.68),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.26, -0.09),node4.pos,decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.31, -0.20),angle:5.92rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.14),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.26, 0.43),angle:2.56rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.26, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding11f3=cetz.canvas(length:50%,{
let node0= (pos:(0.63, -0.68))
node(node0.pos)
let node1= (pos:(-0.41, -0.83))
node(node1.pos)
let node2= (pos:(-0.67, 0.15))
node(node2.pos)
let node3= (pos:(-0.10, 0.53))
node(node3.pos)
let node4= (pos:(0.72, 0.38))
node(node4.pos)
let node5= (pos:(-0.05, -0.13))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.89, -0.75),angle:5.56rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[-q+k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.79),node1.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.85),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.16),node4.pos,decoration:"wave",angle:1.48rad)
cetz.draw.content((0.83, -0.17),angle:1.48rad,[-q])
cetz.draw.hobby((0.71, -0.58),(0.77, -0.16),(0.79, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, -0.49),node1.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.34, -0.44),angle:4.24rad,[-q])
cetz.draw.hobby((-0.14, -0.17),(-0.28, -0.45),(-0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.40),node2.pos,decoration:"arrow",angle:6.87rad)
cetz.draw.content((-0.48, 0.50),angle:6.87rad,[-p-2 k[3]])
cetz.draw.hobby((-0.18, 0.57),(-0.45, 0.44),(-0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.73rad)
cetz.draw.content((-0.78, -0.04),angle:-2.73rad,[-p-k[3]])
cetz.draw.hobby((-0.73, 0.05),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.69rad)
cetz.draw.content((0.50, 0.37),angle:2.69rad,[-p-k[3]])
cetz.draw.hobby((0.94, 0.10),(0.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, -0.01),node2.pos,decoration:"arrow",angle:2.72rad)
cetz.draw.content((-0.42, -0.12),angle:2.72rad,[k[3]])
cetz.draw.hobby((-0.13, -0.17),(-0.39, -0.07),(-0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.60, 0.66),angle:2.66rad,[k[3]])
cetz.draw.hobby((-0.21, 0.52),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.29rad)
cetz.draw.content((0.75, 0.74),angle:4.29rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.71, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:-2.56rad)
cetz.draw.content((0.42, 0.03),angle:-2.56rad,[-q+k[3]])
cetz.draw.hobby((0.68, 0.28),(0.37, 0.08),(0.06, -0.13),stroke:stroke,mark: (end: ">"))
})
let embedding11f4=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.83))
node(node0.pos)
let node1= (pos:(-0.63, -0.68))
node(node1.pos)
let node2= (pos:(0.10, 0.53))
node(node2.pos)
let node3= (pos:(0.67, 0.15))
node(node3.pos)
let node4= (pos:(0.05, -0.14))
node(node4.pos)
let node5= (pos:(-0.72, 0.38))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((-0.74, -0.93),angle:0.71rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.80),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.92),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.13, -0.86),(-0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.50),node4.pos,decoration:"wave",angle:2.05rad)
cetz.draw.content((0.35, -0.44),angle:2.05rad,[-q])
cetz.draw.hobby((0.43, -0.73),(0.29, -0.45),(0.14, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.71, -0.16),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.83, -0.17),angle:4.80rad,[-q])
cetz.draw.hobby((-0.78, 0.27),(-0.77, -0.16),(-0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, 0.40),node2.pos,decoration:"arrow",angle:5.70rad)
cetz.draw.content((0.48, 0.50),angle:5.70rad,[-p-2 k[3]])
cetz.draw.hobby((0.67, 0.24),(0.45, 0.44),(0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.69rad)
cetz.draw.content((-0.40, 0.16),angle:-2.69rad,[-p-k[3]])
cetz.draw.hobby((0.03, 0.43),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.73rad)
cetz.draw.content((0.88, 0.18),angle:2.73rad,[-p-k[3]])
cetz.draw.hobby((0.93, 0.10),(0.78, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-0.97, 0.64),angle:2.00rad,[k[3]])
cetz.draw.hobby((-0.81, 0.44),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.49, 0.87),angle:3.62rad,[k[3]])
cetz.draw.hobby((0.88, 1.01),(0.16, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, -0.02),node4.pos,decoration:"arrow",angle:-2.71rad)
cetz.draw.content((0.43, -0.12),angle:-2.71rad,[k[3]])
cetz.draw.hobby((0.64, 0.06),(0.39, -0.07),(0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.13),node5.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.28, 0.23),angle:2.55rad,[-q+k[3]])
cetz.draw.hobby((0.01, -0.03),(-0.30, 0.17),(-0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding12f0=cetz.canvas(length:50%,{
let node0= (pos:(0.35, -0.61))
node(node0.pos)
let node1= (pos:(-0.35, -0.61))
node(node1.pos)
let node2= (pos:(0.56, 0.08))
node(node2.pos)
let node3= (pos:(-0.56, 0.09))
node(node3.pos)
let node4= (pos:(-0.59, 0.54))
node(node4.pos)
let node5= (pos:(0.59, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.74, -0.70),angle:5.74rad,[-q+k[0]])
cetz.draw.hobby((0.95, -0.90),(0.47, -0.61),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.61, -0.91),angle:0.54rad,[-q+k[0]])
cetz.draw.hobby((-0.41, -0.71),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.66),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.78),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.29, -0.69),(-0.00, -0.72),(-0.30, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.05),node4.pos,decoration:"wave",angle:2.25rad)
cetz.draw.content((-0.22, -0.12),angle:2.25rad,[-q])
cetz.draw.hobby((0.21, -0.53),(-0.17, -0.08),(-0.54, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.13, -0.05),node1.pos,decoration:"wave",angle:-2.26rad)
cetz.draw.content((0.22, -0.12),angle:-2.26rad,[-q])
cetz.draw.hobby((0.55, 0.39),(0.17, -0.08),(-0.21, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.12),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.24),angle:3.14rad,[p-q])
cetz.draw.hobby((-0.46, 0.16),(-0.00, 0.18),(0.46, 0.16),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.19rad)
cetz.draw.content((0.80, 0.16),angle:-0.19rad,[p-q+k[3]])
cetz.draw.hobby((0.67, 0.12),(0.91, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.20rad)
cetz.draw.content((-0.76, -0.07),angle:0.20rad,[p-q+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.65, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, 0.32),node2.pos,decoration:"arrow",angle:-1.59rad)
cetz.draw.content((0.81, 0.31),angle:-1.59rad,[k[3]])
cetz.draw.hobby((0.67, 0.54),(0.75, 0.30),(0.65, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.69, 0.32),node4.pos,decoration:"arrow",angle:1.58rad)
cetz.draw.content((-0.81, 0.32),angle:1.58rad,[k[3]])
cetz.draw.hobby((-0.65, 0.08),(-0.75, 0.31),(-0.67, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.31rad)
cetz.draw.content((-0.88, 0.69),angle:2.31rad,[-q+k[3]])
cetz.draw.hobby((-0.70, 0.58),(-0.98, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.98rad)
cetz.draw.content((0.70, 0.85),angle:3.98rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.97),(0.61, 0.66),stroke:stroke,mark: (end: ">"))
})
let embedding13f0=cetz.canvas(length:50%,{
let node0= (pos:(0.28, -0.45))
node(node0.pos)
let node1= (pos:(-0.28, -0.45))
node(node1.pos)
let node2= (pos:(0.21, 0.86))
node(node2.pos)
let node3= (pos:(-0.19, 0.86))
node(node3.pos)
let node4= (pos:(-0.47, 0.43))
node(node4.pos)
let node5= (pos:(0.47, 0.43))
node(node5.pos)
edge(node0.pos,(0.80, -0.80),decoration:"arrow",angle:5.69rad)
cetz.draw.content((0.61, -0.53),angle:5.69rad,[-q+k[0]])
cetz.draw.hobby((0.75, -0.69),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.80, -0.80),decoration:"arrow",angle:0.59rad)
cetz.draw.content((-0.47, -0.73),angle:0.59rad,[-q+k[0]])
cetz.draw.hobby((-0.33, -0.56),(-0.68, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.49),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.61),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.24, -0.52),(0.00, -0.55),(-0.24, -0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.10, -0.01),node4.pos,decoration:"wave",angle:2.27rad)
cetz.draw.content((-0.19, -0.09),angle:2.27rad,[-q])
cetz.draw.hobby((0.16, -0.41),(-0.14, -0.05),(-0.44, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.11, -0.01),node1.pos,decoration:"wave",angle:-2.28rad)
cetz.draw.content((0.20, -0.09),angle:-2.28rad,[-q])
cetz.draw.hobby((0.44, 0.30),(0.15, -0.05),(-0.16, -0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.77),node2.pos,decoration:"arrow",angle:9.42rad)
cetz.draw.content((0.01, 0.65),angle:9.42rad,[k[2]])
cetz.draw.hobby((-0.19, 0.78),(0.01, 0.71),(0.22, 0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.01, 1.00),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.01, 1.12),angle:3.14rad,[-p+q+k[2]])
cetz.draw.hobby((0.24, 0.94),(0.01, 1.06),(-0.22, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, 0.66),node2.pos,decoration:"arrow",angle:2.11rad)
cetz.draw.content((0.48, 0.72),angle:2.11rad,[-p+q])
cetz.draw.hobby((0.51, 0.50),(0.42, 0.69),(0.29, 0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.36, 0.66),node4.pos,decoration:"arrow",angle:4.14rad)
cetz.draw.content((-0.46, 0.72),angle:4.14rad,[-p+q])
cetz.draw.hobby((-0.27, 0.87),(-0.41, 0.70),(-0.50, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.80, 0.80),decoration:"arrow",angle:2.31rad)
cetz.draw.content((-0.72, 0.54),angle:2.31rad,[-p])
cetz.draw.hobby((-0.58, 0.47),(-0.78, 0.69),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, 0.80),decoration:"arrow",angle:3.99rad)
cetz.draw.content((0.55, 0.69),angle:3.99rad,[-p])
cetz.draw.hobby((0.69, 0.77),(0.49, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.68),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.64, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.10),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.71, -0.53),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.79, 0.19),angle:5.98rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.16),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[-p-2 q-k[3]])
cetz.draw.hobby((0.40, 0.22),(0.00, 0.22),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.47),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.63, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.60, 0.47),angle:2.47rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.07, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.58),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding14f0=cetz.canvas(length:50%,{
let node0= (pos:(0.37, -0.63))
node(node0.pos)
let node1= (pos:(-0.37, -0.65))
node(node1.pos)
let node2= (pos:(-0.44, 0.13))
node(node2.pos)
let node3= (pos:(0.44, 0.16))
node(node3.pos)
let node4= (pos:(-0.41, 0.54))
node(node4.pos)
let node5= (pos:(0.42, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((0.75, -0.71),angle:5.75rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.49, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.51rad)
cetz.draw.content((-0.63, -0.93),angle:0.51rad,[-q+k[0]])
cetz.draw.hobby((-0.43, -0.75),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.70),node1.pos,decoration:"arrow",angle:0.02rad)
cetz.draw.content((0.01, -0.82),angle:0.02rad,[k[0]])
cetz.draw.hobby((0.32, -0.71),(0.00, -0.76),(-0.31, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.06, -0.08),node4.pos,decoration:"wave",angle:2.16rad)
cetz.draw.content((-0.16, -0.15),angle:2.16rad,[-q])
cetz.draw.hobby((0.23, -0.57),(-0.11, -0.11),(-0.41, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.07, -0.13),node1.pos,decoration:"wave",angle:-2.18rad)
cetz.draw.content((0.17, -0.20),angle:-2.18rad,[-q])
cetz.draw.hobby((0.41, 0.34),(0.13, -0.15),(-0.23, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.10),node2.pos,decoration:"arrow",angle:0.03rad)
cetz.draw.content((0.01, -0.02),angle:0.03rad,[-p+q-2 k[3]])
cetz.draw.hobby((0.36, 0.08),(0.00, 0.03),(-0.36, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.91rad)
cetz.draw.content((-0.69, -0.05),angle:-2.91rad,[-p+q-k[3]])
cetz.draw.hobby((-0.53, 0.05),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.75, 0.19),angle:2.87rad,[-p+q-k[3]])
cetz.draw.hobby((0.92, 0.08),(0.55, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, 0.34),node2.pos,decoration:"arrow",angle:3.54rad)
cetz.draw.content((-0.09, 0.45),angle:3.54rad,[k[3]])
cetz.draw.hobby((0.31, 0.53),(-0.05, 0.40),(-0.39, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.03, 0.45),node4.pos,decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.08, 0.56),angle:2.75rad,[k[3]])
cetz.draw.hobby((0.41, 0.27),(0.08, 0.50),(-0.31, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.78, 0.67),angle:2.47rad,[-q+k[3]])
cetz.draw.hobby((-0.53, 0.55),(-0.96, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.86rad)
cetz.draw.content((0.63, 0.84),angle:3.86rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.98),(0.45, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, -0.61))
node(node0.pos)
let node1= (pos:(0.35, -0.61))
node(node1.pos)
let node2= (pos:(-0.56, 0.08))
node(node2.pos)
let node3= (pos:(0.56, 0.09))
node(node3.pos)
let node4= (pos:(0.59, 0.54))
node(node4.pos)
let node5= (pos:(-0.59, 0.54))
node(node5.pos)
edge(node1.pos,(0.00, -0.66),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.78),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.68),(-0.00, -0.72),(-0.30, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.74, -0.70),angle:5.74rad,[k[0]])
cetz.draw.hobby((0.95, -0.90),(0.47, -0.61),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.61, -0.91),angle:0.54rad,[k[0]])
cetz.draw.hobby((-0.41, -0.71),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.04),node4.pos,decoration:"wave",angle:0.89rad)
cetz.draw.content((0.22, -0.12),angle:0.89rad,[q])
cetz.draw.hobby((-0.21, -0.53),(0.17, -0.08),(0.54, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.04),node1.pos,decoration:"wave",angle:5.40rad)
cetz.draw.content((-0.22, -0.12),angle:5.40rad,[q])
cetz.draw.hobby((-0.54, 0.39),(-0.17, -0.08),(0.21, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.33rad)
cetz.draw.content((-0.76, -0.08),angle:3.33rad,[p-q-k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.65, 0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.95rad)
cetz.draw.content((0.81, 0.16),angle:2.95rad,[p-q-k[3]])
cetz.draw.hobby((0.67, 0.12),(0.91, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.12),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.24),angle:0.00rad,[p-q])
cetz.draw.hobby((-0.46, 0.16),(0.00, 0.18),(0.46, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.69, 0.32),node2.pos,decoration:"arrow",angle:4.73rad)
cetz.draw.content((-0.81, 0.31),angle:4.73rad,[k[3]])
cetz.draw.hobby((-0.67, 0.54),(-0.75, 0.30),(-0.65, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, 0.32),node4.pos,decoration:"arrow",angle:1.56rad)
cetz.draw.content((0.81, 0.32),angle:1.56rad,[k[3]])
cetz.draw.hobby((0.65, 0.08),(0.75, 0.31),(0.67, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.84rad)
cetz.draw.content((0.70, 0.85),angle:0.84rad,[q+k[3]])
cetz.draw.hobby((0.61, 0.66),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.45rad)
cetz.draw.content((-0.88, 0.69),angle:5.45rad,[q+k[3]])
cetz.draw.hobby((-0.98, 0.89),(-0.70, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.83))
node(node0.pos)
let node1= (pos:(0.67, -0.70))
node(node1.pos)
let node2= (pos:(-0.77, 0.49))
node(node2.pos)
let node3= (pos:(0.32, 0.27))
node(node3.pos)
let node4= (pos:(0.19, -0.21))
node(node4.pos)
let node5= (pos:(0.84, 0.36))
node(node5.pos)
edge(node1.pos,(0.16, -0.82),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.93),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.88),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.52),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.20, -0.44),angle:0.84rad,[q])
cetz.draw.hobby((-0.36, -0.72),(-0.15, -0.46),(0.09, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.81, -0.20),node1.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((0.93, -0.22),angle:-1.74rad,[q])
cetz.draw.hobby((0.91, 0.26),(0.87, -0.19),(0.77, -0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((-0.78, 0.19),angle:4.28rad,[p-k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.70, 0.25),angle:2.76rad,[p-k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:-0.19rad)
cetz.draw.content((-0.22, 0.52),angle:-0.19rad,[p])
cetz.draw.hobby((-0.65, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.33rad)
cetz.draw.content((0.81, 0.71),angle:1.33rad,[k[3]])
cetz.draw.hobby((0.81, 0.48),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-1.00, 0.70),angle:5.13rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.87, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, 0.06),node4.pos,decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.05, 0.09),angle:4.45rad,[k[3]])
cetz.draw.hobby((0.23, 0.28),(0.10, 0.07),(0.11, -0.18),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:0.73rad)
cetz.draw.content((0.65, -0.03),angle:0.73rad,[q+k[3]])
cetz.draw.hobby((0.30, -0.21),(0.59, -0.00),(0.84, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding16i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.79))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.74, 0.46))
node(node4.pos)
let node5= (pos:(-0.02, -0.06))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.13, -0.89),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.75, -0.78),angle:5.94rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.87, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.73, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.08, -0.09),(0.27, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.32rad)
cetz.draw.content((-0.69, -0.07),angle:3.32rad,[p-k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.05rad)
cetz.draw.content((0.98, 0.29),angle:2.05rad,[p-k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:0.30rad)
cetz.draw.content((0.15, 0.44),angle:0.30rad,[p])
cetz.draw.hobby((-0.34, 0.20),(0.14, 0.37),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.09),node2.pos,decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.31, -0.20),angle:2.78rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.16rad)
cetz.draw.content((-0.98, 0.68),angle:5.16rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.26, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.64, 0.52),(-0.27, 0.37),(-0.00, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding16i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.51, -0.79))
node(node1.pos)
let node2= (pos:(0.51, 0.79))
node(node2.pos)
let node3= (pos:(-0.51, 0.79))
node(node3.pos)
let node4= (pos:(-0.36, -0.00))
node(node4.pos)
let node5= (pos:(0.36, 0.00))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.95),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.87),(0.00, -0.89),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.71, -1.01),angle:0.40rad,[k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node4.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((-0.58, -0.38),angle:1.38rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((0.59, -0.38),angle:-1.38rad,[q])
cetz.draw.hobby((0.44, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.83),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.95),angle:3.14rad,[p-k[3]])
cetz.draw.hobby((-0.42, 0.86),(0.00, 0.89),(0.42, 0.86),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
cetz.draw.content((0.71, 1.01),angle:0.40rad,[p])
cetz.draw.hobby((0.58, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:5.88rad)
cetz.draw.content((-0.80, 0.79),angle:5.88rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, 0.40),node2.pos,decoration:"arrow",angle:1.38rad)
cetz.draw.content((0.59, 0.38),angle:1.38rad,[k[3]])
cetz.draw.hobby((0.44, 0.06),(0.53, 0.38),(0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.40),node4.pos,decoration:"arrow",angle:4.90rad)
cetz.draw.content((-0.58, 0.38),angle:4.90rad,[k[3]])
cetz.draw.hobby((-0.57, 0.71),(-0.52, 0.38),(-0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.00),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.12),angle:0.00rad,[q+k[3]])
cetz.draw.hobby((-0.29, 0.06),(0.00, 0.06),(0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding16f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.62))
node(node0.pos)
let node1= (pos:(-0.61, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.64),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.76),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.49, -0.69),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.53),(0.86, -0.09),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.71, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.44rad)
cetz.draw.content((-0.72, -0.04),angle:3.44rad,[p+q-k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[p+q-k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, 0.16),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((-0.00, 0.28),angle:0.00rad,[p+q])
cetz.draw.hobby((-0.40, 0.21),(-0.00, 0.22),(0.40, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.67rad)
cetz.draw.content((-0.60, 0.47),angle:-0.67rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.63, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.60, 0.47),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.60),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding17i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.89))
node(node0.pos)
let node1= (pos:(0.36, -0.66))
node(node1.pos)
let node2= (pos:(0.72, 0.47))
node(node2.pos)
let node3= (pos:(-0.59, 0.19))
node(node3.pos)
let node4= (pos:(-0.48, -0.25))
node(node4.pos)
let node5= (pos:(-0.45, 0.46))
node(node5.pos)
edge(node1.pos,(-0.08, -0.82),node0.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[q+k[0]])
cetz.draw.hobby((0.29, -0.75),(-0.07, -0.88),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.58),node4.pos,decoration:"wave",angle:1.47rad)
cetz.draw.content((-0.66, -0.57),angle:1.47rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.59, -0.56),(-0.55, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, -0.10),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.10, -0.03),angle:-0.95rad,[q])
cetz.draw.hobby((-0.31, 0.40),(0.04, -0.04),(0.34, -0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.25rad)
cetz.draw.content((0.96, 0.30),angle:5.25rad,[-p-k[3]])
cetz.draw.hobby((1.00, 0.12),(0.82, 0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.43rad)
cetz.draw.content((-0.75, -0.01),angle:0.43rad,[-p-k[3]])
cetz.draw.hobby((-0.66, 0.09),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, 0.35),node3.pos,decoration:"coil",angle:3.35rad)
cetz.draw.content((0.07, 0.47),angle:3.35rad,[-p])
cetz.draw.hobby((0.57, 0.51),(0.05, 0.40),(-0.48, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.81, 0.65),angle:2.37rad,[k[3]])
cetz.draw.hobby((-0.56, 0.49),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.75, 0.79),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.90, 0.94),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node4.pos,decoration:"arrow",angle:4.98rad)
cetz.draw.content((-0.78, -0.10),angle:4.98rad,[k[3]])
cetz.draw.hobby((-0.68, 0.18),(-0.72, -0.08),(-0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.22, 0.10),angle:1.53rad,[q+k[3]])
cetz.draw.hobby((-0.38, -0.22),(-0.28, 0.10),(-0.35, 0.43),stroke:stroke,mark: (end: ">"))
})
let embedding17i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.67))
node(node0.pos)
let node1= (pos:(0.60, -0.88))
node(node1.pos)
let node2= (pos:(0.36, 0.18))
node(node2.pos)
let node3= (pos:(-0.76, 0.47))
node(node3.pos)
let node4= (pos:(0.64, 0.44))
node(node4.pos)
let node5= (pos:(0.71, -0.23))
node(node5.pos)
edge(node1.pos,(0.14, -0.81),node0.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.93),angle:6.05rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.13),node4.pos,decoration:"wave",angle:0.87rad)
cetz.draw.content((0.03, -0.05),angle:0.87rad,[q])
cetz.draw.hobby((-0.26, -0.51),(0.11, -0.06),(0.50, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.57),node1.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((0.81, -0.59),angle:-1.74rad,[q])
cetz.draw.hobby((0.77, -0.29),(0.75, -0.57),(0.68, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.01rad)
cetz.draw.content((0.71, 0.20),angle:6.01rad,[-p-k[3]])
cetz.draw.hobby((0.92, 0.08),(0.47, 0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.10rad)
cetz.draw.content((-0.77, 0.18),angle:1.10rad,[-p-k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.34),node3.pos,decoration:"coil",angle:2.89rad)
cetz.draw.content((-0.18, 0.46),angle:2.89rad,[-p])
cetz.draw.hobby((0.27, 0.27),(-0.18, 0.39),(-0.63, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.07),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.38, -0.15),angle:2.28rad,[k[3]])
cetz.draw.hobby((0.63, -0.26),(0.43, -0.11),(0.31, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.99, 0.68),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.86, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.14rad)
cetz.draw.content((0.72, 0.79),angle:4.14rad,[k[3]])
cetz.draw.hobby((0.90, 0.95),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((0.89, 0.14),angle:-1.45rad,[q+k[3]])
cetz.draw.hobby((0.73, 0.41),(0.83, 0.12),(0.79, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding17i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.48, -0.76))
node(node0.pos)
let node1= (pos:(0.47, -0.83))
node(node1.pos)
let node2= (pos:(-0.47, 0.76))
node(node2.pos)
let node3= (pos:(0.47, 0.84))
node(node3.pos)
let node4= (pos:(0.03, 0.14))
node(node4.pos)
let node5= (pos:(0.03, -0.13))
node(node5.pos)
edge(node1.pos,(-0.01, -0.85),node0.pos,decoration:"arrow",angle:6.20rad)
cetz.draw.content((-0.02, -0.97),angle:6.20rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.90),(-0.01, -0.91),(-0.40, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.77, -0.80),angle:5.98rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.58, -0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.43rad)
cetz.draw.content((-0.69, -0.99),angle:0.43rad,[k[0]])
cetz.draw.hobby((-0.54, -0.86),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.33),node4.pos,decoration:"wave",angle:1.07rad)
cetz.draw.content((-0.39, -0.27),angle:1.07rad,[q])
cetz.draw.hobby((-0.50, -0.64),(-0.31, -0.26),(-0.08, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, -0.49),node1.pos,decoration:"wave",angle:-1.02rad)
cetz.draw.content((0.38, -0.43),angle:-1.02rad,[q])
cetz.draw.hobby((0.13, -0.17),(0.32, -0.44),(0.48, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, 0.85),node2.pos,decoration:"arrow",angle:6.36rad)
cetz.draw.content((-0.02, 0.97),angle:6.36rad,[-p-k[3]])
cetz.draw.hobby((0.38, 0.91),(-0.01, 0.91),(-0.40, 0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:2.72rad)
cetz.draw.content((-0.79, 0.77),angle:2.72rad,[-p])
cetz.draw.hobby((-0.59, 0.75),(-0.93, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:3.44rad)
cetz.draw.content((0.70, 1.03),angle:3.44rad,[-p])
cetz.draw.hobby((0.89, 1.03),(0.54, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.28, 0.33),node2.pos,decoration:"arrow",angle:2.07rad)
cetz.draw.content((-0.38, 0.27),angle:2.07rad,[k[3]])
cetz.draw.hobby((-0.08, -0.09),(-0.31, 0.26),(-0.49, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, 0.50),node4.pos,decoration:"arrow",angle:-2.13rad)
cetz.draw.content((0.37, 0.43),angle:-2.13rad,[k[3]])
cetz.draw.hobby((0.48, 0.74),(0.31, 0.45),(0.13, 0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.24, 0.00),node5.pos,decoration:"arrow",angle:-1.56rad)
cetz.draw.content((0.36, 0.01),angle:-1.56rad,[q+k[3]])
cetz.draw.hobby((0.09, 0.21),(0.30, 0.01),(0.09, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding18f0=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.66))
node(node0.pos)
let node1= (pos:(-0.55, -0.89))
node(node1.pos)
let node2= (pos:(-0.59, 0.18))
node(node2.pos)
let node3= (pos:(0.72, 0.47))
node(node3.pos)
let node4= (pos:(-0.44, 0.46))
node(node4.pos)
let node5= (pos:(-0.48, -0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[-q+k[0]])
cetz.draw.hobby((-0.64, -0.97),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.82),node1.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.88),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.10),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.11, -0.03),angle:2.19rad,[-q])
cetz.draw.hobby((0.34, -0.51),(0.04, -0.04),(-0.31, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.58),node1.pos,decoration:"wave",angle:4.60rad)
cetz.draw.content((-0.66, -0.57),angle:4.60rad,[-q])
cetz.draw.hobby((-0.55, -0.30),(-0.59, -0.56),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.57rad)
cetz.draw.content((-0.75, -0.02),angle:3.57rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.11rad)
cetz.draw.content((0.96, 0.30),angle:2.11rad,[p-k[3]])
cetz.draw.hobby((0.82, 0.41),(1.00, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, 0.35),node3.pos,decoration:"coil",angle:0.21rad)
cetz.draw.content((0.07, 0.46),angle:0.21rad,[p])
cetz.draw.hobby((-0.48, 0.28),(0.05, 0.40),(0.57, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.07),node2.pos,decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.78, -0.10),angle:1.85rad,[k[3]])
cetz.draw.hobby((-0.55, -0.28),(-0.72, -0.08),(-0.68, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.75, 0.79),angle:1.08rad,[k[3]])
cetz.draw.hobby((0.71, 0.59),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((-0.81, 0.65),angle:5.52rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:-1.60rad)
cetz.draw.content((-0.22, 0.11),angle:-1.60rad,[-q+k[3]])
cetz.draw.hobby((-0.35, 0.43),(-0.28, 0.10),(-0.38, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding18f1=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.88))
node(node0.pos)
let node1= (pos:(-0.30, -0.67))
node(node1.pos)
let node2= (pos:(-0.76, 0.47))
node(node2.pos)
let node3= (pos:(0.36, 0.18))
node(node3.pos)
let node4= (pos:(0.71, -0.23))
node(node4.pos)
let node5= (pos:(0.64, 0.44))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.13, -0.81),node1.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.93),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.57),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((0.81, -0.59),angle:1.40rad,[-q])
cetz.draw.hobby((0.68, -0.84),(0.75, -0.57),(0.77, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.13),node1.pos,decoration:"wave",angle:4.01rad)
cetz.draw.content((0.03, -0.06),angle:4.01rad,[-q])
cetz.draw.hobby((0.50, 0.38),(0.11, -0.06),(-0.26, -0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.24rad)
cetz.draw.content((-0.77, 0.18),angle:4.24rad,[p-k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.75, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.71, 0.20),angle:2.87rad,[p-k[3]])
cetz.draw.hobby((0.47, 0.21),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.34),node3.pos,decoration:"coil",angle:-0.25rad)
cetz.draw.content((-0.18, 0.45),angle:-0.25rad,[p])
cetz.draw.hobby((-0.63, 0.50),(-0.18, 0.39),(0.27, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.00rad)
cetz.draw.content((0.72, 0.78),angle:1.00rad,[k[3]])
cetz.draw.hobby((0.65, 0.56),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.99, 0.68),angle:5.13rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.86, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.08),node4.pos,decoration:"arrow",angle:5.41rad)
cetz.draw.content((0.38, -0.15),angle:5.41rad,[k[3]])
cetz.draw.hobby((0.31, 0.11),(0.43, -0.12),(0.63, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:1.68rad)
cetz.draw.content((0.89, 0.14),angle:1.68rad,[-q+k[3]])
cetz.draw.hobby((0.79, -0.19),(0.83, 0.12),(0.73, 0.41),stroke:stroke,mark: (end: ">"))
})
let embedding18f2=cetz.canvas(length:50%,{
let node0= (pos:(0.43, -0.81))
node(node0.pos)
let node1= (pos:(-0.43, -0.81))
node(node1.pos)
let node2= (pos:(0.50, 0.79))
node(node2.pos)
let node3= (pos:(-0.50, 0.79))
node(node3.pos)
let node4= (pos:(-0.19, -0.01))
node(node4.pos)
let node5= (pos:(0.19, -0.01))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.96rad)
cetz.draw.content((0.75, -0.79),angle:5.96rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.55, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.68, -1.02),angle:0.33rad,[-q+k[0]])
cetz.draw.hobby((-0.51, -0.89),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.87),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.99),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.36, -0.89),(-0.00, -0.93),(-0.36, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.43),node4.pos,decoration:"wave",angle:2.23rad)
cetz.draw.content((0.04, -0.51),angle:2.23rad,[-q])
cetz.draw.hobby((0.32, -0.76),(0.07, -0.44),(-0.18, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, -0.43),node1.pos,decoration:"wave",angle:-2.24rad)
cetz.draw.content((-0.04, -0.51),angle:-2.24rad,[-q])
cetz.draw.hobby((0.18, -0.12),(-0.07, -0.44),(-0.32, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.83),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.95),angle:3.14rad,[p-k[3]])
cetz.draw.hobby((-0.41, 0.87),(0.00, 0.89),(0.41, 0.87),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:0.39rad)
cetz.draw.content((0.70, 1.01),angle:0.39rad,[p])
cetz.draw.hobby((0.57, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:5.89rad)
cetz.draw.content((-0.79, 0.79),angle:5.89rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.61, 0.78),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.40),node2.pos,decoration:"arrow",angle:1.21rad)
cetz.draw.content((0.50, 0.36),angle:1.21rad,[k[3]])
cetz.draw.hobby((0.29, 0.04),(0.44, 0.36),(0.54, 0.69),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.40),node4.pos,decoration:"arrow",angle:5.07rad)
cetz.draw.content((-0.50, 0.36),angle:5.07rad,[k[3]])
cetz.draw.hobby((-0.54, 0.70),(-0.44, 0.36),(-0.29, 0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.14),node5.pos,decoration:"arrow",angle:-0.01rad)
cetz.draw.content((0.00, 0.26),angle:-0.01rad,[-q+k[3]])
cetz.draw.hobby((-0.22, 0.07),(0.00, 0.20),(0.23, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding19i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.48))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.69),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.89, -0.72),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.64, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.11),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.86, -0.10),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.11),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.10),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.79, 0.19),angle:5.99rad,[-p-q-k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[-p-q-k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.16),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.40, 0.21),(0.00, 0.22),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.47),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.63, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.47),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.73rad)
cetz.draw.content((-1.08, 0.72),angle:1.73rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.57),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding19f0=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.71))
node(node0.pos)
let node1= (pos:(-0.37, -0.83))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.21))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.82),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.17, -0.94),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.16, -0.88),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.90, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.51),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.21, -0.43),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.37, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.70, 0.25),angle:5.90rad,[-p-k[3]])
cetz.draw.hobby((0.93, 0.09),(0.43, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((-0.78, 0.19),angle:1.14rad,[-p-k[3]])
cetz.draw.hobby((-0.76, 0.37),(-0.90, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:2.95rad)
cetz.draw.content((-0.22, 0.52),angle:2.95rad,[-p])
cetz.draw.hobby((0.23, 0.36),(-0.21, 0.46),(-0.65, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.31rad)
cetz.draw.content((0.05, 0.09),angle:1.31rad,[k[3]])
cetz.draw.hobby((0.11, -0.18),(0.10, 0.07),(0.23, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.80, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding19f1=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.74, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.22, -0.42),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.36),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.87, -0.14),angle:4.81rad,[-q])
cetz.draw.hobby((-0.82, 0.35),(-0.81, -0.12),(-0.74, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((0.98, 0.29),angle:5.20rad,[-p-k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.17rad)
cetz.draw.content((-0.69, -0.07),angle:0.17rad,[-p-k[3]])
cetz.draw.hobby((-0.52, 0.02),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:3.44rad)
cetz.draw.content((0.15, 0.44),angle:3.44rad,[-p])
cetz.draw.hobby((0.62, 0.50),(0.14, 0.37),(-0.34, 0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.01rad)
cetz.draw.content((-0.98, 0.68),angle:2.01rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.27, -0.10),node4.pos,decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.31, -0.21),angle:5.92rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.15),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.26, 0.43),angle:2.56rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.27, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding19f2=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.80))
node(node0.pos)
let node1= (pos:(-0.51, -0.79))
node(node1.pos)
let node2= (pos:(-0.51, 0.79))
node(node2.pos)
let node3= (pos:(0.52, 0.79))
node(node3.pos)
let node4= (pos:(0.36, -0.00))
node(node4.pos)
let node5= (pos:(-0.36, -0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.71, -1.01),angle:0.40rad,[-q+k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.83),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.95),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.87),(0.00, -0.89),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.40),node4.pos,decoration:"wave",angle:1.76rad)
cetz.draw.content((0.59, -0.38),angle:1.76rad,[-q])
cetz.draw.hobby((0.57, -0.71),(0.53, -0.38),(0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.38),angle:4.52rad,[-q])
cetz.draw.hobby((-0.44, -0.06),(-0.52, -0.38),(-0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.83),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, 0.95),angle:6.28rad,[-p-k[3]])
cetz.draw.hobby((0.42, 0.86),(0.00, 0.89),(-0.42, 0.86),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
cetz.draw.content((-0.80, 0.79),angle:2.74rad,[-p])
cetz.draw.hobby((-0.63, 0.78),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:3.55rad)
cetz.draw.content((0.71, 1.01),angle:3.55rad,[-p])
cetz.draw.hobby((0.88, 1.02),(0.58, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, 0.40),node2.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.58, 0.38),angle:1.76rad,[k[3]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, 0.40),node4.pos,decoration:"arrow",angle:-1.76rad)
cetz.draw.content((0.59, 0.38),angle:-1.76rad,[k[3]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.00),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.12),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.29, 0.06),(0.00, 0.06),(-0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding20f0=cetz.canvas(length:50%,{
let node0= (pos:(0.35, -0.61))
node(node0.pos)
let node1= (pos:(-0.35, -0.61))
node(node1.pos)
let node2= (pos:(0.56, 0.08))
node(node2.pos)
let node3= (pos:(-0.56, 0.08))
node(node3.pos)
let node4= (pos:(-0.59, 0.54))
node(node4.pos)
let node5= (pos:(0.59, 0.54))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.74, -0.70),angle:5.74rad,[-q+k[0]])
cetz.draw.hobby((0.95, -0.90),(0.47, -0.61),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.61, -0.91),angle:0.54rad,[-q+k[0]])
cetz.draw.hobby((-0.41, -0.71),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.66),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.78),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.30, -0.69),(-0.00, -0.72),(-0.30, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.05),node4.pos,decoration:"wave",angle:2.26rad)
cetz.draw.content((-0.22, -0.12),angle:2.26rad,[-q])
cetz.draw.hobby((0.21, -0.54),(-0.17, -0.08),(-0.54, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.04),node1.pos,decoration:"wave",angle:-2.26rad)
cetz.draw.content((0.22, -0.12),angle:-2.26rad,[-q])
cetz.draw.hobby((0.54, 0.39),(0.17, -0.08),(-0.21, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.09rad)
cetz.draw.content((0.80, 0.16),angle:6.09rad,[-p+q-k[3]])
cetz.draw.hobby((0.91, 0.08),(0.67, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.19rad)
cetz.draw.content((-0.76, -0.08),angle:0.19rad,[-p+q-k[3]])
cetz.draw.hobby((-0.65, 0.01),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.12),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.24),angle:3.14rad,[-p+q])
cetz.draw.hobby((0.46, 0.16),(0.00, 0.18),(-0.46, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, 0.32),node2.pos,decoration:"arrow",angle:-1.58rad)
cetz.draw.content((0.81, 0.32),angle:-1.58rad,[k[3]])
cetz.draw.hobby((0.67, 0.54),(0.75, 0.30),(0.65, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.69, 0.32),node4.pos,decoration:"arrow",angle:1.58rad)
cetz.draw.content((-0.81, 0.32),angle:1.58rad,[k[3]])
cetz.draw.hobby((-0.65, 0.07),(-0.75, 0.30),(-0.67, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.30rad)
cetz.draw.content((-0.88, 0.69),angle:2.30rad,[-q+k[3]])
cetz.draw.hobby((-0.70, 0.58),(-0.98, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.98rad)
cetz.draw.content((0.70, 0.85),angle:3.98rad,[-q+k[3]])
cetz.draw.hobby((0.89, 0.97),(0.61, 0.66),stroke:stroke,mark: (end: ">"))
})
let embedding21i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.65))
node(node0.pos)
let node1= (pos:(0.41, -0.63))
node(node1.pos)
let node2= (pos:(0.45, 0.15))
node(node2.pos)
let node3= (pos:(-0.45, 0.13))
node(node3.pos)
let node4= (pos:(0.38, 0.49))
node(node4.pos)
let node5= (pos:(-0.37, 0.54))
node(node5.pos)
edge(node1.pos,(0.00, -0.69),node0.pos,decoration:"arrow",angle:0.03rad)
cetz.draw.content((0.01, -0.81),angle:0.03rad,[q+k[0]])
cetz.draw.hobby((0.34, -0.71),(0.01, -0.75),(-0.33, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.72rad)
cetz.draw.content((0.77, -0.71),angle:5.72rad,[k[0]])
cetz.draw.hobby((0.95, -0.90),(0.52, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.53rad)
cetz.draw.content((-0.64, -0.93),angle:0.53rad,[k[0]])
cetz.draw.hobby((-0.46, -0.75),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.05, -0.14),node4.pos,decoration:"wave",angle:0.97rad)
cetz.draw.content((0.05, -0.21),angle:0.97rad,[q])
cetz.draw.hobby((-0.27, -0.57),(0.04, -0.11),(0.35, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.06, -0.07),node1.pos,decoration:"wave",angle:-0.99rad)
cetz.draw.content((0.16, -0.00),angle:-0.99rad,[q])
cetz.draw.hobby((-0.24, 0.46),(0.08, 0.00),(0.39, -0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.01, 0.09),node2.pos,decoration:"arrow",angle:3.16rad)
cetz.draw.content((-0.00, -0.03),angle:3.16rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.37, 0.06),(-0.00, 0.03),(0.37, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.27rad)
cetz.draw.content((0.75, 0.19),angle:-0.27rad,[p-q-k[3]])
cetz.draw.hobby((0.56, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.24rad)
cetz.draw.content((-0.70, -0.05),angle:0.24rad,[p-q-k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.54, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.05, 0.43),node2.pos,decoration:"arrow",angle:-0.43rad)
cetz.draw.content((0.10, 0.54),angle:-0.43rad,[k[3]])
cetz.draw.hobby((-0.27, 0.59),(0.10, 0.47),(0.42, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.06, 0.35),node4.pos,decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.11, 0.46),angle:0.41rad,[k[3]])
cetz.draw.hobby((-0.41, 0.23),(-0.08, 0.41),(0.28, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.61, 0.84),angle:0.68rad,[q+k[3]])
cetz.draw.hobby((0.42, 0.60),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.65rad)
cetz.draw.content((-0.76, 0.67),angle:5.65rad,[q+k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.49, 0.55),stroke:stroke,mark: (end: ">"))
})
let embedding21f0=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.92, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.64),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.76),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.49, -0.69),(0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.54),(0.86, -0.09),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.44rad)
cetz.draw.content((-0.72, -0.04),angle:3.44rad,[p+2 q-2 k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[p+2 q-2 k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.16),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.28),angle:0.00rad,[p+2 q-k[3]])
cetz.draw.hobby((-0.40, 0.21),(0.00, 0.22),(0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.67rad)
cetz.draw.content((-0.60, 0.48),angle:-0.67rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.62, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.66rad)
cetz.draw.content((0.60, 0.48),angle:0.66rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((0.84, 0.76),angle:1.41rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.60),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding22i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.28, -0.45))
node(node0.pos)
let node1= (pos:(0.28, -0.45))
node(node1.pos)
let node2= (pos:(-0.18, 0.86))
node(node2.pos)
let node3= (pos:(0.21, 0.86))
node(node3.pos)
let node4= (pos:(0.47, 0.43))
node(node4.pos)
let node5= (pos:(-0.46, 0.43))
node(node5.pos)
edge(node1.pos,(0.00, -0.48),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.60),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.24, -0.52),(0.00, -0.54),(-0.24, -0.52),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.80, -0.80),decoration:"arrow",angle:5.69rad)
cetz.draw.content((0.61, -0.53),angle:5.69rad,[k[0]])
cetz.draw.hobby((0.75, -0.69),(0.40, -0.46),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.80),decoration:"arrow",angle:0.59rad)
cetz.draw.content((-0.47, -0.73),angle:0.59rad,[k[0]])
cetz.draw.hobby((-0.33, -0.56),(-0.68, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.01),node4.pos,decoration:"wave",angle:0.86rad)
cetz.draw.content((0.20, -0.09),angle:0.86rad,[q])
cetz.draw.hobby((-0.16, -0.41),(0.15, -0.05),(0.44, 0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.10, -0.01),node1.pos,decoration:"wave",angle:5.41rad)
cetz.draw.content((-0.19, -0.08),angle:5.41rad,[q])
cetz.draw.hobby((-0.44, 0.31),(-0.14, -0.05),(0.16, -0.40),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.02, 1.00),node2.pos,decoration:"arrow",angle:6.27rad)
cetz.draw.content((0.02, 1.12),angle:6.27rad,[k[2]])
cetz.draw.hobby((0.24, 0.93),(0.02, 1.06),(-0.21, 0.94),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.02, 0.77),node3.pos,decoration:"coil",angle:6.28rad)
cetz.draw.content((0.02, 0.65),angle:6.28rad,[p-q+k[2]])
cetz.draw.hobby((-0.19, 0.78),(0.02, 0.71),(0.22, 0.78),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.36, 0.66),node2.pos,decoration:"arrow",angle:0.99rad)
cetz.draw.content((-0.46, 0.72),angle:0.99rad,[p-q])
cetz.draw.hobby((-0.50, 0.50),(-0.40, 0.70),(-0.26, 0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, 0.66),node4.pos,decoration:"arrow",angle:-1.03rad)
cetz.draw.content((0.48, 0.72),angle:-1.03rad,[p-q])
cetz.draw.hobby((0.29, 0.86),(0.43, 0.69),(0.52, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.80, 0.80),decoration:"arrow",angle:0.85rad)
cetz.draw.content((0.55, 0.69),angle:0.85rad,[p])
cetz.draw.hobby((0.49, 0.54),(0.69, 0.76),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, 0.80),decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.72, 0.54),angle:5.46rad,[p])
cetz.draw.hobby((-0.78, 0.68),(-0.57, 0.47),stroke:stroke,mark: (end: ">"))
})
let embedding23i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, -0.61))
node(node0.pos)
let node1= (pos:(0.35, -0.61))
node(node1.pos)
let node2= (pos:(-0.56, 0.08))
node(node2.pos)
let node3= (pos:(0.56, 0.09))
node(node3.pos)
let node4= (pos:(0.59, 0.54))
node(node4.pos)
let node5= (pos:(-0.59, 0.54))
node(node5.pos)
edge(node1.pos,(-0.00, -0.66),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.78),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.68),(-0.00, -0.72),(-0.30, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.74rad)
cetz.draw.content((0.74, -0.70),angle:5.74rad,[k[0]])
cetz.draw.hobby((0.95, -0.90),(0.47, -0.61),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.55rad)
cetz.draw.content((-0.61, -0.91),angle:0.55rad,[k[0]])
cetz.draw.hobby((-0.41, -0.71),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.04),node4.pos,decoration:"wave",angle:0.89rad)
cetz.draw.content((0.22, -0.12),angle:0.89rad,[q])
cetz.draw.hobby((-0.21, -0.53),(0.17, -0.08),(0.54, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.05),node1.pos,decoration:"wave",angle:5.40rad)
cetz.draw.content((-0.22, -0.12),angle:5.40rad,[q])
cetz.draw.hobby((-0.54, 0.39),(-0.17, -0.08),(0.21, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.12),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, 0.24),angle:6.28rad,[-p+q])
cetz.draw.hobby((0.46, 0.16),(-0.00, 0.18),(-0.46, 0.16),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.95rad)
cetz.draw.content((-0.76, -0.08),angle:-2.95rad,[-p+q+k[3]])
cetz.draw.hobby((-0.65, 0.01),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.95rad)
cetz.draw.content((0.80, 0.16),angle:2.95rad,[-p+q+k[3]])
cetz.draw.hobby((0.91, 0.08),(0.67, 0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.69, 0.32),node2.pos,decoration:"arrow",angle:4.73rad)
cetz.draw.content((-0.81, 0.32),angle:4.73rad,[k[3]])
cetz.draw.hobby((-0.67, 0.54),(-0.75, 0.30),(-0.65, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, 0.32),node4.pos,decoration:"arrow",angle:1.55rad)
cetz.draw.content((0.81, 0.32),angle:1.55rad,[k[3]])
cetz.draw.hobby((0.65, 0.08),(0.75, 0.31),(0.67, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.84rad)
cetz.draw.content((0.70, 0.85),angle:0.84rad,[q+k[3]])
cetz.draw.hobby((0.61, 0.66),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.45rad)
cetz.draw.content((-0.88, 0.69),angle:5.45rad,[q+k[3]])
cetz.draw.hobby((-0.98, 0.89),(-0.70, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding24i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.86))
node(node0.pos)
let node1= (pos:(0.51, -0.86))
node(node1.pos)
let node2= (pos:(0.93, 0.45))
node(node2.pos)
let node3= (pos:(-0.93, 0.45))
node(node3.pos)
let node4= (pos:(-0.39, -0.11))
node(node4.pos)
let node5= (pos:(0.39, -0.11))
node(node5.pos)
edge(node1.pos,(-0.00, -0.89),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -1.01),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.93),(-0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.79, -0.81),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.49),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((-0.59, -0.47),angle:1.40rad,[q])
cetz.draw.hobby((-0.57, -0.77),(-0.53, -0.47),(-0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.49),node1.pos,decoration:"wave",angle:-1.41rad)
cetz.draw.content((0.59, -0.47),angle:-1.41rad,[q])
cetz.draw.hobby((0.47, -0.17),(0.53, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((1.08, 0.24),angle:4.88rad,[p-2 k[3]])
cetz.draw.hobby((1.04, 0.11),(1.00, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((-0.84, 0.21),angle:1.41rad,[p-2 k[3]])
cetz.draw.hobby((-0.88, 0.34),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.44rad)
cetz.draw.content((0.84, 0.74),angle:1.44rad,[p-k[3]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.85rad)
cetz.draw.content((-1.08, 0.71),angle:4.85rad,[p-k[3]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.65, 0.19),node2.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((0.56, 0.28),angle:0.81rad,[k[3]])
cetz.draw.hobby((0.39, -0.01),(0.60, 0.23),(0.83, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, 0.19),node4.pos,decoration:"arrow",angle:-0.80rad)
cetz.draw.content((-0.56, 0.28),angle:-0.80rad,[k[3]])
cetz.draw.hobby((-0.83, 0.44),(-0.60, 0.23),(-0.39, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.09),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.03),angle:-0.00rad,[q+k[3]])
cetz.draw.hobby((-0.31, -0.05),(0.00, -0.03),(0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding24i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.83))
node(node0.pos)
let node1= (pos:(0.67, -0.70))
node(node1.pos)
let node2= (pos:(-0.78, 0.49))
node(node2.pos)
let node3= (pos:(0.32, 0.27))
node(node3.pos)
let node4= (pos:(0.19, -0.21))
node(node4.pos)
let node5= (pos:(0.84, 0.36))
node(node5.pos)
edge(node1.pos,(0.16, -0.82),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.93),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.88),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.65, -1.03),angle:0.26rad,[k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.52),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.20, -0.44),angle:0.84rad,[q])
cetz.draw.hobby((-0.36, -0.72),(-0.15, -0.46),(0.09, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.81, -0.20),node1.pos,decoration:"wave",angle:-1.73rad)
cetz.draw.content((0.93, -0.22),angle:-1.73rad,[q])
cetz.draw.hobby((0.90, 0.25),(0.87, -0.19),(0.77, -0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((-0.78, 0.19),angle:4.28rad,[p-2 k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.70, 0.25),angle:2.76rad,[p-2 k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:-0.19rad)
cetz.draw.content((-0.22, 0.52),angle:-0.19rad,[p-k[3]])
cetz.draw.hobby((-0.66, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.33rad)
cetz.draw.content((0.80, 0.71),angle:1.33rad,[k[3]])
cetz.draw.hobby((0.81, 0.47),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-1.00, 0.70),angle:5.13rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.87, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, 0.06),node4.pos,decoration:"arrow",angle:4.46rad)
cetz.draw.content((0.05, 0.09),angle:4.46rad,[k[3]])
cetz.draw.hobby((0.23, 0.28),(0.10, 0.07),(0.12, -0.18),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:0.73rad)
cetz.draw.content((0.65, -0.03),angle:0.73rad,[q+k[3]])
cetz.draw.hobby((0.30, -0.22),(0.59, -0.00),(0.84, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding24i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.78))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.02, -0.06))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.74, -0.78),angle:5.93rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.87, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.74, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.08, -0.09),(0.27, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.32rad)
cetz.draw.content((-0.69, -0.07),angle:3.32rad,[p-2 k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.51, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.06rad)
cetz.draw.content((0.98, 0.29),angle:2.06rad,[p-2 k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:0.29rad)
cetz.draw.content((0.15, 0.44),angle:0.29rad,[p-k[3]])
cetz.draw.hobby((-0.34, 0.21),(0.14, 0.37),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.09),node2.pos,decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.31, -0.21),angle:2.78rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.26, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.64, 0.51),(-0.27, 0.37),(-0.00, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding24i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.83))
node(node0.pos)
let node1= (pos:(0.63, -0.68))
node(node1.pos)
let node2= (pos:(-0.10, 0.53))
node(node2.pos)
let node3= (pos:(-0.67, 0.15))
node(node3.pos)
let node4= (pos:(-0.05, -0.13))
node(node4.pos)
let node5= (pos:(0.72, 0.38))
node(node5.pos)
edge(node1.pos,(0.12, -0.80),node0.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.86),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((0.89, -0.75),angle:5.57rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.23, -0.49),node4.pos,decoration:"wave",angle:1.09rad)
cetz.draw.content((-0.13, -0.55),angle:1.09rad,[q])
cetz.draw.hobby((-0.32, -0.79),(-0.17, -0.51),(-0.03, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, -0.16),node1.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((0.83, -0.17),angle:-1.66rad,[q])
cetz.draw.hobby((0.79, 0.28),(0.77, -0.16),(0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.39),node2.pos,decoration:"arrow",angle:3.73rad)
cetz.draw.content((-0.48, 0.49),angle:3.73rad,[p-2 k[3]])
cetz.draw.hobby((-0.67, 0.24),(-0.45, 0.44),(-0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.45rad)
cetz.draw.content((0.50, 0.37),angle:-0.45rad,[p-k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.41rad)
cetz.draw.content((-0.78, -0.04),angle:0.41rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.02),(-0.73, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.75, 0.74),angle:1.15rad,[k[3]])
cetz.draw.hobby((0.71, 0.50),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.60, 0.66),angle:5.81rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, -0.02),node4.pos,decoration:"arrow",angle:5.86rad)
cetz.draw.content((-0.42, -0.13),angle:5.86rad,[k[3]])
cetz.draw.hobby((-0.64, 0.06),(-0.39, -0.07),(-0.13, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.28, 0.23),angle:0.59rad,[q+k[3]])
cetz.draw.hobby((-0.00, -0.03),(0.30, 0.18),(0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding24i4=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.68))
node(node0.pos)
let node1= (pos:(0.41, -0.83))
node(node1.pos)
let node2= (pos:(0.67, 0.15))
node(node2.pos)
let node3= (pos:(0.10, 0.53))
node(node3.pos)
let node4= (pos:(-0.72, 0.38))
node(node4.pos)
let node5= (pos:(0.05, -0.13))
node(node5.pos)
edge(node1.pos,(-0.12, -0.80),node0.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.12, -0.86),(-0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((-0.74, -0.93),angle:0.71rad,[k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.71, -0.16),node4.pos,decoration:"wave",angle:1.66rad)
cetz.draw.content((-0.83, -0.17),angle:1.66rad,[q])
cetz.draw.hobby((-0.71, -0.59),(-0.77, -0.16),(-0.78, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, -0.49),node1.pos,decoration:"wave",angle:-1.10rad)
cetz.draw.content((0.35, -0.44),angle:-1.10rad,[q])
cetz.draw.hobby((0.14, -0.17),(0.29, -0.45),(0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, 0.40),node2.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((0.48, 0.50),angle:2.56rad,[p-2 k[3]])
cetz.draw.hobby((0.18, 0.57),(0.45, 0.44),(0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.42rad)
cetz.draw.content((0.88, 0.18),angle:-0.42rad,[p-k[3]])
cetz.draw.hobby((0.78, 0.16),(0.93, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.45rad)
cetz.draw.content((-0.40, 0.16),angle:0.45rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.01),(0.03, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, -0.01),node2.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((0.43, -0.12),angle:0.43rad,[k[3]])
cetz.draw.hobby((0.14, -0.17),(0.40, -0.07),(0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.49, 0.87),angle:0.48rad,[k[3]])
cetz.draw.hobby((0.16, 0.63),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.97, 0.64),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.82, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.13),node5.pos,decoration:"arrow",angle:-0.59rad)
cetz.draw.content((-0.28, 0.23),angle:-0.59rad,[q+k[3]])
cetz.draw.hobby((-0.61, 0.38),(-0.30, 0.17),(0.01, -0.03),stroke:stroke,mark: (end: ">"))
})
let embedding24f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.62))
node(node0.pos)
let node1= (pos:(-0.57, -0.62))
node(node1.pos)
let node2= (pos:(0.35, 0.15))
node(node2.pos)
let node3= (pos:(-0.34, 0.15))
node(node3.pos)
let node4= (pos:(0.65, 0.49))
node(node4.pos)
let node5= (pos:(-0.65, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.87, -0.72),angle:5.56rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.73rad)
cetz.draw.content((-0.71, -0.90),angle:0.73rad,[-q+k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.65),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.77),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.46, -0.69),(0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.09),node4.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.78, -0.10),angle:1.50rad,[-q])
cetz.draw.hobby((0.66, -0.53),(0.72, -0.07),(0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.09),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[-q])
cetz.draw.hobby((-0.72, 0.38),(-0.72, -0.07),(-0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.08),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.04),angle:3.14rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.30, 0.07),(0.00, 0.02),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.22rad)
cetz.draw.content((0.70, 0.19),angle:-0.22rad,[p+q-k[3]])
cetz.draw.hobby((0.46, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.22rad)
cetz.draw.content((-0.65, -0.04),angle:0.22rad,[p+q-k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.43, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.13, 0.40),node2.pos,decoration:"arrow",angle:-0.32rad)
cetz.draw.content((-0.10, 0.52),angle:-0.32rad,[k[3]])
cetz.draw.hobby((-0.54, 0.54),(-0.10, 0.45),(0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.40),node4.pos,decoration:"arrow",angle:0.32rad)
cetz.draw.content((0.10, 0.52),angle:0.32rad,[k[3]])
cetz.draw.hobby((-0.29, 0.26),(0.10, 0.45),(0.54, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.97rad)
cetz.draw.content((0.73, 0.81),angle:0.97rad,[-q+k[3]])
cetz.draw.hobby((0.66, 0.60),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.92, 0.68),angle:5.32rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.75, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding25i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.86))
node(node0.pos)
let node1= (pos:(0.51, -0.86))
node(node1.pos)
let node2= (pos:(0.93, 0.45))
node(node2.pos)
let node3= (pos:(-0.93, 0.45))
node(node3.pos)
let node4= (pos:(-0.39, -0.11))
node(node4.pos)
let node5= (pos:(0.39, -0.12))
node(node5.pos)
edge(node1.pos,(0.00, -0.89),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -1.01),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.79, -0.81),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.49),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((-0.59, -0.47),angle:1.40rad,[q])
cetz.draw.hobby((-0.57, -0.78),(-0.53, -0.47),(-0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.49),node1.pos,decoration:"wave",angle:-1.40rad)
cetz.draw.content((0.59, -0.47),angle:-1.40rad,[q])
cetz.draw.hobby((0.47, -0.17),(0.53, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((1.08, 0.24),angle:4.88rad,[k[2]])
cetz.draw.hobby((1.04, 0.11),(1.00, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((-0.84, 0.21),angle:1.41rad,[k[2]])
cetz.draw.hobby((-0.88, 0.34),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.44rad)
cetz.draw.content((0.84, 0.74),angle:1.44rad,[p+k[2]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.85rad)
cetz.draw.content((-1.08, 0.71),angle:4.85rad,[p+k[2]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.65, 0.19),node2.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((0.56, 0.27),angle:0.81rad,[p])
cetz.draw.hobby((0.39, -0.02),(0.60, 0.22),(0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, 0.19),node4.pos,decoration:"arrow",angle:-0.81rad)
cetz.draw.content((-0.56, 0.27),angle:-0.81rad,[p])
cetz.draw.hobby((-0.83, 0.44),(-0.60, 0.22),(-0.39, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.10),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.02),angle:-0.00rad,[p+q])
cetz.draw.hobby((-0.31, -0.05),(0.00, -0.04),(0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding25i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.64))
node(node0.pos)
let node1= (pos:(0.40, -0.76))
node(node1.pos)
let node2= (pos:(0.55, 0.44))
node(node2.pos)
let node3= (pos:(0.90, 0.77))
node(node3.pos)
let node4= (pos:(-0.75, 0.40))
node(node4.pos)
let node5= (pos:(0.02, 0.00))
node(node5.pos)
edge(node1.pos,(-0.13, -0.74),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.86),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.82),(-0.13, -0.80),(-0.55, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.75, -0.77),angle:5.90rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.74, -0.91),angle:0.78rad,[k[0]])
cetz.draw.hobby((-0.67, -0.76),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.85, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.72, -0.55),(-0.79, -0.13),(-0.81, 0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.23, -0.39),node1.pos,decoration:"wave",angle:-1.11rad)
cetz.draw.content((0.33, -0.33),angle:-1.11rad,[q])
cetz.draw.hobby((0.12, -0.04),(0.27, -0.35),(0.42, -0.66),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.85, 0.49),node2.pos,decoration:"arrow",angle:0.80rad)
cetz.draw.content((0.93, 0.41),angle:0.80rad,[k[2]])
cetz.draw.hobby((0.98, 0.72),(0.88, 0.44),(0.60, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.62, 0.72),node3.pos,decoration:"coil",angle:0.74rad)
cetz.draw.content((0.54, 0.81),angle:0.74rad,[p+k[2]])
cetz.draw.hobby((0.48, 0.49),(0.58, 0.76),(0.85, 0.84),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.29, 0.22),node2.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.21, 0.31),angle:0.69rad,[p])
cetz.draw.hobby((0.04, 0.09),(0.25, 0.27),(0.46, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.16rad)
cetz.draw.content((0.84, 0.93),angle:1.16rad,[p])
cetz.draw.hobby((0.88, 0.88),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.11rad)
cetz.draw.content((-0.98, 0.65),angle:5.11rad,[p])
cetz.draw.hobby((-1.02, 0.88),(-0.84, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.37, 0.22),node5.pos,decoration:"arrow",angle:-0.48rad)
cetz.draw.content((-0.31, 0.33),angle:-0.48rad,[p+q])
cetz.draw.hobby((-0.64, 0.42),(-0.33, 0.27),(-0.02, 0.10),stroke:stroke,mark: (end: ">"))
})
let embedding25i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.64))
node(node1.pos)
let node2= (pos:(-0.85, 0.80))
node(node2.pos)
let node3= (pos:(-0.50, 0.48))
node(node3.pos)
let node4= (pos:(-0.01, 0.01))
node(node4.pos)
let node5= (pos:(0.76, 0.40))
node(node5.pos)
edge(node1.pos,(0.13, -0.73),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.14, -0.85),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.73),(0.13, -0.79),(-0.29, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.91, -0.74),angle:5.50rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.76, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.65, -0.99),angle:0.39rad,[k[0]])
cetz.draw.hobby((-0.47, -0.85),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.38),node4.pos,decoration:"wave",angle:1.10rad)
cetz.draw.content((-0.33, -0.32),angle:1.10rad,[q])
cetz.draw.hobby((-0.42, -0.65),(-0.27, -0.34),(-0.10, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.74, -0.13),node1.pos,decoration:"wave",angle:-1.68rad)
cetz.draw.content((0.85, -0.14),angle:-1.68rad,[q])
cetz.draw.hobby((0.82, 0.29),(0.80, -0.13),(0.73, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.79, 0.53),node2.pos,decoration:"arrow",angle:5.50rad)
cetz.draw.content((-0.87, 0.45),angle:5.50rad,[k[2]])
cetz.draw.hobby((-0.55, 0.40),(-0.82, 0.48),(-0.92, 0.75),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.57, 0.76),node3.pos,decoration:"coil",angle:-0.72rad)
cetz.draw.content((-0.49, 0.85),angle:-0.72rad,[p+k[2]])
cetz.draw.hobby((-0.80, 0.88),(-0.52, 0.80),(-0.43, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.18rad)
cetz.draw.content((0.77, 0.74),angle:1.18rad,[p])
cetz.draw.hobby((0.74, 0.51),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.37rad)
cetz.draw.content((-1.02, 0.83),angle:5.37rad,[p])
cetz.draw.hobby((-0.99, 0.88),(-0.96, 0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.25, 0.24),node4.pos,decoration:"arrow",angle:-0.76rad)
cetz.draw.content((-0.17, 0.33),angle:-0.76rad,[p])
cetz.draw.hobby((-0.41, 0.48),(-0.21, 0.29),(-0.01, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.38, 0.22),node5.pos,decoration:"arrow",angle:0.47rad)
cetz.draw.content((0.33, 0.33),angle:0.47rad,[p+q])
cetz.draw.hobby((0.04, 0.10),(0.34, 0.27),(0.65, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding25f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.56))
node(node0.pos)
let node1= (pos:(-0.59, -0.56))
node(node1.pos)
let node2= (pos:(-0.25, 0.81))
node(node2.pos)
let node3= (pos:(0.27, 0.81))
node(node3.pos)
let node4= (pos:(0.84, 0.52))
node(node4.pos)
let node5= (pos:(-0.84, 0.52))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.47rad)
cetz.draw.content((0.88, -0.70),angle:5.47rad,[-q+k[0]])
cetz.draw.hobby((0.98, -0.89),(0.70, -0.60),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.71, -0.86),angle:0.81rad,[-q+k[0]])
cetz.draw.hobby((-0.61, -0.68),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.58),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.70),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.74, -0.04),node4.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.85, -0.06),angle:1.34rad,[-q])
cetz.draw.hobby((0.68, -0.48),(0.80, -0.04),(0.89, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.73, -0.04),node1.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.85, -0.06),angle:4.94rad,[-q])
cetz.draw.hobby((-0.88, 0.40),(-0.79, -0.04),(-0.68, -0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.98),node2.pos,decoration:"arrow",angle:6.29rad)
cetz.draw.content((0.01, 1.10),angle:6.29rad,[k[2]])
cetz.draw.hobby((0.28, 0.91),(0.01, 1.04),(-0.26, 0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.01, 0.68),node3.pos,decoration:"coil",angle:0.01rad)
cetz.draw.content((0.01, 0.56),angle:0.01rad,[p+q+k[2]])
cetz.draw.hobby((-0.25, 0.72),(0.01, 0.62),(0.27, 0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.56, 0.67),node2.pos,decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.61, 0.78),angle:0.46rad,[p+q])
cetz.draw.hobby((-0.81, 0.60),(-0.58, 0.73),(-0.33, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.68),node4.pos,decoration:"arrow",angle:-0.49rad)
cetz.draw.content((0.63, 0.78),angle:-0.49rad,[p+q])
cetz.draw.hobby((0.35, 0.85),(0.60, 0.74),(0.82, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.26rad)
cetz.draw.content((0.81, 0.79),angle:1.26rad,[p])
cetz.draw.hobby((0.82, 0.63),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.04rad)
cetz.draw.content((-1.03, 0.72),angle:5.04rad,[p])
cetz.draw.hobby((-1.02, 0.89),(-0.93, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding26i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.78))
node(node0.pos)
let node1= (pos:(0.65, -0.67))
node(node1.pos)
let node2= (pos:(-0.75, 0.47))
node(node2.pos)
let node3= (pos:(0.43, 0.10))
node(node3.pos)
let node4= (pos:(0.03, -0.06))
node(node4.pos)
let node5= (pos:(0.75, 0.46))
node(node5.pos)
edge(node1.pos,(0.13, -0.77),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.14, -0.89),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.75),(0.14, -0.83),(-0.30, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.91, -0.75),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.77, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.35rad)
cetz.draw.content((-0.66, -1.00),angle:0.35rad,[k[0]])
cetz.draw.hobby((-0.48, -0.87),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.42),node4.pos,decoration:"wave",angle:1.03rad)
cetz.draw.content((-0.32, -0.36),angle:1.03rad,[q])
cetz.draw.hobby((-0.42, -0.68),(-0.26, -0.38),(-0.07, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, -0.13),node1.pos,decoration:"wave",angle:-1.67rad)
cetz.draw.content((0.88, -0.14),angle:-1.67rad,[q])
cetz.draw.hobby((0.82, 0.35),(0.82, -0.11),(0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.19, 0.32),node2.pos,decoration:"arrow",angle:5.99rad)
cetz.draw.content((-0.15, 0.44),angle:5.99rad,[-p])
cetz.draw.hobby((0.33, 0.20),(-0.14, 0.37),(-0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.06rad)
cetz.draw.content((-0.77, 0.18),angle:-2.06rad,[-p+k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.97rad)
cetz.draw.content((0.73, 0.17),angle:2.97rad,[-p+k[3]])
cetz.draw.hobby((0.91, 0.08),(0.53, 0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.99, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, -0.10),node4.pos,decoration:"arrow",angle:-2.77rad)
cetz.draw.content((0.32, -0.21),angle:-2.77rad,[k[3]])
cetz.draw.hobby((0.47, 0.03),(0.30, -0.16),(0.05, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.34),node5.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((0.28, 0.44),angle:0.58rad,[q+k[3]])
cetz.draw.hobby((0.01, 0.06),(0.28, 0.37),(0.65, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding26i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.51, -0.79))
node(node1.pos)
let node2= (pos:(0.52, 0.80))
node(node2.pos)
let node3= (pos:(-0.51, 0.80))
node(node3.pos)
let node4= (pos:(-0.36, 0.00))
node(node4.pos)
let node5= (pos:(0.36, 0.00))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.95),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.86),(0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.71, -1.01),angle:0.41rad,[k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node4.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((-0.58, -0.37),angle:1.38rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((0.59, -0.38),angle:-1.38rad,[q])
cetz.draw.hobby((0.44, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:6.68rad)
cetz.draw.content((0.71, 1.01),angle:6.68rad,[-p])
cetz.draw.hobby((0.88, 1.02),(0.58, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.89rad)
cetz.draw.content((-0.80, 0.79),angle:5.89rad,[-p])
cetz.draw.hobby((-0.63, 0.78),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.83),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.95),angle:3.14rad,[-p+k[3]])
cetz.draw.hobby((0.42, 0.87),(0.00, 0.89),(-0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, 0.40),node2.pos,decoration:"arrow",angle:1.38rad)
cetz.draw.content((0.58, 0.38),angle:1.38rad,[k[3]])
cetz.draw.hobby((0.44, 0.06),(0.52, 0.38),(0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.47, 0.41),node4.pos,decoration:"arrow",angle:4.90rad)
cetz.draw.content((-0.59, 0.38),angle:4.90rad,[k[3]])
cetz.draw.hobby((-0.57, 0.71),(-0.52, 0.38),(-0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.00),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.12),angle:-0.00rad,[q+k[3]])
cetz.draw.hobby((-0.29, 0.06),(0.00, 0.06),(0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding26i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.78))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.03, -0.06))
node(node5.pos)
edge(node1.pos,(-0.13, -0.77),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.74, -0.78),angle:5.93rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.76rad)
cetz.draw.content((-0.74, -0.92),angle:0.76rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.87, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.74, -0.57),(-0.82, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.07, -0.09),(0.26, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.19, 0.33),node2.pos,decoration:"arrow",angle:6.58rad)
cetz.draw.content((0.15, 0.44),angle:6.58rad,[-p])
cetz.draw.hobby((0.62, 0.50),(0.14, 0.37),(-0.33, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.97rad)
cetz.draw.content((-0.69, -0.07),angle:-2.97rad,[-p+k[3]])
cetz.draw.hobby((-0.51, 0.03),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.06rad)
cetz.draw.content((0.98, 0.29),angle:2.06rad,[-p+k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.10),node2.pos,decoration:"arrow",angle:2.77rad)
cetz.draw.content((-0.31, -0.21),angle:2.77rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.27, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.65, 0.51),(-0.27, 0.36),(-0.01, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding26f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.64),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.76),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.49, -0.68),(0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.54),(0.86, -0.09),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.16),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, 0.28),angle:6.28rad,[-p-q])
cetz.draw.hobby((0.40, 0.22),(0.00, 0.22),(-0.40, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.84rad)
cetz.draw.content((-0.72, -0.04),angle:-2.84rad,[-p-q+k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[-p-q+k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.66rad)
cetz.draw.content((-0.60, 0.48),angle:-0.66rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.62, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.66rad)
cetz.draw.content((0.60, 0.48),angle:0.66rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding27i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.92))
node(node0.pos)
let node1= (pos:(0.52, -0.92))
node(node1.pos)
let node2= (pos:(0.14, 0.46))
node(node2.pos)
let node3= (pos:(-0.14, 0.46))
node(node3.pos)
let node4= (pos:(-0.31, -0.24))
node(node4.pos)
let node5= (pos:(0.32, -0.23))
node(node5.pos)
edge(node1.pos,(0.00, -0.96),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.08),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.99),(0.00, -1.02),(-0.42, -0.99),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.12rad)
cetz.draw.content((0.78, -0.84),angle:6.12rad,[k[0]])
cetz.draw.hobby((0.91, -0.92),(0.62, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.16rad)
cetz.draw.content((-0.74, -1.08),angle:0.16rad,[k[0]])
cetz.draw.hobby((-0.60, -0.99),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.45, -0.58),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((-0.56, -0.55),angle:1.29rad,[q])
cetz.draw.hobby((-0.56, -0.84),(-0.50, -0.55),(-0.39, -0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, -0.58),node1.pos,decoration:"wave",angle:-1.30rad)
cetz.draw.content((0.57, -0.55),angle:-1.30rad,[q])
cetz.draw.hobby((0.41, -0.27),(0.51, -0.55),(0.57, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.63, 0.34),angle:5.79rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.94, 0.10),(0.26, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.51, 0.13),angle:0.50rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.20, 0.36),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:2.70rad)
cetz.draw.content((-0.48, 0.62),angle:2.70rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.03, 0.45),(-0.93, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:3.58rad)
cetz.draw.content((0.38, 0.84),angle:3.58rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.88, 1.01),(-0.08, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.28, 0.14),node2.pos,decoration:"arrow",angle:1.82rad)
cetz.draw.content((0.40, 0.17),angle:1.82rad,[k[3]])
cetz.draw.hobby((0.38, -0.16),(0.34, 0.14),(0.23, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.28, 0.13),node4.pos,decoration:"arrow",angle:4.48rad)
cetz.draw.content((-0.40, 0.16),angle:4.48rad,[k[3]])
cetz.draw.hobby((-0.23, 0.43),(-0.34, 0.14),(-0.37, -0.16),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.01, -0.27),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.01, -0.39),angle:0.00rad,[q+k[3]])
cetz.draw.hobby((-0.25, -0.31),(0.01, -0.33),(0.27, -0.30),stroke:stroke,mark: (end: ">"))
})
let embedding27i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.89))
node(node0.pos)
let node1= (pos:(0.36, -0.66))
node(node1.pos)
let node2= (pos:(0.71, 0.47))
node(node2.pos)
let node3= (pos:(-0.59, 0.19))
node(node3.pos)
let node4= (pos:(-0.48, -0.25))
node(node4.pos)
let node5= (pos:(-0.44, 0.46))
node(node5.pos)
edge(node1.pos,(-0.08, -0.81),node0.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.87),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.48, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.58),node4.pos,decoration:"wave",angle:1.47rad)
cetz.draw.content((-0.65, -0.57),angle:1.47rad,[q])
cetz.draw.hobby((-0.61, -0.83),(-0.59, -0.56),(-0.55, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.01, -0.10),node1.pos,decoration:"wave",angle:-0.95rad)
cetz.draw.content((0.11, -0.03),angle:-0.95rad,[q])
cetz.draw.hobby((-0.31, 0.40),(0.04, -0.04),(0.34, -0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.26rad)
cetz.draw.content((0.96, 0.30),angle:5.26rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((1.00, 0.12),(0.82, 0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.75, -0.01),angle:0.44rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.66, 0.09),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, 0.35),node3.pos,decoration:"coil",angle:3.35rad)
cetz.draw.content((0.06, 0.47),angle:3.35rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.57, 0.51),(0.05, 0.40),(-0.48, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.81, 0.65),angle:2.38rad,[k[3]])
cetz.draw.hobby((-0.56, 0.49),(-0.97, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.22rad)
cetz.draw.content((0.75, 0.79),angle:4.22rad,[k[3]])
cetz.draw.hobby((0.90, 0.94),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.66, -0.07),node4.pos,decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.78, -0.10),angle:4.99rad,[k[3]])
cetz.draw.hobby((-0.68, 0.18),(-0.72, -0.08),(-0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.22, 0.10),angle:1.53rad,[q+k[3]])
cetz.draw.hobby((-0.38, -0.22),(-0.28, 0.10),(-0.35, 0.43),stroke:stroke,mark: (end: ">"))
})
let embedding27i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.67))
node(node0.pos)
let node1= (pos:(0.60, -0.88))
node(node1.pos)
let node2= (pos:(0.36, 0.18))
node(node2.pos)
let node3= (pos:(-0.76, 0.47))
node(node3.pos)
let node4= (pos:(0.64, 0.44))
node(node4.pos)
let node5= (pos:(0.71, -0.23))
node(node5.pos)
edge(node1.pos,(0.14, -0.81),node0.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.93),angle:6.05rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.84, -0.82),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.13),node4.pos,decoration:"wave",angle:0.87rad)
cetz.draw.content((0.03, -0.05),angle:0.87rad,[q])
cetz.draw.hobby((-0.26, -0.51),(0.11, -0.06),(0.50, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.69, -0.57),node1.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((0.81, -0.59),angle:-1.74rad,[q])
cetz.draw.hobby((0.77, -0.29),(0.75, -0.57),(0.68, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.01rad)
cetz.draw.content((0.71, 0.20),angle:6.01rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.92, 0.08),(0.47, 0.21),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.10rad)
cetz.draw.content((-0.77, 0.18),angle:1.10rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.34),node3.pos,decoration:"coil",angle:2.89rad)
cetz.draw.content((-0.18, 0.46),angle:2.89rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.27, 0.27),(-0.18, 0.39),(-0.63, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.08),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.38, -0.15),angle:2.28rad,[k[3]])
cetz.draw.hobby((0.63, -0.27),(0.43, -0.12),(0.31, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.99, 0.68),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.86, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.14rad)
cetz.draw.content((0.72, 0.78),angle:4.14rad,[k[3]])
cetz.draw.hobby((0.90, 0.95),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((0.89, 0.14),angle:-1.45rad,[q+k[3]])
cetz.draw.hobby((0.73, 0.41),(0.83, 0.12),(0.79, -0.18),stroke:stroke,mark: (end: ">"))
})
let embedding27i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.78))
node(node0.pos)
let node1= (pos:(0.65, -0.67))
node(node1.pos)
let node2= (pos:(-0.75, 0.47))
node(node2.pos)
let node3= (pos:(0.42, 0.10))
node(node3.pos)
let node4= (pos:(0.03, -0.06))
node(node4.pos)
let node5= (pos:(0.75, 0.46))
node(node5.pos)
edge(node1.pos,(0.13, -0.77),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.14, -0.89),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.75),(0.14, -0.83),(-0.30, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.91, -0.75),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.77, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.35rad)
cetz.draw.content((-0.66, -1.00),angle:0.35rad,[k[0]])
cetz.draw.hobby((-0.48, -0.87),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.42),node4.pos,decoration:"wave",angle:1.04rad)
cetz.draw.content((-0.32, -0.36),angle:1.04rad,[q])
cetz.draw.hobby((-0.42, -0.68),(-0.26, -0.38),(-0.07, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, -0.13),node1.pos,decoration:"wave",angle:-1.67rad)
cetz.draw.content((0.88, -0.14),angle:-1.67rad,[q])
cetz.draw.hobby((0.82, 0.35),(0.82, -0.11),(0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.19, 0.33),node2.pos,decoration:"arrow",angle:5.99rad)
cetz.draw.content((-0.15, 0.44),angle:5.99rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.33, 0.21),(-0.14, 0.37),(-0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.06rad)
cetz.draw.content((-0.77, 0.18),angle:-2.06rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.97rad)
cetz.draw.content((0.73, 0.17),angle:2.97rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.91, 0.08),(0.53, 0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.99, 0.68),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, -0.10),node4.pos,decoration:"arrow",angle:-2.77rad)
cetz.draw.content((0.32, -0.21),angle:-2.77rad,[k[3]])
cetz.draw.hobby((0.47, 0.03),(0.30, -0.15),(0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.34),node5.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((0.27, 0.44),angle:0.58rad,[q+k[3]])
cetz.draw.hobby((0.01, 0.06),(0.27, 0.37),(0.65, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding27i4=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.78))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.03, -0.06))
node(node5.pos)
edge(node1.pos,(-0.13, -0.77),node0.pos,decoration:"arrow",angle:6.18rad)
cetz.draw.content((-0.14, -0.89),angle:6.18rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.74, -0.78),angle:5.93rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.76rad)
cetz.draw.content((-0.74, -0.92),angle:0.76rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.87, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.74, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.32, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.07, -0.09),(0.26, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.19, 0.33),node2.pos,decoration:"arrow",angle:6.58rad)
cetz.draw.content((0.15, 0.44),angle:6.58rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.62, 0.50),(0.13, 0.37),(-0.34, 0.20),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.97rad)
cetz.draw.content((-0.69, -0.07),angle:-2.97rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.52, 0.02),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.06rad)
cetz.draw.content((0.98, 0.29),angle:2.06rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.10),node2.pos,decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.31, -0.21),angle:2.78rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.30, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.27, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.65, 0.52),(-0.27, 0.36),(-0.01, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding27f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.89, -0.72),angle:5.52rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.64),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.76),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.49, -0.69),(0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.11),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.54),(0.86, -0.09),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.11),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.10),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.16),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, 0.28),angle:6.28rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.40, 0.21),(-0.00, 0.22),(-0.40, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.84rad)
cetz.draw.content((-0.72, -0.04),angle:-2.84rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.85rad)
cetz.draw.content((0.79, 0.19),angle:2.85rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.67rad)
cetz.draw.content((-0.60, 0.47),angle:-0.67rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.63, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.60, 0.47),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding28f0=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.66))
node(node0.pos)
let node1= (pos:(-0.55, -0.89))
node(node1.pos)
let node2= (pos:(-0.59, 0.19))
node(node2.pos)
let node3= (pos:(0.72, 0.47))
node(node3.pos)
let node4= (pos:(-0.44, 0.46))
node(node4.pos)
let node5= (pos:(-0.48, -0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[-q+k[0]])
cetz.draw.hobby((-0.64, -0.97),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.82),node1.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.88),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.10),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.11, -0.03),angle:2.19rad,[-q])
cetz.draw.hobby((0.34, -0.51),(0.04, -0.04),(-0.31, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.58),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((-0.66, -0.57),angle:4.61rad,[-q])
cetz.draw.hobby((-0.55, -0.30),(-0.60, -0.56),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.57rad)
cetz.draw.content((-0.75, -0.02),angle:3.57rad,[p-2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.66, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.11rad)
cetz.draw.content((0.96, 0.30),angle:2.11rad,[p-2 k[3]])
cetz.draw.hobby((0.82, 0.42),(1.00, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.09, 0.35),node3.pos,decoration:"coil",angle:0.21rad)
cetz.draw.content((0.07, 0.47),angle:0.21rad,[p-k[3]])
cetz.draw.hobby((-0.48, 0.28),(0.05, 0.40),(0.57, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.07),node2.pos,decoration:"arrow",angle:1.83rad)
cetz.draw.content((-0.78, -0.10),angle:1.83rad,[k[3]])
cetz.draw.hobby((-0.56, -0.28),(-0.72, -0.08),(-0.67, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.75, 0.79),angle:1.08rad,[k[3]])
cetz.draw.hobby((0.71, 0.59),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((-0.80, 0.65),angle:5.52rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:-1.61rad)
cetz.draw.content((-0.22, 0.10),angle:-1.61rad,[-q+k[3]])
cetz.draw.hobby((-0.35, 0.42),(-0.28, 0.10),(-0.38, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding28f1=cetz.canvas(length:50%,{
let node0= (pos:(0.43, -0.85))
node(node0.pos)
let node1= (pos:(-0.43, -0.85))
node(node1.pos)
let node2= (pos:(0.90, 0.44))
node(node2.pos)
let node3= (pos:(-0.90, 0.44))
node(node3.pos)
let node4= (pos:(-0.24, -0.10))
node(node4.pos)
let node5= (pos:(0.24, -0.10))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.74, -0.81),angle:6.03rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.92),(0.54, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.68, -1.04),angle:0.25rad,[-q+k[0]])
cetz.draw.hobby((-0.51, -0.93),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.92),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -1.04),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.36, -0.93),(0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.50),node4.pos,decoration:"wave",angle:2.30rad)
cetz.draw.content((0.03, -0.58),angle:2.30rad,[-q])
cetz.draw.hobby((0.32, -0.82),(0.05, -0.52),(-0.21, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.11, -0.50),node1.pos,decoration:"wave",angle:-2.30rad)
cetz.draw.content((-0.02, -0.58),angle:-2.30rad,[-q])
cetz.draw.hobby((0.22, -0.22),(-0.04, -0.52),(-0.31, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.94rad)
cetz.draw.content((1.07, 0.25),angle:4.94rad,[p-2 k[3]])
cetz.draw.hobby((1.04, 0.11),(0.98, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.83, 0.19),angle:1.34rad,[p-2 k[3]])
cetz.draw.hobby((-0.86, 0.33),(-0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.39rad)
cetz.draw.content((0.83, 0.74),angle:1.39rad,[p-k[3]])
cetz.draw.hobby((0.86, 0.55),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.89rad)
cetz.draw.content((-1.07, 0.70),angle:4.89rad,[p-k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.98, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.58, 0.19),node2.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.50, 0.28),angle:0.69rad,[k[3]])
cetz.draw.hobby((0.27, -0.00),(0.53, 0.22),(0.79, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.57, 0.19),node4.pos,decoration:"arrow",angle:-0.69rad)
cetz.draw.content((-0.50, 0.28),angle:-0.69rad,[k[3]])
cetz.draw.hobby((-0.79, 0.44),(-0.52, 0.22),(-0.26, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.01),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.13),angle:-0.00rad,[-q+k[3]])
cetz.draw.hobby((-0.24, -0.02),(0.00, 0.07),(0.24, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding28f2=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.88))
node(node0.pos)
let node1= (pos:(-0.30, -0.66))
node(node1.pos)
let node2= (pos:(-0.76, 0.47))
node(node2.pos)
let node3= (pos:(0.36, 0.18))
node(node3.pos)
let node4= (pos:(0.71, -0.23))
node(node4.pos)
let node5= (pos:(0.64, 0.44))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.13, -0.81),node1.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.92),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.57),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((0.81, -0.59),angle:1.40rad,[-q])
cetz.draw.hobby((0.68, -0.84),(0.75, -0.57),(0.77, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.13),node1.pos,decoration:"wave",angle:4.01rad)
cetz.draw.content((0.03, -0.05),angle:4.01rad,[-q])
cetz.draw.hobby((0.50, 0.38),(0.11, -0.05),(-0.26, -0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.24rad)
cetz.draw.content((-0.77, 0.18),angle:4.24rad,[p-2 k[3]])
cetz.draw.hobby((-0.90, 0.06),(-0.75, 0.35),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.71, 0.20),angle:2.87rad,[p-2 k[3]])
cetz.draw.hobby((0.47, 0.21),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.34),node3.pos,decoration:"coil",angle:-0.25rad)
cetz.draw.content((-0.18, 0.46),angle:-0.25rad,[p-k[3]])
cetz.draw.hobby((-0.63, 0.50),(-0.18, 0.39),(0.27, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.00rad)
cetz.draw.content((0.72, 0.79),angle:1.00rad,[k[3]])
cetz.draw.hobby((0.65, 0.56),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.99, 0.68),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.86, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.08),node4.pos,decoration:"arrow",angle:5.42rad)
cetz.draw.content((0.38, -0.15),angle:5.42rad,[k[3]])
cetz.draw.hobby((0.31, 0.11),(0.43, -0.12),(0.63, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:1.69rad)
cetz.draw.content((0.89, 0.14),angle:1.69rad,[-q+k[3]])
cetz.draw.hobby((0.79, -0.18),(0.83, 0.12),(0.73, 0.41),stroke:stroke,mark: (end: ">"))
})
let embedding28f3=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.69))
node(node0.pos)
let node1= (pos:(-0.55, -0.84))
node(node1.pos)
let node2= (pos:(0.58, 0.09))
node(node2.pos)
let node3= (pos:(0.09, 0.53))
node(node3.pos)
let node4= (pos:(-0.54, 0.42))
node(node4.pos)
let node5= (pos:(-0.31, -0.16))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.72, -0.74),angle:5.84rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.45, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.74, -1.03),angle:0.34rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.93),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.10, -0.81),node1.pos,decoration:"arrow",angle:0.17rad)
cetz.draw.content((-0.08, -0.93),angle:0.17rad,[k[0]])
cetz.draw.hobby((0.27, -0.78),(-0.09, -0.87),(-0.46, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.14),node4.pos,decoration:"wave",angle:2.23rad)
cetz.draw.content((0.06, -0.07),angle:2.23rad,[-q])
cetz.draw.hobby((0.31, -0.53),(-0.02, -0.07),(-0.40, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, -0.51),node1.pos,decoration:"wave",angle:4.37rad)
cetz.draw.content((-0.58, -0.47),angle:4.37rad,[-q])
cetz.draw.hobby((-0.40, -0.20),(-0.51, -0.47),(-0.60, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.37, 0.35),node2.pos,decoration:"arrow",angle:2.40rad)
cetz.draw.content((0.45, 0.44),angle:2.40rad,[p-2 k[3]])
cetz.draw.hobby((0.18, 0.56),(0.42, 0.40),(0.60, 0.18),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.81, 0.16),angle:-0.20rad,[p-k[3]])
cetz.draw.hobby((0.69, 0.13),(0.91, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.45rad)
cetz.draw.content((-0.40, 0.16),angle:0.45rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.01),(0.03, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, -0.05),node2.pos,decoration:"arrow",angle:0.28rad)
cetz.draw.content((0.19, -0.17),angle:0.28rad,[k[3]])
cetz.draw.hobby((-0.21, -0.20),(0.15, -0.11),(0.51, -0.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.49, 0.87),angle:0.48rad,[k[3]])
cetz.draw.hobby((0.15, 0.63),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.38rad)
cetz.draw.content((-0.87, 0.64),angle:5.38rad,[k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.65, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.48, 0.12),node5.pos,decoration:"arrow",angle:5.08rad)
cetz.draw.content((-0.59, 0.08),angle:5.08rad,[-q+k[3]])
cetz.draw.hobby((-0.60, 0.35),(-0.53, 0.09),(-0.40, -0.15),stroke:stroke,mark: (end: ">"))
})
let embedding28f4=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.84))
node(node0.pos)
let node1= (pos:(-0.33, -0.69))
node(node1.pos)
let node2= (pos:(-0.09, 0.53))
node(node2.pos)
let node3= (pos:(-0.57, 0.08))
node(node3.pos)
let node4= (pos:(0.31, -0.16))
node(node4.pos)
let node5= (pos:(0.55, 0.42))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.95rad)
cetz.draw.content((0.82, -0.81),angle:5.95rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.67, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.62, -0.95),angle:0.44rad,[-q+k[0]])
cetz.draw.hobby((-0.40, -0.78),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.10, -0.81),node1.pos,decoration:"arrow",angle:6.10rad)
cetz.draw.content((0.08, -0.93),angle:6.10rad,[k[0]])
cetz.draw.hobby((0.46, -0.91),(0.09, -0.87),(-0.27, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.51),node4.pos,decoration:"wave",angle:1.91rad)
cetz.draw.content((0.58, -0.47),angle:1.91rad,[-q])
cetz.draw.hobby((0.60, -0.76),(0.52, -0.47),(0.40, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, -0.14),node1.pos,decoration:"wave",angle:4.05rad)
cetz.draw.content((-0.05, -0.07),angle:4.05rad,[-q])
cetz.draw.hobby((0.40, 0.36),(0.02, -0.07),(-0.31, -0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, 0.35),node2.pos,decoration:"arrow",angle:3.88rad)
cetz.draw.content((-0.45, 0.44),angle:3.88rad,[p-2 k[3]])
cetz.draw.hobby((-0.59, 0.17),(-0.42, 0.40),(-0.18, 0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.45rad)
cetz.draw.content((0.51, 0.37),angle:-0.45rad,[p-k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.20rad)
cetz.draw.content((-0.76, -0.08),angle:0.20rad,[p-k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.66, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.91rad)
cetz.draw.content((0.68, 0.78),angle:0.91rad,[k[3]])
cetz.draw.hobby((0.56, 0.53),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.60, 0.66),angle:5.80rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.15, -0.05),node4.pos,decoration:"arrow",angle:6.01rad)
cetz.draw.content((-0.18, -0.17),angle:6.01rad,[k[3]])
cetz.draw.hobby((-0.51, -0.00),(-0.15, -0.11),(0.21, -0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.12),node5.pos,decoration:"arrow",angle:1.20rad)
cetz.draw.content((0.59, 0.08),angle:1.20rad,[-q+k[3]])
cetz.draw.hobby((0.40, -0.15),(0.53, 0.09),(0.60, 0.35),stroke:stroke,mark: (end: ">"))
})
let embedding29f0=cetz.canvas(length:50%,{
let node0= (pos:(0.43, -0.85))
node(node0.pos)
let node1= (pos:(-0.42, -0.85))
node(node1.pos)
let node2= (pos:(0.90, 0.44))
node(node2.pos)
let node3= (pos:(-0.90, 0.44))
node(node3.pos)
let node4= (pos:(-0.23, -0.10))
node(node4.pos)
let node5= (pos:(0.24, -0.10))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.74, -0.81),angle:6.03rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.92),(0.54, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.68, -1.04),angle:0.25rad,[-q+k[0]])
cetz.draw.hobby((-0.51, -0.93),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.92),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.04),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.36, -0.94),(0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.50),node4.pos,decoration:"wave",angle:2.29rad)
cetz.draw.content((0.21, -0.42),angle:2.29rad,[-q])
cetz.draw.hobby((0.41, -0.74),(0.14, -0.44),(-0.12, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.11, -0.50),node1.pos,decoration:"wave",angle:-2.30rad)
cetz.draw.content((-0.02, -0.58),angle:-2.30rad,[-q])
cetz.draw.hobby((0.22, -0.22),(-0.04, -0.52),(-0.31, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.93rad)
cetz.draw.content((1.07, 0.25),angle:4.93rad,[k[2]])
cetz.draw.hobby((1.04, 0.11),(0.98, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.83, 0.19),angle:1.34rad,[k[2]])
cetz.draw.hobby((-0.86, 0.33),(-0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.39rad)
cetz.draw.content((0.83, 0.74),angle:1.39rad,[p+k[2]])
cetz.draw.hobby((0.86, 0.55),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.89rad)
cetz.draw.content((-1.07, 0.70),angle:4.89rad,[p+k[2]])
cetz.draw.hobby((-1.04, 0.89),(-0.97, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.58, 0.19),node2.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.50, 0.28),angle:0.69rad,[p])
cetz.draw.hobby((0.27, 0.00),(0.53, 0.22),(0.80, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.57, 0.19),node4.pos,decoration:"arrow",angle:-0.69rad)
cetz.draw.content((-0.49, 0.28),angle:-0.69rad,[p])
cetz.draw.hobby((-0.79, 0.44),(-0.52, 0.22),(-0.26, -0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.01),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.13),angle:0.00rad,[p-q])
cetz.draw.hobby((-0.24, -0.02),(0.00, 0.07),(0.24, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding29f1=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.64))
node(node0.pos)
let node1= (pos:(-0.57, -0.77))
node(node1.pos)
let node2= (pos:(0.31, 0.51))
node(node2.pos)
let node3= (pos:(0.76, 0.83))
node(node3.pos)
let node4= (pos:(-0.59, 0.47))
node(node4.pos)
let node5= (pos:(-0.38, -0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.72, -0.72),angle:5.80rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.44, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.73, -0.99),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.87),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.11, -0.75),node1.pos,decoration:"arrow",angle:0.15rad)
cetz.draw.content((-0.10, -0.87),angle:0.15rad,[k[0]])
cetz.draw.hobby((0.25, -0.73),(-0.11, -0.81),(-0.48, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.11),node4.pos,decoration:"wave",angle:2.25rad)
cetz.draw.content((0.02, -0.03),angle:2.25rad,[-q])
cetz.draw.hobby((0.29, -0.49),(-0.06, -0.03),(-0.44, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, -0.39),node1.pos,decoration:"wave",angle:4.48rad)
cetz.draw.content((-0.62, -0.37),angle:4.48rad,[-q])
cetz.draw.hobby((-0.47, -0.06),(-0.56, -0.37),(-0.62, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.46, 0.79),node2.pos,decoration:"arrow",angle:6.89rad)
cetz.draw.content((0.39, 0.89),angle:6.89rad,[k[2]])
cetz.draw.hobby((0.70, 0.90),(0.42, 0.83),(0.26, 0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.62, 0.56),node3.pos,decoration:"coil",angle:0.65rad)
cetz.draw.content((0.70, 0.46),angle:0.65rad,[p+k[2]])
cetz.draw.hobby((0.37, 0.43),(0.65, 0.50),(0.81, 0.76),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.02, 0.25),node2.pos,decoration:"arrow",angle:0.64rad)
cetz.draw.content((0.05, 0.16),angle:0.64rad,[p])
cetz.draw.hobby((-0.28, -0.00),(0.01, 0.20),(0.28, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.61rad)
cetz.draw.content((0.81, 1.01),angle:0.61rad,[p])
cetz.draw.hobby((0.80, 0.94),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.37rad)
cetz.draw.content((-0.89, 0.66),angle:5.37rad,[p])
cetz.draw.hobby((-0.99, 0.88),(-0.70, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.57, 0.21),node5.pos,decoration:"arrow",angle:5.09rad)
cetz.draw.content((-0.68, 0.16),angle:5.09rad,[p-q])
cetz.draw.hobby((-0.66, 0.42),(-0.62, 0.17),(-0.46, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding29f2=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.77))
node(node0.pos)
let node1= (pos:(-0.32, -0.64))
node(node1.pos)
let node2= (pos:(-0.76, 0.83))
node(node2.pos)
let node3= (pos:(-0.31, 0.51))
node(node3.pos)
let node4= (pos:(0.39, -0.01))
node(node4.pos)
let node5= (pos:(0.59, 0.47))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.84, -0.78),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.69, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((-0.60, -0.93),angle:0.48rad,[-q+k[0]])
cetz.draw.hobby((-0.38, -0.74),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.75),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((0.10, -0.87),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.48, -0.83),(0.11, -0.81),(-0.25, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.51, -0.40),node4.pos,decoration:"wave",angle:1.80rad)
cetz.draw.content((0.62, -0.37),angle:1.80rad,[-q])
cetz.draw.hobby((0.62, -0.68),(0.56, -0.37),(0.47, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.08, -0.11),node1.pos,decoration:"wave",angle:4.03rad)
cetz.draw.content((-0.02, -0.03),angle:4.03rad,[-q])
cetz.draw.hobby((0.45, 0.40),(0.06, -0.03),(-0.29, -0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.62, 0.56),node2.pos,decoration:"arrow",angle:5.65rad)
cetz.draw.content((-0.69, 0.46),angle:5.65rad,[k[2]])
cetz.draw.hobby((-0.36, 0.43),(-0.65, 0.50),(-0.81, 0.75),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.46, 0.79),node3.pos,decoration:"coil",angle:-0.59rad)
cetz.draw.content((-0.39, 0.89),angle:-0.59rad,[p+k[2]])
cetz.draw.hobby((-0.71, 0.90),(-0.42, 0.83),(-0.26, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.91rad)
cetz.draw.content((0.70, 0.81),angle:0.91rad,[p])
cetz.draw.hobby((0.60, 0.58),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.66rad)
cetz.draw.content((-0.95, 0.82),angle:5.66rad,[p])
cetz.draw.hobby((-0.95, 0.89),(-0.88, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.03, 0.25),node4.pos,decoration:"arrow",angle:5.64rad)
cetz.draw.content((-0.05, 0.16),angle:5.64rad,[p])
cetz.draw.hobby((-0.28, 0.41),(-0.00, 0.20),(0.28, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.21),node5.pos,decoration:"arrow",angle:1.19rad)
cetz.draw.content((0.68, 0.16),angle:1.19rad,[p-q])
cetz.draw.hobby((0.47, -0.02),(0.62, 0.17),(0.66, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding30f0=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.66))
node(node0.pos)
let node1= (pos:(-0.55, -0.89))
node(node1.pos)
let node2= (pos:(-0.59, 0.19))
node(node2.pos)
let node3= (pos:(0.72, 0.47))
node(node3.pos)
let node4= (pos:(-0.44, 0.46))
node(node4.pos)
let node5= (pos:(-0.48, -0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((0.74, -0.72),angle:5.80rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.75, -1.06),angle:0.23rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.82),node1.pos,decoration:"arrow",angle:0.25rad)
cetz.draw.content((-0.05, -0.94),angle:0.25rad,[k[0]])
cetz.draw.hobby((0.30, -0.75),(-0.07, -0.88),(-0.45, -0.95),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.10),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.11, -0.03),angle:2.19rad,[-q])
cetz.draw.hobby((0.34, -0.51),(0.04, -0.04),(-0.31, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.58),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((-0.66, -0.57),angle:4.61rad,[-q])
cetz.draw.hobby((-0.55, -0.30),(-0.59, -0.56),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.35),node2.pos,decoration:"arrow",angle:6.50rad)
cetz.draw.content((0.07, 0.46),angle:6.50rad,[-p])
cetz.draw.hobby((0.57, 0.51),(0.05, 0.40),(-0.48, 0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.71rad)
cetz.draw.content((-0.75, -0.02),angle:-2.71rad,[-p+k[3]])
cetz.draw.hobby((-0.66, 0.09),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.11rad)
cetz.draw.content((0.96, 0.30),angle:2.11rad,[-p+k[3]])
cetz.draw.hobby((1.00, 0.12),(0.82, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.07),node2.pos,decoration:"arrow",angle:1.84rad)
cetz.draw.content((-0.78, -0.10),angle:1.84rad,[k[3]])
cetz.draw.hobby((-0.56, -0.28),(-0.72, -0.08),(-0.68, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.75, 0.79),angle:1.08rad,[k[3]])
cetz.draw.hobby((0.71, 0.59),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((-0.81, 0.64),angle:5.52rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:-1.61rad)
cetz.draw.content((-0.22, 0.10),angle:-1.61rad,[-q+k[3]])
cetz.draw.hobby((-0.35, 0.42),(-0.28, 0.10),(-0.38, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding30f1=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.88))
node(node0.pos)
let node1= (pos:(-0.30, -0.67))
node(node1.pos)
let node2= (pos:(-0.76, 0.47))
node(node2.pos)
let node3= (pos:(0.36, 0.18))
node(node3.pos)
let node4= (pos:(0.71, -0.23))
node(node4.pos)
let node5= (pos:(0.64, 0.44))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.60, -0.94),angle:0.44rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.13, -0.81),node1.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.93),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.57),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((0.81, -0.59),angle:1.40rad,[-q])
cetz.draw.hobby((0.68, -0.84),(0.75, -0.57),(0.77, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.13),node1.pos,decoration:"wave",angle:4.01rad)
cetz.draw.content((0.03, -0.06),angle:4.01rad,[-q])
cetz.draw.hobby((0.50, 0.38),(0.11, -0.06),(-0.26, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, 0.34),node2.pos,decoration:"arrow",angle:6.03rad)
cetz.draw.content((-0.18, 0.46),angle:6.03rad,[-p])
cetz.draw.hobby((0.27, 0.27),(-0.18, 0.39),(-0.63, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.05rad)
cetz.draw.content((-0.77, 0.18),angle:-2.05rad,[-p+k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.71, 0.20),angle:2.87rad,[-p+k[3]])
cetz.draw.hobby((0.92, 0.08),(0.47, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.00rad)
cetz.draw.content((0.72, 0.78),angle:1.00rad,[k[3]])
cetz.draw.hobby((0.65, 0.56),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.99, 0.68),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.86, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.08),node4.pos,decoration:"arrow",angle:5.42rad)
cetz.draw.content((0.38, -0.15),angle:5.42rad,[k[3]])
cetz.draw.hobby((0.31, 0.11),(0.43, -0.12),(0.63, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:1.69rad)
cetz.draw.content((0.89, 0.14),angle:1.69rad,[-q+k[3]])
cetz.draw.hobby((0.79, -0.18),(0.83, 0.12),(0.73, 0.41),stroke:stroke,mark: (end: ">"))
})
let embedding30f2=cetz.canvas(length:50%,{
let node0= (pos:(0.43, -0.80))
node(node0.pos)
let node1= (pos:(-0.43, -0.80))
node(node1.pos)
let node2= (pos:(0.50, 0.80))
node(node2.pos)
let node3= (pos:(-0.50, 0.80))
node(node3.pos)
let node4= (pos:(-0.19, 0.00))
node(node4.pos)
let node5= (pos:(0.19, -0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.76, -0.79),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.55, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.34rad)
cetz.draw.content((-0.68, -1.01),angle:0.34rad,[-q+k[0]])
cetz.draw.hobby((-0.51, -0.89),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.86),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.98),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.36, -0.88),(0.00, -0.92),(-0.36, -0.88),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.42),node4.pos,decoration:"wave",angle:2.24rad)
cetz.draw.content((0.05, -0.50),angle:2.24rad,[-q])
cetz.draw.hobby((0.32, -0.76),(0.07, -0.44),(-0.18, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, -0.43),node1.pos,decoration:"wave",angle:-2.24rad)
cetz.draw.content((-0.04, -0.50),angle:-2.24rad,[-q])
cetz.draw.hobby((0.18, -0.12),(-0.07, -0.44),(-0.32, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:6.67rad)
cetz.draw.content((0.70, 1.01),angle:6.67rad,[-p])
cetz.draw.hobby((0.88, 1.02),(0.57, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((-0.79, 0.79),angle:5.90rad,[-p])
cetz.draw.hobby((-0.61, 0.78),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.84),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.96),angle:3.14rad,[-p+k[3]])
cetz.draw.hobby((0.41, 0.87),(0.00, 0.90),(-0.41, 0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.40),node2.pos,decoration:"arrow",angle:1.21rad)
cetz.draw.content((0.50, 0.36),angle:1.21rad,[k[3]])
cetz.draw.hobby((0.29, 0.05),(0.44, 0.36),(0.54, 0.70),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.40),node4.pos,decoration:"arrow",angle:5.07rad)
cetz.draw.content((-0.50, 0.36),angle:5.07rad,[k[3]])
cetz.draw.hobby((-0.54, 0.70),(-0.43, 0.36),(-0.29, 0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.15),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.27),angle:0.00rad,[-q+k[3]])
cetz.draw.hobby((-0.22, 0.08),(0.00, 0.21),(0.23, 0.08),stroke:stroke,mark: (end: ">"))
})
let embedding31i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.68),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.88, -0.72),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.64, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.80, -0.11),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.79, 0.19),angle:5.98rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.16),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((0.40, 0.21),(0.00, 0.22),(-0.40, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.59, 0.48),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.62, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.47),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.08, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.57),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.84, 0.76),angle:4.54rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding31f0=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.71))
node(node0.pos)
let node1= (pos:(-0.37, -0.82))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.21))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.82),node1.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.17, -0.93),angle:0.11rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.16, -0.87),(-0.27, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.52),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.20, -0.43),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.37, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.70, 0.25),angle:5.90rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.93, 0.09),(0.43, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((-0.78, 0.19),angle:1.14rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.76, 0.37),(-0.90, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:2.95rad)
cetz.draw.content((-0.22, 0.53),angle:2.95rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.23, 0.36),(-0.21, 0.46),(-0.65, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.31rad)
cetz.draw.content((0.05, 0.09),angle:1.31rad,[k[3]])
cetz.draw.hobby((0.11, -0.18),(0.10, 0.07),(0.23, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding31f1=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.92))
node(node0.pos)
let node1= (pos:(-0.51, -0.92))
node(node1.pos)
let node2= (pos:(-0.14, 0.46))
node(node2.pos)
let node3= (pos:(0.14, 0.46))
node(node3.pos)
let node4= (pos:(0.32, -0.24))
node(node4.pos)
let node5= (pos:(-0.31, -0.24))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.13rad)
cetz.draw.content((0.78, -0.84),angle:6.13rad,[-q+k[0]])
cetz.draw.hobby((0.91, -0.93),(0.62, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.16rad)
cetz.draw.content((-0.74, -1.08),angle:0.16rad,[-q+k[0]])
cetz.draw.hobby((-0.60, -1.00),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.97),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.09),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -1.00),(0.00, -1.03),(-0.42, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.46, -0.58),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((0.57, -0.55),angle:1.85rad,[-q])
cetz.draw.hobby((0.57, -0.85),(0.51, -0.55),(0.40, -0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.45, -0.59),node1.pos,decoration:"wave",angle:4.44rad)
cetz.draw.content((-0.57, -0.55),angle:4.44rad,[-q])
cetz.draw.hobby((-0.40, -0.28),(-0.51, -0.55),(-0.56, -0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.47, 0.34),angle:5.90rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.93, 0.09),(-0.03, 0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.38rad)
cetz.draw.content((-0.38, 0.12),angle:0.38rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.07, 0.37),(-0.88, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:2.58rad)
cetz.draw.content((-0.64, 0.63),angle:2.58rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.26, 0.46),(-0.95, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:3.71rad)
cetz.draw.content((0.51, 0.83),angle:3.71rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.88, 1.00),(0.20, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.28, 0.13),node2.pos,decoration:"arrow",angle:1.33rad)
cetz.draw.content((-0.40, 0.16),angle:1.33rad,[k[3]])
cetz.draw.hobby((-0.38, -0.17),(-0.34, 0.13),(-0.23, 0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.29, 0.13),node4.pos,decoration:"arrow",angle:-1.33rad)
cetz.draw.content((0.40, 0.16),angle:-1.33rad,[k[3]])
cetz.draw.hobby((0.23, 0.42),(0.35, 0.14),(0.38, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.27),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.39),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.26, -0.31),(0.00, -0.33),(-0.26, -0.31),stroke:stroke,mark: (end: ">"))
})
let embedding31f2=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.75, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.42),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.36),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.87, -0.14),angle:4.81rad,[-q])
cetz.draw.hobby((-0.82, 0.35),(-0.82, -0.11),(-0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((0.98, 0.29),angle:5.20rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.17rad)
cetz.draw.content((-0.69, -0.07),angle:0.17rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.52, 0.02),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:3.44rad)
cetz.draw.content((0.15, 0.44),angle:3.44rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.62, 0.50),(0.13, 0.37),(-0.34, 0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.01rad)
cetz.draw.content((-0.98, 0.68),angle:2.01rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.27, -0.10),node4.pos,decoration:"arrow",angle:5.93rad)
cetz.draw.content((-0.31, -0.21),angle:5.93rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.15),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.26, 0.43),angle:2.56rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.27, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding31f3=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.66))
node(node0.pos)
let node1= (pos:(-0.55, -0.89))
node(node1.pos)
let node2= (pos:(-0.59, 0.19))
node(node2.pos)
let node3= (pos:(0.72, 0.47))
node(node3.pos)
let node4= (pos:(-0.45, 0.46))
node(node4.pos)
let node5= (pos:(-0.48, -0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.73, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.24rad)
cetz.draw.content((-0.75, -1.06),angle:0.24rad,[-q+k[0]])
cetz.draw.hobby((-0.64, -0.97),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.82),node1.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[k[0]])
cetz.draw.hobby((0.29, -0.75),(-0.07, -0.88),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.10),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.10, -0.03),angle:2.19rad,[-q])
cetz.draw.hobby((0.34, -0.51),(0.04, -0.04),(-0.31, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.58),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((-0.66, -0.57),angle:4.61rad,[-q])
cetz.draw.hobby((-0.55, -0.30),(-0.60, -0.56),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.35),node2.pos,decoration:"arrow",angle:6.50rad)
cetz.draw.content((0.06, 0.46),angle:6.50rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.57, 0.50),(0.05, 0.40),(-0.48, 0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.71rad)
cetz.draw.content((-0.75, -0.02),angle:-2.71rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.66, 0.09),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.11rad)
cetz.draw.content((0.96, 0.30),angle:2.11rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((1.00, 0.12),(0.82, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.07),node2.pos,decoration:"arrow",angle:1.84rad)
cetz.draw.content((-0.78, -0.10),angle:1.84rad,[k[3]])
cetz.draw.hobby((-0.56, -0.28),(-0.72, -0.08),(-0.68, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.75, 0.79),angle:1.08rad,[k[3]])
cetz.draw.hobby((0.71, 0.59),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((-0.81, 0.65),angle:5.51rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:-1.61rad)
cetz.draw.content((-0.22, 0.10),angle:-1.61rad,[-q+k[3]])
cetz.draw.hobby((-0.35, 0.42),(-0.28, 0.10),(-0.38, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding31f4=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.88))
node(node0.pos)
let node1= (pos:(-0.30, -0.66))
node(node1.pos)
let node2= (pos:(-0.76, 0.47))
node(node2.pos)
let node3= (pos:(0.36, 0.18))
node(node3.pos)
let node4= (pos:(0.71, -0.23))
node(node4.pos)
let node5= (pos:(0.64, 0.44))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.83, -0.82),angle:5.99rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.71, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.60, -0.94),angle:0.45rad,[-q+k[0]])
cetz.draw.hobby((-0.36, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.14, -0.81),node1.pos,decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.11, -0.92),angle:6.05rad,[k[0]])
cetz.draw.hobby((0.50, -0.93),(0.13, -0.87),(-0.23, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.69, -0.57),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((0.81, -0.59),angle:1.40rad,[-q])
cetz.draw.hobby((0.68, -0.84),(0.75, -0.57),(0.77, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, -0.13),node1.pos,decoration:"wave",angle:4.01rad)
cetz.draw.content((0.03, -0.05),angle:4.01rad,[-q])
cetz.draw.hobby((0.50, 0.38),(0.10, -0.05),(-0.26, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.21, 0.34),node2.pos,decoration:"arrow",angle:6.03rad)
cetz.draw.content((-0.18, 0.45),angle:6.03rad,[-1/2 p-1/2 k[3]])
cetz.draw.hobby((0.27, 0.27),(-0.18, 0.39),(-0.63, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.05rad)
cetz.draw.content((-0.77, 0.18),angle:-2.05rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.87rad)
cetz.draw.content((0.71, 0.20),angle:2.87rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.92, 0.08),(0.47, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.00rad)
cetz.draw.content((0.72, 0.79),angle:1.00rad,[k[3]])
cetz.draw.hobby((0.64, 0.56),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.99, 0.68),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.86, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.08),node4.pos,decoration:"arrow",angle:5.42rad)
cetz.draw.content((0.38, -0.15),angle:5.42rad,[k[3]])
cetz.draw.hobby((0.31, 0.11),(0.43, -0.12),(0.63, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.77, 0.13),node5.pos,decoration:"arrow",angle:1.69rad)
cetz.draw.content((0.89, 0.14),angle:1.69rad,[-q+k[3]])
cetz.draw.hobby((0.79, -0.18),(0.83, 0.12),(0.73, 0.41),stroke:stroke,mark: (end: ">"))
})
let embedding32i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.63))
node(node0.pos)
let node1= (pos:(0.37, -0.65))
node(node1.pos)
let node2= (pos:(0.44, 0.13))
node(node2.pos)
let node3= (pos:(-0.44, 0.16))
node(node3.pos)
let node4= (pos:(0.41, 0.53))
node(node4.pos)
let node5= (pos:(-0.41, 0.49))
node(node5.pos)
edge(node1.pos,(-0.00, -0.70),node0.pos,decoration:"arrow",angle:6.26rad)
cetz.draw.content((-0.00, -0.82),angle:6.26rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.73),(-0.00, -0.76),(-0.32, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((0.74, -0.72),angle:5.78rad,[k[0]])
cetz.draw.hobby((0.94, -0.90),(0.49, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.53rad)
cetz.draw.content((-0.63, -0.92),angle:0.53rad,[k[0]])
cetz.draw.hobby((-0.43, -0.74),(-0.88, -1.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.06, -0.08),node4.pos,decoration:"wave",angle:0.98rad)
cetz.draw.content((0.16, -0.15),angle:0.98rad,[q])
cetz.draw.hobby((-0.23, -0.57),(0.12, -0.12),(0.41, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.06, -0.13),node1.pos,decoration:"wave",angle:5.32rad)
cetz.draw.content((-0.16, -0.20),angle:5.32rad,[q])
cetz.draw.hobby((-0.41, 0.34),(-0.13, -0.15),(0.23, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.75, 0.18),angle:6.05rad,[-p+q+k[3]])
cetz.draw.hobby((0.92, 0.08),(0.55, 0.17),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.69, -0.04),angle:0.27rad,[-p+q+k[3]])
cetz.draw.hobby((-0.52, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.01, 0.09),node3.pos,decoration:"coil",angle:3.11rad)
cetz.draw.content((-0.01, -0.03),angle:3.11rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.36, 0.06),(-0.00, 0.03),(-0.36, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, 0.34),node2.pos,decoration:"arrow",angle:-0.40rad)
cetz.draw.content((0.09, 0.45),angle:-0.40rad,[k[3]])
cetz.draw.hobby((-0.31, 0.53),(0.05, 0.40),(0.39, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.03, 0.45),node4.pos,decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.08, 0.56),angle:0.39rad,[k[3]])
cetz.draw.hobby((-0.41, 0.27),(-0.08, 0.49),(0.31, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.63, 0.86),angle:0.67rad,[q+k[3]])
cetz.draw.hobby((0.45, 0.64),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((-0.79, 0.66),angle:5.57rad,[q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.53, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding32f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.62))
node(node0.pos)
let node1= (pos:(-0.61, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.88, -0.72),angle:5.52rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.64, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.64),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.76),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.49, -0.69),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.70, -0.54),(0.86, -0.10),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.16),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, 0.28),angle:6.28rad,[-p-2 q+k[3]])
cetz.draw.hobby((0.40, 0.22),(0.00, 0.22),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.84rad)
cetz.draw.content((-0.72, -0.04),angle:-2.84rad,[-p-2 q+2 k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[-p-2 q+2 k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.66rad)
cetz.draw.content((-0.60, 0.48),angle:-0.66rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.63, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.60, 0.47),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.60),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.08, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding33i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.86))
node(node0.pos)
let node1= (pos:(0.52, -0.86))
node(node1.pos)
let node2= (pos:(0.93, 0.45))
node(node2.pos)
let node3= (pos:(-0.93, 0.45))
node(node3.pos)
let node4= (pos:(-0.39, -0.12))
node(node4.pos)
let node5= (pos:(0.39, -0.11))
node(node5.pos)
edge(node1.pos,(0.00, -0.89),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -1.01),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.79, -0.81),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.49),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((-0.59, -0.47),angle:1.41rad,[q])
cetz.draw.hobby((-0.57, -0.78),(-0.53, -0.47),(-0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.49),node1.pos,decoration:"wave",angle:-1.41rad)
cetz.draw.content((0.60, -0.47),angle:-1.41rad,[q])
cetz.draw.hobby((0.47, -0.17),(0.54, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.87rad)
cetz.draw.content((1.08, 0.25),angle:4.87rad,[-p+k[3]])
cetz.draw.hobby((1.04, 0.11),(1.00, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((-0.84, 0.21),angle:1.41rad,[-p+k[3]])
cetz.draw.hobby((-0.88, 0.34),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.44rad)
cetz.draw.content((0.84, 0.74),angle:1.44rad,[-p+2 k[3]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.85rad)
cetz.draw.content((-1.08, 0.71),angle:4.85rad,[-p+2 k[3]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.65, 0.19),node2.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((0.57, 0.28),angle:0.81rad,[k[3]])
cetz.draw.hobby((0.39, -0.02),(0.60, 0.22),(0.83, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, 0.19),node4.pos,decoration:"arrow",angle:-0.81rad)
cetz.draw.content((-0.56, 0.27),angle:-0.81rad,[k[3]])
cetz.draw.hobby((-0.83, 0.44),(-0.60, 0.22),(-0.39, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.10),node5.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, 0.02),angle:0.00rad,[q+k[3]])
cetz.draw.hobby((-0.31, -0.05),(0.00, -0.04),(0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding33i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.83))
node(node0.pos)
let node1= (pos:(0.63, -0.68))
node(node1.pos)
let node2= (pos:(-0.10, 0.53))
node(node2.pos)
let node3= (pos:(-0.67, 0.15))
node(node3.pos)
let node4= (pos:(-0.05, -0.13))
node(node4.pos)
let node5= (pos:(0.72, 0.38))
node(node5.pos)
edge(node1.pos,(0.12, -0.79),node0.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.85),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.90, -0.75),angle:5.56rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.24, -0.49),node4.pos,decoration:"wave",angle:1.10rad)
cetz.draw.content((-0.13, -0.55),angle:1.10rad,[q])
cetz.draw.hobby((-0.32, -0.79),(-0.17, -0.51),(-0.03, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, -0.16),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.83, -0.17),angle:-1.65rad,[q])
cetz.draw.hobby((0.78, 0.27),(0.77, -0.16),(0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((0.50, 0.37),angle:5.83rad,[-p+k[3]])
cetz.draw.hobby((0.94, 0.10),(0.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.78, -0.04),angle:0.42rad,[-p+k[3]])
cetz.draw.hobby((-0.73, 0.05),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.41, 0.39),node3.pos,decoration:"coil",angle:3.73rad)
cetz.draw.content((-0.47, 0.50),angle:3.73rad,[-p+2 k[3]])
cetz.draw.hobby((-0.18, 0.57),(-0.45, 0.44),(-0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.75, 0.74),angle:1.15rad,[k[3]])
cetz.draw.hobby((0.71, 0.50),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.60, 0.66),angle:5.80rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, -0.01),node4.pos,decoration:"arrow",angle:5.86rad)
cetz.draw.content((-0.42, -0.12),angle:5.86rad,[k[3]])
cetz.draw.hobby((-0.64, 0.06),(-0.39, -0.07),(-0.13, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.28, 0.23),angle:0.59rad,[q+k[3]])
cetz.draw.hobby((-0.01, -0.03),(0.30, 0.17),(0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding33i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.68))
node(node0.pos)
let node1= (pos:(0.41, -0.83))
node(node1.pos)
let node2= (pos:(0.67, 0.15))
node(node2.pos)
let node3= (pos:(0.10, 0.53))
node(node3.pos)
let node4= (pos:(-0.72, 0.38))
node(node4.pos)
let node5= (pos:(0.06, -0.13))
node(node5.pos)
edge(node1.pos,(-0.12, -0.79),node0.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.12, -0.85),(-0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((-0.74, -0.93),angle:0.71rad,[k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.71, -0.16),node4.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.83, -0.17),angle:1.65rad,[q])
cetz.draw.hobby((-0.71, -0.59),(-0.77, -0.16),(-0.78, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, -0.49),node1.pos,decoration:"wave",angle:-1.10rad)
cetz.draw.content((0.35, -0.44),angle:-1.10rad,[q])
cetz.draw.hobby((0.14, -0.17),(0.29, -0.45),(0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.86rad)
cetz.draw.content((0.88, 0.18),angle:5.86rad,[-p+k[3]])
cetz.draw.hobby((0.93, 0.10),(0.78, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.40, 0.16),angle:0.45rad,[-p+k[3]])
cetz.draw.hobby((0.03, 0.44),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.41, 0.40),node3.pos,decoration:"coil",angle:2.56rad)
cetz.draw.content((0.48, 0.50),angle:2.56rad,[-p+2 k[3]])
cetz.draw.hobby((0.67, 0.24),(0.45, 0.45),(0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, -0.01),node2.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((0.43, -0.12),angle:0.43rad,[k[3]])
cetz.draw.hobby((0.14, -0.17),(0.40, -0.07),(0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.49, 0.87),angle:0.48rad,[k[3]])
cetz.draw.hobby((0.16, 0.63),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.97, 0.64),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.81, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.13),node5.pos,decoration:"arrow",angle:5.70rad)
cetz.draw.content((-0.41, 0.03),angle:5.70rad,[q+k[3]])
cetz.draw.hobby((-0.67, 0.28),(-0.36, 0.07),(-0.06, -0.13),stroke:stroke,mark: (end: ">"))
})
let embedding33i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.78))
node(node0.pos)
let node1= (pos:(0.65, -0.67))
node(node1.pos)
let node2= (pos:(-0.75, 0.46))
node(node2.pos)
let node3= (pos:(0.43, 0.10))
node(node3.pos)
let node4= (pos:(0.03, -0.06))
node(node4.pos)
let node5= (pos:(0.75, 0.46))
node(node5.pos)
edge(node1.pos,(0.13, -0.77),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.14, -0.89),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.75),(0.13, -0.83),(-0.30, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.91, -0.75),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.77, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.35rad)
cetz.draw.content((-0.66, -1.00),angle:0.35rad,[k[0]])
cetz.draw.hobby((-0.48, -0.87),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.21, -0.42),node4.pos,decoration:"wave",angle:1.03rad)
cetz.draw.content((-0.32, -0.36),angle:1.03rad,[q])
cetz.draw.hobby((-0.42, -0.68),(-0.26, -0.38),(-0.06, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, -0.13),node1.pos,decoration:"wave",angle:-1.67rad)
cetz.draw.content((0.88, -0.14),angle:-1.67rad,[q])
cetz.draw.hobby((0.83, 0.35),(0.82, -0.11),(0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.19, 0.32),node2.pos,decoration:"arrow",angle:5.99rad)
cetz.draw.content((-0.15, 0.44),angle:5.99rad,[-p+k[3]])
cetz.draw.hobby((0.33, 0.20),(-0.14, 0.37),(-0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.06rad)
cetz.draw.content((-0.77, 0.18),angle:-2.06rad,[-p+2 k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.97rad)
cetz.draw.content((0.73, 0.17),angle:2.97rad,[-p+2 k[3]])
cetz.draw.hobby((0.91, 0.08),(0.54, 0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.99, 0.68),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.10),node4.pos,decoration:"arrow",angle:-2.76rad)
cetz.draw.content((0.32, -0.22),angle:-2.76rad,[k[3]])
cetz.draw.hobby((0.47, 0.03),(0.30, -0.16),(0.05, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.34),node5.pos,decoration:"arrow",angle:0.58rad)
cetz.draw.content((0.28, 0.44),angle:0.58rad,[q+k[3]])
cetz.draw.hobby((0.02, 0.05),(0.28, 0.36),(0.65, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding33i4=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.78))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.02, -0.06))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:6.18rad)
cetz.draw.content((-0.14, -0.89),angle:6.18rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.74, -0.78),angle:5.93rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.66rad)
cetz.draw.content((-0.87, -0.14),angle:1.66rad,[q])
cetz.draw.hobby((-0.74, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.08, -0.09),(0.27, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.18, 0.33),node2.pos,decoration:"arrow",angle:6.58rad)
cetz.draw.content((0.15, 0.45),angle:6.58rad,[-p+k[3]])
cetz.draw.hobby((0.62, 0.50),(0.13, 0.38),(-0.34, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.96rad)
cetz.draw.content((-0.69, -0.07),angle:-2.96rad,[-p+2 k[3]])
cetz.draw.hobby((-0.52, 0.03),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.06rad)
cetz.draw.content((0.98, 0.29),angle:2.06rad,[-p+2 k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.09),node2.pos,decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.31, -0.20),angle:2.78rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.13rad)
cetz.draw.content((0.77, 0.78),angle:1.13rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.26, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.64, 0.52),(-0.27, 0.37),(-0.01, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding33f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.62))
node(node0.pos)
let node1= (pos:(-0.57, -0.62))
node(node1.pos)
let node2= (pos:(0.35, 0.15))
node(node2.pos)
let node3= (pos:(-0.34, 0.15))
node(node3.pos)
let node4= (pos:(0.65, 0.49))
node(node4.pos)
let node5= (pos:(-0.65, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.87, -0.72),angle:5.56rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.71, -0.90),angle:0.72rad,[-q+k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.65),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.77),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.46, -0.69),(-0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.09),node4.pos,decoration:"wave",angle:1.49rad)
cetz.draw.content((0.78, -0.10),angle:1.49rad,[-q])
cetz.draw.hobby((0.66, -0.53),(0.72, -0.07),(0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.09),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[-q])
cetz.draw.hobby((-0.72, 0.38),(-0.72, -0.07),(-0.66, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((0.70, 0.19),angle:6.06rad,[-p-q+k[3]])
cetz.draw.hobby((0.92, 0.08),(0.46, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.22rad)
cetz.draw.content((-0.65, -0.04),angle:0.22rad,[-p-q+k[3]])
cetz.draw.hobby((-0.43, 0.07),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.08),node3.pos,decoration:"coil",angle:-3.14rad)
cetz.draw.content((0.00, -0.04),angle:-3.14rad,[-p-q+2 k[3]])
cetz.draw.hobby((0.30, 0.07),(0.00, 0.02),(-0.29, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.13, 0.40),node2.pos,decoration:"arrow",angle:-0.32rad)
cetz.draw.content((-0.10, 0.52),angle:-0.32rad,[k[3]])
cetz.draw.hobby((-0.53, 0.54),(-0.10, 0.46),(0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.40),node4.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.10, 0.52),angle:0.33rad,[k[3]])
cetz.draw.hobby((-0.29, 0.26),(0.10, 0.46),(0.54, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.97rad)
cetz.draw.content((0.73, 0.81),angle:0.97rad,[-q+k[3]])
cetz.draw.hobby((0.66, 0.61),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.92, 0.68),angle:5.32rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.75, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding34f0=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.69))
node(node0.pos)
let node1= (pos:(-0.55, -0.85))
node(node1.pos)
let node2= (pos:(0.57, 0.08))
node(node2.pos)
let node3= (pos:(0.09, 0.53))
node(node3.pos)
let node4= (pos:(-0.55, 0.42))
node(node4.pos)
let node5= (pos:(-0.31, -0.17))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((0.72, -0.74),angle:5.84rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.45, -0.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.33rad)
cetz.draw.content((-0.74, -1.04),angle:0.33rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.94),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.10, -0.82),node1.pos,decoration:"arrow",angle:0.18rad)
cetz.draw.content((-0.08, -0.93),angle:0.18rad,[k[0]])
cetz.draw.hobby((0.27, -0.78),(-0.09, -0.88),(-0.46, -0.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.14),node4.pos,decoration:"wave",angle:2.24rad)
cetz.draw.content((0.05, -0.07),angle:2.24rad,[-q])
cetz.draw.hobby((0.31, -0.53),(-0.02, -0.07),(-0.40, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, -0.51),node1.pos,decoration:"wave",angle:4.37rad)
cetz.draw.content((-0.58, -0.47),angle:4.37rad,[-q])
cetz.draw.hobby((-0.40, -0.20),(-0.52, -0.48),(-0.60, -0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.09rad)
cetz.draw.content((0.81, 0.16),angle:6.09rad,[-p+k[3]])
cetz.draw.hobby((0.91, 0.08),(0.68, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.40, 0.16),angle:0.45rad,[-p+k[3]])
cetz.draw.hobby((0.03, 0.43),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.37, 0.35),node3.pos,decoration:"coil",angle:2.40rad)
cetz.draw.content((0.46, 0.44),angle:2.40rad,[-p+2 k[3]])
cetz.draw.hobby((0.59, 0.17),(0.42, 0.40),(0.18, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.15, -0.05),node2.pos,decoration:"arrow",angle:0.28rad)
cetz.draw.content((0.19, -0.17),angle:0.28rad,[k[3]])
cetz.draw.hobby((-0.21, -0.21),(0.15, -0.12),(0.51, -0.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.49, 0.87),angle:0.48rad,[k[3]])
cetz.draw.hobby((0.15, 0.63),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.37rad)
cetz.draw.content((-0.87, 0.63),angle:5.37rad,[k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.65, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.48, 0.12),node5.pos,decoration:"arrow",angle:5.08rad)
cetz.draw.content((-0.59, 0.08),angle:5.08rad,[-q+k[3]])
cetz.draw.hobby((-0.60, 0.34),(-0.53, 0.09),(-0.40, -0.15),stroke:stroke,mark: (end: ">"))
})
let embedding34f1=cetz.canvas(length:50%,{
let node0= (pos:(0.43, -0.85))
node(node0.pos)
let node1= (pos:(-0.42, -0.85))
node(node1.pos)
let node2= (pos:(0.90, 0.44))
node(node2.pos)
let node3= (pos:(-0.90, 0.44))
node(node3.pos)
let node4= (pos:(-0.24, -0.10))
node(node4.pos)
let node5= (pos:(0.24, -0.10))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.74, -0.81),angle:6.03rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.92),(0.54, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.68, -1.04),angle:0.26rad,[-q+k[0]])
cetz.draw.hobby((-0.51, -0.93),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.92),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.04),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.36, -0.93),(0.00, -0.98),(-0.36, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.11, -0.50),node4.pos,decoration:"wave",angle:2.30rad)
cetz.draw.content((0.02, -0.58),angle:2.30rad,[-q])
cetz.draw.hobby((0.32, -0.82),(0.05, -0.52),(-0.22, -0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.11, -0.50),node1.pos,decoration:"wave",angle:-2.30rad)
cetz.draw.content((-0.02, -0.58),angle:-2.30rad,[-q])
cetz.draw.hobby((0.22, -0.22),(-0.04, -0.52),(-0.31, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.94rad)
cetz.draw.content((1.07, 0.25),angle:4.94rad,[-p+k[3]])
cetz.draw.hobby((1.04, 0.11),(0.98, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.83, 0.20),angle:1.34rad,[-p+k[3]])
cetz.draw.hobby((-0.86, 0.33),(-0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.39rad)
cetz.draw.content((0.83, 0.74),angle:1.39rad,[-p+2 k[3]])
cetz.draw.hobby((0.86, 0.55),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.89rad)
cetz.draw.content((-1.07, 0.70),angle:4.89rad,[-p+2 k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.97, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.58, 0.19),node2.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.50, 0.28),angle:0.69rad,[k[3]])
cetz.draw.hobby((0.27, 0.00),(0.53, 0.22),(0.79, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.57, 0.19),node4.pos,decoration:"arrow",angle:-0.69rad)
cetz.draw.content((-0.50, 0.28),angle:-0.69rad,[k[3]])
cetz.draw.hobby((-0.79, 0.44),(-0.52, 0.23),(-0.26, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.01, 0.02),node5.pos,decoration:"arrow",angle:-0.01rad)
cetz.draw.content((0.01, 0.14),angle:-0.01rad,[-q+k[3]])
cetz.draw.hobby((-0.24, -0.01),(0.00, 0.08),(0.25, -0.02),stroke:stroke,mark: (end: ">"))
})
let embedding34f2=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.84))
node(node0.pos)
let node1= (pos:(-0.33, -0.69))
node(node1.pos)
let node2= (pos:(-0.09, 0.53))
node(node2.pos)
let node3= (pos:(-0.57, 0.09))
node(node3.pos)
let node4= (pos:(0.31, -0.16))
node(node4.pos)
let node5= (pos:(0.55, 0.42))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.82, -0.81),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.67, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.62, -0.95),angle:0.44rad,[-q+k[0]])
cetz.draw.hobby((-0.40, -0.78),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.10, -0.81),node1.pos,decoration:"arrow",angle:6.11rad)
cetz.draw.content((0.08, -0.93),angle:6.11rad,[k[0]])
cetz.draw.hobby((0.46, -0.90),(0.09, -0.87),(-0.27, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.50),node4.pos,decoration:"wave",angle:1.91rad)
cetz.draw.content((0.58, -0.46),angle:1.91rad,[-q])
cetz.draw.hobby((0.60, -0.76),(0.52, -0.47),(0.40, -0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.04, -0.14),node1.pos,decoration:"wave",angle:4.05rad)
cetz.draw.content((-0.05, -0.07),angle:4.05rad,[-q])
cetz.draw.hobby((0.40, 0.36),(0.02, -0.07),(-0.31, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((0.51, 0.37),angle:5.83rad,[-p+k[3]])
cetz.draw.hobby((0.94, 0.10),(0.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.20rad)
cetz.draw.content((-0.76, -0.07),angle:0.20rad,[-p+k[3]])
cetz.draw.hobby((-0.66, 0.01),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.37, 0.36),node3.pos,decoration:"coil",angle:3.88rad)
cetz.draw.content((-0.45, 0.44),angle:3.88rad,[-p+2 k[3]])
cetz.draw.hobby((-0.18, 0.56),(-0.42, 0.40),(-0.59, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.91rad)
cetz.draw.content((0.68, 0.78),angle:0.91rad,[k[3]])
cetz.draw.hobby((0.56, 0.53),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.60, 0.66),angle:5.81rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.15, -0.05),node4.pos,decoration:"arrow",angle:6.01rad)
cetz.draw.content((-0.18, -0.16),angle:6.01rad,[k[3]])
cetz.draw.hobby((-0.51, -0.00),(-0.15, -0.11),(0.21, -0.20),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.48, 0.12),node5.pos,decoration:"arrow",angle:1.20rad)
cetz.draw.content((0.59, 0.08),angle:1.20rad,[-q+k[3]])
cetz.draw.hobby((0.40, -0.15),(0.53, 0.09),(0.60, 0.35),stroke:stroke,mark: (end: ">"))
})
let embedding34f3=cetz.canvas(length:50%,{
let node0= (pos:(0.36, -0.66))
node(node0.pos)
let node1= (pos:(-0.55, -0.89))
node(node1.pos)
let node2= (pos:(-0.59, 0.19))
node(node2.pos)
let node3= (pos:(0.72, 0.47))
node(node3.pos)
let node4= (pos:(-0.44, 0.46))
node(node4.pos)
let node5= (pos:(-0.48, -0.25))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.79rad)
cetz.draw.content((0.74, -0.72),angle:5.79rad,[-q+k[0]])
cetz.draw.hobby((0.94, -0.90),(0.47, -0.65),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.23rad)
cetz.draw.content((-0.75, -1.06),angle:0.23rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.97),(-0.89, -1.04),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.08, -0.81),node1.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.05, -0.93),angle:0.26rad,[k[0]])
cetz.draw.hobby((0.29, -0.75),(-0.07, -0.88),(-0.45, -0.94),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.10),node4.pos,decoration:"wave",angle:2.19rad)
cetz.draw.content((0.10, -0.03),angle:2.19rad,[-q])
cetz.draw.hobby((0.34, -0.51),(0.04, -0.04),(-0.31, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, -0.58),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((-0.66, -0.57),angle:4.61rad,[-q])
cetz.draw.hobby((-0.55, -0.30),(-0.60, -0.56),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, 0.35),node2.pos,decoration:"arrow",angle:6.49rad)
cetz.draw.content((0.06, 0.47),angle:6.49rad,[-p+k[3]])
cetz.draw.hobby((0.57, 0.51),(0.05, 0.40),(-0.48, 0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.71rad)
cetz.draw.content((-0.75, -0.02),angle:-2.71rad,[-p+2 k[3]])
cetz.draw.hobby((-0.66, 0.09),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.11rad)
cetz.draw.content((0.96, 0.30),angle:2.11rad,[-p+2 k[3]])
cetz.draw.hobby((1.00, 0.12),(0.82, 0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.07),node2.pos,decoration:"arrow",angle:1.84rad)
cetz.draw.content((-0.78, -0.10),angle:1.84rad,[k[3]])
cetz.draw.hobby((-0.56, -0.28),(-0.72, -0.08),(-0.68, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.75, 0.79),angle:1.08rad,[k[3]])
cetz.draw.hobby((0.71, 0.59),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((-0.81, 0.64),angle:5.51rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.56, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.11),node5.pos,decoration:"arrow",angle:-1.61rad)
cetz.draw.content((-0.22, 0.10),angle:-1.61rad,[-q+k[3]])
cetz.draw.hobby((-0.35, 0.42),(-0.28, 0.10),(-0.38, -0.22),stroke:stroke,mark: (end: ">"))
})
let embedding34f4=cetz.canvas(length:50%,{
let node0= (pos:(0.55, -0.89))
node(node0.pos)
let node1= (pos:(-0.36, -0.66))
node(node1.pos)
let node2= (pos:(-0.72, 0.47))
node(node2.pos)
let node3= (pos:(0.59, 0.19))
node(node3.pos)
let node4= (pos:(0.48, -0.25))
node(node4.pos)
let node5= (pos:(0.44, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.05rad)
cetz.draw.content((0.80, -0.83),angle:6.05rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.92),(0.66, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.49rad)
cetz.draw.content((-0.62, -0.94),angle:0.49rad,[-q+k[0]])
cetz.draw.hobby((-0.42, -0.76),(-0.88, -1.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.08, -0.82),node1.pos,decoration:"arrow",angle:6.03rad)
cetz.draw.content((0.05, -0.93),angle:6.03rad,[k[0]])
cetz.draw.hobby((0.45, -0.95),(0.07, -0.88),(-0.29, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.54, -0.58),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((0.66, -0.57),angle:1.67rad,[-q])
cetz.draw.hobby((0.61, -0.83),(0.60, -0.56),(0.55, -0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.01, -0.10),node1.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.11, -0.03),angle:4.10rad,[-q])
cetz.draw.hobby((0.31, 0.40),(-0.04, -0.04),(-0.34, -0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.09, 0.35),node2.pos,decoration:"arrow",angle:6.07rad)
cetz.draw.content((-0.06, 0.47),angle:6.07rad,[-p+k[3]])
cetz.draw.hobby((0.48, 0.28),(-0.05, 0.40),(-0.57, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.12rad)
cetz.draw.content((-0.75, 0.17),angle:-2.12rad,[-p+2 k[3]])
cetz.draw.hobby((-0.72, 0.35),(-0.90, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.71rad)
cetz.draw.content((0.85, 0.20),angle:2.71rad,[-p+2 k[3]])
cetz.draw.hobby((0.93, 0.10),(0.71, 0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((0.64, 0.82),angle:0.77rad,[k[3]])
cetz.draw.hobby((0.47, 0.57),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.21rad)
cetz.draw.content((-0.96, 0.68),angle:5.21rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.82, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.66, -0.07),node4.pos,decoration:"arrow",angle:-1.84rad)
cetz.draw.content((0.78, -0.10),angle:-1.84rad,[k[3]])
cetz.draw.hobby((0.68, 0.18),(0.72, -0.08),(0.56, -0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.11),node5.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((0.22, 0.10),angle:1.61rad,[-q+k[3]])
cetz.draw.hobby((0.38, -0.22),(0.28, 0.10),(0.35, 0.42),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [1, 0, -1, 1] content: -2 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-2,11:1,=-1
11:1,13:0,15:0,17:0,=1
],box[#embedding1i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:1,15:0,17:0,=1
],box[#embedding1i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:0,15:1,17:0,=1
],box[#embedding1i3 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:2,15:0,17:0,=1
],box[#embedding1i4 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:0,15:2,17:0,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 2 [1, 1, -1, 1] content: -2 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:-1,11:0,=-1
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:0,15:1,17:0,=1
],box[#embedding2f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-2,11:1,=-1
11:1,13:0,15:0,17:0,=1
],box[#embedding2f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:1,15:0,17:0,=1
],box[#embedding2f3 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:0,15:2,17:0,=1
],box[#embedding2f4 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:2,15:0,17:0,=1
],)
pagebreak()
[= embedding 3 [1, 2, -1, 1] content: -2 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 0:0,2:1,=1
0:0,5:0,7:0,17:2,=2
8:0,11:-1,=-1
11:-1,13:0,15:0,17:2,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,p-q+k[3]]^-1 prop[0,p-q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 0:1,2:0,=1
0:1,5:0,7:0,17:1,=2
8:-1,11:0,=-1
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[= embedding 4 [1, 0, -2, -1] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/8 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 dot[p,p]^-1
	+1/8 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 dot[p,p]^-1
	-1/8 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 dot[p,p]^-2
	-1/8 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 dot[p,p]^-2
	+1/16 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:-1,=-2
11:-1,13:0,15:0,17:0,=-1
],box[#embedding4i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-2,11:0,=-2
11:0,13:-1,15:0,17:0,=-1
],box[#embedding4i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-2,11:0,=-2
11:0,13:0,15:-1,17:0,=-1
],box[#embedding4i3 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-2,=-2
11:-2,13:1,15:0,17:0,=-1
],box[#embedding4i4 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-2,=-2
11:-2,13:0,15:1,17:0,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:-2,11:0,=-2
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[= embedding 5 [1, 0, -1, 0] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:1,15:0,17:0,=0
],box[#embedding5i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:0,15:0,17:0,=0
],box[#embedding5i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:0,15:1,17:0,=0
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 6 [1, 0, 0, 1] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-2 prop[0,-p+q]^-1 prop[0,-p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,-p+k[2]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:1,=0
11:1,13:0,15:0,17:0,=1
],box[#embedding6i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:0,=0
11:0,13:0,15:1,17:0,=1
],box[#embedding6i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:0,=0
11:0,13:1,15:0,17:0,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 7 [1, 0, 1, 2] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:2,=1
11:2,13:0,15:0,17:0,=2
],box[#embedding7i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:2,15:0,17:0,=2
],box[#embedding7i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:0,15:2,17:0,=2
],box[#embedding7i3 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:1,15:0,17:0,=2
],box[#embedding7i4 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:0,15:1,17:0,=2
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 8 [1, 1, -2, -1] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1
	-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
	+1/16 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
	-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1
	-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:0,11:-2,=-2
11:-2,13:0,15:0,17:1,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-2,11:0,=-2
11:0,13:0,15:-1,17:0,=-1
],box[#embedding8f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:-1,=-2
11:-1,13:0,15:0,17:0,=-1
],box[#embedding8f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-2,11:0,=-2
11:0,13:-1,15:0,17:0,=-1
],box[#embedding8f3 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-2,=-2
11:-2,13:0,15:1,17:0,=-1
],box[#embedding8f4 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-2,=-2
11:-2,13:1,15:0,17:0,=-1
],)
pagebreak()
[= embedding 9 [1, 1, -1, 0] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:0,11:-1,=-1
11:-1,13:0,15:0,17:1,=0
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:0,15:1,17:0,=0
],box[#embedding9f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:1,15:0,17:0,=0
],box[#embedding9f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:0,15:0,17:0,=0
],)
pagebreak()
[= embedding 10 [1, 1, 0, 1] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-2 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:0,11:0,=0
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-2 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:1,=0
11:1,13:0,15:0,17:0,=1
],box[#embedding10f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:0,=0
11:0,13:0,15:1,17:0,=1
],box[#embedding10f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:0,=0
11:0,13:1,15:0,17:0,=1
],)
pagebreak()
[= embedding 11 [1, 1, 1, 2] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:0,11:1,=1
11:1,13:0,15:0,17:1,=2
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:0,15:2,17:0,=2
],box[#embedding11f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:2,=1
11:2,13:0,15:0,17:0,=2
],box[#embedding11f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:2,15:0,17:0,=2
],box[#embedding11f3 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:0,15:1,17:0,=2
],box[#embedding11f4 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:1,15:0,17:0,=2
],)
pagebreak()
[= embedding 12 [1, 2, -1, 0] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p-q]^-1 prop[0,-q+k[3]]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12f0 0:1,2:0,=1
0:1,5:0,7:0,17:1,=2
8:0,11:-1,=-1
11:-1,13:0,15:0,17:1,=0
],)
pagebreak()
[= embedding 13 [1, 2, 0, 1] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p+q]^-2 prop[0,-p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13f0 0:1,2:0,=1
0:1,5:0,7:0,17:1,=2
8:0,11:0,=0
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[= embedding 14 [1, 2, 1, 2] content: -1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
	+(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14i0 0:0,2:1,=1
0:0,5:0,7:0,17:2,=2
8:1,11:0,=1
11:0,13:0,15:0,17:2,=2
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p+q-k[3]]^-1 prop[0,-p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14f0 0:1,2:0,=1
0:1,5:0,7:0,17:1,=2
8:0,11:1,=1
11:1,13:0,15:0,17:1,=2
],)
pagebreak()
[= embedding 15 [1, -1, -1, -1] content: 0 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding15i0 0:0,2:1,=1
0:0,5:0,7:0,17:-1,=-1
8:-1,11:0,=-1
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 16 [1, 0, -1, -1] content: 0 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:-1,15:0,17:0,=-1
],box[#embedding16i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:0,15:-1,17:0,=-1
],box[#embedding16i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:0,15:0,17:0,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,-q+k[3]]^-1 prop[0,p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:-1,11:0,=-1
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[= embedding 17 [1, 0, 1, 1] content: 0 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding17i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:1,15:0,17:0,=1
],box[#embedding17i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:0,15:1,17:0,=1
],box[#embedding17i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:0,15:0,17:0,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 18 [1, 1, -1, -1] content: 0 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p-k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding18f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:0,15:-1,17:0,=-1
],box[#embedding18f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:-1,15:0,17:0,=-1
],box[#embedding18f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:0,15:0,17:0,=-1
],)
pagebreak()
[= embedding 19 [1, 1, 1, 1] content: 0 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding19i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:1,11:0,=1
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding19f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:0,15:1,17:0,=1
],box[#embedding19f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:1,15:0,17:0,=1
],box[#embedding19f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:0,15:0,17:0,=1
],)
pagebreak()
[= embedding 20 [1, 2, 1, 1] content: 0 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p+q]^-1 prop[0,-q+k[3]]^-1 prop[0,-p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding20f0 0:1,2:0,=1
0:1,5:0,7:0,17:1,=2
8:1,11:0,=1
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[= embedding 21 [1, -1, -1, -2] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding21i0 0:0,2:1,=1
0:0,5:0,7:0,17:-1,=-1
8:0,11:-1,=-1
11:-1,13:0,15:0,17:-1,=-2
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,p+2 q-k[3]]^-1 prop[0,p+2 q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding21f0 0:1,2:0,=1
0:1,5:0,7:0,17:-2,=-1
8:-1,11:0,=-1
11:0,13:0,15:0,17:-2,=-2
],)
pagebreak()
[= embedding 22 [1, -1, 0, -1] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p-q]^-2 prop[0,p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-2 prop[0,k[2]]^-1 prop[0,p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding22i0 0:0,2:1,=1
0:0,5:0,7:0,17:-1,=-1
8:0,11:0,=0
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 23 [1, -1, 1, 0] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding23i0 0:0,2:1,=1
0:0,5:0,7:0,17:-1,=-1
8:0,11:1,=1
11:1,13:0,15:0,17:-1,=0
],)
pagebreak()
[== final
Denominator: 
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[= embedding 24 [1, 0, -1, -2] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding24i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:-2,=-1
11:-2,13:0,15:0,17:0,=-2
],box[#embedding24i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:-2,15:0,17:0,=-2
],box[#embedding24i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:-1,11:0,=-1
11:0,13:0,15:-2,17:0,=-2
],box[#embedding24i3 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:-1,15:0,17:0,=-2
],box[#embedding24i4 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:-1,=-1
11:-1,13:0,15:-1,17:0,=-2
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,p+q-k[3]]^-1 prop[0,p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding24f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:0,11:-1,=-1
11:-1,13:0,15:0,17:-1,=-2
],)
pagebreak()
[= embedding 25 [1, 0, 0, -1] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-2 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding25i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:-1,=0
11:-1,13:0,15:0,17:0,=-1
],box[#embedding25i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:0,=0
11:0,13:0,15:-1,17:0,=-1
],box[#embedding25i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:0,=0
11:0,13:-1,15:0,17:0,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-2 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding25f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:0,11:0,=0
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[= embedding 26 [1, 0, 1, 0] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding26i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:-1,15:0,17:0,=0
],box[#embedding26i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:0,15:0,17:0,=0
],box[#embedding26i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:0,15:-1,17:0,=0
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding26f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:0,11:1,=1
11:1,13:0,15:0,17:-1,=0
],)
pagebreak()
[= embedding 27 [1, 0, 2, 1] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/8 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 dot[p,p]^-1
	+1/8 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 dot[p,p]^-1
	-1/8 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 dot[p,p]^-2
	-1/8 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 dot[p,p]^-2
	+1/16 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding27i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:1,=2
11:1,13:0,15:0,17:0,=1
],box[#embedding27i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:2,11:0,=2
11:0,13:1,15:0,17:0,=1
],box[#embedding27i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:2,11:0,=2
11:0,13:0,15:1,17:0,=1
],box[#embedding27i3 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:2,=2
11:2,13:-1,15:0,17:0,=1
],box[#embedding27i4 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:2,=2
11:2,13:0,15:-1,17:0,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding27f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:0,11:2,=2
11:2,13:0,15:0,17:-1,=1
],)
pagebreak()
[= embedding 28 [1, 1, -1, -2] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding28f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:0,15:-2,17:0,=-2
],box[#embedding28f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:-2,=-1
11:-2,13:0,15:0,17:0,=-2
],box[#embedding28f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:-1,11:0,=-1
11:0,13:-2,15:0,17:0,=-2
],box[#embedding28f3 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:0,15:-1,17:0,=-2
],box[#embedding28f4 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:-1,=-1
11:-1,13:-1,15:0,17:0,=-2
],)
pagebreak()
[= embedding 29 [1, 1, 0, -1] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-2 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding29f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:-1,=0
11:-1,13:0,15:0,17:0,=-1
],box[#embedding29f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:0,=0
11:0,13:0,15:-1,17:0,=-1
],box[#embedding29f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:0,=0
11:0,13:-1,15:0,17:0,=-1
],)
pagebreak()
[= embedding 30 [1, 1, 1, 0] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,-p+k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding30f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:0,15:-1,17:0,=0
],box[#embedding30f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:-1,15:0,17:0,=0
],box[#embedding30f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:0,15:0,17:0,=0
],)
pagebreak()
[= embedding 31 [1, 1, 2, 1] content: 1 with multiplicity 1
 == initial
Denominator:
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
	+1/16 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
	-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-1/8 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding31i0 0:0,2:1,=1
0:0,5:0,7:0,17:1,=1
8:2,11:0,=2
11:0,13:0,15:0,17:1,=1
],)
pagebreak()
[== final
Denominator: 
```mathematica
1/16 prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding31f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:2,11:0,=2
11:0,13:0,15:1,17:0,=1
],box[#embedding31f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:1,=2
11:1,13:0,15:0,17:0,=1
],box[#embedding31f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:2,11:0,=2
11:0,13:1,15:0,17:0,=1
],box[#embedding31f3 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:2,=2
11:2,13:0,15:-1,17:0,=1
],box[#embedding31f4 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:2,=2
11:2,13:-1,15:0,17:0,=1
],)
pagebreak()
[= embedding 32 [1, -1, 1, -1] content: 2 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding32i0 0:0,2:1,=1
0:0,5:0,7:0,17:-1,=-1
8:1,11:0,=1
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-2 q+k[3]]^-1 prop[0,-p-2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding32f0 0:1,2:0,=1
0:1,5:0,7:0,17:-2,=-1
8:0,11:1,=1
11:1,13:0,15:0,17:-2,=-1
],)
pagebreak()
[= embedding 33 [1, 0, 1, -1] content: 2 with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding33i0 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:2,11:-1,=1
11:-1,13:0,15:0,17:0,=-1
],box[#embedding33i1 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:-1,15:0,17:0,=-1
],box[#embedding33i2 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:1,11:0,=1
11:0,13:0,15:-1,17:0,=-1
],box[#embedding33i3 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:-2,15:0,17:0,=-1
],box[#embedding33i4 0:0,2:1,=1
0:0,5:0,7:0,17:0,=0
8:0,11:1,=1
11:1,13:0,15:-2,17:0,=-1
],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-q+k[3]]^-1 prop[0,-p-q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding33f0 0:1,2:0,=1
0:1,5:0,7:0,17:-1,=0
8:1,11:0,=1
11:0,13:0,15:0,17:-1,=-1
],)
pagebreak()
[= embedding 34 [1, 1, 1, -1] content: 2 with multiplicity 1
 == initial
Denominator:
```mathematica
0
```Partial Fractioned Denominator:
```mathematica
0
```]
grid(columns: cols,gutter: 20pt,)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p+k[3]]^-1 prop[0,-q+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding34f0 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:0,15:-1,17:0,=-1
],box[#embedding34f1 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:2,11:-1,=1
11:-1,13:0,15:0,17:0,=-1
],box[#embedding34f2 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:1,11:0,=1
11:0,13:-1,15:0,17:0,=-1
],box[#embedding34f3 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:0,15:-2,17:0,=-1
],box[#embedding34f4 0:1,2:0,=1
0:1,5:0,7:0,17:0,=1
8:0,11:1,=1
11:1,13:-2,15:0,17:0,=-1
],)
pagebreak()
}