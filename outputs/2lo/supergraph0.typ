#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, -0.10))
node(node0.pos)
let node1= (pos:(-0.42, 0.67))
node(node1.pos)
let node2= (pos:(-0.59, 0.66))
node(node2.pos)
let node3= (pos:(-0.56, 0.19))
node(node3.pos)
let node4= (pos:(-0.25, 0.28))
node(node4.pos)
let node5= (pos:(-0.33, 0.82))
node(node5.pos)
edge(node1.pos,(-0.42, 0.31),node0.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((-0.54, 0.31),angle:1.61rad,[0])
cetz.draw.hobby((-0.48, 0.60),(-0.48, 0.29),(-0.46, -0.02),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.95rad)
cetz.draw.content((-0.58, 0.81),angle:4.95rad,[k[0]])
cetz.draw.hobby((-0.54, 0.89),(-0.50, 0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.83rad)
cetz.draw.content((-0.33, -0.33),angle:-1.83rad,[-k[0]])
cetz.draw.hobby((-0.36, -0.21),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, 0.07),node4.pos,decoration:"wave",angle:-1.94rad)
cetz.draw.content((-0.18, 0.03),angle:-1.94rad,[0])
cetz.draw.hobby((-0.32, -0.10),(-0.23, 0.06),(-0.20, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.29, 0.71),node1.pos,decoration:"wave",angle:1.20rad)
cetz.draw.content((-0.18, 0.67),angle:1.20rad,[0])
cetz.draw.hobby((-0.26, 0.84),(-0.25, 0.66),(-0.42, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.62, 0.42),node2.pos,decoration:"arrow",angle:4.78rad)
cetz.draw.content((-0.74, 0.41),angle:4.78rad,[0])
cetz.draw.hobby((-0.64, 0.22),(-0.68, 0.42),(-0.66, 0.63),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.45rad)
cetz.draw.content((-0.66, 0.86),angle:4.45rad,[p-k[3]])
cetz.draw.hobby((-0.62, 0.78),(-0.58, 0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.90rad)
cetz.draw.content((-0.42, 0.13),angle:1.90rad,[-p+k[3]])
cetz.draw.hobby((-0.48, 0.11),(-0.48, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:5.47rad)
cetz.draw.content((-0.50, 0.83),angle:5.47rad,[k[3]])
cetz.draw.hobby((-0.44, 0.85),(-0.48, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:-1.06rad)
cetz.draw.content((-0.44, 0.64),angle:-1.06rad,[-k[3]])
cetz.draw.hobby((-0.50, 0.62),(-0.49, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.22),node4.pos,decoration:"arrow",angle:-2.88rad)
cetz.draw.content((-0.37, 0.10),angle:-2.88rad,[0])
cetz.draw.hobby((-0.53, 0.14),(-0.39, 0.16),(-0.26, 0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.26, 0.53),node5.pos,decoration:"arrow",angle:-1.45rad)
cetz.draw.content((-0.14, 0.55),angle:-1.45rad,[0])
cetz.draw.hobby((-0.19, 0.33),(-0.20, 0.56),(-0.25, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, -0.10))
node(node0.pos)
let node1= (pos:(-0.31, 0.69))
node(node1.pos)
let node2= (pos:(-0.57, 0.82))
node(node2.pos)
let node3= (pos:(-0.61, 0.54))
node(node3.pos)
let node4= (pos:(-0.47, 0.29))
node(node4.pos)
let node5= (pos:(-0.31, 0.55))
node(node5.pos)
edge(node1.pos,(-0.31, 0.27),node0.pos,decoration:"arrow",angle:1.46rad)
cetz.draw.content((-0.19, 0.26),angle:1.46rad,[0])
cetz.draw.hobby((-0.25, 0.61),(-0.25, 0.28),(-0.31, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.25rad)
cetz.draw.content((-0.51, 0.78),angle:5.25rad,[k[0]])
cetz.draw.hobby((-0.50, 0.88),(-0.42, 0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.84rad)
cetz.draw.content((-0.33, -0.33),angle:-1.84rad,[-k[0]])
cetz.draw.hobby((-0.36, -0.21),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.43, 0.09),node4.pos,decoration:"wave",angle:4.92rad)
cetz.draw.content((-0.55, 0.06),angle:4.92rad,[0])
cetz.draw.hobby((-0.46, -0.07),(-0.49, 0.08),(-0.52, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.20, 0.63),node1.pos,decoration:"wave",angle:-1.44rad)
cetz.draw.content((-0.08, 0.64),angle:-1.44rad,[0])
cetz.draw.hobby((-0.28, 0.48),(-0.14, 0.62),(-0.29, 0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, 0.69),node2.pos,decoration:"arrow",angle:4.54rad)
cetz.draw.content((-0.77, 0.71),angle:4.54rad,[0])
cetz.draw.hobby((-0.68, 0.54),(-0.71, 0.70),(-0.63, 0.84),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.37rad)
cetz.draw.content((-0.65, 0.95),angle:4.37rad,[p-k[3]])
cetz.draw.hobby((-0.59, 0.93),(-0.59, 0.93),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.78rad)
cetz.draw.content((-0.44, 0.29),angle:1.78rad,[-p+k[3]])
cetz.draw.hobby((-0.46, 0.11),(-0.53, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.45, 0.70),node2.pos,decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.54, 0.61),angle:5.46rad,[0])
cetz.draw.hobby((-0.38, 0.53),(-0.48, 0.64),(-0.59, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((-0.67, 0.80),angle:4.47rad,[k[3]])
cetz.draw.hobby((-0.65, 0.65),(-0.58, 0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:1.71rad)
cetz.draw.content((-0.60, 0.38),angle:1.71rad,[-k[3]])
cetz.draw.hobby((-0.55, 0.39),(-0.54, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.39),node5.pos,decoration:"arrow",angle:-2.16rad)
cetz.draw.content((-0.26, 0.32),angle:-2.16rad,[0])
cetz.draw.hobby((-0.41, 0.26),(-0.30, 0.36),(-0.25, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, 0.65))
node(node0.pos)
let node1= (pos:(-0.44, -0.11))
node(node1.pos)
let node2= (pos:(-0.45, 0.76))
node(node2.pos)
let node3= (pos:(-0.50, 0.30))
node(node3.pos)
let node4= (pos:(-0.62, 0.79))
node(node4.pos)
let node5= (pos:(-0.61, 0.36))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.06rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.71rad)
edge(node0.pos,(-0.36, 0.26),node1.pos,decoration:"arrow",angle:1.47rad)
edge(node0.pos,(-0.54, 0.68),node4.pos,decoration:"wave",angle:5.72rad)
edge(node5.pos,(-0.55, 0.11),node1.pos,decoration:"wave",angle:1.93rad)
edge(node3.pos,(-0.42, 0.50),node2.pos,decoration:"arrow",angle:-1.72rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.91rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.58rad)
edge(node5.pos,(-0.58, 0.58),node2.pos,decoration:"arrow",angle:4.32rad)
edge(node3.pos,(-0.63, 0.53),node4.pos,decoration:"arrow",angle:4.95rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:4.18rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:0.89rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.36, -0.06))
node(node0.pos)
let node1= (pos:(-0.29, 0.68))
node(node1.pos)
let node2= (pos:(-0.59, 0.29))
node(node2.pos)
let node3= (pos:(-0.62, 0.72))
node(node3.pos)
let node4= (pos:(-0.41, 0.40))
node(node4.pos)
let node5= (pos:(-0.39, 0.83))
node(node5.pos)
edge(node1.pos,(-0.28, 0.29),node0.pos,decoration:"arrow",angle:1.47rad)
cetz.draw.content((-0.16, 0.28),angle:1.47rad,[0])
cetz.draw.hobby((-0.22, 0.61),(-0.22, 0.30),(-0.28, -0.01),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.29rad)
cetz.draw.content((-0.50, 0.78),angle:5.29rad,[k[0]])
cetz.draw.hobby((-0.50, 0.88),(-0.40, 0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.88rad)
cetz.draw.content((-0.32, -0.32),angle:-1.88rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.17),(-0.41, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.38, 0.15),node4.pos,decoration:"wave",angle:-1.48rad)
cetz.draw.content((-0.26, 0.16),angle:-1.48rad,[0])
cetz.draw.hobby((-0.30, -0.01),(-0.32, 0.18),(-0.34, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.26, 0.81),node1.pos,decoration:"wave",angle:2.15rad)
cetz.draw.content((-0.16, 0.88),angle:2.15rad,[0])
cetz.draw.hobby((-0.39, 0.90),(-0.21, 0.85),(-0.22, 0.66),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.87rad)
cetz.draw.content((-0.43, 0.18),angle:1.87rad,[-p+k[3]])
cetz.draw.hobby((-0.47, 0.11),(-0.50, 0.22),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:1.18rad)
cetz.draw.content((-0.67, 0.91),angle:1.18rad,[p-k[3]])
cetz.draw.hobby((-0.63, 0.84),(-0.59, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.66, 0.50),node3.pos,decoration:"coil",angle:4.78rad)
cetz.draw.content((-0.78, 0.49),angle:4.78rad,[0])
cetz.draw.hobby((-0.67, 0.30),(-0.72, 0.50),(-0.69, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:5.27rad)
cetz.draw.content((-0.55, 0.85),angle:5.27rad,[k[3]])
cetz.draw.hobby((-0.50, 0.88),(-0.50, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:1.16rad)
cetz.draw.content((-0.65, 0.44),angle:1.16rad,[-k[3]])
cetz.draw.hobby((-0.59, 0.43),(-0.60, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.57),node4.pos,decoration:"arrow",angle:2.13rad)
cetz.draw.content((-0.64, 0.51),angle:2.13rad,[0])
cetz.draw.hobby((-0.65, 0.66),(-0.58, 0.52),(-0.48, 0.39),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.40, 0.60),node5.pos,decoration:"arrow",angle:-1.60rad)
cetz.draw.content((-0.28, 0.60),angle:-1.60rad,[0])
cetz.draw.hobby((-0.34, 0.44),(-0.34, 0.61),(-0.33, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, 0.03))
node(node0.pos)
let node1= (pos:(-0.32, 0.68))
node(node1.pos)
let node2= (pos:(-0.32, 0.80))
node(node2.pos)
let node3= (pos:(-0.40, 0.45))
node(node3.pos)
let node4= (pos:(-0.27, 0.26))
node(node4.pos)
let node5= (pos:(-0.19, 0.56))
node(node5.pos)
edge(node1.pos,(-0.30, 0.37),node0.pos,decoration:"arrow",angle:1.58rad)
cetz.draw.content((-0.18, 0.37),angle:1.58rad,[0])
cetz.draw.hobby((-0.25, 0.62),(-0.24, 0.36),(-0.25, 0.09),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.76rad)
cetz.draw.content((-0.45, 0.84),angle:4.76rad,[k[0]])
cetz.draw.hobby((-0.39, 0.90),(-0.38, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.63rad)
cetz.draw.content((-0.20, -0.16),angle:-1.63rad,[-k[0]])
cetz.draw.hobby((-0.26, -0.07),(-0.27, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, 0.14),node4.pos,decoration:"wave",angle:-1.74rad)
cetz.draw.content((-0.17, 0.12),angle:-1.74rad,[0])
cetz.draw.hobby((-0.25, 0.04),(-0.23, 0.14),(-0.22, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.26, 0.61),node1.pos,decoration:"wave",angle:5.52rad)
cetz.draw.content((-0.34, 0.53),angle:5.52rad,[0])
cetz.draw.hobby((-0.24, 0.52),(-0.30, 0.57),(-0.36, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.62),node2.pos,decoration:"arrow",angle:4.52rad)
cetz.draw.content((-0.51, 0.64),angle:4.52rad,[0])
cetz.draw.hobby((-0.46, 0.49),(-0.45, 0.65),(-0.39, 0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.33, 1.00),decoration:"coil",angle:4.77rad)
cetz.draw.content((-0.45, 0.89),angle:4.77rad,[p])
cetz.draw.hobby((-0.39, 0.90),(-0.39, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.33, 0.33),decoration:"coil",angle:2.09rad)
cetz.draw.content((-0.26, 0.45),angle:2.09rad,[-p])
cetz.draw.hobby((-0.33, 0.45),(-0.30, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.22, 0.70),node2.pos,decoration:"arrow",angle:-1.07rad)
cetz.draw.content((-0.11, 0.76),angle:-1.07rad,[0])
cetz.draw.hobby((-0.13, 0.59),(-0.16, 0.73),(-0.26, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.34),node4.pos,decoration:"arrow",angle:2.05rad)
cetz.draw.content((-0.50, 0.29),angle:2.05rad,[0])
cetz.draw.hobby((-0.47, 0.43),(-0.43, 0.29),(-0.32, 0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.41),node5.pos,decoration:"arrow",angle:-1.84rad)
cetz.draw.content((-0.10, 0.38),angle:-1.84rad,[0])
cetz.draw.hobby((-0.21, 0.26),(-0.16, 0.39),(-0.13, 0.53),stroke:stroke,mark: (end: ">"))
})
let embedding2i2=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node1.pos,(0.91, 0.93),node0.pos,decoration:"arrow",angle:4.41rad)
cetz.draw.content((0.79, 0.97),angle:4.41rad,[0])
cetz.draw.hobby((5.57, 8.20),(32.14, -7.30),(1.56, -10.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.07, 0.23),angle:5.35rad,[k[0]])
cetz.draw.hobby((-0.49, 0.88),(0.44, -0.36),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.05, -0.76),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.35, -0.81),(-0.42, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((0.18, -0.39),angle:4.79rad,[0])
cetz.draw.hobby((0.35, -0.73),(0.24, -0.27),(0.42, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.65, -0.57),angle:-1.79rad,[0])
cetz.draw.hobby((-0.02, 0.21),(-0.57, -0.75),(0.53, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.52rad)
cetz.draw.content((-0.36, 0.33),angle:1.52rad,[-p+k[3]])
cetz.draw.hobby((-0.44, 0.10),(-0.41, 0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:2.07rad)
cetz.draw.content((-0.28, 0.35),angle:2.07rad,[p-k[3]])
cetz.draw.hobby((0.04, -0.13),(-0.51, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.76),node3.pos,decoration:"coil",angle:2.68rad)
cetz.draw.content((0.19, 0.87),angle:2.68rad,[0])
cetz.draw.hobby((-0.34, 0.82),(0.39, 0.63),(0.33, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, -0.57),node2.pos,decoration:"arrow",angle:1.60rad)
cetz.draw.content((0.57, -0.56),angle:1.60rad,[0])
cetz.draw.hobby((0.51, -0.65),(-1.78, -1.71),(-1.22, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
cetz.draw.content((-0.28, 0.35),angle:5.21rad,[k[3]])
cetz.draw.hobby((0.04, -0.13),(-0.51, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.01, 0.23),angle:2.86rad,[-k[3]])
cetz.draw.hobby((-0.42, 0.41),(0.43, 0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:0.03rad)
cetz.draw.content((0.26, 0.90),angle:0.03rad,[0])
cetz.draw.hobby((0.68, 0.36),(0.10, 0.81),(0.05, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, 0.65))
node(node0.pos)
let node1= (pos:(-0.38, -0.10))
node(node1.pos)
let node2= (pos:(-0.65, 0.23))
node(node2.pos)
let node3= (pos:(-0.61, 0.76))
node(node3.pos)
let node4= (pos:(-0.36, 0.90))
node(node4.pos)
let node5= (pos:(-0.46, 0.29))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.13rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.87rad)
edge(node0.pos,(-0.31, 0.27),node1.pos,decoration:"arrow",angle:1.53rad)
edge(node0.pos,(-0.28, 0.78),node4.pos,decoration:"wave",angle:-1.51rad)
edge(node5.pos,(-0.40, 0.08),node1.pos,decoration:"wave",angle:1.76rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:2.14rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:1.13rad)
edge(node2.pos,(-0.66, 0.50),node3.pos,decoration:"coil",angle:4.64rad)
edge(node5.pos,(-0.54, 0.20),node2.pos,decoration:"arrow",angle:0.23rad)
edge(node3.pos,(-0.50, 0.83),node4.pos,decoration:"arrow",angle:3.65rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:5.65rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:1.77rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node1.pos,(0.91, 0.93),node0.pos,decoration:"arrow",angle:4.41rad)
cetz.draw.content((0.79, 0.97),angle:4.41rad,[0])
cetz.draw.hobby((5.57, 8.20),(32.14, -7.30),(1.56, -10.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.07, 0.23),angle:5.35rad,[k[0]])
cetz.draw.hobby((-0.49, 0.88),(0.44, -0.36),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.05, -0.76),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.35, -0.81),(-0.42, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((0.18, -0.39),angle:4.79rad,[0])
cetz.draw.hobby((0.35, -0.73),(0.24, -0.27),(0.42, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.65, -0.57),angle:-1.79rad,[0])
cetz.draw.hobby((-0.02, 0.21),(-0.57, -0.75),(0.53, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.81rad)
cetz.draw.content((-0.60, 0.82),angle:4.81rad,[k[2]])
cetz.draw.hobby((-0.55, 0.89),(-0.54, 0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:2.85rad)
cetz.draw.content((-0.21, -0.21),angle:2.85rad,[-k[2]])
cetz.draw.hobby((0.03, -0.22),(-0.42, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.81rad)
cetz.draw.content((-0.60, 0.82),angle:4.81rad,[p+k[2]])
cetz.draw.hobby((-0.54, 0.76),(-0.55, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.50),decoration:"coil",angle:5.46rad)
cetz.draw.content((-0.27, 0.07),angle:5.46rad,[-p-k[2]])
cetz.draw.hobby((-0.48, 0.39),(0.03, -0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, -0.57),node2.pos,decoration:"arrow",angle:1.60rad)
cetz.draw.content((0.57, -0.56),angle:1.60rad,[0])
cetz.draw.hobby((0.51, -0.65),(-1.78, -1.71),(-1.22, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.97, -0.14),node4.pos,decoration:"arrow",angle:5.68rad)
cetz.draw.content((-1.04, -0.24),angle:5.68rad,[0])
cetz.draw.hobby((-0.45, -0.38),(-1.15, 1.54),(0.75, 0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:0.03rad)
cetz.draw.content((0.26, 0.90),angle:0.03rad,[0])
cetz.draw.hobby((0.68, 0.36),(0.10, 0.81),(0.05, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.36, 0.09))
node(node0.pos)
let node1= (pos:(-0.39, 0.71))
node(node1.pos)
let node2= (pos:(-0.22, 0.28))
node(node2.pos)
let node3= (pos:(-0.09, 0.37))
node(node3.pos)
let node4= (pos:(-0.27, 0.48))
node(node4.pos)
let node5= (pos:(-0.30, 0.83))
node(node5.pos)
edge(node1.pos,(-0.40, 0.40),node0.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((-0.52, 0.40),angle:1.61rad,[0])
cetz.draw.hobby((-0.46, 0.65),(-0.46, 0.40),(-0.43, 0.14),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.52rad)
cetz.draw.content((-0.48, 0.88),angle:4.52rad,[k[0]])
cetz.draw.hobby((-0.41, 0.91),(-0.43, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.50rad)
cetz.draw.content((-0.23, -0.11),angle:-1.50rad,[-k[0]])
cetz.draw.hobby((-0.30, -0.00),(-0.28, -0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.34, 0.27),node4.pos,decoration:"wave",angle:4.49rad)
cetz.draw.content((-0.45, 0.30),angle:4.49rad,[0])
cetz.draw.hobby((-0.42, 0.14),(-0.39, 0.30),(-0.34, 0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, 0.80),node1.pos,decoration:"wave",angle:0.93rad)
cetz.draw.content((-0.47, 0.87),angle:0.93rad,[0])
cetz.draw.hobby((-0.33, 0.89),(-0.42, 0.83),(-0.45, 0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.11, 0.27),node2.pos,decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.03, 0.18),angle:0.70rad,[0])
cetz.draw.hobby((-0.02, 0.37),(-0.07, 0.22),(-0.22, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.17, 0.34),node3.pos,decoration:"coil",angle:3.81rad)
cetz.draw.content((-0.24, 0.44),angle:3.81rad,[0])
cetz.draw.hobby((-0.26, 0.32),(-0.20, 0.39),(-0.12, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.33, 1.00),decoration:"arrow",angle:4.92rad)
cetz.draw.content((-0.43, 0.89),angle:4.92rad,[p])
cetz.draw.hobby((-0.38, 0.92),(-0.37, 0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.33, 0.33),decoration:"arrow",angle:2.69rad)
cetz.draw.content((-0.33, 0.20),angle:2.69rad,[-p])
cetz.draw.hobby((-0.27, 0.24),(-0.33, 0.27),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.17, 0.45),node4.pos,decoration:"arrow",angle:-0.51rad)
cetz.draw.content((-0.11, 0.56),angle:-0.51rad,[0])
cetz.draw.hobby((-0.05, 0.43),(-0.14, 0.50),(-0.25, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.27, 0.65),node5.pos,decoration:"arrow",angle:-1.49rad)
cetz.draw.content((-0.15, 0.66),angle:-1.49rad,[0])
cetz.draw.hobby((-0.21, 0.51),(-0.21, 0.66),(-0.23, 0.81),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, 0.03))
node(node0.pos)
let node1= (pos:(-0.37, 0.66))
node(node1.pos)
let node2= (pos:(-0.16, 0.78))
node(node2.pos)
let node3= (pos:(-0.23, 0.94))
node(node3.pos)
let node4= (pos:(-0.27, 0.27))
node(node4.pos)
let node5= (pos:(-0.21, 0.53))
node(node5.pos)
edge(node1.pos,(-0.38, 0.35),node0.pos,decoration:"arrow",angle:1.60rad)
cetz.draw.content((-0.50, 0.35),angle:1.60rad,[0])
cetz.draw.hobby((-0.43, 0.60),(-0.44, 0.34),(-0.42, 0.08),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((-0.47, 0.84),angle:4.61rad,[k[0]])
cetz.draw.hobby((-0.40, 0.91),(-0.42, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.54rad)
cetz.draw.content((-0.22, -0.15),angle:-1.54rad,[-k[0]])
cetz.draw.hobby((-0.28, -0.07),(-0.28, -0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.30, 0.14),node4.pos,decoration:"wave",angle:-1.90rad)
cetz.draw.content((-0.19, 0.10),angle:-1.90rad,[0])
cetz.draw.hobby((-0.28, 0.03),(-0.25, 0.13),(-0.21, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.30, 0.59),node1.pos,decoration:"wave",angle:5.57rad)
cetz.draw.content((-0.38, 0.50),angle:5.57rad,[0])
cetz.draw.hobby((-0.26, 0.49),(-0.34, 0.54),(-0.40, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.23, 0.85),node2.pos,decoration:"arrow",angle:1.96rad)
cetz.draw.content((-0.34, 0.80),angle:1.96rad,[0])
cetz.draw.hobby((-0.30, 0.93),(-0.28, 0.82),(-0.21, 0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.15, 0.88),node3.pos,decoration:"coil",angle:-1.14rad)
cetz.draw.content((-0.04, 0.93),angle:-1.14rad,[0])
cetz.draw.hobby((-0.09, 0.77),(-0.09, 0.90),(-0.19, 0.99),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.17, 0.65),node2.pos,decoration:"arrow",angle:-1.79rad)
cetz.draw.content((-0.05, 0.62),angle:-1.79rad,[0])
cetz.draw.hobby((-0.15, 0.53),(-0.11, 0.64),(-0.10, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.33, 1.00),decoration:"arrow",angle:5.75rad)
cetz.draw.content((-0.34, 0.87),angle:5.75rad,[p])
cetz.draw.hobby((-0.35, 0.94),(-0.28, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),decoration:"arrow",angle:2.36rad)
cetz.draw.content((-0.38, 0.21),angle:2.36rad,[-p])
cetz.draw.hobby((-0.30, 0.22),(-0.38, 0.29),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.23, 0.40),node5.pos,decoration:"arrow",angle:-1.76rad)
cetz.draw.content((-0.11, 0.37),angle:-1.76rad,[0])
cetz.draw.hobby((-0.20, 0.27),(-0.17, 0.39),(-0.16, 0.50),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, 0.71))
node(node0.pos)
let node1= (pos:(-0.35, 0.04))
node(node1.pos)
let node2= (pos:(-0.13, 0.47))
node(node2.pos)
let node3= (pos:(-0.13, 0.66))
node(node3.pos)
let node4= (pos:(-0.28, 0.88))
node(node4.pos)
let node5= (pos:(-0.26, 0.26))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.58rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.54rad)
edge(node0.pos,(-0.38, 0.38),node1.pos,decoration:"arrow",angle:1.61rad)
edge(node0.pos,(-0.34, 0.80),node4.pos,decoration:"wave",angle:4.22rad)
edge(node5.pos,(-0.30, 0.14),node1.pos,decoration:"wave",angle:1.21rad)
edge(node3.pos,(-0.17, 0.57),node2.pos,decoration:"arrow",angle:1.59rad)
edge(node2.pos,(-0.08, 0.57),node3.pos,decoration:"coil",angle:-1.56rad)
edge(node5.pos,(-0.19, 0.36),node2.pos,decoration:"arrow",angle:-2.13rad)
edge(node3.pos,(-0.19, 0.78),node4.pos,decoration:"arrow",angle:-0.98rad)
edge(node4.pos,(-0.33, 1.00),decoration:"arrow",angle:5.14rad)
edge(node5.pos,(-0.33, 0.33),decoration:"arrow",angle:2.31rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.36, -0.10))
node(node0.pos)
let node1= (pos:(-0.31, 0.67))
node(node1.pos)
let node2= (pos:(-0.59, 0.67))
node(node2.pos)
let node3= (pos:(-0.63, 0.19))
node(node3.pos)
let node4= (pos:(-0.40, 0.29))
node(node4.pos)
let node5= (pos:(-0.42, 0.79))
node(node5.pos)
edge(node1.pos,(-0.27, 0.29),node0.pos,decoration:"arrow",angle:1.51rad)
cetz.draw.content((-0.15, 0.28),angle:1.51rad,[0])
cetz.draw.hobby((-0.23, 0.60),(-0.21, 0.28),(-0.27, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.23rad)
cetz.draw.content((-0.51, 0.77),angle:5.23rad,[k[0]])
cetz.draw.hobby((-0.50, 0.88),(-0.41, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.91rad)
cetz.draw.content((-0.31, -0.34),angle:-1.91rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.21),(-0.41, -0.43),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.36, 0.08),node4.pos,decoration:"wave",angle:-1.46rad)
cetz.draw.content((-0.24, 0.10),angle:-1.46rad,[0])
cetz.draw.hobby((-0.29, -0.06),(-0.30, 0.11),(-0.33, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.28, 0.79),node1.pos,decoration:"wave",angle:2.23rad)
cetz.draw.content((-0.19, 0.87),angle:2.23rad,[0])
cetz.draw.hobby((-0.43, 0.86),(-0.24, 0.84),(-0.24, 0.65),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.44rad)
cetz.draw.content((-0.66, 0.87),angle:4.44rad,[-p+k[3]])
cetz.draw.hobby((-0.58, 0.92),(-0.62, 0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:-0.97rad)
cetz.draw.content((-0.47, 0.16),angle:-0.97rad,[p-k[3]])
cetz.draw.hobby((-0.52, 0.14),(-0.51, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.43),node3.pos,decoration:"coil",angle:1.50rad)
cetz.draw.content((-0.77, 0.44),angle:1.50rad,[0])
cetz.draw.hobby((-0.67, 0.64),(-0.71, 0.44),(-0.70, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:5.09rad)
cetz.draw.content((-0.57, 0.85),angle:5.09rad,[k[3]])
cetz.draw.hobby((-0.51, 0.86),(-0.52, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:-1.06rad)
cetz.draw.content((-0.44, 0.64),angle:-1.06rad,[-k[3]])
cetz.draw.hobby((-0.50, 0.62),(-0.49, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.52, 0.23),node4.pos,decoration:"arrow",angle:-2.74rad)
cetz.draw.content((-0.47, 0.12),angle:-2.74rad,[0])
cetz.draw.hobby((-0.59, 0.14),(-0.49, 0.18),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.40, 0.52),node5.pos,decoration:"arrow",angle:-1.55rad)
cetz.draw.content((-0.28, 0.53),angle:-1.55rad,[0])
cetz.draw.hobby((-0.34, 0.34),(-0.34, 0.54),(-0.35, 0.75),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, -0.10))
node(node0.pos)
let node1= (pos:(-0.31, 0.69))
node(node1.pos)
let node2= (pos:(-0.57, 0.82))
node(node2.pos)
let node3= (pos:(-0.61, 0.54))
node(node3.pos)
let node4= (pos:(-0.47, 0.29))
node(node4.pos)
let node5= (pos:(-0.31, 0.55))
node(node5.pos)
edge(node1.pos,(-0.31, 0.28),node0.pos,decoration:"arrow",angle:1.46rad)
cetz.draw.content((-0.19, 0.26),angle:1.46rad,[0])
cetz.draw.hobby((-0.25, 0.61),(-0.25, 0.29),(-0.31, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.25rad)
cetz.draw.content((-0.51, 0.78),angle:5.25rad,[k[0]])
cetz.draw.hobby((-0.50, 0.88),(-0.42, 0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.84rad)
cetz.draw.content((-0.33, -0.33),angle:-1.84rad,[-k[0]])
cetz.draw.hobby((-0.36, -0.21),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.43, 0.09),node4.pos,decoration:"wave",angle:4.92rad)
cetz.draw.content((-0.55, 0.06),angle:4.92rad,[0])
cetz.draw.hobby((-0.46, -0.07),(-0.49, 0.09),(-0.52, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.20, 0.63),node1.pos,decoration:"wave",angle:-1.45rad)
cetz.draw.content((-0.08, 0.64),angle:-1.45rad,[0])
cetz.draw.hobby((-0.28, 0.48),(-0.14, 0.62),(-0.29, 0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.36rad)
cetz.draw.content((-0.65, 0.95),angle:4.36rad,[-p+k[3]])
cetz.draw.hobby((-0.59, 0.93),(-0.59, 0.93),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.36rad)
cetz.draw.content((-0.44, 0.29),angle:-1.36rad,[p-k[3]])
cetz.draw.hobby((-0.53, 0.45),(-0.46, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.65, 0.69),node3.pos,decoration:"coil",angle:1.41rad)
cetz.draw.content((-0.77, 0.71),angle:1.41rad,[0])
cetz.draw.hobby((-0.63, 0.84),(-0.71, 0.70),(-0.68, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.45, 0.70),node2.pos,decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.54, 0.61),angle:5.46rad,[0])
cetz.draw.hobby((-0.38, 0.53),(-0.48, 0.64),(-0.59, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((-0.67, 0.80),angle:4.47rad,[k[3]])
cetz.draw.hobby((-0.65, 0.65),(-0.58, 0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:1.71rad)
cetz.draw.content((-0.60, 0.38),angle:1.71rad,[-k[3]])
cetz.draw.hobby((-0.55, 0.39),(-0.54, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.39),node5.pos,decoration:"arrow",angle:-2.15rad)
cetz.draw.content((-0.25, 0.33),angle:-2.15rad,[0])
cetz.draw.hobby((-0.41, 0.26),(-0.30, 0.36),(-0.25, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, 0.66))
node(node0.pos)
let node1= (pos:(-0.39, -0.09))
node(node1.pos)
let node2= (pos:(-0.66, 0.72))
node(node2.pos)
let node3= (pos:(-0.64, 0.31))
node(node3.pos)
let node4= (pos:(-0.48, 0.80))
node(node4.pos)
let node5= (pos:(-0.49, 0.35))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.16rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.83rad)
edge(node0.pos,(-0.32, 0.28),node1.pos,decoration:"arrow",angle:1.49rad)
edge(node0.pos,(-0.34, 0.78),node4.pos,decoration:"wave",angle:-0.86rad)
edge(node5.pos,(-0.44, 0.12),node1.pos,decoration:"wave",angle:1.80rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.19rad)
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.16rad)
edge(node2.pos,(-0.72, 0.51),node3.pos,decoration:"coil",angle:1.64rad)
edge(node5.pos,(-0.61, 0.54),node2.pos,decoration:"arrow",angle:5.11rad)
edge(node3.pos,(-0.55, 0.57),node4.pos,decoration:"arrow",angle:-1.89rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:4.83rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:1.62rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, 0.03))
node(node0.pos)
let node1= (pos:(-0.32, 0.68))
node(node1.pos)
let node2= (pos:(-0.32, 0.80))
node(node2.pos)
let node3= (pos:(-0.40, 0.45))
node(node3.pos)
let node4= (pos:(-0.28, 0.26))
node(node4.pos)
let node5= (pos:(-0.19, 0.56))
node(node5.pos)
edge(node1.pos,(-0.30, 0.37),node0.pos,decoration:"arrow",angle:1.58rad)
cetz.draw.content((-0.18, 0.37),angle:1.58rad,[0])
cetz.draw.hobby((-0.25, 0.62),(-0.24, 0.36),(-0.25, 0.09),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.76rad)
cetz.draw.content((-0.45, 0.84),angle:4.76rad,[k[0]])
cetz.draw.hobby((-0.39, 0.90),(-0.38, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.63rad)
cetz.draw.content((-0.20, -0.16),angle:-1.63rad,[-k[0]])
cetz.draw.hobby((-0.26, -0.07),(-0.27, -0.24),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, 0.14),node4.pos,decoration:"wave",angle:-1.73rad)
cetz.draw.content((-0.17, 0.12),angle:-1.73rad,[0])
cetz.draw.hobby((-0.25, 0.04),(-0.23, 0.14),(-0.22, 0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.26, 0.61),node1.pos,decoration:"wave",angle:5.51rad)
cetz.draw.content((-0.34, 0.53),angle:5.51rad,[0])
cetz.draw.hobby((-0.24, 0.52),(-0.30, 0.57),(-0.36, 0.63),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.33, 1.00),decoration:"arrow",angle:4.77rad)
cetz.draw.content((-0.45, 0.89),angle:4.77rad,[-p])
cetz.draw.hobby((-0.39, 0.90),(-0.39, 0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.33, 0.33),decoration:"arrow",angle:-1.05rad)
cetz.draw.content((-0.26, 0.45),angle:-1.05rad,[p])
cetz.draw.hobby((-0.30, 0.39),(-0.33, 0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.39, 0.62),node3.pos,decoration:"coil",angle:1.37rad)
cetz.draw.content((-0.51, 0.64),angle:1.37rad,[0])
cetz.draw.hobby((-0.39, 0.80),(-0.45, 0.64),(-0.46, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.22, 0.70),node2.pos,decoration:"arrow",angle:-1.07rad)
cetz.draw.content((-0.11, 0.76),angle:-1.07rad,[0])
cetz.draw.hobby((-0.13, 0.59),(-0.16, 0.73),(-0.26, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.39, 0.34),node4.pos,decoration:"arrow",angle:2.05rad)
cetz.draw.content((-0.50, 0.28),angle:2.05rad,[0])
cetz.draw.hobby((-0.47, 0.43),(-0.43, 0.29),(-0.32, 0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.22, 0.41),node5.pos,decoration:"arrow",angle:-1.84rad)
cetz.draw.content((-0.10, 0.37),angle:-1.84rad,[0])
cetz.draw.hobby((-0.21, 0.26),(-0.16, 0.39),(-0.13, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.04))
node(node0.pos)
let node1= (pos:(-0.42, 0.70))
node(node1.pos)
let node2= (pos:(-0.58, 0.29))
node(node2.pos)
let node3= (pos:(-0.57, 0.70))
node(node3.pos)
let node4= (pos:(-0.25, 0.44))
node(node4.pos)
let node5= (pos:(-0.30, 0.88))
node(node5.pos)
edge(node1.pos,(-0.39, 0.32),node0.pos,decoration:"arrow",angle:1.64rad)
cetz.draw.content((-0.27, 0.32),angle:1.64rad,[0])
cetz.draw.hobby((-0.35, 0.63),(-0.33, 0.33),(-0.31, 0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.98rad)
cetz.draw.content((-0.57, 0.82),angle:4.98rad,[k[0]])
cetz.draw.hobby((-0.53, 0.89),(-0.50, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.85rad)
cetz.draw.content((-0.32, -0.30),angle:-1.85rad,[-k[0]])
cetz.draw.hobby((-0.34, -0.16),(-0.41, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.29, 0.18),node4.pos,decoration:"wave",angle:-1.82rad)
cetz.draw.content((-0.17, 0.15),angle:-1.82rad,[0])
cetz.draw.hobby((-0.29, -0.02),(-0.23, 0.18),(-0.20, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.31, 0.78),node1.pos,decoration:"wave",angle:1.05rad)
cetz.draw.content((-0.21, 0.72),angle:1.05rad,[0])
cetz.draw.hobby((-0.23, 0.86),(-0.27, 0.73),(-0.37, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.63, 0.49),node2.pos,decoration:"arrow",angle:1.57rad)
cetz.draw.content((-0.75, 0.49),angle:1.57rad,[0])
cetz.draw.hobby((-0.65, 0.69),(-0.69, 0.50),(-0.66, 0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"coil",angle:1.84rad)
cetz.draw.content((-0.42, 0.18),angle:1.84rad,[p-k[3]])
cetz.draw.hobby((-0.50, 0.21),(-0.47, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:4.47rad)
cetz.draw.content((-0.65, 0.88),angle:4.47rad,[-p+k[3]])
cetz.draw.hobby((-0.58, 0.92),(-0.61, 0.82),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:5.77rad)
cetz.draw.content((-0.46, 0.84),angle:5.77rad,[k[3]])
cetz.draw.hobby((-0.41, 0.88),(-0.44, 0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.50),decoration:"arrow",angle:1.20rad)
cetz.draw.content((-0.65, 0.44),angle:1.20rad,[-k[3]])
cetz.draw.hobby((-0.59, 0.43),(-0.60, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.55),node4.pos,decoration:"arrow",angle:2.47rad)
cetz.draw.content((-0.48, 0.45),angle:2.47rad,[0])
cetz.draw.hobby((-0.59, 0.63),(-0.46, 0.51),(-0.32, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.22, 0.66),node5.pos,decoration:"arrow",angle:-1.50rad)
cetz.draw.content((-0.10, 0.67),angle:-1.50rad,[0])
cetz.draw.hobby((-0.18, 0.47),(-0.16, 0.68),(-0.22, 0.87),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node1.pos,(0.91, 0.93),node0.pos,decoration:"arrow",angle:4.41rad)
cetz.draw.content((0.79, 0.97),angle:4.41rad,[0])
cetz.draw.hobby((5.57, 8.20),(32.14, -7.30),(1.56, -10.68),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.07, 0.23),angle:5.35rad,[k[0]])
cetz.draw.hobby((-0.49, 0.88),(0.44, -0.36),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.05, -0.76),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.35, -0.81),(-0.42, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((0.18, -0.39),angle:4.79rad,[0])
cetz.draw.hobby((0.35, -0.73),(0.24, -0.27),(0.42, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.65, -0.57),angle:-1.79rad,[0])
cetz.draw.hobby((-0.02, 0.21),(-0.57, -0.75),(0.53, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.82, -0.83),node2.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((0.75, -0.92),angle:2.48rad,[0])
cetz.draw.hobby((2.75, -1.83),(8.17, 6.20),(-1.18, 3.65),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"coil",angle:1.52rad)
cetz.draw.content((-0.36, 0.33),angle:1.52rad,[p-k[3]])
cetz.draw.hobby((-0.41, 0.56),(-0.44, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:5.21rad)
cetz.draw.content((-0.28, 0.35),angle:5.21rad,[-p+k[3]])
cetz.draw.hobby((-0.51, 0.88),(0.04, -0.13),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.45, -0.57),node2.pos,decoration:"arrow",angle:1.60rad)
cetz.draw.content((0.57, -0.56),angle:1.60rad,[0])
cetz.draw.hobby((0.51, -0.65),(-1.78, -1.71),(-1.22, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
cetz.draw.content((-0.28, 0.35),angle:5.21rad,[k[3]])
cetz.draw.hobby((0.04, -0.13),(-0.51, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:2.86rad)
cetz.draw.content((-0.01, 0.23),angle:2.86rad,[-k[3]])
cetz.draw.hobby((-0.42, 0.41),(0.43, 0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:0.03rad)
cetz.draw.content((0.26, 0.90),angle:0.03rad,[0])
cetz.draw.hobby((0.68, 0.36),(0.10, 0.81),(0.05, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, 0.65))
node(node0.pos)
let node1= (pos:(-0.62, -0.10))
node(node1.pos)
let node2= (pos:(-0.35, 0.23))
node(node2.pos)
let node3= (pos:(-0.39, 0.76))
node(node3.pos)
let node4= (pos:(-0.64, 0.90))
node(node4.pos)
let node5= (pos:(-0.54, 0.29))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.29rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.27rad)
edge(node0.pos,(-0.69, 0.27),node1.pos,decoration:"arrow",angle:1.61rad)
edge(node0.pos,(-0.72, 0.78),node4.pos,decoration:"wave",angle:4.65rad)
edge(node5.pos,(-0.60, 0.08),node1.pos,decoration:"wave",angle:1.38rad)
edge(node3.pos,(-0.34, 0.50),node2.pos,decoration:"arrow",angle:1.64rad)
edge(node2.pos,(-0.50, 0.00),decoration:"coil",angle:1.00rad)
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:5.15rad)
edge(node5.pos,(-0.46, 0.20),node2.pos,decoration:"arrow",angle:2.92rad)
edge(node3.pos,(-0.50, 0.83),node4.pos,decoration:"arrow",angle:-0.51rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:3.78rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:1.38rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.10))
node(node0.pos)
let node1= (pos:(-0.66, 0.65))
node(node1.pos)
let node2= (pos:(-0.39, 0.76))
node(node2.pos)
let node3= (pos:(-0.35, 0.23))
node(node3.pos)
let node4= (pos:(-0.54, 0.29))
node(node4.pos)
let node5= (pos:(-0.64, 0.90))
node(node5.pos)
edge(node1.pos,(-0.69, 0.28),node0.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((-0.81, 0.27),angle:1.61rad,[0])
cetz.draw.hobby((-0.73, 0.59),(-0.75, 0.27),(-0.70, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.29rad)
cetz.draw.content((-0.69, 0.87),angle:4.29rad,[k[0]])
cetz.draw.hobby((-0.60, 0.93),(-0.67, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.27rad)
cetz.draw.content((-0.45, -0.26),angle:-1.27rad,[-k[0]])
cetz.draw.hobby((-0.54, -0.18),(-0.47, -0.39),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.60, 0.08),node4.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.72, 0.10),angle:4.52rad,[0])
cetz.draw.hobby((-0.68, -0.06),(-0.66, 0.11),(-0.61, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.72, 0.78),node1.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((-0.84, 0.79),angle:1.50rad,[0])
cetz.draw.hobby((-0.70, 0.93),(-0.78, 0.78),(-0.72, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.34, 0.50),node2.pos,decoration:"arrow",angle:-1.50rad)
cetz.draw.content((-0.22, 0.51),angle:-1.50rad,[0])
cetz.draw.hobby((-0.28, 0.28),(-0.28, 0.50),(-0.32, 0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:5.15rad)
cetz.draw.content((-0.55, 0.83),angle:5.15rad,[p+q+k[3]])
cetz.draw.hobby((-0.48, 0.83),(-0.51, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.00rad)
cetz.draw.content((-0.32, 0.05),angle:1.00rad,[-p-q-k[3]])
cetz.draw.hobby((-0.40, 0.05),(-0.35, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 0.83),node2.pos,decoration:"arrow",angle:2.63rad)
cetz.draw.content((-0.44, 0.94),angle:2.63rad,[0])
cetz.draw.hobby((-0.59, 0.94),(-0.48, 0.89),(-0.38, 0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.20),node4.pos,decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.48, 0.08),angle:6.06rad,[0])
cetz.draw.hobby((-0.34, 0.17),(-0.48, 0.14),(-0.59, 0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:4.52rad)
cetz.draw.content((-0.64, 0.42),angle:4.52rad,[-q-k[3]])
cetz.draw.hobby((-0.58, 0.40),(-0.58, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:0.63rad)
cetz.draw.content((-0.64, 1.05),angle:0.63rad,[q+k[3]])
cetz.draw.hobby((-0.62, 0.99),(-0.59, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.59, 0.61),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
edge(node3.pos,(0.82, -0.83),node2.pos,decoration:"arrow",angle:2.48rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:4.81rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:5.99rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:5.77rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.67rad)
edge(node3.pos,(-0.97, -0.14),node4.pos,decoration:"arrow",angle:5.68rad)
edge(node4.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:0.03rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, 0.67))
node(node0.pos)
let node1= (pos:(-0.33, 0.04))
node(node1.pos)
let node2= (pos:(-0.31, 0.47))
node(node2.pos)
let node3= (pos:(-0.27, 0.82))
node(node3.pos)
let node4= (pos:(-0.17, 0.59))
node(node4.pos)
let node5= (pos:(-0.19, 0.30))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.58rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.57rad)
edge(node0.pos,(-0.38, 0.34),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(-0.28, 0.62),node4.pos,decoration:"wave",angle:2.80rad)
edge(node5.pos,(-0.26, 0.16),node1.pos,decoration:"wave",angle:1.08rad)
edge(node2.pos,(-0.33, 0.33),decoration:"arrow",angle:1.39rad)
edge(node3.pos,(-0.33, 1.00),decoration:"arrow",angle:1.89rad)
edge(node2.pos,(-0.28, 0.66),node3.pos,decoration:"coil",angle:-1.66rad)
edge(node5.pos,(-0.25, 0.38),node2.pos,decoration:"arrow",angle:-0.98rad)
edge(node3.pos,(-0.20, 0.73),node4.pos,decoration:"arrow",angle:2.01rad)
edge(node4.pos,(-0.16, 0.45),node5.pos,decoration:"arrow",angle:1.50rad)
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, 0.64))
node(node0.pos)
let node1= (pos:(-0.50, -0.11))
node(node1.pos)
let node2= (pos:(-0.33, 0.74))
node(node2.pos)
let node3= (pos:(-0.46, 0.31))
node(node3.pos)
let node4= (pos:(-0.51, 0.80))
node(node4.pos)
let node5= (pos:(-0.29, 0.38))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.36rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.56rad)
edge(node0.pos,(-0.61, 0.24),node1.pos,decoration:"arrow",angle:1.75rad)
edge(node0.pos,(-0.64, 0.77),node4.pos,decoration:"wave",angle:4.11rad)
edge(node5.pos,(-0.38, 0.11),node1.pos,decoration:"wave",angle:1.16rad)
edge(node3.pos,(-0.38, 0.52),node2.pos,decoration:"arrow",angle:-1.87rad)
edge(node2.pos,(-0.50, 1.00),decoration:"coil",angle:5.29rad)
edge(node3.pos,(-0.50, 0.00),decoration:"coil",angle:1.46rad)
edge(node5.pos,(-0.24, 0.57),node2.pos,decoration:"arrow",angle:-1.46rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:4.90rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:1.54rad)
edge(node4.pos,(-0.41, 0.59),node5.pos,decoration:"arrow",angle:2.04rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.39, -0.09))
node(node0.pos)
let node1= (pos:(-0.34, 0.66))
node(node1.pos)
let node2= (pos:(-0.64, 0.31))
node(node2.pos)
let node3= (pos:(-0.66, 0.72))
node(node3.pos)
let node4= (pos:(-0.49, 0.35))
node(node4.pos)
let node5= (pos:(-0.48, 0.80))
node(node5.pos)
edge(node1.pos,(-0.32, 0.28),node0.pos,decoration:"arrow",angle:1.49rad)
cetz.draw.content((-0.20, 0.27),angle:1.49rad,[0])
cetz.draw.hobby((-0.27, 0.59),(-0.26, 0.28),(-0.31, -0.03),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.16rad)
cetz.draw.content((-0.53, 0.78),angle:5.16rad,[k[0]])
cetz.draw.hobby((-0.51, 0.88),(-0.43, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.83rad)
cetz.draw.content((-0.33, -0.32),angle:-1.83rad,[-k[0]])
cetz.draw.hobby((-0.36, -0.20),(-0.42, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.44, 0.12),node4.pos,decoration:"wave",angle:-1.34rad)
cetz.draw.content((-0.32, 0.14),angle:-1.34rad,[0])
cetz.draw.hobby((-0.34, -0.03),(-0.38, 0.15),(-0.42, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.34, 0.78),node1.pos,decoration:"wave",angle:2.28rad)
cetz.draw.content((-0.25, 0.86),angle:2.28rad,[0])
cetz.draw.hobby((-0.47, 0.87),(-0.30, 0.83),(-0.27, 0.66),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.46, 0.20),angle:1.99rad,[-p-q-k[3]])
cetz.draw.hobby((-0.49, 0.12),(-0.54, 0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:1.05rad)
cetz.draw.content((-0.68, 0.92),angle:1.05rad,[p+q+k[3]])
cetz.draw.hobby((-0.66, 0.84),(-0.60, 0.94),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.72, 0.51),node3.pos,decoration:"coil",angle:4.78rad)
cetz.draw.content((-0.84, 0.50),angle:4.78rad,[0])
cetz.draw.hobby((-0.71, 0.31),(-0.78, 0.51),(-0.74, 0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, 0.57),node2.pos,decoration:"arrow",angle:1.26rad)
cetz.draw.content((-0.43, 0.53),angle:1.26rad,[0])
cetz.draw.hobby((-0.43, 0.73),(-0.49, 0.53),(-0.56, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.61, 0.54),node4.pos,decoration:"arrow",angle:1.97rad)
cetz.draw.content((-0.72, 0.49),angle:1.97rad,[0])
cetz.draw.hobby((-0.71, 0.67),(-0.66, 0.50),(-0.57, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:4.76rad)
cetz.draw.content((-0.62, 0.42),angle:4.76rad,[-q-k[3]])
cetz.draw.hobby((-0.56, 0.44),(-0.55, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:1.68rad)
cetz.draw.content((-0.61, 0.88),angle:1.68rad,[q+k[3]])
cetz.draw.hobby((-0.55, 0.89),(-0.55, 0.89),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, 0.65))
node(node0.pos)
let node1= (pos:(-0.39, -0.11))
node(node1.pos)
let node2= (pos:(-0.58, 0.21))
node(node2.pos)
let node3= (pos:(-0.59, 0.67))
node(node3.pos)
let node4= (pos:(-0.33, 0.82))
node(node4.pos)
let node5= (pos:(-0.27, 0.31))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.96rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.86rad)
edge(node0.pos,(-0.39, 0.24),node1.pos,decoration:"arrow",angle:1.60rad)
edge(node0.pos,(-0.29, 0.71),node4.pos,decoration:"wave",angle:-1.82rad)
edge(node5.pos,(-0.30, 0.08),node1.pos,decoration:"wave",angle:1.28rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.93rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:1.30rad)
edge(node2.pos,(-0.63, 0.44),node3.pos,decoration:"coil",angle:4.74rad)
edge(node5.pos,(-0.44, 0.28),node2.pos,decoration:"arrow",angle:0.32rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:2.06rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:2.32rad)
edge(node4.pos,(-0.26, 0.55),node5.pos,decoration:"arrow",angle:1.68rad)
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, 0.62))
node(node0.pos)
let node1= (pos:(-0.44, -0.12))
node(node1.pos)
let node2= (pos:(-0.60, 0.57))
node(node2.pos)
let node3= (pos:(-0.41, 0.85))
node(node3.pos)
let node4= (pos:(-0.17, 0.61))
node(node4.pos)
let node5= (pos:(-0.35, 0.32))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.89rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.72rad)
edge(node0.pos,(-0.47, 0.23),node1.pos,decoration:"arrow",angle:1.57rad)
edge(node0.pos,(-0.29, 0.61),node4.pos,decoration:"wave",angle:3.09rad)
edge(node5.pos,(-0.38, 0.09),node1.pos,decoration:"wave",angle:1.35rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.74rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:2.11rad)
edge(node2.pos,(-0.55, 0.74),node3.pos,decoration:"coil",angle:4.14rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:5.41rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.35rad)
edge(node3.pos,(-0.25, 0.77),node4.pos,decoration:"arrow",angle:2.37rad)
edge(node4.pos,(-0.22, 0.44),node5.pos,decoration:"arrow",angle:1.00rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.35, 0.04))
node(node0.pos)
let node1= (pos:(-0.37, 0.71))
node(node1.pos)
let node2= (pos:(-0.13, 0.66))
node(node2.pos)
let node3= (pos:(-0.13, 0.47))
node(node3.pos)
let node4= (pos:(-0.26, 0.26))
node(node4.pos)
let node5= (pos:(-0.28, 0.88))
node(node5.pos)
edge(node1.pos,(-0.38, 0.38),node0.pos,decoration:"arrow",angle:1.61rad)
cetz.draw.content((-0.50, 0.38),angle:1.61rad,[0])
cetz.draw.hobby((-0.43, 0.64),(-0.44, 0.37),(-0.41, 0.10),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.33, 1.00),decoration:"arrow",angle:4.58rad)
cetz.draw.content((-0.47, 0.87),angle:4.58rad,[k[0]])
cetz.draw.hobby((-0.41, 0.91),(-0.42, 0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.54rad)
cetz.draw.content((-0.22, -0.14),angle:-1.54rad,[-k[0]])
cetz.draw.hobby((-0.28, -0.06),(-0.28, -0.23),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.30, 0.14),node4.pos,decoration:"wave",angle:-1.93rad)
cetz.draw.content((-0.19, 0.10),angle:-1.93rad,[0])
cetz.draw.hobby((-0.28, 0.04),(-0.24, 0.13),(-0.21, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.34, 0.80),node1.pos,decoration:"wave",angle:1.08rad)
cetz.draw.content((-0.45, 0.86),angle:1.08rad,[0])
cetz.draw.hobby((-0.33, 0.91),(-0.40, 0.83),(-0.43, 0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.08, 0.57),node2.pos,decoration:"arrow",angle:-1.56rad)
cetz.draw.content((0.04, 0.57),angle:-1.56rad,[0])
cetz.draw.hobby((-0.07, 0.44),(-0.02, 0.57),(-0.07, 0.69),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.17, 0.57),node3.pos,decoration:"coil",angle:1.59rad)
cetz.draw.content((-0.29, 0.56),angle:1.59rad,[0])
cetz.draw.hobby((-0.20, 0.68),(-0.23, 0.57),(-0.19, 0.46),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.19, 0.78),node2.pos,decoration:"arrow",angle:2.16rad)
cetz.draw.content((-0.09, 0.85),angle:2.16rad,[0])
cetz.draw.hobby((-0.22, 0.90),(-0.14, 0.81),(-0.09, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.19, 0.36),node4.pos,decoration:"arrow",angle:1.02rad)
cetz.draw.content((-0.09, 0.30),angle:1.02rad,[0])
cetz.draw.hobby((-0.09, 0.43),(-0.14, 0.33),(-0.20, 0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.39, 0.21),angle:5.46rad,[p])
cetz.draw.hobby((-0.38, 0.29),(-0.31, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.33, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-0.41, 0.89),angle:2.00rad,[-p])
cetz.draw.hobby((-0.35, 0.88),(-0.37, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.59, 0.61),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
edge(node2.pos,(-0.50, 0.00),decoration:"arrow",angle:1.52rad)
edge(node3.pos,(-0.50, 1.00),decoration:"arrow",angle:2.07rad)
edge(node2.pos,(-0.50, 0.50),decoration:"coil",angle:1.37rad)
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:5.21rad)
edge(node5.pos,(0.45, -0.57),node2.pos,decoration:"arrow",angle:1.60rad)
edge(node3.pos,(-0.97, -0.14),node4.pos,decoration:"arrow",angle:5.68rad)
edge(node4.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:0.03rad)
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, 0.66))
node(node0.pos)
let node1= (pos:(-0.35, 0.03))
node(node1.pos)
let node2= (pos:(-0.23, 0.94))
node(node2.pos)
let node3= (pos:(-0.16, 0.78))
node(node3.pos)
let node4= (pos:(-0.22, 0.53))
node(node4.pos)
let node5= (pos:(-0.27, 0.27))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.61rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.53rad)
edge(node0.pos,(-0.38, 0.35),node1.pos,decoration:"arrow",angle:1.60rad)
edge(node0.pos,(-0.30, 0.59),node4.pos,decoration:"wave",angle:2.44rad)
edge(node5.pos,(-0.30, 0.14),node1.pos,decoration:"wave",angle:1.24rad)
edge(node3.pos,(-0.23, 0.84),node2.pos,decoration:"arrow",angle:5.12rad)
edge(node2.pos,(-0.15, 0.88),node3.pos,decoration:"coil",angle:2.02rad)
edge(node5.pos,(-0.33, 0.33),decoration:"arrow",angle:5.48rad)
edge(node2.pos,(-0.33, 1.00),decoration:"arrow",angle:2.60rad)
edge(node3.pos,(-0.17, 0.65),node4.pos,decoration:"arrow",angle:1.34rad)
edge(node4.pos,(-0.23, 0.40),node5.pos,decoration:"arrow",angle:1.38rad)
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, 0.70))
node(node0.pos)
let node1= (pos:(-0.35, 0.06))
node(node1.pos)
let node2= (pos:(-0.06, 0.31))
node(node2.pos)
let node3= (pos:(-0.18, 0.41))
node(node3.pos)
let node4= (pos:(-0.30, 0.81))
node(node4.pos)
let node5= (pos:(-0.26, 0.37))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.54rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.52rad)
edge(node0.pos,(-0.39, 0.38),node1.pos,decoration:"arrow",angle:1.62rad)
edge(node0.pos,(-0.38, 0.78),node4.pos,decoration:"wave",angle:4.07rad)
edge(node5.pos,(-0.31, 0.20),node1.pos,decoration:"wave",angle:1.28rad)
edge(node3.pos,(-0.12, 0.34),node2.pos,decoration:"arrow",angle:2.47rad)
edge(node2.pos,(-0.07, 0.41),node3.pos,decoration:"coil",angle:-0.76rad)
edge(node5.pos,(-0.17, 0.28),node2.pos,decoration:"arrow",angle:2.89rad)
edge(node3.pos,(-0.33, 0.33),decoration:"arrow",angle:0.44rad)
edge(node4.pos,(-0.33, 1.00),decoration:"arrow",angle:1.76rad)
edge(node4.pos,(-0.28, 0.59),node5.pos,decoration:"arrow",angle:1.65rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.38, -0.10))
node(node0.pos)
let node1= (pos:(-0.35, 0.65))
node(node1.pos)
let node2= (pos:(-0.61, 0.76))
node(node2.pos)
let node3= (pos:(-0.65, 0.23))
node(node3.pos)
let node4= (pos:(-0.46, 0.29))
node(node4.pos)
let node5= (pos:(-0.36, 0.90))
node(node5.pos)
edge(node1.pos,(-0.31, 0.27),node0.pos,decoration:"arrow",angle:1.53rad)
cetz.draw.content((-0.19, 0.27),angle:1.53rad,[0])
cetz.draw.hobby((-0.27, 0.59),(-0.25, 0.27),(-0.30, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.53, 0.78),angle:5.13rad,[k[0]])
cetz.draw.hobby((-0.51, 0.88),(-0.44, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.87rad)
cetz.draw.content((-0.32, -0.34),angle:-1.87rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.21),(-0.41, -0.42),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.40, 0.08),node4.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((-0.28, 0.10),angle:-1.38rad,[0])
cetz.draw.hobby((-0.32, -0.06),(-0.34, 0.11),(-0.39, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.28, 0.78),node1.pos,decoration:"wave",angle:1.63rad)
cetz.draw.content((-0.16, 0.79),angle:1.63rad,[0])
cetz.draw.hobby((-0.30, 0.93),(-0.22, 0.78),(-0.28, 0.63),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.27rad)
cetz.draw.content((-0.66, 0.93),angle:4.27rad,[-p-q-k[3]])
cetz.draw.hobby((-0.60, 0.94),(-0.62, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.00rad)
cetz.draw.content((-0.47, 0.18),angle:-1.00rad,[p+q+k[3]])
cetz.draw.hobby((-0.55, 0.18),(-0.50, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.66, 0.50),node3.pos,decoration:"coil",angle:1.50rad)
cetz.draw.content((-0.78, 0.51),angle:1.50rad,[0])
cetz.draw.hobby((-0.68, 0.72),(-0.72, 0.50),(-0.72, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 0.83),node2.pos,decoration:"arrow",angle:0.51rad)
cetz.draw.content((-0.55, 0.94),angle:0.51rad,[0])
cetz.draw.hobby((-0.41, 0.94),(-0.52, 0.89),(-0.62, 0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.20),node4.pos,decoration:"arrow",angle:-2.92rad)
cetz.draw.content((-0.52, 0.08),angle:-2.92rad,[0])
cetz.draw.hobby((-0.67, 0.17),(-0.52, 0.14),(-0.41, 0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:4.91rad)
cetz.draw.content((-0.60, 0.37),angle:4.91rad,[-q-k[3]])
cetz.draw.hobby((-0.54, 0.37),(-0.54, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:2.52rad)
cetz.draw.content((-0.50, 0.85),angle:2.52rad,[q+k[3]])
cetz.draw.hobby((-0.45, 0.89),(-0.48, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, 0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.04))
node(node1.pos)
let node2= (pos:(-0.57, 0.70))
node(node2.pos)
let node3= (pos:(-0.58, 0.29))
node(node3.pos)
let node4= (pos:(-0.30, 0.89))
node(node4.pos)
let node5= (pos:(-0.25, 0.44))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.98rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.85rad)
edge(node0.pos,(-0.39, 0.32),node1.pos,decoration:"arrow",angle:1.64rad)
edge(node0.pos,(-0.31, 0.78),node4.pos,decoration:"wave",angle:-2.09rad)
edge(node5.pos,(-0.29, 0.18),node1.pos,decoration:"wave",angle:1.33rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.47rad)
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:-1.30rad)
edge(node2.pos,(-0.63, 0.49),node3.pos,decoration:"coil",angle:1.57rad)
edge(node5.pos,(-0.41, 0.55),node2.pos,decoration:"arrow",angle:5.62rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:4.34rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:2.63rad)
edge(node4.pos,(-0.22, 0.66),node5.pos,decoration:"arrow",angle:1.65rad)
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, 0.69))
node(node0.pos)
let node1= (pos:(-0.33, 0.04))
node(node1.pos)
let node2= (pos:(-0.31, 0.46))
node(node2.pos)
let node3= (pos:(-0.28, 0.81))
node(node3.pos)
let node4= (pos:(-0.17, 0.61))
node(node4.pos)
let node5= (pos:(-0.19, 0.31))
node(node5.pos)
edge(node0.pos,(-0.33, 1.00),decoration:"arrow",angle:4.60rad)
edge(node1.pos,(-0.33, -0.33),decoration:"arrow",angle:-1.58rad)
edge(node0.pos,(-0.38, 0.36),node1.pos,decoration:"arrow",angle:1.64rad)
edge(node0.pos,(-0.26, 0.65),node4.pos,decoration:"wave",angle:2.76rad)
edge(node5.pos,(-0.25, 0.17),node1.pos,decoration:"wave",angle:1.07rad)
edge(node3.pos,(-0.31, 0.62),node2.pos,decoration:"arrow",angle:1.50rad)
edge(node2.pos,(-0.33, 0.33),decoration:"coil",angle:1.41rad)
edge(node3.pos,(-0.33, 1.00),decoration:"coil",angle:4.97rad)
edge(node5.pos,(-0.25, 0.38),node2.pos,decoration:"arrow",angle:-0.90rad)
edge(node3.pos,(-0.20, 0.73),node4.pos,decoration:"arrow",angle:2.11rad)
edge(node4.pos,(-0.15, 0.46),node5.pos,decoration:"arrow",angle:1.50rad)
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.78))
node(node0.pos)
let node1= (pos:(0.55, -0.40))
node(node1.pos)
let node2= (pos:(-0.47, 0.66))
node(node2.pos)
let node3= (pos:(0.14, -0.19))
node(node3.pos)
let node4= (pos:(0.55, 0.20))
node(node4.pos)
let node5= (pos:(0.26, 0.07))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:5.21rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-3.05rad)
edge(node0.pos,(0.59, 0.61),node1.pos,decoration:"arrow",angle:1.65rad)
edge(node0.pos,(0.30, -0.38),node4.pos,decoration:"wave",angle:4.79rad)
edge(node5.pos,(0.53, -0.55),node1.pos,decoration:"wave",angle:-1.79rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:4.81rad)
edge(node3.pos,(-0.50, 0.00),decoration:"arrow",angle:2.85rad)
edge(node2.pos,(0.14, 0.76),node3.pos,decoration:"coil",angle:2.68rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:5.77rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.67rad)
edge(node3.pos,(-0.97, -0.14),node4.pos,decoration:"arrow",angle:5.68rad)
edge(node4.pos,(0.26, 0.78),node5.pos,decoration:"arrow",angle:0.03rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, -0.10))
node(node0.pos)
let node1= (pos:(-0.54, 0.67))
node(node1.pos)
let node2= (pos:(-0.63, 0.31))
node(node2.pos)
let node3= (pos:(-0.41, 0.72))
node(node3.pos)
let node4= (pos:(-0.35, 0.37))
node(node4.pos)
let node5= (pos:(-0.67, 0.82))
node(node5.pos)
edge(node1.pos,(-0.48, 0.26),node0.pos,decoration:"arrow",angle:1.72rad)
cetz.draw.content((-0.60, 0.24),angle:1.72rad,[0])
cetz.draw.hobby((-0.59, 0.58),(-0.55, 0.28),(-0.50, -0.03),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-0.50, 1.00),decoration:"arrow",angle:4.59rad)
cetz.draw.content((-0.64, 0.85),angle:4.59rad,[k[0]])
cetz.draw.hobby((-0.57, 0.91),(-0.59, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.74rad)
cetz.draw.content((-0.35, -0.32),angle:-1.74rad,[-k[0]])
cetz.draw.hobby((-0.39, -0.21),(-0.42, -0.41),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.36, 0.12),node4.pos,decoration:"wave",angle:-1.76rad)
cetz.draw.content((-0.25, 0.09),angle:-1.76rad,[0])
cetz.draw.hobby((-0.36, -0.08),(-0.30, 0.12),(-0.28, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.71),node1.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((-0.78, 0.65),angle:2.10rad,[0])
cetz.draw.hobby((-0.74, 0.82),(-0.71, 0.66),(-0.55, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.56, 0.49),node2.pos,decoration:"arrow",angle:1.08rad)
cetz.draw.content((-0.66, 0.55),angle:1.08rad,[0])
cetz.draw.hobby((-0.48, 0.72),(-0.59, 0.55),(-0.67, 0.38),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.00),decoration:"coil",angle:1.98rad)
cetz.draw.content((-0.46, 0.20),angle:1.98rad,[p+q+k[3]])
cetz.draw.hobby((-0.54, 0.24),(-0.48, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:5.04rad)
cetz.draw.content((-0.57, 0.82),angle:5.04rad,[-p-q-k[3]])
cetz.draw.hobby((-0.53, 0.89),(-0.49, 0.79),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.70, 0.55),node2.pos,decoration:"arrow",angle:1.66rad)
cetz.draw.content((-0.82, 0.54),angle:1.66rad,[0])
cetz.draw.hobby((-0.74, 0.79),(-0.77, 0.56),(-0.71, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.32, 0.55),node4.pos,decoration:"arrow",angle:1.73rad)
cetz.draw.content((-0.20, 0.57),angle:1.73rad,[0])
cetz.draw.hobby((-0.33, 0.72),(-0.26, 0.56),(-0.27, 0.38),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.50),decoration:"arrow",angle:5.57rad)
cetz.draw.content((-0.50, 0.34),angle:5.57rad,[-q-k[3]])
cetz.draw.hobby((-0.46, 0.39),(-0.46, 0.39),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.50, 1.00),decoration:"arrow",angle:0.83rad)
cetz.draw.content((-0.67, 0.99),angle:0.83rad,[q+k[3]])
cetz.draw.hobby((-0.61, 0.97),(-0.64, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, 0.62))
node(node0.pos)
let node1= (pos:(-0.44, -0.12))
node(node1.pos)
let node2= (pos:(-0.60, 0.57))
node(node2.pos)
let node3= (pos:(-0.41, 0.85))
node(node3.pos)
let node4= (pos:(-0.17, 0.61))
node(node4.pos)
let node5= (pos:(-0.35, 0.32))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.90rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.72rad)
edge(node0.pos,(-0.47, 0.23),node1.pos,decoration:"arrow",angle:1.56rad)
edge(node0.pos,(-0.29, 0.61),node4.pos,decoration:"wave",angle:3.09rad)
edge(node5.pos,(-0.38, 0.08),node1.pos,decoration:"wave",angle:1.35rad)
edge(node3.pos,(-0.55, 0.74),node2.pos,decoration:"arrow",angle:1.00rad)
edge(node2.pos,(-0.50, 0.00),decoration:"coil",angle:1.74rad)
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:5.26rad)
edge(node5.pos,(-0.50, 0.50),decoration:"arrow",angle:5.42rad)
edge(node2.pos,(-0.50, 1.00),decoration:"arrow",angle:1.35rad)
edge(node3.pos,(-0.25, 0.77),node4.pos,decoration:"arrow",angle:2.37rad)
edge(node4.pos,(-0.22, 0.44),node5.pos,decoration:"arrow",angle:1.01rad)
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, 0.68))
node(node0.pos)
let node1= (pos:(-0.39, -0.09))
node(node1.pos)
let node2= (pos:(-0.56, 0.19))
node(node2.pos)
let node3= (pos:(-0.59, 0.66))
node(node3.pos)
let node4= (pos:(-0.33, 0.82))
node(node4.pos)
let node5= (pos:(-0.25, 0.28))
node(node5.pos)
edge(node0.pos,(-0.50, 1.00),decoration:"arrow",angle:4.95rad)
edge(node1.pos,(-0.50, -0.50),decoration:"arrow",angle:-1.84rad)
edge(node0.pos,(-0.42, 0.31),node1.pos,decoration:"arrow",angle:1.61rad)
edge(node0.pos,(-0.29, 0.71),node4.pos,decoration:"wave",angle:-1.95rad)
edge(node5.pos,(-0.29, 0.07),node1.pos,decoration:"wave",angle:1.20rad)
edge(node3.pos,(-0.62, 0.42),node2.pos,decoration:"arrow",angle:1.64rad)
edge(node2.pos,(-0.50, 0.00),decoration:"coil",angle:1.89rad)
edge(node3.pos,(-0.50, 1.00),decoration:"coil",angle:4.45rad)
edge(node5.pos,(-0.41, 0.22),node2.pos,decoration:"arrow",angle:0.27rad)
edge(node3.pos,(-0.50, 0.50),decoration:"arrow",angle:2.08rad)
edge(node4.pos,(-0.50, 1.00),decoration:"arrow",angle:2.33rad)
edge(node4.pos,(-0.26, 0.54),node5.pos,decoration:"arrow",angle:1.70rad)
})
[= embedding 1 [2, 0, -2, -4] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 +2-3+10-11+12-13],box[#embedding1i1 +2-3+10-11+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 +0-1+10-11+16-17],)
pagebreak()
[= embedding 2 [2, 0, -2, -2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 +2-3-8+9+12-13],box[#embedding2i1 +2-3+10-11],box[#embedding2i2 +2-3-8+9+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 +0-1-8+9+16-17],)
pagebreak()
[= embedding 3 [2, 0, 0, -2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-2 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 +2-3+8-9+10-11],box[#embedding3i1 +2-3+12-13],box[#embedding3i2 +2-3+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p-q]^-2 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 +0-1+16-17],)
pagebreak()
[= embedding 4 [2, 0, 2, -2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 +2-3+8-9+12-13],box[#embedding4i1 +2-3+8-9+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 +0-1+8-9+16-17],)
pagebreak()
[= embedding 5 [2, 0, 2, 0] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 +2-3+8-9],box[#embedding5i1 +2-3-10+11+12-13],box[#embedding5i2 +2-3-10+11+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 +0-1-10+11+16-17],)
pagebreak()
[= embedding 6 [2, 2, -2, 0] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 +2-3+10-11-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 +0-1+10-11-12+13],box[#embedding6f1 +0-1-8+9],box[#embedding6f2 +0-1+10-11-14+15],)
pagebreak()
[= embedding 7 [2, 2, -2, 2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 +2-3-8+9-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 +0-1-8+9-14+15],box[#embedding7f1 +0-1-8+9-12+13],)
pagebreak()
[= embedding 8 [2, 2, 0, 2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-2 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 +2-3-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-2 prop[0,-p+q]^-1 prop[0,-p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 +0-1-8+9-10+11],box[#embedding8f1 +0-1-12+13],box[#embedding8f2 +0-1-14+15],)
pagebreak()
[= embedding 9 [2, 2, 2, 2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 +2-3+8-9-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 +0-1+8-9-14+15],box[#embedding9f1 +0-1-10+11],box[#embedding9f2 +0-1+8-9-12+13],)
pagebreak()
[= embedding 10 [2, 2, 2, 4] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 +2-3-10+11-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 +0-1-10+11-12+13],box[#embedding10f1 +0-1-10+11-14+15],)
pagebreak()
}