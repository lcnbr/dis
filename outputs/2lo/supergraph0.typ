#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
            #{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.68))
node(node0.pos)
let node1= (pos:(0.41, -0.83))
node(node1.pos)
let node2= (pos:(0.67, 0.15))
node(node2.pos)
let node3= (pos:(0.10, 0.53))
node(node3.pos)
let node4= (pos:(-0.72, 0.38))
node(node4.pos)
let node5= (pos:(0.05, -0.13))
node(node5.pos)
edge(node1.pos,(-0.12, -0.80),node0.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.12, -0.86),(-0.54, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((-0.74, -0.93),angle:0.71rad,[k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.71, -0.16),node4.pos,decoration:"wave",angle:1.66rad)
cetz.draw.content((-0.83, -0.17),angle:1.66rad,[q])
cetz.draw.hobby((-0.71, -0.59),(-0.77, -0.16),(-0.78, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, -0.49),node1.pos,decoration:"wave",angle:-1.09rad)
cetz.draw.content((0.35, -0.44),angle:-1.09rad,[q])
cetz.draw.hobby((0.14, -0.17),(0.29, -0.45),(0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, 0.40),node2.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((0.48, 0.50),angle:2.56rad,[p-2 k[3]])
cetz.draw.hobby((0.18, 0.57),(0.45, 0.44),(0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.42rad)
cetz.draw.content((0.88, 0.18),angle:-0.42rad,[p-k[3]])
cetz.draw.hobby((0.78, 0.16),(0.93, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.45rad)
cetz.draw.content((-0.40, 0.16),angle:0.45rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.01),(0.03, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, -0.02),node2.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((0.43, -0.12),angle:0.43rad,[k[3]])
cetz.draw.hobby((0.13, -0.17),(0.39, -0.07),(0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.49, 0.87),angle:0.48rad,[k[3]])
cetz.draw.hobby((0.16, 0.63),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.97, 0.64),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.82, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.13),node5.pos,decoration:"arrow",angle:-0.59rad)
cetz.draw.content((-0.28, 0.23),angle:-0.59rad,[q+k[3]])
cetz.draw.hobby((-0.61, 0.38),(-0.30, 0.17),(0.01, -0.03),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.83))
node(node0.pos)
let node1= (pos:(0.63, -0.68))
node(node1.pos)
let node2= (pos:(-0.10, 0.53))
node(node2.pos)
let node3= (pos:(-0.67, 0.15))
node(node3.pos)
let node4= (pos:(-0.05, -0.13))
node(node4.pos)
let node5= (pos:(0.72, 0.38))
node(node5.pos)
edge(node1.pos,(0.12, -0.79),node0.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.85),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.90, -0.75),angle:5.56rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.24, -0.50),node4.pos,decoration:"wave",angle:1.10rad)
cetz.draw.content((-0.13, -0.55),angle:1.10rad,[q])
cetz.draw.hobby((-0.32, -0.79),(-0.17, -0.51),(-0.03, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, -0.16),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.83, -0.17),angle:-1.65rad,[q])
cetz.draw.hobby((0.78, 0.28),(0.77, -0.16),(0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.39),node2.pos,decoration:"arrow",angle:3.73rad)
cetz.draw.content((-0.48, 0.49),angle:3.73rad,[p-2 k[3]])
cetz.draw.hobby((-0.67, 0.24),(-0.45, 0.44),(-0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.45rad)
cetz.draw.content((0.50, 0.37),angle:-0.45rad,[p-k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.41rad)
cetz.draw.content((-0.78, -0.04),angle:0.41rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.73, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.75, 0.74),angle:1.15rad,[k[3]])
cetz.draw.hobby((0.71, 0.50),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.80rad)
cetz.draw.content((-0.60, 0.66),angle:5.80rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.37, -0.02),node4.pos,decoration:"arrow",angle:5.86rad)
cetz.draw.content((-0.42, -0.13),angle:5.86rad,[k[3]])
cetz.draw.hobby((-0.64, 0.06),(-0.39, -0.07),(-0.13, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.28, 0.23),angle:0.59rad,[q+k[3]])
cetz.draw.hobby((-0.01, -0.03),(0.30, 0.18),(0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.62))
node(node0.pos)
let node1= (pos:(-0.57, -0.62))
node(node1.pos)
let node2= (pos:(0.35, 0.15))
node(node2.pos)
let node3= (pos:(-0.34, 0.15))
node(node3.pos)
let node4= (pos:(0.65, 0.49))
node(node4.pos)
let node5= (pos:(-0.65, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.86, -0.72),angle:5.56rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.73rad)
cetz.draw.content((-0.71, -0.90),angle:0.73rad,[-q+k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.65),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.77),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.46, -0.69),(-0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.09),node4.pos,decoration:"wave",angle:1.49rad)
cetz.draw.content((0.78, -0.10),angle:1.49rad,[-q])
cetz.draw.hobby((0.66, -0.53),(0.72, -0.07),(0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.09),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[-q])
cetz.draw.hobby((-0.72, 0.38),(-0.72, -0.07),(-0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.08),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, -0.04),angle:3.14rad,[p+q-2 k[3]])
cetz.draw.hobby((-0.30, 0.07),(0.00, 0.02),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.22rad)
cetz.draw.content((0.70, 0.19),angle:-0.22rad,[p+q-k[3]])
cetz.draw.hobby((0.46, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.22rad)
cetz.draw.content((-0.65, -0.04),angle:0.22rad,[p+q-k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.43, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, 0.41),node2.pos,decoration:"arrow",angle:-0.32rad)
cetz.draw.content((-0.10, 0.52),angle:-0.32rad,[k[3]])
cetz.draw.hobby((-0.54, 0.55),(-0.10, 0.46),(0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.40),node4.pos,decoration:"arrow",angle:0.33rad)
cetz.draw.content((0.10, 0.52),angle:0.33rad,[k[3]])
cetz.draw.hobby((-0.29, 0.26),(0.10, 0.46),(0.54, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.96rad)
cetz.draw.content((0.72, 0.81),angle:0.96rad,[-q+k[3]])
cetz.draw.hobby((0.65, 0.61),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.92, 0.68),angle:5.32rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.75, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.51, -0.79))
node(node1.pos)
let node2= (pos:(0.52, 0.79))
node(node2.pos)
let node3= (pos:(-0.52, 0.79))
node(node3.pos)
let node4= (pos:(-0.36, 0.00))
node(node4.pos)
let node5= (pos:(0.36, 0.00))
node(node5.pos)
edge(node1.pos,(-0.00, -0.83),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.95),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.87),(-0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.41rad)
cetz.draw.content((-0.71, -1.01),angle:0.41rad,[k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node4.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((-0.58, -0.38),angle:1.38rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:-1.38rad)
cetz.draw.content((0.59, -0.38),angle:-1.38rad,[q])
cetz.draw.hobby((0.44, -0.06),(0.52, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.83),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[p-k[3]])
cetz.draw.hobby((-0.42, 0.87),(0.00, 0.89),(0.42, 0.86),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:0.40rad)
cetz.draw.content((0.71, 1.01),angle:0.40rad,[p])
cetz.draw.hobby((0.58, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:5.88rad)
cetz.draw.content((-0.80, 0.79),angle:5.88rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, 0.40),node2.pos,decoration:"arrow",angle:1.38rad)
cetz.draw.content((0.59, 0.38),angle:1.38rad,[k[3]])
cetz.draw.hobby((0.44, 0.06),(0.53, 0.38),(0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.47, 0.40),node4.pos,decoration:"arrow",angle:4.91rad)
cetz.draw.content((-0.58, 0.38),angle:4.91rad,[k[3]])
cetz.draw.hobby((-0.57, 0.71),(-0.52, 0.38),(-0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.00),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.12),angle:-0.00rad,[q+k[3]])
cetz.draw.hobby((-0.28, 0.06),(0.00, 0.06),(0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.37, -0.83))
node(node0.pos)
let node1= (pos:(0.67, -0.70))
node(node1.pos)
let node2= (pos:(-0.77, 0.49))
node(node2.pos)
let node3= (pos:(0.32, 0.27))
node(node3.pos)
let node4= (pos:(0.19, -0.21))
node(node4.pos)
let node5= (pos:(0.84, 0.36))
node(node5.pos)
edge(node1.pos,(0.16, -0.82),node0.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.93),angle:0.12rad,[q+k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.88),(-0.27, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.52),node4.pos,decoration:"wave",angle:0.84rad)
cetz.draw.content((-0.21, -0.44),angle:0.84rad,[q])
cetz.draw.hobby((-0.37, -0.72),(-0.15, -0.46),(0.09, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.81, -0.20),node1.pos,decoration:"wave",angle:-1.73rad)
cetz.draw.content((0.93, -0.22),angle:-1.73rad,[q])
cetz.draw.hobby((0.90, 0.26),(0.87, -0.19),(0.77, -0.62),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((-0.78, 0.19),angle:4.28rad,[p-k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.70, 0.25),angle:2.76rad,[p-k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:-0.19rad)
cetz.draw.content((-0.22, 0.52),angle:-0.19rad,[p])
cetz.draw.hobby((-0.65, 0.53),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.33rad)
cetz.draw.content((0.80, 0.71),angle:1.33rad,[k[3]])
cetz.draw.hobby((0.81, 0.48),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-1.00, 0.70),angle:5.13rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.87, 0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, 0.06),node4.pos,decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.05, 0.09),angle:4.45rad,[k[3]])
cetz.draw.hobby((0.23, 0.28),(0.10, 0.07),(0.11, -0.18),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.56, 0.06),node5.pos,decoration:"arrow",angle:0.73rad)
cetz.draw.content((0.64, -0.03),angle:0.73rad,[q+k[3]])
cetz.draw.hobby((0.30, -0.22),(0.59, -0.00),(0.84, 0.26),stroke:stroke,mark: (end: ">"))
})
let embedding2i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.78))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.02, -0.06))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((0.75, -0.78),angle:5.93rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.67rad)
cetz.draw.content((-0.87, -0.14),angle:1.67rad,[q])
cetz.draw.hobby((-0.73, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.08, -0.09),(0.27, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.32rad)
cetz.draw.content((-0.69, -0.07),angle:3.32rad,[p-k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.51, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.05rad)
cetz.draw.content((0.98, 0.29),angle:2.05rad,[p-k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:0.29rad)
cetz.draw.content((0.15, 0.44),angle:0.29rad,[p])
cetz.draw.hobby((-0.34, 0.21),(0.14, 0.38),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.09),node2.pos,decoration:"arrow",angle:2.77rad)
cetz.draw.content((-0.31, -0.20),angle:2.77rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.26, 0.44),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.64, 0.52),(-0.27, 0.37),(-0.01, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.89, -0.72),angle:5.52rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.64),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.76),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.49, -0.69),(-0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.54),(0.86, -0.10),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.80, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.44rad)
cetz.draw.content((-0.72, -0.04),angle:3.44rad,[p+q-k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[p+q-k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.16),node3.pos,decoration:"coil",angle:-0.00rad)
cetz.draw.content((0.00, 0.28),angle:-0.00rad,[p+q])
cetz.draw.hobby((-0.40, 0.22),(0.00, 0.22),(0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.67rad)
cetz.draw.content((-0.60, 0.47),angle:-0.67rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.63, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.60, 0.47),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.41rad)
cetz.draw.content((0.84, 0.76),angle:1.41rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.08, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.85))
node(node0.pos)
let node1= (pos:(0.51, -0.85))
node(node1.pos)
let node2= (pos:(0.93, 0.45))
node(node2.pos)
let node3= (pos:(-0.92, 0.45))
node(node3.pos)
let node4= (pos:(-0.39, -0.11))
node(node4.pos)
let node5= (pos:(0.39, -0.11))
node(node5.pos)
edge(node1.pos,(0.00, -0.89),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -1.01),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.99rad)
cetz.draw.content((0.79, -0.81),angle:5.99rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.49),node4.pos,decoration:"wave",angle:1.40rad)
cetz.draw.content((-0.59, -0.47),angle:1.40rad,[q])
cetz.draw.hobby((-0.57, -0.77),(-0.53, -0.47),(-0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.49),node1.pos,decoration:"wave",angle:-1.41rad)
cetz.draw.content((0.59, -0.47),angle:-1.41rad,[q])
cetz.draw.hobby((0.47, -0.17),(0.53, -0.47),(0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:4.87rad)
cetz.draw.content((1.08, 0.24),angle:4.87rad,[k[2]])
cetz.draw.hobby((1.04, 0.11),(1.00, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.40rad)
cetz.draw.content((-0.84, 0.21),angle:1.40rad,[k[2]])
cetz.draw.hobby((-0.88, 0.34),(-0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"coil",angle:1.44rad)
cetz.draw.content((0.84, 0.74),angle:1.44rad,[p+k[2]])
cetz.draw.hobby((0.88, 0.56),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"coil",angle:4.85rad)
cetz.draw.content((-1.08, 0.71),angle:4.85rad,[p+k[2]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.65, 0.19),node2.pos,decoration:"arrow",angle:0.81rad)
cetz.draw.content((0.56, 0.27),angle:0.81rad,[p])
cetz.draw.hobby((0.39, -0.02),(0.60, 0.22),(0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.65, 0.19),node4.pos,decoration:"arrow",angle:-0.80rad)
cetz.draw.content((-0.56, 0.27),angle:-0.80rad,[p])
cetz.draw.hobby((-0.83, 0.44),(-0.60, 0.22),(-0.39, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.09),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.03),angle:-0.00rad,[p+q])
cetz.draw.hobby((-0.31, -0.05),(0.00, -0.03),(0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.75))
node(node0.pos)
let node1= (pos:(0.65, -0.64))
node(node1.pos)
let node2= (pos:(-0.80, 0.85))
node(node2.pos)
let node3= (pos:(-0.46, 0.51))
node(node3.pos)
let node4= (pos:(-0.00, 0.01))
node(node4.pos)
let node5= (pos:(0.76, 0.40))
node(node5.pos)
edge(node1.pos,(0.13, -0.73),node0.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((0.14, -0.85),angle:0.10rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.73),(0.13, -0.79),(-0.29, -0.81),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.91, -0.74),angle:5.49rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.76, -0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.39rad)
cetz.draw.content((-0.65, -0.99),angle:0.39rad,[k[0]])
cetz.draw.hobby((-0.47, -0.85),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.38),node4.pos,decoration:"wave",angle:1.09rad)
cetz.draw.content((-0.32, -0.32),angle:1.09rad,[q])
cetz.draw.hobby((-0.42, -0.65),(-0.26, -0.34),(-0.10, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.74, -0.13),node1.pos,decoration:"wave",angle:-1.68rad)
cetz.draw.content((0.86, -0.14),angle:-1.68rad,[q])
cetz.draw.hobby((0.82, 0.29),(0.80, -0.13),(0.73, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.75, 0.58),node2.pos,decoration:"arrow",angle:5.46rad)
cetz.draw.content((-0.84, 0.50),angle:5.46rad,[k[2]])
cetz.draw.hobby((-0.51, 0.44),(-0.79, 0.53),(-0.87, 0.80),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.52, 0.80),node3.pos,decoration:"coil",angle:-0.76rad)
cetz.draw.content((-0.44, 0.89),angle:-0.76rad,[p+k[2]])
cetz.draw.hobby((-0.75, 0.93),(-0.47, 0.84),(-0.39, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.19rad)
cetz.draw.content((0.77, 0.74),angle:1.19rad,[p])
cetz.draw.hobby((0.74, 0.52),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.65rad)
cetz.draw.content((-0.97, 0.83),angle:5.65rad,[p])
cetz.draw.hobby((-0.95, 0.89),(-0.91, 0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.23, 0.26),node4.pos,decoration:"arrow",angle:5.45rad)
cetz.draw.content((-0.32, 0.18),angle:5.45rad,[p])
cetz.draw.hobby((-0.46, 0.42),(-0.28, 0.22),(-0.09, 0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.39, 0.22),node5.pos,decoration:"arrow",angle:0.47rad)
cetz.draw.content((0.33, 0.33),angle:0.47rad,[p+q])
cetz.draw.hobby((0.04, 0.10),(0.35, 0.27),(0.66, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.64))
node(node0.pos)
let node1= (pos:(0.40, -0.76))
node(node1.pos)
let node2= (pos:(0.52, 0.46))
node(node2.pos)
let node3= (pos:(0.87, 0.79))
node(node3.pos)
let node4= (pos:(-0.75, 0.40))
node(node4.pos)
let node5= (pos:(0.01, 0.00))
node(node5.pos)
edge(node1.pos,(-0.13, -0.74),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.85),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.29, -0.82),(-0.13, -0.80),(-0.55, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.74, -0.77),angle:5.90rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.51, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.74, -0.91),angle:0.79rad,[k[0]])
cetz.draw.hobby((-0.67, -0.76),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.13),node4.pos,decoration:"wave",angle:1.68rad)
cetz.draw.content((-0.85, -0.14),angle:1.68rad,[q])
cetz.draw.hobby((-0.73, -0.55),(-0.79, -0.13),(-0.81, 0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.38),node1.pos,decoration:"wave",angle:-1.10rad)
cetz.draw.content((0.33, -0.33),angle:-1.10rad,[q])
cetz.draw.hobby((0.11, -0.04),(0.27, -0.35),(0.42, -0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.81, 0.51),node2.pos,decoration:"arrow",angle:0.80rad)
cetz.draw.content((0.90, 0.43),angle:0.80rad,[k[2]])
cetz.draw.hobby((0.95, 0.73),(0.85, 0.46),(0.57, 0.38),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.59, 0.74),node3.pos,decoration:"coil",angle:0.74rad)
cetz.draw.content((0.51, 0.83),angle:0.74rad,[p+k[2]])
cetz.draw.hobby((0.45, 0.51),(0.55, 0.78),(0.82, 0.86),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.27, 0.23),node2.pos,decoration:"arrow",angle:0.72rad)
cetz.draw.content((0.19, 0.32),angle:0.72rad,[p])
cetz.draw.hobby((0.02, 0.09),(0.23, 0.28),(0.43, 0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.03rad)
cetz.draw.content((0.83, 0.95),angle:1.03rad,[p])
cetz.draw.hobby((0.87, 0.90),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.11rad)
cetz.draw.content((-0.99, 0.65),angle:5.11rad,[p])
cetz.draw.hobby((-1.02, 0.88),(-0.85, 0.47),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.37, 0.22),node5.pos,decoration:"arrow",angle:-0.48rad)
cetz.draw.content((-0.32, 0.33),angle:-0.48rad,[p+q])
cetz.draw.hobby((-0.65, 0.42),(-0.34, 0.27),(-0.03, 0.10),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.56))
node(node0.pos)
let node1= (pos:(-0.59, -0.56))
node(node1.pos)
let node2= (pos:(-0.25, 0.81))
node(node2.pos)
let node3= (pos:(0.27, 0.81))
node(node3.pos)
let node4= (pos:(0.85, 0.52))
node(node4.pos)
let node5= (pos:(-0.84, 0.52))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.47rad)
cetz.draw.content((0.88, -0.70),angle:5.47rad,[-q+k[0]])
cetz.draw.hobby((0.98, -0.89),(0.70, -0.60),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.71, -0.86),angle:0.81rad,[-q+k[0]])
cetz.draw.hobby((-0.61, -0.68),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.58),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.70),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.74, -0.04),node4.pos,decoration:"wave",angle:1.34rad)
cetz.draw.content((0.85, -0.07),angle:1.34rad,[-q])
cetz.draw.hobby((0.68, -0.48),(0.80, -0.04),(0.89, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.73, -0.03),node1.pos,decoration:"wave",angle:4.94rad)
cetz.draw.content((-0.85, -0.06),angle:4.94rad,[-q])
cetz.draw.hobby((-0.88, 0.40),(-0.79, -0.04),(-0.68, -0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.97),node2.pos,decoration:"arrow",angle:6.29rad)
cetz.draw.content((0.01, 1.09),angle:6.29rad,[k[2]])
cetz.draw.hobby((0.29, 0.91),(0.01, 1.03),(-0.26, 0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.01, 0.68),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.01, 0.56),angle:0.00rad,[p+q+k[2]])
cetz.draw.hobby((-0.25, 0.72),(0.01, 0.62),(0.27, 0.72),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.56, 0.68),node2.pos,decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.61, 0.78),angle:0.46rad,[p+q])
cetz.draw.hobby((-0.81, 0.60),(-0.57, 0.73),(-0.33, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.68),node4.pos,decoration:"arrow",angle:-0.48rad)
cetz.draw.content((0.64, 0.79),angle:-0.48rad,[p+q])
cetz.draw.hobby((0.36, 0.85),(0.60, 0.74),(0.83, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.27rad)
cetz.draw.content((0.81, 0.79),angle:1.27rad,[p])
cetz.draw.hobby((0.82, 0.63),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.04rad)
cetz.draw.content((-1.03, 0.72),angle:5.04rad,[p])
cetz.draw.hobby((-1.02, 0.89),(-0.92, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.41, -0.83))
node(node0.pos)
let node1= (pos:(0.63, -0.68))
node(node1.pos)
let node2= (pos:(-0.10, 0.53))
node(node2.pos)
let node3= (pos:(-0.67, 0.15))
node(node3.pos)
let node4= (pos:(-0.05, -0.13))
node(node4.pos)
let node5= (pos:(0.72, 0.38))
node(node5.pos)
edge(node1.pos,(0.12, -0.79),node0.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[q+k[0]])
cetz.draw.hobby((0.55, -0.77),(0.12, -0.85),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((0.89, -0.75),angle:5.57rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.24, -0.49),node4.pos,decoration:"wave",angle:1.09rad)
cetz.draw.content((-0.35, -0.44),angle:1.09rad,[q])
cetz.draw.hobby((-0.43, -0.73),(-0.29, -0.45),(-0.14, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.71, -0.16),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.83, -0.17),angle:-1.65rad,[q])
cetz.draw.hobby((0.78, 0.28),(0.77, -0.16),(0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.83rad)
cetz.draw.content((0.50, 0.37),angle:5.83rad,[-p+k[3]])
cetz.draw.hobby((0.94, 0.10),(0.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.78, -0.03),angle:0.42rad,[-p+k[3]])
cetz.draw.hobby((-0.73, 0.05),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.41, 0.40),node3.pos,decoration:"coil",angle:3.73rad)
cetz.draw.content((-0.48, 0.50),angle:3.73rad,[-p+2 k[3]])
cetz.draw.hobby((-0.18, 0.57),(-0.45, 0.44),(-0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.75, 0.74),angle:1.15rad,[k[3]])
cetz.draw.hobby((0.71, 0.50),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.81rad)
cetz.draw.content((-0.60, 0.66),angle:5.81rad,[k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.21, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.38, -0.01),node4.pos,decoration:"arrow",angle:5.85rad)
cetz.draw.content((-0.43, -0.12),angle:5.85rad,[k[3]])
cetz.draw.hobby((-0.64, 0.06),(-0.40, -0.07),(-0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.13),node5.pos,decoration:"arrow",angle:0.59rad)
cetz.draw.content((0.28, 0.23),angle:0.59rad,[q+k[3]])
cetz.draw.hobby((-0.01, -0.03),(0.30, 0.17),(0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.63, -0.68))
node(node0.pos)
let node1= (pos:(0.41, -0.83))
node(node1.pos)
let node2= (pos:(0.67, 0.15))
node(node2.pos)
let node3= (pos:(0.10, 0.53))
node(node3.pos)
let node4= (pos:(-0.72, 0.38))
node(node4.pos)
let node5= (pos:(0.05, -0.13))
node(node5.pos)
edge(node1.pos,(-0.12, -0.79),node0.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.13, -0.85),(-0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((-0.74, -0.93),angle:0.71rad,[k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.71, -0.16),node4.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.83, -0.17),angle:1.65rad,[q])
cetz.draw.hobby((-0.71, -0.59),(-0.77, -0.16),(-0.78, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.24, -0.49),node1.pos,decoration:"wave",angle:-1.10rad)
cetz.draw.content((0.35, -0.44),angle:-1.10rad,[q])
cetz.draw.hobby((0.14, -0.17),(0.29, -0.45),(0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.86rad)
cetz.draw.content((0.88, 0.18),angle:5.86rad,[-p+k[3]])
cetz.draw.hobby((0.93, 0.10),(0.78, 0.16),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.45rad)
cetz.draw.content((-0.40, 0.16),angle:0.45rad,[-p+k[3]])
cetz.draw.hobby((0.03, 0.44),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.41, 0.40),node3.pos,decoration:"coil",angle:2.55rad)
cetz.draw.content((0.48, 0.50),angle:2.55rad,[-p+2 k[3]])
cetz.draw.hobby((0.67, 0.24),(0.45, 0.44),(0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, -0.01),node2.pos,decoration:"arrow",angle:0.43rad)
cetz.draw.content((0.43, -0.12),angle:0.43rad,[k[3]])
cetz.draw.hobby((0.14, -0.17),(0.40, -0.07),(0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.48rad)
cetz.draw.content((0.49, 0.87),angle:0.48rad,[k[3]])
cetz.draw.hobby((0.16, 0.63),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.97, 0.64),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.81, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.13),node5.pos,decoration:"arrow",angle:-0.59rad)
cetz.draw.content((-0.28, 0.23),angle:-0.59rad,[q+k[3]])
cetz.draw.hobby((-0.61, 0.38),(-0.30, 0.18),(0.01, -0.03),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.62))
node(node0.pos)
let node1= (pos:(-0.57, -0.62))
node(node1.pos)
let node2= (pos:(0.35, 0.15))
node(node2.pos)
let node3= (pos:(-0.35, 0.14))
node(node3.pos)
let node4= (pos:(0.65, 0.49))
node(node4.pos)
let node5= (pos:(-0.65, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.86, -0.72),angle:5.56rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.73rad)
cetz.draw.content((-0.71, -0.90),angle:0.73rad,[-q+k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.65),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.77),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.46, -0.69),(-0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.66, -0.09),node4.pos,decoration:"wave",angle:1.50rad)
cetz.draw.content((0.78, -0.10),angle:1.50rad,[-q])
cetz.draw.hobby((0.66, -0.53),(0.72, -0.07),(0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, -0.09),node1.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.78, -0.10),angle:4.79rad,[-q])
cetz.draw.hobby((-0.72, 0.38),(-0.72, -0.07),(-0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((0.70, 0.19),angle:6.06rad,[-p-q+k[3]])
cetz.draw.hobby((0.92, 0.08),(0.46, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.22rad)
cetz.draw.content((-0.65, -0.04),angle:0.22rad,[-p-q+k[3]])
cetz.draw.hobby((-0.43, 0.06),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.08),node3.pos,decoration:"coil",angle:-3.14rad)
cetz.draw.content((0.00, -0.04),angle:-3.14rad,[-p-q+2 k[3]])
cetz.draw.hobby((0.30, 0.06),(0.00, 0.02),(-0.30, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, 0.40),node2.pos,decoration:"arrow",angle:-0.33rad)
cetz.draw.content((-0.10, 0.52),angle:-0.33rad,[k[3]])
cetz.draw.hobby((-0.54, 0.54),(-0.10, 0.46),(0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.40),node4.pos,decoration:"arrow",angle:0.32rad)
cetz.draw.content((0.10, 0.52),angle:0.32rad,[k[3]])
cetz.draw.hobby((-0.29, 0.26),(0.10, 0.45),(0.53, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.97rad)
cetz.draw.content((0.72, 0.81),angle:0.97rad,[-q+k[3]])
cetz.draw.hobby((0.65, 0.60),(0.89, 0.95),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.92, 0.68),angle:5.32rad,[-q+k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.75, 0.54),stroke:stroke,mark: (end: ">"))
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.79))
node(node0.pos)
let node1= (pos:(0.52, -0.79))
node(node1.pos)
let node2= (pos:(0.52, 0.79))
node(node2.pos)
let node3= (pos:(-0.51, 0.79))
node(node3.pos)
let node4= (pos:(-0.36, 0.00))
node(node4.pos)
let node5= (pos:(0.36, -0.00))
node(node5.pos)
edge(node1.pos,(0.00, -0.83),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.95),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.87),(0.00, -0.89),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.71, -1.01),angle:0.40rad,[k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.47, -0.40),node4.pos,decoration:"wave",angle:1.38rad)
cetz.draw.content((-0.58, -0.38),angle:1.38rad,[q])
cetz.draw.hobby((-0.57, -0.71),(-0.52, -0.38),(-0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.40),node1.pos,decoration:"wave",angle:-1.39rad)
cetz.draw.content((0.59, -0.38),angle:-1.39rad,[q])
cetz.draw.hobby((0.45, -0.06),(0.53, -0.38),(0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:6.69rad)
cetz.draw.content((0.71, 1.01),angle:6.69rad,[-p])
cetz.draw.hobby((0.88, 1.02),(0.58, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.80, 0.79),angle:5.88rad,[-p])
cetz.draw.hobby((-0.63, 0.78),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.00, 0.83),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((-0.00, 0.95),angle:3.14rad,[-p+k[3]])
cetz.draw.hobby((0.42, 0.87),(0.00, 0.89),(-0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, 0.40),node2.pos,decoration:"arrow",angle:1.39rad)
cetz.draw.content((0.59, 0.38),angle:1.39rad,[k[3]])
cetz.draw.hobby((0.45, 0.06),(0.53, 0.38),(0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.46, 0.40),node4.pos,decoration:"arrow",angle:4.91rad)
cetz.draw.content((-0.58, 0.38),angle:4.91rad,[k[3]])
cetz.draw.hobby((-0.57, 0.71),(-0.52, 0.38),(-0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.00),node5.pos,decoration:"arrow",angle:-0.00rad)
cetz.draw.content((0.00, 0.12),angle:-0.00rad,[q+k[3]])
cetz.draw.hobby((-0.28, 0.06),(0.00, 0.06),(0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.67))
node(node0.pos)
let node1= (pos:(0.41, -0.79))
node(node1.pos)
let node2= (pos:(-0.43, 0.10))
node(node2.pos)
let node3= (pos:(0.75, 0.47))
node(node3.pos)
let node4= (pos:(-0.75, 0.46))
node(node4.pos)
let node5= (pos:(-0.02, -0.06))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[q+k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.74, -0.78),angle:5.94rad,[k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.75, -0.13),node4.pos,decoration:"wave",angle:1.66rad)
cetz.draw.content((-0.87, -0.14),angle:1.66rad,[q])
cetz.draw.hobby((-0.74, -0.57),(-0.81, -0.11),(-0.82, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.22, -0.42),node1.pos,decoration:"wave",angle:-1.04rad)
cetz.draw.content((0.33, -0.36),angle:-1.04rad,[q])
cetz.draw.hobby((0.08, -0.09),(0.27, -0.38),(0.43, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.19, 0.33),node2.pos,decoration:"arrow",angle:6.58rad)
cetz.draw.content((0.15, 0.44),angle:6.58rad,[-p])
cetz.draw.hobby((0.62, 0.50),(0.13, 0.37),(-0.34, 0.21),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.96rad)
cetz.draw.content((-0.69, -0.07),angle:-2.96rad,[-p+k[3]])
cetz.draw.hobby((-0.52, 0.03),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.06rad)
cetz.draw.content((0.98, 0.29),angle:2.06rad,[-p+k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.27, -0.09),node2.pos,decoration:"arrow",angle:2.78rad)
cetz.draw.content((-0.31, -0.20),angle:2.78rad,[k[3]])
cetz.draw.hobby((-0.04, -0.14),(-0.29, -0.15),(-0.47, 0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.15rad)
cetz.draw.content((-0.98, 0.68),angle:5.15rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),node5.pos,decoration:"arrow",angle:-0.58rad)
cetz.draw.content((-0.26, 0.43),angle:-0.58rad,[q+k[3]])
cetz.draw.hobby((-0.64, 0.51),(-0.27, 0.36),(-0.00, 0.05),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.78))
node(node0.pos)
let node1= (pos:(0.65, -0.67))
node(node1.pos)
let node2= (pos:(-0.75, 0.47))
node(node2.pos)
let node3= (pos:(0.43, 0.10))
node(node3.pos)
let node4= (pos:(0.03, -0.06))
node(node4.pos)
let node5= (pos:(0.75, 0.46))
node(node5.pos)
edge(node1.pos,(0.13, -0.77),node0.pos,decoration:"arrow",angle:0.11rad)
cetz.draw.content((0.14, -0.89),angle:0.11rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.75),(0.13, -0.83),(-0.30, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.91, -0.75),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.77, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.35rad)
cetz.draw.content((-0.66, -1.00),angle:0.35rad,[k[0]])
cetz.draw.hobby((-0.48, -0.87),(-0.89, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.22, -0.42),node4.pos,decoration:"wave",angle:1.03rad)
cetz.draw.content((-0.32, -0.36),angle:1.03rad,[q])
cetz.draw.hobby((-0.42, -0.68),(-0.26, -0.38),(-0.07, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.76, -0.13),node1.pos,decoration:"wave",angle:-1.67rad)
cetz.draw.content((0.88, -0.14),angle:-1.67rad,[q])
cetz.draw.hobby((0.82, 0.35),(0.82, -0.11),(0.74, -0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.19, 0.33),node2.pos,decoration:"arrow",angle:5.99rad)
cetz.draw.content((-0.15, 0.44),angle:5.99rad,[-p])
cetz.draw.hobby((0.34, 0.20),(-0.14, 0.37),(-0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.06rad)
cetz.draw.content((-0.77, 0.18),angle:-2.06rad,[-p+k[3]])
cetz.draw.hobby((-0.75, 0.35),(-0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.97rad)
cetz.draw.content((0.74, 0.17),angle:2.97rad,[-p+k[3]])
cetz.draw.hobby((0.91, 0.08),(0.54, 0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((0.77, 0.78),angle:1.14rad,[k[3]])
cetz.draw.hobby((0.74, 0.58),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.14rad)
cetz.draw.content((-0.99, 0.68),angle:5.14rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.85, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.28, -0.10),node4.pos,decoration:"arrow",angle:-2.78rad)
cetz.draw.content((0.32, -0.21),angle:-2.78rad,[k[3]])
cetz.draw.hobby((0.48, 0.03),(0.30, -0.15),(0.05, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, 0.34),node5.pos,decoration:"arrow",angle:0.57rad)
cetz.draw.content((0.28, 0.44),angle:0.57rad,[q+k[3]])
cetz.draw.hobby((0.02, 0.06),(0.28, 0.37),(0.65, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.62))
node(node0.pos)
let node1= (pos:(-0.60, -0.62))
node(node1.pos)
let node2= (pos:(-0.50, 0.15))
node(node2.pos)
let node3= (pos:(0.50, 0.15))
node(node3.pos)
let node4= (pos:(0.91, 0.49))
node(node4.pos)
let node5= (pos:(-0.91, 0.49))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.89, -0.72),angle:5.52rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.89),angle:0.77rad,[-q+k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.64),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.76),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.49, -0.68),(-0.00, -0.70),(-0.49, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.80, -0.10),node4.pos,decoration:"wave",angle:1.29rad)
cetz.draw.content((0.91, -0.14),angle:1.29rad,[-q])
cetz.draw.hobby((0.71, -0.54),(0.86, -0.09),(0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.79, -0.10),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((-0.91, -0.14),angle:4.99rad,[-q])
cetz.draw.hobby((-0.96, 0.36),(-0.86, -0.09),(-0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.16),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, 0.28),angle:6.28rad,[-p-q])
cetz.draw.hobby((0.40, 0.22),(-0.00, 0.22),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.84rad)
cetz.draw.content((-0.72, -0.04),angle:-2.84rad,[-p-q+k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.84rad)
cetz.draw.content((0.79, 0.19),angle:2.84rad,[-p-q+k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.67, 0.38),node2.pos,decoration:"arrow",angle:-0.66rad)
cetz.draw.content((-0.60, 0.47),angle:-0.66rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-0.63, 0.42),(-0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.38),node4.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.60, 0.47),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.47, 0.23),(0.63, 0.42),(0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[-q+k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
cetz.draw.content((-1.08, 0.72),angle:4.88rad,[-q+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(0.00, -0.64),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.76),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.69),(0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.51rad)
cetz.draw.content((0.89, -0.72),angle:5.51rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.70, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.00, 0.16),node2.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[p+q])
cetz.draw.hobby((-0.40, 0.22),(-0.00, 0.22),(0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.30rad)
cetz.draw.content((0.79, 0.19),angle:-0.30rad,[p+q+k[3]])
cetz.draw.hobby((0.62, 0.18),(0.92, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, -0.03),(-0.58, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.48),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.62, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.48),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.07, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.57),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.74, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.75, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.43),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.37),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.69),(0.27, -0.38),(0.08, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.87, -0.14),angle:4.81rad,[-q])
cetz.draw.hobby((-0.81, 0.35),(-0.81, -0.11),(-0.74, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.19, 0.33),node2.pos,decoration:"arrow",angle:3.44rad)
cetz.draw.content((0.15, 0.44),angle:3.44rad,[p])
cetz.draw.hobby((-0.34, 0.20),(0.13, 0.37),(0.62, 0.50),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-1.09rad)
cetz.draw.content((0.98, 0.29),angle:-1.09rad,[p+k[3]])
cetz.draw.hobby((0.85, 0.41),(1.01, 0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:0.17rad)
cetz.draw.content((-0.69, -0.07),angle:0.17rad,[p+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.52, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.02rad)
cetz.draw.content((-0.98, 0.68),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.27, -0.09),node4.pos,decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.31, -0.20),angle:5.92rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.15),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.33),node5.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.26, 0.43),angle:2.55rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.26, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.79))
node(node0.pos)
let node1= (pos:(-0.52, -0.79))
node(node1.pos)
let node2= (pos:(-0.51, 0.79))
node(node2.pos)
let node3= (pos:(0.51, 0.79))
node(node3.pos)
let node4= (pos:(0.36, 0.00))
node(node4.pos)
let node5= (pos:(-0.36, 0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.71, -1.01),angle:0.40rad,[-q+k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.83),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((-0.00, -0.95),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.86),(-0.00, -0.89),(-0.42, -0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.40),node4.pos,decoration:"wave",angle:1.76rad)
cetz.draw.content((0.58, -0.38),angle:1.76rad,[-q])
cetz.draw.hobby((0.57, -0.71),(0.52, -0.38),(0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.47, -0.40),node1.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.38),angle:4.52rad,[-q])
cetz.draw.hobby((-0.44, -0.06),(-0.52, -0.38),(-0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:9.02rad)
cetz.draw.content((-0.80, 0.79),angle:9.02rad,[p])
cetz.draw.hobby((-0.93, 0.91),(-0.63, 0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.54rad)
cetz.draw.content((0.71, 1.01),angle:3.54rad,[p])
cetz.draw.hobby((0.58, 0.89),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.83),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, 0.95),angle:0.00rad,[p+k[3]])
cetz.draw.hobby((-0.42, 0.87),(0.00, 0.89),(0.42, 0.87),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, 0.40),node2.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.58, 0.38),angle:1.76rad,[k[3]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, 0.40),node4.pos,decoration:"arrow",angle:-1.76rad)
cetz.draw.content((0.59, 0.38),angle:-1.76rad,[k[3]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.00),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.12),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.29, 0.06),(0.00, 0.06),(-0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(0.68, -0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.82))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.20))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.54rad)
cetz.draw.content((0.92, -0.76),angle:5.54rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.82),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.93),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.87),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.11, -0.51),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.20, -0.43),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.36, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.24, 0.41),node2.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((-0.22, 0.53),angle:2.95rad,[p])
cetz.draw.hobby((-0.66, 0.54),(-0.21, 0.46),(0.23, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"coil",angle:-0.38rad)
cetz.draw.content((0.70, 0.25),angle:-0.38rad,[p+k[3]])
cetz.draw.hobby((0.43, 0.29),(0.93, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"coil",angle:1.14rad)
cetz.draw.content((-0.78, 0.19),angle:1.14rad,[p+k[3]])
cetz.draw.hobby((-0.90, 0.07),(-0.76, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.32rad)
cetz.draw.content((0.05, 0.09),angle:1.32rad,[k[3]])
cetz.draw.hobby((0.12, -0.17),(0.10, 0.07),(0.23, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, 0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.62))
node(node0.pos)
let node1= (pos:(0.57, -0.62))
node(node1.pos)
let node2= (pos:(-0.34, 0.15))
node(node2.pos)
let node3= (pos:(0.35, 0.15))
node(node3.pos)
let node4= (pos:(-0.65, 0.49))
node(node4.pos)
let node5= (pos:(0.65, 0.49))
node(node5.pos)
edge(node1.pos,(0.00, -0.65),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.77),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.69),(0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.87, -0.72),angle:5.56rad,[k[0]])
cetz.draw.hobby((0.96, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.71, -0.90),angle:0.72rad,[k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node4.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.78, -0.10),angle:1.65rad,[q])
cetz.draw.hobby((-0.66, -0.53),(-0.72, -0.07),(-0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, -0.09),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.78, -0.10),angle:-1.65rad,[q])
cetz.draw.hobby((0.72, 0.38),(0.72, -0.07),(0.66, -0.53),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.36rad)
cetz.draw.content((-0.65, -0.04),angle:3.36rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, -0.04),(-0.43, 0.07),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.70, 0.19),angle:2.92rad,[p+q+k[3]])
cetz.draw.hobby((0.46, 0.18),(0.92, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.08),node3.pos,decoration:"coil",angle:0.00rad)
cetz.draw.content((0.00, -0.04),angle:0.00rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.29, 0.06),(0.00, 0.02),(0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.40),node2.pos,decoration:"arrow",angle:3.47rad)
cetz.draw.content((0.10, 0.52),angle:3.47rad,[k[3]])
cetz.draw.hobby((0.54, 0.55),(0.10, 0.46),(-0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.13, 0.40),node4.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.10, 0.52),angle:2.82rad,[k[3]])
cetz.draw.hobby((0.29, 0.26),(-0.10, 0.46),(-0.53, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.18rad)
cetz.draw.content((-0.92, 0.68),angle:2.18rad,[q+k[3]])
cetz.draw.hobby((-0.75, 0.54),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
cetz.draw.content((0.73, 0.81),angle:4.11rad,[q+k[3]])
cetz.draw.hobby((0.89, 0.95),(0.66, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.83))
node(node0.pos)
let node1= (pos:(-0.63, -0.68))
node(node1.pos)
let node2= (pos:(0.10, 0.53))
node(node2.pos)
let node3= (pos:(0.67, 0.15))
node(node3.pos)
let node4= (pos:(0.05, -0.13))
node(node4.pos)
let node5= (pos:(-0.72, 0.38))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.71rad)
cetz.draw.content((-0.74, -0.93),angle:0.71rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.79),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.12, -0.85),(-0.54, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.49),node4.pos,decoration:"wave",angle:2.05rad)
cetz.draw.content((0.35, -0.44),angle:2.05rad,[-q])
cetz.draw.hobby((0.43, -0.73),(0.29, -0.45),(0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.71, -0.16),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.83, -0.17),angle:4.80rad,[-q])
cetz.draw.hobby((-0.78, 0.27),(-0.77, -0.16),(-0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.59rad)
cetz.draw.content((-0.40, 0.16),angle:3.59rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.01),(0.03, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.73rad)
cetz.draw.content((0.88, 0.18),angle:2.73rad,[p+k[3]])
cetz.draw.hobby((0.78, 0.16),(0.93, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.41, 0.40),node3.pos,decoration:"coil",angle:-0.59rad)
cetz.draw.content((0.48, 0.50),angle:-0.59rad,[p+2 k[3]])
cetz.draw.hobby((0.18, 0.57),(0.45, 0.44),(0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-0.97, 0.64),angle:2.00rad,[k[3]])
cetz.draw.hobby((-0.82, 0.45),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.49, 0.87),angle:3.62rad,[k[3]])
cetz.draw.hobby((0.88, 1.01),(0.16, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, -0.02),node4.pos,decoration:"arrow",angle:-2.71rad)
cetz.draw.content((0.43, -0.12),angle:-2.71rad,[k[3]])
cetz.draw.hobby((0.64, 0.06),(0.40, -0.07),(0.13, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.13),node5.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.28, 0.23),angle:2.55rad,[-q+k[3]])
cetz.draw.hobby((0.01, -0.03),(-0.30, 0.17),(-0.61, 0.38),stroke:stroke,mark: (end: ">"))
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(0.63, -0.68))
node(node0.pos)
let node1= (pos:(-0.41, -0.83))
node(node1.pos)
let node2= (pos:(-0.67, 0.15))
node(node2.pos)
let node3= (pos:(-0.10, 0.53))
node(node3.pos)
let node4= (pos:(0.72, 0.38))
node(node4.pos)
let node5= (pos:(-0.05, -0.13))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((0.89, -0.75),angle:5.57rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[-q+k[0]])
cetz.draw.hobby((-0.49, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.80),node1.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.86),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.16),node4.pos,decoration:"wave",angle:1.49rad)
cetz.draw.content((0.83, -0.17),angle:1.49rad,[-q])
cetz.draw.hobby((0.71, -0.59),(0.77, -0.16),(0.78, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, -0.49),node1.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.34, -0.44),angle:4.24rad,[-q])
cetz.draw.hobby((-0.14, -0.17),(-0.28, -0.45),(-0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.56rad)
cetz.draw.content((-0.78, -0.04),angle:3.56rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.73, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.50, 0.37),angle:2.69rad,[p+k[3]])
cetz.draw.hobby((0.02, 0.54),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.41, 0.40),node3.pos,decoration:"coil",angle:0.59rad)
cetz.draw.content((-0.48, 0.50),angle:0.59rad,[p+2 k[3]])
cetz.draw.hobby((-0.67, 0.24),(-0.45, 0.44),(-0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, -0.01),node2.pos,decoration:"arrow",angle:2.71rad)
cetz.draw.content((-0.42, -0.12),angle:2.71rad,[k[3]])
cetz.draw.hobby((-0.13, -0.17),(-0.39, -0.07),(-0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.60, 0.66),angle:2.66rad,[k[3]])
cetz.draw.hobby((-0.21, 0.52),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.29rad)
cetz.draw.content((0.75, 0.74),angle:4.29rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.71, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:3.73rad)
cetz.draw.content((0.28, 0.23),angle:3.73rad,[-q+k[3]])
cetz.draw.hobby((0.61, 0.38),(0.30, 0.18),(-0.01, -0.03),stroke:stroke,mark: (end: ">"))
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.56))
node(node0.pos)
let node1= (pos:(0.59, -0.56))
node(node1.pos)
let node2= (pos:(0.27, 0.82))
node(node2.pos)
let node3= (pos:(-0.25, 0.83))
node(node3.pos)
let node4= (pos:(-0.84, 0.52))
node(node4.pos)
let node5= (pos:(0.85, 0.52))
node(node5.pos)
edge(node1.pos,(0.00, -0.58),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.70),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.63),(0.00, -0.64),(-0.47, -0.63),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.46rad)
cetz.draw.content((0.88, -0.70),angle:5.46rad,[k[0]])
cetz.draw.hobby((0.98, -0.89),(0.70, -0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.82rad)
cetz.draw.content((-0.71, -0.86),angle:0.82rad,[k[0]])
cetz.draw.hobby((-0.61, -0.68),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.03),node4.pos,decoration:"wave",angle:1.80rad)
cetz.draw.content((-0.85, -0.06),angle:1.80rad,[q])
cetz.draw.hobby((-0.68, -0.47),(-0.79, -0.04),(-0.88, 0.40),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.74, -0.03),node1.pos,decoration:"wave",angle:-1.80rad)
cetz.draw.content((0.85, -0.06),angle:-1.80rad,[q])
cetz.draw.hobby((0.89, 0.40),(0.80, -0.04),(0.68, -0.47),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, 0.70),node2.pos,decoration:"arrow",angle:9.42rad)
cetz.draw.content((0.01, 0.58),angle:9.42rad,[k[2]])
cetz.draw.hobby((-0.25, 0.74),(0.01, 0.64),(0.27, 0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.01, 0.99),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.01, 1.11),angle:3.14rad,[-p-q+k[2]])
cetz.draw.hobby((0.28, 0.92),(0.01, 1.05),(-0.26, 0.92),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.58, 0.68),node2.pos,decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.63, 0.79),angle:2.65rad,[-p-q])
cetz.draw.hobby((0.83, 0.60),(0.60, 0.74),(0.35, 0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.56, 0.69),node4.pos,decoration:"arrow",angle:3.63rad)
cetz.draw.content((-0.62, 0.79),angle:3.63rad,[-p-q])
cetz.draw.hobby((-0.34, 0.86),(-0.58, 0.75),(-0.82, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.90rad)
cetz.draw.content((-1.03, 0.72),angle:1.90rad,[-p])
cetz.draw.hobby((-0.92, 0.59),(-1.02, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.40rad)
cetz.draw.content((0.81, 0.79),angle:4.40rad,[-p])
cetz.draw.hobby((0.91, 0.92),(0.82, 0.63),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.86))
node(node0.pos)
let node1= (pos:(-0.51, -0.86))
node(node1.pos)
let node2= (pos:(-0.93, 0.45))
node(node2.pos)
let node3= (pos:(0.92, 0.45))
node(node3.pos)
let node4= (pos:(0.38, -0.12))
node(node4.pos)
let node5= (pos:(-0.39, -0.12))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.79, -0.81),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.63, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.29rad)
cetz.draw.content((-0.72, -1.04),angle:0.29rad,[-q+k[0]])
cetz.draw.hobby((-0.59, -0.94),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.89),node1.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((-0.00, -1.01),angle:0.00rad,[k[0]])
cetz.draw.hobby((0.42, -0.93),(0.00, -0.95),(-0.42, -0.93),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.49),node4.pos,decoration:"wave",angle:1.74rad)
cetz.draw.content((0.59, -0.47),angle:1.74rad,[-q])
cetz.draw.hobby((0.57, -0.78),(0.53, -0.47),(0.46, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.48, -0.49),node1.pos,decoration:"wave",angle:4.55rad)
cetz.draw.content((-0.59, -0.47),angle:4.55rad,[-q])
cetz.draw.hobby((-0.47, -0.17),(-0.53, -0.47),(-0.57, -0.78),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((-0.84, 0.21),angle:4.55rad,[k[2]])
cetz.draw.hobby((-0.92, 0.09),(-0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((1.08, 0.25),angle:1.74rad,[k[2]])
cetz.draw.hobby((1.00, 0.36),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:1.71rad)
cetz.draw.content((-1.08, 0.71),angle:1.71rad,[-p+k[2]])
cetz.draw.hobby((-1.00, 0.54),(-1.05, 0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:4.58rad)
cetz.draw.content((0.84, 0.74),angle:4.58rad,[-p+k[2]])
cetz.draw.hobby((0.93, 0.91),(0.88, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:2.33rad)
cetz.draw.content((-0.56, 0.27),angle:2.33rad,[-p])
cetz.draw.hobby((-0.39, -0.02),(-0.60, 0.22),(-0.83, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, 0.19),node4.pos,decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.56, 0.27),angle:3.95rad,[-p])
cetz.draw.hobby((0.83, 0.44),(0.60, 0.22),(0.39, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, -0.10),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.00, 0.02),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.31, -0.05),(-0.00, -0.04),(-0.32, -0.05),stroke:stroke,mark: (end: ">"))
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.40, -0.75))
node(node1.pos)
let node2= (pos:(-0.44, 0.54))
node(node2.pos)
let node3= (pos:(-0.77, 0.89))
node(node3.pos)
let node4= (pos:(0.76, 0.40))
node(node4.pos)
let node5= (pos:(0.00, 0.02))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.50rad)
cetz.draw.content((0.91, -0.74),angle:5.50rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.76, -0.67),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.65, -0.99),angle:0.40rad,[-q+k[0]])
cetz.draw.hobby((-0.47, -0.84),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.13, -0.73),node1.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((0.14, -0.85),angle:0.10rad,[k[0]])
cetz.draw.hobby((0.55, -0.73),(0.13, -0.79),(-0.29, -0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.74, -0.13),node4.pos,decoration:"wave",angle:1.46rad)
cetz.draw.content((0.85, -0.14),angle:1.46rad,[-q])
cetz.draw.hobby((0.73, -0.55),(0.80, -0.13),(0.82, 0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.22, -0.37),node1.pos,decoration:"wave",angle:4.23rad)
cetz.draw.content((-0.32, -0.32),angle:4.23rad,[-q])
cetz.draw.hobby((-0.09, -0.03),(-0.26, -0.33),(-0.42, -0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.72, 0.61),node2.pos,decoration:"arrow",angle:8.59rad)
cetz.draw.content((-0.81, 0.53),angle:8.59rad,[k[2]])
cetz.draw.hobby((-0.85, 0.84),(-0.76, 0.57),(-0.50, 0.47),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.50, 0.84),node3.pos,decoration:"coil",angle:2.37rad)
cetz.draw.content((-0.41, 0.92),angle:2.37rad,[-p+k[2]])
cetz.draw.hobby((-0.36, 0.59),(-0.44, 0.87),(-0.72, 0.97),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.22, 0.28),node2.pos,decoration:"arrow",angle:2.28rad)
cetz.draw.content((-0.13, 0.36),angle:2.28rad,[-p])
cetz.draw.hobby((0.00, 0.11),(-0.17, 0.32),(-0.35, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((-0.94, 0.84),angle:2.70rad,[-p])
cetz.draw.hobby((-0.89, 0.88),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.33rad)
cetz.draw.content((0.77, 0.74),angle:4.33rad,[-p])
cetz.draw.hobby((0.91, 0.93),(0.74, 0.52),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.39, 0.22),node5.pos,decoration:"arrow",angle:3.61rad)
cetz.draw.content((0.33, 0.33),angle:3.61rad,[-p-q])
cetz.draw.hobby((0.66, 0.42),(0.35, 0.27),(0.05, 0.11),stroke:stroke,mark: (end: ">"))
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.92, 0.76))
node(node2.pos)
let node3= (pos:(0.57, 0.43))
node(node3.pos)
let node4= (pos:(0.03, 0.00))
node(node4.pos)
let node5= (pos:(-0.74, 0.40))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((0.75, -0.77),angle:5.90rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.78rad)
cetz.draw.content((-0.74, -0.91),angle:0.78rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.76),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.13, -0.74),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.85),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.82),(-0.13, -0.80),(-0.55, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.39),node4.pos,decoration:"wave",angle:2.02rad)
cetz.draw.content((0.34, -0.33),angle:2.02rad,[-q])
cetz.draw.hobby((0.42, -0.66),(0.28, -0.35),(0.12, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.73, -0.13),node1.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.85, -0.14),angle:4.81rad,[-q])
cetz.draw.hobby((-0.81, 0.30),(-0.79, -0.13),(-0.72, -0.55),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.86, 0.48),node2.pos,decoration:"arrow",angle:3.94rad)
cetz.draw.content((0.95, 0.40),angle:3.94rad,[k[2]])
cetz.draw.hobby((0.62, 0.35),(0.90, 0.43),(1.00, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.64, 0.71),node3.pos,decoration:"coil",angle:3.89rad)
cetz.draw.content((0.56, 0.79),angle:3.89rad,[-p+k[2]])
cetz.draw.hobby((0.87, 0.83),(0.60, 0.75),(0.50, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:1.97rad)
cetz.draw.content((-0.98, 0.65),angle:1.97rad,[-p])
cetz.draw.hobby((-0.84, 0.47),(-1.02, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.39rad)
cetz.draw.content((0.85, 0.92),angle:4.39rad,[-p])
cetz.draw.hobby((0.91, 0.92),(0.90, 0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.30, 0.22),node4.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.23, 0.31),angle:3.81rad,[-p])
cetz.draw.hobby((0.48, 0.43),(0.26, 0.26),(0.05, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, 0.22),node5.pos,decoration:"arrow",angle:2.67rad)
cetz.draw.content((-0.31, 0.33),angle:2.67rad,[-p-q])
cetz.draw.hobby((-0.01, 0.10),(-0.32, 0.27),(-0.64, 0.42),stroke:stroke,mark: (end: ">"))
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.62))
node(node0.pos)
let node1= (pos:(0.60, -0.62))
node(node1.pos)
let node2= (pos:(0.50, 0.15))
node(node2.pos)
let node3= (pos:(-0.50, 0.15))
node(node3.pos)
let node4= (pos:(-0.91, 0.49))
node(node4.pos)
let node5= (pos:(0.91, 0.49))
node(node5.pos)
edge(node1.pos,(0.00, -0.64),node0.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.76),angle:6.28rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.69),(0.00, -0.70),(-0.49, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.52rad)
cetz.draw.content((0.89, -0.72),angle:5.52rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.72, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((-0.72, -0.90),angle:0.77rad,[k[0]])
cetz.draw.hobby((-0.63, -0.73),(-0.89, -0.97),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node4.pos,decoration:"wave",angle:1.85rad)
cetz.draw.content((-0.91, -0.14),angle:1.85rad,[q])
cetz.draw.hobby((-0.70, -0.54),(-0.86, -0.09),(-0.96, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.80, -0.10),node1.pos,decoration:"wave",angle:-1.85rad)
cetz.draw.content((0.91, -0.14),angle:-1.85rad,[q])
cetz.draw.hobby((0.96, 0.36),(0.86, -0.09),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.98rad)
cetz.draw.content((0.79, 0.19),angle:5.98rad,[-p-q-k[3]])
cetz.draw.hobby((0.92, 0.09),(0.62, 0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.30rad)
cetz.draw.content((-0.72, -0.04),angle:0.30rad,[-p-q-k[3]])
cetz.draw.hobby((-0.58, 0.07),(-0.89, -0.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.00, 0.16),node3.pos,decoration:"coil",angle:3.14rad)
cetz.draw.content((0.00, 0.28),angle:3.14rad,[-p-q])
cetz.draw.hobby((0.40, 0.21),(0.00, 0.22),(-0.40, 0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.67, 0.38),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.60, 0.47),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.84, 0.53),(0.63, 0.42),(0.47, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.67, 0.38),node4.pos,decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.60, 0.47),angle:2.48rad,[k[3]])
cetz.draw.hobby((-0.47, 0.23),(-0.63, 0.42),(-0.84, 0.53),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:1.74rad)
cetz.draw.content((-1.08, 0.72),angle:1.74rad,[q+k[3]])
cetz.draw.hobby((-0.99, 0.58),(-1.04, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((0.92, 0.91),(0.87, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.79))
node(node0.pos)
let node1= (pos:(-0.65, -0.67))
node(node1.pos)
let node2= (pos:(0.75, 0.47))
node(node2.pos)
let node3= (pos:(-0.43, 0.10))
node(node3.pos)
let node4= (pos:(-0.02, -0.06))
node(node4.pos)
let node5= (pos:(-0.75, 0.46))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.94rad)
cetz.draw.content((0.75, -0.78),angle:5.94rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.75rad)
cetz.draw.content((-0.74, -0.92),angle:0.75rad,[-q+k[0]])
cetz.draw.hobby((-0.68, -0.78),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.77),node1.pos,decoration:"arrow",angle:6.17rad)
cetz.draw.content((-0.14, -0.89),angle:6.17rad,[k[0]])
cetz.draw.hobby((0.30, -0.85),(-0.13, -0.83),(-0.56, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.23, -0.42),node4.pos,decoration:"wave",angle:2.10rad)
cetz.draw.content((0.33, -0.36),angle:2.10rad,[-q])
cetz.draw.hobby((0.43, -0.68),(0.27, -0.38),(0.08, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, -0.13),node1.pos,decoration:"wave",angle:4.81rad)
cetz.draw.content((-0.87, -0.14),angle:4.81rad,[-q])
cetz.draw.hobby((-0.82, 0.35),(-0.81, -0.11),(-0.74, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((0.98, 0.29),angle:5.20rad,[-p-k[3]])
cetz.draw.hobby((1.01, 0.12),(0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:0.18rad)
cetz.draw.content((-0.69, -0.07),angle:0.18rad,[-p-k[3]])
cetz.draw.hobby((-0.52, 0.02),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.19, 0.33),node3.pos,decoration:"coil",angle:3.44rad)
cetz.draw.content((0.15, 0.44),angle:3.44rad,[-p])
cetz.draw.hobby((0.62, 0.50),(0.13, 0.37),(-0.34, 0.21),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.01rad)
cetz.draw.content((-0.98, 0.68),angle:2.01rad,[k[3]])
cetz.draw.hobby((-0.84, 0.53),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.28rad)
cetz.draw.content((0.77, 0.78),angle:4.28rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.74, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.27, -0.09),node4.pos,decoration:"arrow",angle:5.92rad)
cetz.draw.content((-0.31, -0.21),angle:5.92rad,[k[3]])
cetz.draw.hobby((-0.47, 0.03),(-0.29, -0.15),(-0.04, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.33, 0.34),node5.pos,decoration:"arrow",angle:2.56rad)
cetz.draw.content((-0.26, 0.44),angle:2.56rad,[-q+k[3]])
cetz.draw.hobby((-0.00, 0.05),(-0.27, 0.36),(-0.64, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(0.67, -0.70))
node(node0.pos)
let node1= (pos:(-0.37, -0.83))
node(node1.pos)
let node2= (pos:(0.32, 0.27))
node(node2.pos)
let node3= (pos:(-0.77, 0.49))
node(node3.pos)
let node4= (pos:(0.84, 0.36))
node(node4.pos)
let node5= (pos:(0.19, -0.21))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.55rad)
cetz.draw.content((0.92, -0.76),angle:5.55rad,[-q+k[0]])
cetz.draw.hobby((0.97, -0.89),(0.79, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.27rad)
cetz.draw.content((-0.65, -1.03),angle:0.27rad,[-q+k[0]])
cetz.draw.hobby((-0.45, -0.91),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.16, -0.82),node1.pos,decoration:"arrow",angle:0.12rad)
cetz.draw.content((0.17, -0.94),angle:0.12rad,[k[0]])
cetz.draw.hobby((0.59, -0.79),(0.17, -0.88),(-0.26, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.81, -0.20),node4.pos,decoration:"wave",angle:1.41rad)
cetz.draw.content((0.93, -0.22),angle:1.41rad,[-q])
cetz.draw.hobby((0.77, -0.62),(0.87, -0.19),(0.91, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.12, -0.52),node1.pos,decoration:"wave",angle:3.98rad)
cetz.draw.content((-0.20, -0.44),angle:3.98rad,[-q])
cetz.draw.hobby((0.09, -0.22),(-0.15, -0.46),(-0.36, -0.72),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((0.70, 0.25),angle:5.91rad,[-p-k[3]])
cetz.draw.hobby((0.93, 0.09),(0.43, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:1.14rad)
cetz.draw.content((-0.78, 0.19),angle:1.14rad,[-p-k[3]])
cetz.draw.hobby((-0.76, 0.37),(-0.90, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.24, 0.41),node3.pos,decoration:"coil",angle:2.95rad)
cetz.draw.content((-0.22, 0.52),angle:2.95rad,[-p])
cetz.draw.hobby((0.22, 0.36),(-0.21, 0.46),(-0.66, 0.53),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.16, 0.06),node2.pos,decoration:"arrow",angle:1.32rad)
cetz.draw.content((0.04, 0.09),angle:1.32rad,[k[3]])
cetz.draw.hobby((0.11, -0.18),(0.10, 0.07),(0.23, 0.28),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.00, 0.70),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.56),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.81, 0.71),angle:4.47rad,[k[3]])
cetz.draw.hobby((0.92, 0.92),(0.81, 0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.06),node5.pos,decoration:"arrow",angle:-2.41rad)
cetz.draw.content((0.65, -0.03),angle:-2.41rad,[-q+k[3]])
cetz.draw.hobby((0.84, 0.26),(0.59, -0.00),(0.30, -0.21),stroke:stroke,mark: (end: ">"))
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.79))
node(node0.pos)
let node1= (pos:(-0.51, -0.79))
node(node1.pos)
let node2= (pos:(-0.51, 0.79))
node(node2.pos)
let node3= (pos:(0.52, 0.79))
node(node3.pos)
let node4= (pos:(0.36, 0.00))
node(node4.pos)
let node5= (pos:(-0.36, -0.00))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.88rad)
cetz.draw.content((0.80, -0.79),angle:5.88rad,[-q+k[0]])
cetz.draw.hobby((0.93, -0.91),(0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.71, -1.01),angle:0.40rad,[-q+k[0]])
cetz.draw.hobby((-0.58, -0.89),(-0.88, -1.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.00, -0.83),node1.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, -0.95),angle:6.28rad,[k[0]])
cetz.draw.hobby((0.42, -0.87),(0.00, -0.89),(-0.42, -0.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.47, -0.40),node4.pos,decoration:"wave",angle:1.76rad)
cetz.draw.content((0.59, -0.38),angle:1.76rad,[-q])
cetz.draw.hobby((0.57, -0.71),(0.53, -0.38),(0.44, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, -0.40),node1.pos,decoration:"wave",angle:4.52rad)
cetz.draw.content((-0.58, -0.38),angle:4.52rad,[-q])
cetz.draw.hobby((-0.44, -0.06),(-0.52, -0.38),(-0.57, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.83),node2.pos,decoration:"arrow",angle:6.28rad)
cetz.draw.content((0.00, 0.95),angle:6.28rad,[-p-k[3]])
cetz.draw.hobby((0.42, 0.86),(0.00, 0.89),(-0.42, 0.86),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"coil",angle:2.74rad)
cetz.draw.content((-0.80, 0.79),angle:2.74rad,[-p])
cetz.draw.hobby((-0.63, 0.78),(-0.93, 0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"coil",angle:3.55rad)
cetz.draw.content((0.71, 1.01),angle:3.55rad,[-p])
cetz.draw.hobby((0.88, 1.02),(0.58, 0.89),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, 0.40),node2.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.58, 0.38),angle:1.76rad,[k[3]])
cetz.draw.hobby((-0.44, 0.06),(-0.52, 0.38),(-0.57, 0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, 0.40),node4.pos,decoration:"arrow",angle:-1.76rad)
cetz.draw.content((0.59, 0.38),angle:-1.76rad,[k[3]])
cetz.draw.hobby((0.57, 0.71),(0.53, 0.38),(0.44, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, -0.00),node5.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.00, 0.12),angle:3.14rad,[-q+k[3]])
cetz.draw.hobby((0.29, 0.06),(0.00, 0.06),(-0.29, 0.06),stroke:stroke,mark: (end: ">"))
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.62))
node(node0.pos)
let node1= (pos:(0.57, -0.62))
node(node1.pos)
let node2= (pos:(-0.35, 0.15))
node(node2.pos)
let node3= (pos:(0.35, 0.15))
node(node3.pos)
let node4= (pos:(-0.65, 0.49))
node(node4.pos)
let node5= (pos:(0.65, 0.49))
node(node5.pos)
edge(node1.pos,(0.00, -0.65),node0.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.77),angle:0.00rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.69),(0.00, -0.71),(-0.46, -0.69),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:5.56rad)
cetz.draw.content((0.87, -0.72),angle:5.56rad,[k[0]])
cetz.draw.hobby((0.97, -0.89),(0.69, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.71, -0.90),angle:0.72rad,[k[0]])
cetz.draw.hobby((-0.61, -0.73),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.09),node4.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.78, -0.10),angle:1.65rad,[q])
cetz.draw.hobby((-0.66, -0.52),(-0.72, -0.07),(-0.72, 0.38),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, -0.09),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.78, -0.10),angle:-1.65rad,[q])
cetz.draw.hobby((0.72, 0.38),(0.72, -0.07),(0.66, -0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, 0.08),node2.pos,decoration:"arrow",angle:0.00rad)
cetz.draw.content((0.00, -0.04),angle:0.00rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.30, 0.06),(-0.00, 0.02),(-0.30, 0.07),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.92rad)
cetz.draw.content((-0.65, -0.04),angle:-2.92rad,[-p-q-k[3]])
cetz.draw.hobby((-0.43, 0.07),(-0.89, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.92rad)
cetz.draw.content((0.70, 0.19),angle:2.92rad,[-p-q-k[3]])
cetz.draw.hobby((0.92, 0.08),(0.46, 0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.40),node2.pos,decoration:"arrow",angle:3.47rad)
cetz.draw.content((0.10, 0.52),angle:3.47rad,[k[3]])
cetz.draw.hobby((0.54, 0.54),(0.10, 0.46),(-0.29, 0.26),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.14, 0.40),node4.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.10, 0.52),angle:2.82rad,[k[3]])
cetz.draw.hobby((0.29, 0.26),(-0.10, 0.46),(-0.54, 0.54),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.18rad)
cetz.draw.content((-0.92, 0.68),angle:2.18rad,[q+k[3]])
cetz.draw.hobby((-0.75, 0.54),(-0.99, 0.88),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.11rad)
cetz.draw.content((0.72, 0.81),angle:4.11rad,[q+k[3]])
cetz.draw.hobby((0.89, 0.95),(0.65, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.41, -0.83))
node(node0.pos)
let node1= (pos:(-0.63, -0.68))
node(node1.pos)
let node2= (pos:(0.10, 0.53))
node(node2.pos)
let node3= (pos:(0.67, 0.15))
node(node3.pos)
let node4= (pos:(0.05, -0.13))
node(node4.pos)
let node5= (pos:(-0.72, 0.38))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:6.00rad)
cetz.draw.content((0.74, -0.80),angle:6.00rad,[-q+k[0]])
cetz.draw.hobby((0.92, -0.91),(0.52, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.72rad)
cetz.draw.content((-0.74, -0.93),angle:0.72rad,[-q+k[0]])
cetz.draw.hobby((-0.67, -0.79),(-0.89, -0.98),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.12, -0.80),node1.pos,decoration:"arrow",angle:6.14rad)
cetz.draw.content((-0.14, -0.91),angle:6.14rad,[k[0]])
cetz.draw.hobby((0.30, -0.89),(-0.12, -0.86),(-0.55, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.49),node4.pos,decoration:"wave",angle:2.05rad)
cetz.draw.content((0.35, -0.44),angle:2.05rad,[-q])
cetz.draw.hobby((0.43, -0.73),(0.29, -0.45),(0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.71, -0.16),node1.pos,decoration:"wave",angle:4.80rad)
cetz.draw.content((-0.83, -0.17),angle:4.80rad,[-q])
cetz.draw.hobby((-0.78, 0.27),(-0.77, -0.16),(-0.71, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, 0.40),node2.pos,decoration:"arrow",angle:5.70rad)
cetz.draw.content((0.48, 0.50),angle:5.70rad,[-p-2 k[3]])
cetz.draw.hobby((0.67, 0.24),(0.45, 0.44),(0.18, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.69rad)
cetz.draw.content((-0.40, 0.16),angle:-2.69rad,[-p-k[3]])
cetz.draw.hobby((0.03, 0.43),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.72rad)
cetz.draw.content((0.88, 0.18),angle:2.72rad,[-p-k[3]])
cetz.draw.hobby((0.93, 0.10),(0.78, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-0.97, 0.64),angle:2.00rad,[k[3]])
cetz.draw.hobby((-0.82, 0.45),(-1.01, 0.88),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.62rad)
cetz.draw.content((0.49, 0.87),angle:3.62rad,[k[3]])
cetz.draw.hobby((0.88, 1.01),(0.16, 0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.38, -0.02),node4.pos,decoration:"arrow",angle:-2.71rad)
cetz.draw.content((0.43, -0.12),angle:-2.71rad,[k[3]])
cetz.draw.hobby((0.64, 0.06),(0.40, -0.07),(0.14, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.13),node5.pos,decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.41, 0.03),angle:2.55rad,[-q+k[3]])
cetz.draw.hobby((-0.06, -0.13),(-0.37, 0.07),(-0.68, 0.28),stroke:stroke,mark: (end: ">"))
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.63, -0.68))
node(node0.pos)
let node1= (pos:(-0.41, -0.83))
node(node1.pos)
let node2= (pos:(-0.66, 0.15))
node(node2.pos)
let node3= (pos:(-0.09, 0.53))
node(node3.pos)
let node4= (pos:(0.72, 0.38))
node(node4.pos)
let node5= (pos:(-0.05, -0.13))
node(node5.pos)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:5.57rad)
cetz.draw.content((0.90, -0.75),angle:5.57rad,[-q+k[0]])
cetz.draw.hobby((0.96, -0.89),(0.75, -0.70),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:0.28rad)
cetz.draw.content((-0.67, -1.03),angle:0.28rad,[-q+k[0]])
cetz.draw.hobby((-0.49, -0.92),(-0.89, -1.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.80),node1.pos,decoration:"arrow",angle:0.14rad)
cetz.draw.content((0.14, -0.91),angle:0.14rad,[k[0]])
cetz.draw.hobby((0.55, -0.77),(0.13, -0.86),(-0.30, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.71, -0.16),node4.pos,decoration:"wave",angle:1.49rad)
cetz.draw.content((0.83, -0.17),angle:1.49rad,[-q])
cetz.draw.hobby((0.71, -0.59),(0.77, -0.16),(0.79, 0.27),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.24, -0.50),node1.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.34, -0.44),angle:4.24rad,[-q])
cetz.draw.hobby((-0.14, -0.17),(-0.28, -0.45),(-0.43, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.40),node2.pos,decoration:"arrow",angle:6.87rad)
cetz.draw.content((-0.48, 0.50),angle:6.87rad,[-p-2 k[3]])
cetz.draw.hobby((-0.18, 0.57),(-0.45, 0.44),(-0.67, 0.24),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"coil",angle:-2.73rad)
cetz.draw.content((-0.78, -0.04),angle:-2.73rad,[-p-k[3]])
cetz.draw.hobby((-0.73, 0.05),(-0.88, -0.01),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"coil",angle:2.69rad)
cetz.draw.content((0.51, 0.37),angle:2.69rad,[-p-k[3]])
cetz.draw.hobby((0.94, 0.10),(0.02, 0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, -0.01),node2.pos,decoration:"arrow",angle:2.71rad)
cetz.draw.content((-0.42, -0.12),angle:2.71rad,[k[3]])
cetz.draw.hobby((-0.13, -0.17),(-0.39, -0.07),(-0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((-0.60, 0.66),angle:2.66rad,[k[3]])
cetz.draw.hobby((-0.21, 0.52),(-0.94, 0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.29rad)
cetz.draw.content((0.75, 0.74),angle:4.29rad,[k[3]])
cetz.draw.hobby((0.90, 0.93),(0.71, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.13),node5.pos,decoration:"arrow",angle:3.73rad)
cetz.draw.content((0.28, 0.23),angle:3.73rad,[-q+k[3]])
cetz.draw.hobby((0.61, 0.38),(0.30, 0.17),(-0.01, -0.03),stroke:stroke,mark: (end: ">"))
})
[= embedding 1 [2, 0, -2, -4] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 +2-3+10-11+14-15],box[#embedding1i1 +2-3+10-11+12-13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,p+q-k[3]]^-1 prop[0,p+q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 +0-1+10-11+16-17],)
pagebreak()
[= embedding 2 [2, 0, -2, -2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 +2-3+10-11],box[#embedding2i1 +2-3-8+9+12-13],box[#embedding2i2 +2-3-8+9+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,-q+k[3]]^-1 prop[0,p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 +0-1-8+9+16-17],)
pagebreak()
[= embedding 3 [2, 0, 0, -2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,p]^-2 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 +2-3+8-9+10-11],box[#embedding3i1 +2-3+12-13],box[#embedding3i2 +2-3+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-2 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 +0-1+16-17],)
pagebreak()
[= embedding 4 [2, 0, 2, -2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 +2-3+8-9+12-13],box[#embedding4i1 +2-3+8-9+14-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-q+k[3]]^-1 prop[0,-p-q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 +0-1+8-9+16-17],)
pagebreak()
[= embedding 5 [2, 0, 2, 0] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 +2-3+8-9],box[#embedding5i1 +2-3-10+11+14-15],box[#embedding5i2 +2-3-10+11+12-13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 +0-1-10+11+16-17],)
pagebreak()
[= embedding 6 [2, 2, -2, 0] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 +2-3+10-11-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 +0-1+10-11-12+13],box[#embedding6f1 +0-1-8+9],box[#embedding6f2 +0-1+10-11-14+15],)
pagebreak()
[= embedding 7 [2, 2, -2, 2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 +2-3-8+9-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 +0-1-8+9-12+13],box[#embedding7f1 +0-1-8+9-14+15],)
pagebreak()
[= embedding 8 [2, 2, 0, 2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-2 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 +2-3-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-2 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 +0-1-8+9-10+11],box[#embedding8f1 +0-1-14+15],box[#embedding8f2 +0-1-12+13],)
pagebreak()
[= embedding 9 [2, 2, 2, 2] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 +2-3+8-9-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,-q+k[3]]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 +0-1+8-9-12+13],box[#embedding9f1 +0-1+8-9-14+15],box[#embedding9f2 +0-1-10+11],)
pagebreak()
[= embedding 10 [2, 2, 2, 4] with multiplicity 1
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 +2-3-10+11-16+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 +0-1-10+11-12+13],box[#embedding10f1 +0-1-10+11-14+15],)
pagebreak()
}