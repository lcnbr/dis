#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.70, -0.38))
node(node0.pos)
let node1= (pos:(-0.48, -0.10))
node(node1.pos)
let node2= (pos:(0.42, -0.76))
node(node2.pos)
let node3= (pos:(-0.77, 0.36))
node(node3.pos)
let node4= (pos:(-0.17, -0.70))
node(node4.pos)
let node5= (pos:(1.00, 0.91))
node(node5.pos)
edge(node1.pos,(0.62, 0.64),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.58, 0.76),angle:0.34rad,[q+k[0]])
cetz.draw.hobby((0.87, 0.78),(3.63, -3.49),(-1.20, -1.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.27, 0.81),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.92),angle:2.70rad,[q])
cetz.draw.hobby((-0.91, 0.02),(0.38, 0.82),(0.28, -0.69),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.60),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.50, -0.72),angle:0.16rad,[q])
cetz.draw.hobby((1.22, 0.67),(0.87, -0.50),(-0.34, -0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.80),node2.pos,decoration:"arrow",angle:-0.19rad)
cetz.draw.content((0.16, 0.91),angle:-0.19rad,[p-2 k[3]])
cetz.draw.hobby((-0.62, 0.64),(0.60, 0.63),(0.70, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.37),node4.pos,decoration:"arrow",angle:2.01rad)
cetz.draw.content((-1.04, -0.42),angle:2.01rad,[k[3]])
cetz.draw.hobby((-0.93, 0.26),(-0.96, -0.45),(-0.34, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.52, 0.79),node5.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.61, 0.87),angle:4.07rad,[q+k[3]])
cetz.draw.hobby((-0.49, -0.53),(-0.57, 0.83),(0.74, 1.16),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.53),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.54, -0.36),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.42),(-0.59, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.53, -0.53),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.07, -0.20),angle:2.74rad,[-k[0]])
cetz.draw.hobby((-0.37, -0.08),(0.46, -0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.53, 0.00),decoration:"coil",angle:4.57rad)
cetz.draw.content((0.35, -0.36),angle:4.57rad,[p-k[3]])
cetz.draw.hobby((0.37, -0.65),(0.45, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.00),decoration:"coil",angle:-0.97rad)
cetz.draw.content((-0.55, 0.25),angle:-0.97rad,[p-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.66, 0.31),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, 0.53),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.84, 0.62),angle:0.68rad,[k[3]])
cetz.draw.hobby((0.96, 0.80),(0.64, 0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.53),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.51, 0.41),(0.31, -0.71),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[p-2 k[3]])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.55),(-0.60, 0.83),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"coil",angle:4.57rad)
cetz.draw.content((0.36, -0.37),angle:4.57rad,[p-k[3]])
cetz.draw.hobby((0.38, -0.67),(0.46, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"coil",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[p-k[3]])
cetz.draw.hobby((-0.54, 0.12),(-0.69, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.70, 0.46),(0.43, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.47, -0.12),angle:1.85rad,[k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(0.54, 0.00),decoration:"coil",angle:4.57rad)
edge(node3.pos,(-0.54, 0.00),decoration:"coil",angle:-0.99rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[p])
cetz.draw.hobby((0.71, -0.60),(0.61, 0.64),(-0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.55),(-0.60, 0.83),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[p-k[3]])
cetz.draw.hobby((-0.68, 0.42),(0.46, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.31, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.70, 0.46),(0.43, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.47, -0.12),angle:1.85rad,[k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[p])
cetz.draw.hobby((0.71, -0.60),(0.61, 0.64),(-0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.38),node4.pos,decoration:"arrow",angle:2.04rad)
cetz.draw.content((-1.04, -0.44),angle:2.04rad,[k[3]])
cetz.draw.hobby((-0.95, 0.29),(-0.97, -0.43),(-0.35, -0.80),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.55),(-0.60, 0.83),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[p-k[3]])
cetz.draw.hobby((-0.68, 0.42),(0.46, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.31, -0.76),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.85, 0.64),angle:0.70rad,[k[3]])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.53, 0.42),(0.32, -0.73),stroke:stroke,mark: (end: ">"))
})
let embedding2i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.94, 0.01),(0.37, 0.85),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.74),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[p-k[3]])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[k[3]])
cetz.draw.hobby((-0.63, 0.80),(0.91, 0.63),(0.27, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[q+k[3]])
cetz.draw.hobby((0.08, -0.74),(0.87, -0.22),(1.11, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"coil",angle:4.63rad)
cetz.draw.content((0.36, -0.11),angle:4.63rad,[p])
cetz.draw.hobby((0.38, -0.67),(0.47, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"coil",angle:0.54rad)
cetz.draw.content((-0.73, 0.57),angle:0.54rad,[p])
cetz.draw.hobby((-0.65, 0.54),(-0.74, 0.49),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:0.63rad)
cetz.draw.content((0.08, 0.91),angle:0.63rad,[p])
cetz.draw.hobby((0.72, 1.05),(-0.23, 0.38),(0.16, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.36),node4.pos,decoration:"arrow",angle:2.00rad)
cetz.draw.content((-1.04, -0.41),angle:2.00rad,[p])
cetz.draw.hobby((-0.95, 0.29),(-0.96, -0.43),(-0.35, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[p+q])
cetz.draw.hobby((-0.50, -0.55),(-0.60, 0.83),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[-k[2]])
cetz.draw.hobby((-0.54, 0.12),(-0.69, 0.34),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.38, -0.37),angle:4.61rad,[-k[2]])
cetz.draw.hobby((0.41, -0.67),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"coil",angle:4.65rad)
cetz.draw.content((0.38, -0.11),angle:4.65rad,[p+k[2]])
cetz.draw.hobby((0.40, -0.67),(0.47, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"coil",angle:0.54rad)
cetz.draw.content((-0.73, 0.57),angle:0.54rad,[p+k[2]])
cetz.draw.hobby((-0.65, 0.54),(-0.74, 0.49),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.94, 0.01),(0.37, 0.85),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.74),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[k[2]])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"coil",angle:5.01rad)
cetz.draw.content((-1.05, -0.42),angle:5.01rad,[p+k[2]])
cetz.draw.hobby((0.24, -0.96),(-0.75, -0.79),(-0.97, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node2.pos,decoration:"arrow",angle:0.94rad)
cetz.draw.content((-0.63, 0.89),angle:0.94rad,[p])
cetz.draw.hobby((0.68, 1.21),(-0.73, 0.56),(0.01, -0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[p+q])
cetz.draw.hobby((0.08, -0.74),(0.87, -0.22),(1.11, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[p])
cetz.draw.hobby((-0.70, 0.46),(0.43, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.86rad)
cetz.draw.content((-0.47, -0.12),angle:1.86rad,[p])
cetz.draw.hobby((-0.57, 0.43),(-0.25, -0.64),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.94, 0.01),(0.37, 0.85),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.74),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[k[2]])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"coil",angle:5.01rad)
cetz.draw.content((-1.05, -0.42),angle:5.01rad,[p+k[2]])
cetz.draw.hobby((0.24, -0.96),(-0.75, -0.79),(-0.97, 0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[p])
cetz.draw.hobby((-0.63, 0.80),(0.91, 0.63),(0.27, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[p+q])
cetz.draw.hobby((0.08, -0.74),(0.87, -0.22),(1.11, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.85, 0.64),angle:0.70rad,[p])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[p])
cetz.draw.hobby((-0.53, 0.42),(0.32, -0.73),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"coil",angle:5.01rad)
edge(node5.pos,(-0.53, 0.81),node2.pos,decoration:"arrow",angle:0.94rad)
edge(node3.pos,(0.59, -0.43),node4.pos,decoration:"arrow",angle:0.87rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[-p+2 k[3]])
cetz.draw.hobby((0.71, -0.60),(0.61, 0.64),(-0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.55),(-0.60, 0.83),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[p-k[3]])
cetz.draw.hobby((-0.54, 0.12),(-0.69, 0.34),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.36, -0.37),angle:4.57rad,[p-k[3]])
cetz.draw.hobby((0.38, -0.67),(0.46, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.70, 0.46),(0.43, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.47, -0.12),angle:1.85rad,[k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.70, -0.38))
node(node0.pos)
let node1= (pos:(-0.48, -0.10))
node(node1.pos)
let node2= (pos:(0.42, -0.76))
node(node2.pos)
let node3= (pos:(-0.77, 0.36))
node(node3.pos)
let node4= (pos:(-0.17, -0.70))
node(node4.pos)
let node5= (pos:(1.00, 0.91))
node(node5.pos)
edge(node1.pos,(0.62, 0.64),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.58, 0.76),angle:0.34rad,[q+k[0]])
cetz.draw.hobby((0.87, 0.78),(3.63, -3.49),(-1.20, -1.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.27, 0.81),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.92),angle:2.70rad,[q])
cetz.draw.hobby((-0.91, 0.02),(0.38, 0.82),(0.28, -0.69),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.60),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.49, -0.72),angle:0.16rad,[q])
cetz.draw.hobby((1.22, 0.67),(0.87, -0.50),(-0.34, -0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.80),node3.pos,decoration:"coil",angle:-0.19rad)
cetz.draw.content((0.16, 0.91),angle:-0.19rad,[-p+2 k[3]])
cetz.draw.hobby((0.70, -0.59),(0.60, 0.63),(-0.62, 0.64),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.37),node4.pos,decoration:"arrow",angle:2.01rad)
cetz.draw.content((-1.04, -0.42),angle:2.01rad,[k[3]])
cetz.draw.hobby((-0.93, 0.26),(-0.96, -0.45),(-0.34, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.52, 0.79),node5.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.61, 0.87),angle:4.07rad,[q+k[3]])
cetz.draw.hobby((-0.49, -0.53),(-0.57, 0.83),(0.74, 1.16),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.53),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.54, -0.36),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.42),(-0.59, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.53, -0.53),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.07, -0.20),angle:2.74rad,[-k[0]])
cetz.draw.hobby((-0.37, -0.08),(0.46, -0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.00),decoration:"arrow",angle:-0.97rad)
cetz.draw.content((-0.55, 0.25),angle:-0.97rad,[p-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.66, 0.31),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.53, 0.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.35, -0.36),angle:4.57rad,[p-k[3]])
cetz.draw.hobby((0.37, -0.65),(0.45, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, 0.53),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.84, 0.62),angle:0.68rad,[k[3]])
cetz.draw.hobby((0.96, 0.80),(0.64, 0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.53),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.51, 0.41),(0.31, -0.71),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.94, 0.01),(0.37, 0.85),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[-p+k[3]])
cetz.draw.hobby((0.71, -0.60),(0.61, 0.64),(-0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[k[3]])
cetz.draw.hobby((-0.63, 0.80),(0.91, 0.63),(0.27, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
cetz.draw.content((0.66, -0.53),angle:-2.46rad,[q+k[3]])
cetz.draw.hobby((0.08, -0.74),(0.87, -0.22),(1.11, 0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.73, 0.57),angle:0.54rad,[p])
cetz.draw.hobby((-0.65, 0.54),(-0.74, 0.49),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:4.63rad)
cetz.draw.content((0.36, -0.11),angle:4.63rad,[p])
cetz.draw.hobby((0.38, -0.67),(0.47, 0.44),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.70, -0.38))
node(node0.pos)
let node1= (pos:(-0.48, -0.10))
node(node1.pos)
let node2= (pos:(0.42, -0.76))
node(node2.pos)
let node3= (pos:(-0.77, 0.36))
node(node3.pos)
let node4= (pos:(-0.17, -0.70))
node(node4.pos)
let node5= (pos:(1.00, 0.91))
node(node5.pos)
edge(node1.pos,(0.62, 0.64),node0.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.58, 0.76),angle:0.34rad,[q+k[0]])
cetz.draw.hobby((0.87, 0.78),(3.63, -3.49),(-1.20, -1.91),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.27, 0.81),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.92),angle:2.70rad,[q])
cetz.draw.hobby((-0.91, 0.02),(0.38, 0.82),(0.28, -0.69),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.47, -0.60),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.49, -0.72),angle:0.16rad,[q])
cetz.draw.hobby((1.22, 0.67),(0.87, -0.50),(-0.34, -0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.80),node2.pos,decoration:"arrow",angle:-0.19rad)
cetz.draw.content((0.16, 0.91),angle:-0.19rad,[-p])
cetz.draw.hobby((-0.62, 0.64),(0.60, 0.63),(0.70, -0.59),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.93, -0.37),node4.pos,decoration:"arrow",angle:2.01rad)
cetz.draw.content((-1.04, -0.42),angle:2.01rad,[k[3]])
cetz.draw.hobby((-0.93, 0.26),(-0.96, -0.45),(-0.34, -0.79),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.52, 0.79),node5.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.61, 0.87),angle:4.07rad,[q+k[3]])
cetz.draw.hobby((-0.49, -0.53),(-0.57, 0.83),(0.74, 1.16),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.53),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.54, -0.36),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.42),(-0.59, -0.40),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.53, -0.53),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.07, -0.20),angle:2.74rad,[-k[0]])
cetz.draw.hobby((-0.37, -0.08),(0.46, -0.43),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.00),decoration:"coil",angle:5.61rad)
cetz.draw.content((-0.13, -0.47),angle:5.61rad,[p-k[3]])
cetz.draw.hobby((-0.48, -0.11),(0.30, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, 0.00),decoration:"coil",angle:-0.27rad)
cetz.draw.content((-0.09, 0.29),angle:-0.27rad,[p-k[3]])
cetz.draw.hobby((-0.66, 0.39),(0.44, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, 0.53),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.84, 0.62),angle:0.68rad,[k[3]])
cetz.draw.hobby((0.96, 0.80),(0.64, 0.54),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.53),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.15, -0.19),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.51, 0.41),(0.31, -0.71),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[-p])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
cetz.draw.content((-0.63, 0.89),angle:4.06rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.55),(-0.60, 0.83),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"coil",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.31, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"coil",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[p-k[3]])
cetz.draw.hobby((-0.68, 0.42),(0.46, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.14, 0.58),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.70, 0.46),(0.43, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.47, -0.12),angle:1.85rad,[k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(-0.54, 0.00),decoration:"coil",angle:5.61rad)
edge(node3.pos,(0.54, 0.00),decoration:"coil",angle:-0.28rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:4.20rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:-2.89rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[p+q])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[k[3]])
cetz.draw.hobby((-0.63, 0.80),(0.92, 0.62),(0.26, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"coil",angle:4.57rad)
cetz.draw.content((0.36, -0.37),angle:4.57rad,[p+q+k[3]])
cetz.draw.hobby((0.38, -0.67),(0.46, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"coil",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[p+q+k[3]])
cetz.draw.hobby((-0.54, 0.12),(-0.69, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[-q-k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.07rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(0.54, 0.00),decoration:"coil",angle:4.57rad)
edge(node3.pos,(-0.54, 0.00),decoration:"coil",angle:-0.99rad)
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.06rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(0.54, 0.54),decoration:"arrow",angle:0.11rad)
edge(node2.pos,(-0.54, 0.54),decoration:"arrow",angle:5.35rad)
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.46, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.15, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node3.pos,(-0.93, -0.36),node4.pos,decoration:"arrow",angle:2.00rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(0.54, 0.00),decoration:"coil",angle:4.61rad)
edge(node3.pos,(-0.54, 0.00),decoration:"coil",angle:-0.99rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.51rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[p+q+2 k[3]])
cetz.draw.hobby((0.71, -0.60),(0.61, 0.64),(-0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[k[3]])
cetz.draw.hobby((-0.63, 0.80),(0.92, 0.62),(0.26, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[p+q+k[3]])
cetz.draw.hobby((-0.68, 0.42),(0.46, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[p+q+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.31, -0.76),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[-q-k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.07rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.06rad)
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node3.pos,(-0.93, -0.38),node4.pos,decoration:"arrow",angle:2.04rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(0.54, 0.00),decoration:"arrow",angle:-0.28rad)
edge(node2.pos,(-0.54, 0.00),decoration:"arrow",angle:5.61rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.49rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.94, 0.01),(0.37, 0.85),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.74),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[k[2]])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"coil",angle:5.01rad)
cetz.draw.content((-1.05, -0.42),angle:5.01rad,[-p-q+k[2]])
cetz.draw.hobby((0.24, -0.96),(-0.75, -0.79),(-0.97, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.53, 0.81),node2.pos,decoration:"arrow",angle:0.94rad)
cetz.draw.content((-0.63, 0.89),angle:0.94rad,[-p-q])
cetz.draw.hobby((0.68, 1.21),(-0.73, 0.56),(0.01, -0.81),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.59, -0.43),node4.pos,decoration:"arrow",angle:0.87rad)
cetz.draw.content((0.68, -0.51),angle:0.87rad,[-p-q])
cetz.draw.hobby((-0.63, 0.73),(0.72, 0.52),(0.22, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:5.00rad)
cetz.draw.content((-0.47, -0.12),angle:5.00rad,[p])
cetz.draw.hobby((-0.57, 0.43),(-0.25, -0.64),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[p])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"coil",angle:5.01rad)
edge(node5.pos,(-0.53, 0.81),node2.pos,decoration:"arrow",angle:0.94rad)
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.06rad)
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.70, -0.38))
node(node0.pos)
let node1= (pos:(-0.48, -0.10))
node(node1.pos)
let node2= (pos:(0.42, -0.76))
node(node2.pos)
let node3= (pos:(-0.77, 0.36))
node(node3.pos)
let node4= (pos:(-0.17, -0.70))
node(node4.pos)
let node5= (pos:(1.00, 0.91))
node(node5.pos)
edge(node0.pos,(0.62, 0.64),node1.pos,decoration:"arrow",angle:3.48rad)
edge(node0.pos,(0.27, 0.81),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.47, -0.60),node1.pos,decoration:"wave",angle:0.16rad)
edge(node5.pos,(0.14, 0.80),node2.pos,decoration:"arrow",angle:0.64rad)
edge(node3.pos,(-0.93, -0.37),node4.pos,decoration:"arrow",angle:2.01rad)
edge(node4.pos,(-0.52, 0.79),node5.pos,decoration:"arrow",angle:4.07rad)
edge(node1.pos,(-0.53, -0.53),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.53, -0.53),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(0.53, 0.00),decoration:"arrow",angle:-0.27rad)
edge(node2.pos,(-0.53, 0.00),decoration:"arrow",angle:5.61rad)
edge(node2.pos,(-0.53, 0.53),decoration:"coil",angle:5.35rad)
edge(node3.pos,(0.53, 0.53),decoration:"coil",angle:0.13rad)
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node2.pos,(-0.93, -0.38),node3.pos,decoration:"coil",angle:5.01rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.49rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[-p-q])
cetz.draw.hobby((0.71, -0.60),(0.61, 0.64),(-0.63, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[k[3]])
cetz.draw.hobby((-0.63, 0.80),(0.92, 0.62),(0.26, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
cetz.draw.content((-0.56, 0.26),angle:-0.99rad,[p+q+k[3]])
cetz.draw.hobby((-0.54, 0.12),(-0.69, 0.34),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.36, -0.37),angle:4.57rad,[p+q+k[3]])
cetz.draw.hobby((0.38, -0.67),(0.46, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[-q-k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
edge(node4.pos,(0.59, -0.43),node5.pos,decoration:"arrow",angle:-2.46rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(-0.54, 0.54),decoration:"coil",angle:5.35rad)
edge(node3.pos,(0.54, 0.54),decoration:"coil",angle:0.11rad)
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.07rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.06rad)
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node2.pos,(0.14, 0.82),node3.pos,decoration:"coil",angle:-0.20rad)
edge(node3.pos,(-0.93, -0.38),node4.pos,decoration:"arrow",angle:2.04rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.54, 0.00),decoration:"arrow",angle:-0.99rad)
edge(node2.pos,(0.54, 0.00),decoration:"arrow",angle:4.57rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.49rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node1.pos,(0.66, 0.66),node0.pos,decoration:"arrow",angle:0.36rad)
cetz.draw.content((0.62, 0.77),angle:0.36rad,[q+k[0]])
cetz.draw.hobby((1.08, 0.85),(4.10, -4.11),(-1.35, -2.13),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
cetz.draw.content((0.33, 0.94),angle:2.70rad,[q])
cetz.draw.hobby((-0.93, 0.02),(0.38, 0.84),(0.28, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.51, -0.74),angle:0.16rad,[q])
cetz.draw.hobby((1.23, 0.69),(0.90, -0.52),(-0.35, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
cetz.draw.content((0.17, 0.93),angle:-0.20rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.63, 0.68),(0.61, 0.64),(0.71, -0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
cetz.draw.content((-1.03, -0.45),angle:2.21rad,[k[3]])
cetz.draw.hobby((0.66, 1.35),(-1.16, 0.71),(-0.10, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.81),node4.pos,decoration:"arrow",angle:3.89rad)
cetz.draw.content((-0.61, 0.90),angle:3.89rad,[k[3]])
cetz.draw.hobby((-0.63, 0.80),(0.92, 0.62),(0.26, -0.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.54),decoration:"arrow",angle:-0.68rad)
cetz.draw.content((-0.55, -0.37),angle:-0.68rad,[-k[0]])
cetz.draw.hobby((-0.58, -0.43),(-0.60, -0.41),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.54, -0.54),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.07, -0.22),angle:2.75rad,[-k[0]])
cetz.draw.hobby((-0.38, -0.10),(0.47, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.54, 0.00),decoration:"coil",angle:5.61rad)
cetz.draw.content((-0.13, -0.48),angle:5.61rad,[p+q+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.31, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, 0.00),decoration:"coil",angle:-0.28rad)
cetz.draw.content((-0.09, 0.31),angle:-0.28rad,[p+q+k[3]])
cetz.draw.hobby((-0.68, 0.42),(0.46, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.54),decoration:"arrow",angle:4.99rad)
cetz.draw.content((-0.47, -0.12),angle:4.99rad,[-q-k[3]])
cetz.draw.hobby((-0.57, 0.43),(-0.26, -0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.54, 0.54),decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.85, 0.64),angle:-2.44rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.65, 0.56),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.16, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node5.pos,(-0.93, -0.38),node2.pos,decoration:"arrow",angle:2.21rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.07rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(-0.54, 0.00),decoration:"coil",angle:5.61rad)
edge(node3.pos,(0.54, 0.00),decoration:"coil",angle:-0.28rad)
edge(node3.pos,(-0.54, 0.54),decoration:"arrow",angle:3.68rad)
edge(node4.pos,(0.54, 0.54),decoration:"arrow",angle:1.06rad)
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.72, -0.39))
node(node0.pos)
let node1= (pos:(-0.49, -0.12))
node(node1.pos)
let node2= (pos:(0.43, -0.77))
node(node2.pos)
let node3= (pos:(-0.79, 0.39))
node(node3.pos)
let node4= (pos:(-0.18, -0.71))
node(node4.pos)
let node5= (pos:(1.00, 0.93))
node(node5.pos)
edge(node0.pos,(0.66, 0.66),node1.pos,decoration:"arrow",angle:3.50rad)
edge(node0.pos,(0.28, 0.83),node4.pos,decoration:"wave",angle:2.70rad)
edge(node5.pos,(0.49, -0.62),node1.pos,decoration:"wave",angle:0.16rad)
edge(node3.pos,(0.14, 0.82),node2.pos,decoration:"arrow",angle:-0.20rad)
edge(node3.pos,(-0.93, -0.38),node4.pos,decoration:"arrow",angle:2.04rad)
edge(node4.pos,(-0.53, 0.81),node5.pos,decoration:"arrow",angle:4.06rad)
edge(node1.pos,(-0.54, -0.54),decoration:"arrow",angle:-1.67rad)
edge(node0.pos,(0.54, -0.54),decoration:"arrow",angle:3.02rad)
edge(node2.pos,(-0.54, 0.00),decoration:"coil",angle:5.61rad)
edge(node3.pos,(0.54, 0.00),decoration:"coil",angle:-0.28rad)
edge(node5.pos,(-0.54, 0.54),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.54, 0.54),decoration:"arrow",angle:1.49rad)
})
[= embedding 1 [1, 0, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 -3+10+12],box[#embedding1i1 -3+10+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 -1+10+16],)
pagebreak()
[= embedding 2 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 -3+9+14],box[#embedding2i1 -3+9+12],box[#embedding2i2 -3+10],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 -1+9+16],)
pagebreak()
[= embedding 3 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-2 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 -3-9+10],box[#embedding3i1 -3+14],box[#embedding3i2 -3+12],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p-q]^-2 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 -1+16],)
pagebreak()
[= embedding 4 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	+2 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-2
	+4 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
	+4 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 -3-9+14],box[#embedding4i1 -3-9+12],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 -1-9+16],)
pagebreak()
[= embedding 5 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 -3-9],box[#embedding5i1 -3-10+12],box[#embedding5i2 -3-10+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 -1-10+16],)
pagebreak()
[= embedding 6 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 -3+10-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 -1+10-14],box[#embedding6f1 -1+9],box[#embedding6f2 -1+10-12],)
pagebreak()
[= embedding 7 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 -3+9-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 -1+9-14],box[#embedding7f1 -1+9-12],)
pagebreak()
[= embedding 8 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p-q]^-2 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-2 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 -3-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-2 prop[0,-p+q]^-1 prop[0,-p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 -1-14],box[#embedding8f1 -1+9-10],box[#embedding8f2 -1-12],)
pagebreak()
[= embedding 9 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 -3-9-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 -1-10],box[#embedding9f1 -1-9-14],box[#embedding9f2 -1-9-12],)
pagebreak()
[= embedding 10 [1, 1, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 -3-10-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 -1-10-14],box[#embedding10f1 -1-10-12],)
pagebreak()
}