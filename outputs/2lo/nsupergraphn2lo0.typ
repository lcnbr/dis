#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
cetz.draw.content((0.15, 0.91),angle:-0.15rad,[p-2 k[3]])
cetz.draw.hobby((-0.57, 0.65),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.02, -0.43),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.89, 0.30),(-0.98, -0.39),(-0.40, -0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.63, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[p-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.14rad)
cetz.draw.content((-0.52, 0.24),angle:-1.14rad,[p-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.16, -0.17),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[p-2 k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[p-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
cetz.draw.content((-0.52, 0.25),angle:-1.17rad,[p-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.15rad)
cetz.draw.content((0.15, 0.91),angle:-0.15rad,[p])
cetz.draw.hobby((0.69, -0.58),(0.63, 0.61),(-0.57, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.02, -0.43),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.89, 0.30),(-0.98, -0.39),(-0.40, -0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.28rad)
cetz.draw.content((-0.05, 0.30),angle:-0.28rad,[p-k[3]])
cetz.draw.hobby((-0.61, 0.40),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.16, -0.17),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[p])
cetz.draw.hobby((0.69, -0.58),(0.63, 0.60),(-0.56, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.31rad)
cetz.draw.content((-0.05, 0.32),angle:-0.31rad,[p-k[3]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding2i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[q])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[p-k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((-0.63, 0.87),angle:4.05rad,[k[3]])
cetz.draw.hobby((-0.56, 0.86),(1.12, 0.69),(0.35, -0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.61, -0.47),angle:-2.44rad,[q+k[3]])
cetz.draw.hobby((0.11, -0.69),(0.83, -0.15),(1.08, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"coil",angle:4.61rad)
cetz.draw.content((0.36, -0.08),angle:4.61rad,[p])
cetz.draw.hobby((0.36, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"coil",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[p])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.31rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[q])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
cetz.draw.content((0.15, 0.91),angle:-0.15rad,[k[2]])
cetz.draw.hobby((-0.57, 0.65),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.38),node3.pos,decoration:"coil",angle:4.96rad)
cetz.draw.content((-1.03, -0.41),angle:4.96rad,[p+k[2]])
cetz.draw.hobby((0.24, -0.94),(-0.75, -0.79),(-0.91, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:0.98rad)
cetz.draw.content((-0.64, 0.86),angle:0.98rad,[p])
cetz.draw.hobby((0.69, 1.22),(-0.70, 0.59),(-0.00, -0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.61, -0.47),angle:-2.44rad,[p+q])
cetz.draw.hobby((0.11, -0.69),(0.83, -0.15),(1.08, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.28rad)
cetz.draw.content((-0.10, 0.58),angle:3.28rad,[p])
cetz.draw.hobby((-0.63, 0.44),(0.44, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.90rad)
cetz.draw.content((-0.45, -0.11),angle:1.90rad,[p])
cetz.draw.hobby((-0.57, 0.43),(-0.21, -0.62),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.44, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.18, 0.79),node2.pos,decoration:"arrow",angle:0.66rad)
cetz.draw.content((0.10, 0.89),angle:0.66rad,[p])
cetz.draw.hobby((0.73, 1.04),(-0.17, 0.40),(0.16, -0.66),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.92, -0.35),node4.pos,decoration:"arrow",angle:1.98rad)
cetz.draw.content((-1.03, -0.40),angle:1.98rad,[p])
cetz.draw.hobby((-0.88, 0.29),(-0.97, -0.38),(-0.40, -0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[p+q])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:-1.14rad)
cetz.draw.content((-0.52, 0.24),angle:-1.14rad,[-k[2]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.30),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.37, -0.35),angle:4.57rad,[-k[2]])
cetz.draw.hobby((0.39, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"coil",angle:4.63rad)
cetz.draw.content((0.37, -0.09),angle:4.63rad,[p+k[2]])
cetz.draw.hobby((0.39, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"coil",angle:0.80rad)
cetz.draw.content((-0.72, 0.54),angle:0.80rad,[p+k[2]])
cetz.draw.hobby((-0.66, 0.52),(-0.69, 0.48),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[q])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[2]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.38),node3.pos,decoration:"coil",angle:4.99rad)
cetz.draw.content((-1.03, -0.41),angle:4.99rad,[p+k[2]])
cetz.draw.hobby((0.23, -0.94),(-0.76, -0.77),(-0.92, 0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((-0.63, 0.87),angle:4.05rad,[p])
cetz.draw.hobby((-0.56, 0.86),(1.12, 0.69),(0.35, -0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.61, -0.47),angle:-2.44rad,[p+q])
cetz.draw.hobby((0.11, -0.69),(0.83, -0.15),(1.08, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[p])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.16, -0.17),angle:2.21rad,[p])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
edge(node2.pos,(-0.92, -0.38),node3.pos,decoration:"coil",angle:4.96rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:0.98rad)
edge(node3.pos,(0.53, -0.38),node4.pos,decoration:"arrow",angle:0.96rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.69, -0.32))
node(node0.pos)
let node1= (pos:(-0.45, -0.14))
node(node1.pos)
let node2= (pos:(0.40, -0.72))
node(node2.pos)
let node3= (pos:(-0.70, 0.34))
node(node3.pos)
let node4= (pos:(-0.23, -0.68))
node(node4.pos)
let node5= (pos:(1.00, 0.91))
node(node5.pos)
edge(node1.pos,(0.60, 0.65),node0.pos,decoration:"arrow",angle:0.65rad)
cetz.draw.content((0.67, 0.55),angle:0.65rad,[q+k[0]])
cetz.draw.hobby((35.46, 50.09),(-119.24, 160.63),(-59.28, -19.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.79),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.32, 0.90),angle:2.75rad,[q])
cetz.draw.hobby((-0.85, 0.09),(0.50, 0.73),(0.21, -0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.58),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.50, -0.70),angle:0.17rad,[q])
cetz.draw.hobby((1.22, 0.68),(0.90, -0.47),(-0.30, -0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.77),node3.pos,decoration:"coil",angle:-0.14rad)
cetz.draw.content((0.15, 0.89),angle:-0.14rad,[-p+2 k[3]])
cetz.draw.hobby((0.68, -0.57),(0.61, 0.60),(-0.56, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.91, -0.37),node4.pos,decoration:"arrow",angle:1.99rad)
cetz.draw.content((-1.02, -0.42),angle:1.99rad,[k[3]])
cetz.draw.hobby((-0.87, 0.27),(-0.96, -0.40),(-0.39, -0.76),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.52, 0.77),node5.pos,decoration:"arrow",angle:4.09rad)
cetz.draw.content((-0.62, 0.84),angle:4.09rad,[q+k[3]])
cetz.draw.hobby((-0.53, -0.49),(-0.55, 0.84),(0.75, 1.16),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.53),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.52, -0.35),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.54, -0.42),(-0.58, -0.36),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.53, -0.53),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.09, -0.22),angle:2.76rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.12),(0.46, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.53, 0.00),decoration:"arrow",angle:-1.11rad)
cetz.draw.content((-0.51, 0.22),angle:-1.11rad,[p-k[3]])
cetz.draw.hobby((-0.52, 0.12),(-0.60, 0.27),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.53, 0.00),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.35, -0.34),angle:4.53rad,[p-k[3]])
cetz.draw.hobby((0.36, -0.61),(0.46, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, 0.53),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.84, 0.63),angle:0.68rad,[k[3]])
cetz.draw.hobby((0.96, 0.80),(0.65, 0.55),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.53, 0.53),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.16, -0.17),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.52, 0.42),(0.29, -0.68),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[-p+2 k[3]])
cetz.draw.hobby((0.69, -0.58),(0.63, 0.60),(-0.56, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:-1.17rad)
cetz.draw.content((-0.52, 0.25),angle:-1.17rad,[p-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[p-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:-1.17rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.71, 0.57),angle:0.67rad,[q+k[0]])
cetz.draw.hobby((8.55, 11.72),(-28.10, 39.51),(-15.00, -4.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[q])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[-p+k[3]])
cetz.draw.hobby((0.69, -0.58),(0.63, 0.60),(-0.56, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((-0.63, 0.87),angle:4.05rad,[k[3]])
cetz.draw.hobby((-0.56, 0.86),(1.12, 0.69),(0.35, -0.81),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
cetz.draw.content((0.61, -0.47),angle:-2.44rad,[q+k[3]])
cetz.draw.hobby((0.11, -0.69),(0.83, -0.15),(1.08, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.13),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[p])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.36, -0.08),angle:4.61rad,[p])
cetz.draw.hobby((0.36, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
cetz.draw.content((0.15, 0.91),angle:-0.15rad,[-p])
cetz.draw.hobby((-0.57, 0.65),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.02, -0.43),angle:2.02rad,[k[3]])
cetz.draw.hobby((-0.89, 0.30),(-0.98, -0.39),(-0.40, -0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.28rad)
cetz.draw.content((-0.05, 0.30),angle:-0.28rad,[p-k[3]])
cetz.draw.hobby((-0.61, 0.40),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.16, -0.17),angle:2.21rad,[k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[-p])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.64, 0.86),angle:4.08rad,[q+k[3]])
cetz.draw.hobby((-0.54, -0.51),(-0.57, 0.85),(0.74, 1.18),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[p-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
cetz.draw.content((-0.05, 0.32),angle:-0.31rad,[p-k[3]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[k[3]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[p+q])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[k[3]])
cetz.draw.hobby((-0.54, 0.89),(1.25, 0.61),(0.25, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[p+q+k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
cetz.draw.content((-0.52, 0.25),angle:-1.17rad,[p+q+k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[-q-k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.11rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
})
let embedding6f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.14rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[p+q+2 k[3]])
cetz.draw.hobby((0.69, -0.58),(0.63, 0.60),(-0.56, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[k[3]])
cetz.draw.hobby((-0.54, 0.89),(1.25, 0.61),(0.25, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.31rad)
cetz.draw.content((-0.05, 0.32),angle:-0.31rad,[p+q+k[3]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[p+q+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[-q-k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.15rad)
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.28rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.11rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.31rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.69, -0.32))
node(node0.pos)
let node1= (pos:(-0.45, -0.14))
node(node1.pos)
let node2= (pos:(0.40, -0.72))
node(node2.pos)
let node3= (pos:(-0.70, 0.34))
node(node3.pos)
let node4= (pos:(-0.12, -0.68))
node(node4.pos)
let node5= (pos:(1.00, 0.91))
node(node5.pos)
edge(node1.pos,(0.60, 0.65),node0.pos,decoration:"arrow",angle:0.65rad)
cetz.draw.content((0.67, 0.55),angle:0.65rad,[q+k[0]])
cetz.draw.hobby((35.46, 50.09),(-119.24, 160.63),(-59.28, -19.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.79),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.90),angle:2.72rad,[q])
cetz.draw.hobby((-0.87, 0.07),(0.40, 0.79),(0.31, -0.67),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.48, -0.58),node1.pos,decoration:"wave",angle:0.16rad)
cetz.draw.content((0.50, -0.70),angle:0.16rad,[q])
cetz.draw.hobby((1.22, 0.68),(0.90, -0.47),(-0.30, -0.42),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.77),node2.pos,decoration:"arrow",angle:-0.14rad)
cetz.draw.content((0.15, 0.89),angle:-0.14rad,[k[2]])
cetz.draw.hobby((-0.56, 0.62),(0.61, 0.60),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.91, -0.37),node3.pos,decoration:"coil",angle:4.92rad)
cetz.draw.content((-1.03, -0.39),angle:4.92rad,[-p-q+k[2]])
cetz.draw.hobby((0.24, -0.93),(-0.74, -0.81),(-0.90, 0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.52, 0.77),node2.pos,decoration:"arrow",angle:1.00rad)
cetz.draw.content((-0.63, 0.84),angle:1.00rad,[-p-q])
cetz.draw.hobby((0.70, 1.19),(-0.68, 0.60),(-0.01, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.52, -0.37),node4.pos,decoration:"arrow",angle:0.97rad)
cetz.draw.content((0.62, -0.44),angle:0.97rad,[-p-q])
cetz.draw.hobby((-0.55, 0.62),(0.60, 0.41),(0.20, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.53),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.52, -0.35),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.54, -0.42),(-0.58, -0.36),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.53, -0.53),decoration:"arrow",angle:2.76rad)
cetz.draw.content((0.09, -0.22),angle:2.76rad,[-k[0]])
cetz.draw.hobby((-0.33, -0.12),(0.46, -0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.53, 0.53),decoration:"arrow",angle:5.04rad)
cetz.draw.content((-0.44, -0.11),angle:5.04rad,[p])
cetz.draw.hobby((-0.56, 0.42),(-0.21, -0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.53, 0.53),decoration:"arrow",angle:-2.46rad)
cetz.draw.content((0.84, 0.63),angle:-2.46rad,[p])
cetz.draw.hobby((0.96, 0.80),(0.65, 0.55),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.38),node3.pos,decoration:"coil",angle:4.99rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
edge(node2.pos,(-0.92, -0.38),node3.pos,decoration:"coil",angle:4.96rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:0.98rad)
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.94rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node5.pos,(0.17, 0.79),node2.pos,decoration:"arrow",angle:0.66rad)
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:-0.28rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
edge(node2.pos,(-0.55, 0.55),decoration:"coil",angle:5.35rad)
edge(node3.pos,(0.55, 0.55),decoration:"coil",angle:0.14rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[-p-q])
cetz.draw.hobby((0.69, -0.58),(0.63, 0.60),(-0.56, 0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[k[3]])
cetz.draw.hobby((-0.54, 0.89),(1.25, 0.61),(0.25, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:-1.17rad)
cetz.draw.content((-0.52, 0.25),angle:-1.17rad,[p+q+k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.34),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[p+q+k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[-q-k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.15rad)
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:-1.14rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node3.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.11rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:-1.17rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.05rad)
edge(node4.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:-2.44rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.55),decoration:"coil",angle:5.35rad)
edge(node3.pos,(0.55, 0.55),decoration:"coil",angle:0.11rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q+k[0]])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
cetz.draw.content((-1.01, -0.45),angle:2.24rad,[k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node4.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[k[3]])
cetz.draw.hobby((-0.54, 0.89),(1.25, 0.61),(0.25, -0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-k[0]])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-k[0]])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[p+q+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
cetz.draw.content((-0.05, 0.32),angle:-0.31rad,[p+q+k[3]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[-q-k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:2.24rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.11rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"arrow",angle:-0.15rad)
edge(node3.pos,(-0.92, -0.38),node4.pos,decoration:"arrow",angle:2.02rad)
edge(node4.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:4.08rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.28rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
})
[= embedding 1 [1, 0, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
	+2 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
	+2 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 -3+10+12],box[#embedding1i1 -3+10+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 -1+10+16],)
pagebreak()
[= embedding 2 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 -3+9+12],box[#embedding2i1 -3+9+14],box[#embedding2i2 -3+10],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 -1+9+16],)
pagebreak()
[= embedding 3 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,q]^-2 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 dot[p,p]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 -3+14],box[#embedding3i1 -3-9+10],box[#embedding3i2 -3+12],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[2]]^-1 prop[0,p-q]^-1 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 -1+16],)
pagebreak()
[= embedding 4 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
	+2 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
	+2 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 -3-9+12],box[#embedding4i1 -3-9+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 -1-9+16],)
pagebreak()
[= embedding 5 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 -3-9],box[#embedding5i1 -3-10+12],box[#embedding5i2 -3-10+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 -1-10+16],)
pagebreak()
[= embedding 6 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 -3+10-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 -1+9],box[#embedding6f1 -1+10-14],box[#embedding6f2 -1+10-12],)
pagebreak()
[= embedding 7 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[q,q]^-2
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[q,q]^-2
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 -3+9-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 -1+9-12],box[#embedding7f1 -1+9-14],)
pagebreak()
[= embedding 8 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[2]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 -3-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 -1-12],box[#embedding8f1 -1-14],box[#embedding8f2 -1+9-10],)
pagebreak()
[= embedding 9 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 -3-9-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 -1-9-12],box[#embedding9f1 -1-9-14],box[#embedding9f2 -1-10],)
pagebreak()
[= embedding 10 [1, 1, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[q,q]^-2
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 dot[q,q]^-2
	+(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 dot[q,q]^-2
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 -3-10-16],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,q]^-2 prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 -1-10-14],box[#embedding10f1 -1-10-12],)
pagebreak()
}