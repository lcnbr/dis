#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p-q-k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[Q[7]])
cetz.draw.hobby((0.25, -0.89),(1.25, 0.61),(-0.54, 0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:1.39rad)
cetz.draw.content((0.36, -0.35),angle:1.39rad,[p-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.50, -0.40),angle:5.13rad,[p-k[3]])
cetz.draw.hobby((-0.56, -0.12),(-0.33, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
cetz.draw.content((-0.10, 0.59),angle:0.11rad,[Q[8]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.26, 0.62),angle:0.25rad,[Q[8]])
cetz.draw.hobby((-0.44, 0.51),(0.92, 0.85),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[p-q-k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.97, -0.51),angle:5.78rad,[p-k[3]])
cetz.draw.hobby((1.97, -0.29),(0.62, 4.67),(-1.58, 0.02),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.00),decoration:"arrow",angle:-2.02rad)
cetz.draw.content((0.88, 0.42),angle:-2.02rad,[q+k[3]])
cetz.draw.hobby((1.01, 0.82),(0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
cetz.draw.content((0.11, -0.02),angle:1.08rad,[Q[7]])
cetz.draw.hobby((-0.13, -0.58),(0.45, 0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
cetz.draw.content((-0.71, 0.57),angle:3.84rad,[Q[7]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:0.80rad)
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:1.97rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.17, 0.79),node2.pos,decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.10, 0.89),angle:3.81rad,[q+k[3]])
cetz.draw.hobby((0.73, 1.04),(-0.18, 0.41),(0.13, -0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.02, -0.43),angle:2.02rad,[Q[7]])
cetz.draw.hobby((-0.40, -0.77),(-0.98, -0.39),(-0.89, 0.30),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
cetz.draw.content((-0.64, 0.86),angle:0.94rad,[Q[8]])
cetz.draw.hobby((-0.71, 0.60),(-0.05, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.28rad)
cetz.draw.content((-0.05, 0.30),angle:-0.28rad,[k[3]])
cetz.draw.hobby((-0.61, 0.40),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
cetz.draw.content((0.36, -0.08),angle:1.47rad,[1/2 p+q+1/2 k[3]])
cetz.draw.hobby((0.36, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[1/2 p+q+1/2 k[3]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[p-2 k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[p-k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.04rad)
cetz.draw.content((-1.02, -0.43),angle:2.04rad,[Q[7]])
cetz.draw.hobby((-0.41, -0.77),(-0.99, -0.37),(-0.89, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:1.39rad)
cetz.draw.content((0.36, -0.35),angle:1.39rad,[p+q-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.50, -0.40),angle:5.13rad,[p+q-k[3]])
cetz.draw.hobby((-0.56, -0.12),(-0.33, -0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[q+k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.16, -0.17),angle:5.35rad,[q+k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:1.39rad)
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:5.13rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding3f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node5.pos,(0.55, 0.00),decoration:"arrow",angle:-2.02rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.18, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.73rad)
cetz.draw.content((0.33, 0.92),angle:2.73rad,[p-k[3]])
cetz.draw.hobby((-0.88, 0.08),(0.45, 0.78),(0.27, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((0.12, 0.91),angle:3.20rad,[p+q])
cetz.draw.hobby((0.82, -0.55),(0.24, 0.85),(-0.54, -0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.01rad)
cetz.draw.content((-1.02, -0.43),angle:2.01rad,[Q[7]])
cetz.draw.hobby((-0.34, -0.79),(-0.96, -0.42),(-0.89, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
cetz.draw.content((-0.64, 0.86),angle:0.94rad,[Q[8]])
cetz.draw.hobby((-0.71, 0.60),(-0.05, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.28rad)
cetz.draw.content((-0.05, 0.30),angle:-0.28rad,[k[3]])
cetz.draw.hobby((-0.61, 0.40),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[q+k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.16, -0.17),angle:5.35rad,[q+k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.38))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.71, 0.57),angle:0.67rad,[q])
cetz.draw.hobby((8.55, 11.72),(-28.10, 39.51),(-15.00, -4.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[p-k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.16rad)
cetz.draw.content((0.15, 0.91),angle:-0.16rad,[k[3]])
cetz.draw.hobby((-0.56, 0.66),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.63, 0.86),angle:4.08rad,[Q[7]])
cetz.draw.hobby((0.26, -0.90),(1.28, 0.63),(-0.55, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.58, -0.49),angle:0.37rad,[Q[8]])
cetz.draw.hobby((-0.68, 0.04),(0.50, -0.46),(1.17, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.13),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.47rad)
cetz.draw.content((0.36, -0.08),angle:1.47rad,[p+q])
cetz.draw.hobby((0.36, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[p+q])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding4f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.15rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.94rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[p])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
cetz.draw.content((0.12, 0.91),angle:3.24rad,[p+q+k[3]])
cetz.draw.hobby((0.83, -0.56),(0.28, 0.85),(-0.50, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[Q[7]])
cetz.draw.hobby((0.36, -0.82),(1.15, 0.72),(-0.58, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.58, -0.49),angle:0.37rad,[Q[8]])
cetz.draw.hobby((-0.68, 0.03),(0.51, -0.46),(1.17, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"coil",angle:0.14rad)
cetz.draw.content((-0.10, 0.58),angle:0.14rad,[k[3]])
cetz.draw.hobby((-0.63, 0.44),(0.44, 0.59),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"coil",angle:5.35rad)
cetz.draw.content((-0.16, -0.17),angle:5.35rad,[k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[p])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.97, -0.51),angle:5.78rad,[p+q+k[3]])
cetz.draw.hobby((1.97, -0.29),(0.62, 4.67),(-1.58, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
cetz.draw.content((-0.64, 0.86),angle:4.13rad,[q+k[3]])
cetz.draw.hobby((0.69, 1.22),(-0.70, 0.59),(-0.00, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:0.80rad)
cetz.draw.content((0.13, -0.26),angle:0.80rad,[Q[7]])
cetz.draw.hobby((-0.10, -0.58),(0.43, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:1.97rad)
cetz.draw.content((-0.52, 0.25),angle:1.97rad,[Q[7]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.34),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.44, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[p])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.14, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.16, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.67),(0.63, 0.61),(0.71, -0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.35),node3.pos,decoration:"arrow",angle:2.00rad)
cetz.draw.content((-1.02, -0.40),angle:2.00rad,[Q[7]])
cetz.draw.hobby((-0.41, -0.77),(-0.98, -0.37),(-0.89, 0.33),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:1.43rad)
cetz.draw.content((0.37, -0.35),angle:1.43rad,[p+q+k[3]])
cetz.draw.hobby((0.39, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.50, -0.40),angle:5.13rad,[p+q+k[3]])
cetz.draw.hobby((-0.56, -0.12),(-0.33, -0.63),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((0.26, 0.62),angle:-2.90rad,[-q-k[3]])
cetz.draw.hobby((-0.44, 0.51),(0.92, 0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.63rad)
cetz.draw.content((0.37, -0.09),angle:4.63rad,[-q-k[3]])
cetz.draw.hobby((0.39, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node5.pos,(-0.55, 0.00),decoration:"arrow",angle:-2.60rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.44, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[k[2]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+k[2]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.18, 0.79),node2.pos,decoration:"arrow",angle:3.80rad)
cetz.draw.content((0.10, 0.89),angle:3.80rad,[p+q])
cetz.draw.hobby((0.73, 1.04),(-0.17, 0.40),(0.16, -0.66),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.35),node3.pos,decoration:"arrow",angle:1.98rad)
cetz.draw.content((-1.03, -0.40),angle:1.98rad,[Q[7]])
cetz.draw.hobby((-0.40, -0.77),(-0.97, -0.38),(-0.88, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
cetz.draw.content((-0.64, 0.86),angle:0.94rad,[Q[8]])
cetz.draw.hobby((-0.71, 0.60),(-0.05, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.14rad)
cetz.draw.content((-0.52, 0.24),angle:-1.14rad,[-p])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.30),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.57rad)
cetz.draw.content((0.37, -0.35),angle:4.57rad,[-p])
cetz.draw.hobby((0.39, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:1.49rad)
cetz.draw.content((0.37, -0.09),angle:1.49rad,[p+q+k[2]])
cetz.draw.hobby((0.39, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:4.96rad)
cetz.draw.content((-0.51, -0.10),angle:4.96rad,[p+q+k[2]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
})
let embedding6i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.38))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.71, 0.57),angle:0.67rad,[q])
cetz.draw.hobby((8.86, 12.16),(-29.13, 40.89),(-15.50, -4.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[k[2]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+k[2]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.16rad)
cetz.draw.content((0.15, 0.91),angle:-0.16rad,[p])
cetz.draw.hobby((-0.56, 0.66),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.98, -0.51),angle:5.71rad,[p+q+k[2]])
cetz.draw.hobby((1.62, -0.32),(0.40, 3.59),(-1.37, -0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.08rad)
cetz.draw.content((-0.63, 0.86),angle:4.08rad,[Q[7]])
cetz.draw.hobby((0.26, -0.90),(1.28, 0.63),(-0.55, 0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.58, -0.49),angle:0.37rad,[Q[8]])
cetz.draw.hobby((-0.68, 0.04),(0.50, -0.46),(1.17, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.13),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[p+q])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.16, -0.17),angle:5.35rad,[p+q])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:1.08rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:3.84rad)
})
let embedding6f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.15rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
edge(node4.pos,(0.53, -0.38),node3.pos,decoration:"arrow",angle:0.96rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.14rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.18, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.73rad)
cetz.draw.content((0.33, 0.92),angle:2.73rad,[-p+k[3]])
cetz.draw.hobby((-0.88, 0.08),(0.45, 0.78),(0.27, -0.71),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p+2 k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((0.12, 0.91),angle:3.20rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.82, -0.55),(0.24, 0.85),(-0.54, -0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.40),node3.pos,decoration:"arrow",angle:2.03rad)
cetz.draw.content((-1.02, -0.45),angle:2.03rad,[Q[7]])
cetz.draw.hobby((-0.34, -0.79),(-0.97, -0.43),(-0.89, 0.29),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
cetz.draw.content((-0.64, 0.86),angle:0.94rad,[Q[8]])
cetz.draw.hobby((-0.71, 0.60),(-0.05, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.14rad)
cetz.draw.content((-0.52, 0.24),angle:-1.14rad,[-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.30),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[q+k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.16, -0.17),angle:5.35rad,[q+k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[-p])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[-p+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
cetz.draw.content((0.12, 0.91),angle:3.24rad,[-p+q+k[3]])
cetz.draw.hobby((0.83, -0.56),(0.28, 0.85),(-0.50, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[Q[7]])
cetz.draw.hobby((0.36, -0.82),(1.15, 0.72),(-0.58, 0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.58, -0.49),angle:0.37rad,[Q[8]])
cetz.draw.hobby((-0.68, 0.03),(0.51, -0.46),(1.17, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"coil",angle:0.80rad)
cetz.draw.content((-0.72, 0.54),angle:0.80rad,[-k[3]])
cetz.draw.hobby((-0.66, 0.52),(-0.69, 0.48),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.55),decoration:"coil",angle:4.61rad)
cetz.draw.content((0.36, -0.08),angle:4.61rad,[-k[3]])
cetz.draw.hobby((0.36, -0.64),(0.48, 0.45),stroke:stroke,mark: (end: ">"))
})
let embedding8i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[-p])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.98, -0.51),angle:5.71rad,[-p+q+k[3]])
cetz.draw.hobby((1.62, -0.32),(0.40, 3.59),(-1.37, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
cetz.draw.content((-0.64, 0.86),angle:4.13rad,[q+k[3]])
cetz.draw.hobby((0.69, 1.22),(-0.70, 0.59),(-0.00, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.50, -0.40),angle:1.99rad,[-Q[7]])
cetz.draw.hobby((-0.56, -0.12),(-0.33, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((-0.05, 0.32),angle:2.83rad,[-Q[7]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
cetz.draw.content((-0.10, 0.59),angle:0.11rad,[Q[8]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
cetz.draw.content((0.26, 0.62),angle:0.25rad,[Q[8]])
cetz.draw.hobby((-0.44, 0.51),(0.92, 0.85),stroke:stroke,mark: (end: ">"))
})
let embedding8i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[-p])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
cetz.draw.content((-1.02, -0.43),angle:2.02rad,[Q[7]])
cetz.draw.hobby((-0.29, -0.79),(-0.95, -0.43),(-0.90, 0.31),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.14, -0.47),angle:2.48rad,[p-q-k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.13, -0.26),angle:3.95rad,[p-q-k[3]])
cetz.draw.hobby((-0.10, -0.58),(0.43, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.85, 0.65),angle:-2.43rad,[q+k[3]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
cetz.draw.content((-0.16, -0.17),angle:5.35rad,[q+k[3]])
cetz.draw.hobby((-0.54, 0.43),(0.30, -0.70),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:2.48rad)
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:3.95rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[p+q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+q+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
cetz.draw.content((-0.63, 0.87),angle:4.07rad,[Q[7]])
cetz.draw.hobby((0.25, -0.89),(1.25, 0.61),(-0.54, 0.89),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:1.39rad)
cetz.draw.content((0.36, -0.35),angle:1.39rad,[p+2 q+k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:5.13rad)
cetz.draw.content((-0.50, -0.40),angle:5.13rad,[p+2 q+k[3]])
cetz.draw.hobby((-0.56, -0.12),(-0.33, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.04rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:1.39rad)
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:5.13rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.61rad)
})
let embedding9f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.55),decoration:"coil",angle:0.14rad)
edge(node2.pos,(-0.55, 0.55),decoration:"coil",angle:5.35rad)
})
let embedding9f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:0.80rad)
edge(node3.pos,(-0.55, 0.00),decoration:"arrow",angle:1.97rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[p+q+2 k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
cetz.draw.content((0.12, 0.91),angle:3.24rad,[p+2 q+2 k[3]])
cetz.draw.hobby((0.83, -0.56),(0.28, 0.85),(-0.50, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((-0.63, 0.87),angle:4.05rad,[Q[7]])
cetz.draw.hobby((0.35, -0.81),(1.12, 0.69),(-0.56, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
cetz.draw.content((-0.05, 0.32),angle:-0.31rad,[k[3]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.17, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.73rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.21rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.00rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.28rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.61rad)
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[k[2]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p-q+k[2]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
cetz.draw.content((0.12, 0.91),angle:3.24rad,[-p+k[2]])
cetz.draw.hobby((0.83, -0.56),(0.28, 0.85),(-0.50, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[-p])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.31rad)
cetz.draw.content((-0.05, 0.32),angle:-0.31rad,[-p-q])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[-p-q])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.90rad)
cetz.draw.content((-0.45, -0.11),angle:1.90rad,[-Q[7]])
cetz.draw.hobby((-0.57, 0.43),(-0.21, -0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[-Q[7]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding11i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.71, 0.57),angle:0.67rad,[q])
cetz.draw.hobby((8.55, 11.72),(-28.10, 39.51),(-15.00, -4.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[k[2]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[-p-q+k[2]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.15rad)
cetz.draw.content((0.15, 0.91),angle:-0.15rad,[-p-q])
cetz.draw.hobby((-0.57, 0.65),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.97, -0.51),angle:5.78rad,[-p+k[2]])
cetz.draw.hobby((1.97, -0.29),(0.62, 4.67),(-1.58, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
cetz.draw.content((-0.64, 0.86),angle:4.13rad,[-p])
cetz.draw.hobby((0.69, 1.22),(-0.70, 0.59),(-0.00, -0.77),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.53, -0.38),node3.pos,decoration:"arrow",angle:0.96rad)
cetz.draw.content((0.63, -0.45),angle:0.96rad,[Q[7]])
cetz.draw.hobby((0.21, -0.71),(0.62, 0.42),(-0.56, 0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.13),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.80rad)
cetz.draw.content((-0.72, 0.54),angle:0.80rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.52),(-0.69, 0.48),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding11f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node5.pos,(0.17, 0.79),node2.pos,decoration:"arrow",angle:3.81rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:1.99rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(0.55, 0.00),decoration:"coil",angle:-0.28rad)
edge(node2.pos,(-0.55, 0.00),decoration:"coil",angle:5.63rad)
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
})
let embedding11f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.38))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.16rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.08rad)
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.61rad)
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.37, 7.28),(-17.63, 25.25),(-9.81, -2.87),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[-p-q])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p-q+k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.98, -0.51),angle:5.71rad,[-p+k[3]])
cetz.draw.hobby((1.62, -0.32),(0.40, 3.59),(-1.37, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.00),decoration:"arrow",angle:-2.02rad)
cetz.draw.content((0.88, 0.42),angle:-2.02rad,[q+k[3]])
cetz.draw.hobby((1.01, 0.82),(0.64, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.14, -0.47),angle:5.63rad,[q+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[-Q[7]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[-Q[7]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding12f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:2.48rad)
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:3.95rad)
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:-2.43rad)
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:5.35rad)
})
let embedding12f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.55),decoration:"coil",angle:0.80rad)
edge(node2.pos,(0.55, 0.55),decoration:"coil",angle:4.61rad)
})
let embedding12f2=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.12rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:1.99rad)
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:2.83rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:0.11rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:0.25rad)
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[-p-q-k[3]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p-q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.79),node4.pos,decoration:"arrow",angle:3.23rad)
cetz.draw.content((0.13, 0.91),angle:3.23rad,[-p])
cetz.draw.hobby((0.83, -0.56),(0.28, 0.85),(-0.50, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((-0.63, 0.87),angle:4.05rad,[Q[7]])
cetz.draw.hobby((0.35, -0.81),(1.12, 0.69),(-0.56, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
cetz.draw.content((-0.52, 0.25),angle:-1.17rad,[-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding13i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.71, 0.57),angle:0.67rad,[q])
cetz.draw.hobby((8.55, 11.72),(-28.10, 39.51),(-15.00, -4.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[-p-q-k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[-p-q])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.15rad)
cetz.draw.content((0.15, 0.91),angle:-0.15rad,[k[3]])
cetz.draw.hobby((-0.57, 0.65),(0.63, 0.61),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.98, -0.51),angle:5.71rad,[-p])
cetz.draw.hobby((1.62, -0.32),(0.40, 3.59),(-1.37, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
cetz.draw.content((-0.64, 0.86),angle:4.13rad,[q+k[3]])
cetz.draw.hobby((0.69, 1.22),(-0.70, 0.59),(-0.00, -0.77),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((0.58, -0.49),angle:0.37rad,[Q[8]])
cetz.draw.hobby((-0.68, 0.03),(0.51, -0.46),(1.17, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.13),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[-Q[7]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.28rad)
cetz.draw.content((-0.10, 0.58),angle:3.28rad,[-Q[7]])
cetz.draw.hobby((-0.63, 0.44),(0.44, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding13f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.17, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.73rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.21rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.00rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.14rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.61rad)
})
let embedding13f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.15))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.38))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.47rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.16rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.07rad)
edge(node3.pos,(0.53, -0.38),node5.pos,decoration:"arrow",angle:0.37rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p-q-k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
cetz.draw.content((-0.63, 0.87),angle:4.05rad,[Q[7]])
cetz.draw.hobby((0.35, -0.81),(1.12, 0.69),(-0.56, 0.86),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.14, -0.47),angle:2.48rad,[p+k[3]])
cetz.draw.hobby((-0.50, -0.11),(0.30, -0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:3.95rad)
cetz.draw.content((0.13, -0.26),angle:3.95rad,[p+k[3]])
cetz.draw.hobby((-0.10, -0.58),(0.43, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding14i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[-p-q-2 k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.51, -0.73),angle:0.17rad,[-p-q-k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.98, -0.51),angle:5.71rad,[-p-k[3]])
cetz.draw.hobby((1.62, -0.32),(0.40, 3.59),(-1.37, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.55, 0.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((0.29, 0.36),angle:-2.60rad,[-q-k[3]])
cetz.draw.hobby((-0.43, 0.00),(0.95, 0.83),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[-q-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
cetz.draw.content((-0.51, -0.10),angle:1.82rad,[-Q[7]])
cetz.draw.hobby((-0.58, 0.44),(-0.32, -0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[-Q[7]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding14f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:2.02rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:2.48rad)
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:3.95rad)
edge(node5.pos,(-0.55, 0.55),decoration:"arrow",angle:-2.90rad)
edge(node2.pos,(0.55, 0.55),decoration:"arrow",angle:4.61rad)
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
cetz.draw.content((0.33, 0.92),angle:2.72rad,[-1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, 0.08),(0.41, 0.81),(0.31, -0.68),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[-1/2 p-1/2 q+1/2 k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.13, 0.79),node4.pos,decoration:"arrow",angle:3.24rad)
cetz.draw.content((0.12, 0.91),angle:3.24rad,[-1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.83, -0.56),(0.28, 0.85),(-0.50, -0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
cetz.draw.content((-1.01, -0.45),angle:5.38rad,[q+k[3]])
cetz.draw.hobby((0.67, 1.37),(-1.16, 0.75),(-0.11, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
cetz.draw.content((-0.63, 0.87),angle:0.93rad,[Q[8]])
cetz.draw.hobby((-0.70, 0.63),(-0.03, 1.22),(0.86, 1.12),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.17rad)
cetz.draw.content((-0.52, 0.25),angle:-1.17rad,[-k[3]])
cetz.draw.hobby((-0.53, 0.12),(-0.62, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
cetz.draw.content((0.36, -0.35),angle:4.53rad,[-k[3]])
cetz.draw.hobby((0.37, -0.63),(0.47, -0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.90rad)
cetz.draw.content((-0.45, -0.11),angle:1.90rad,[-Q[7]])
cetz.draw.hobby((-0.57, 0.43),(-0.21, -0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
cetz.draw.content((-0.10, 0.59),angle:3.25rad,[-Q[7]])
cetz.draw.hobby((-0.63, 0.47),(0.44, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding15f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.37))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node5.pos,(0.17, 0.79),node2.pos,decoration:"arrow",angle:3.81rad)
edge(node4.pos,(-0.92, -0.38),node3.pos,decoration:"arrow",angle:1.99rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.94rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.55, 0.00),decoration:"coil",angle:-1.14rad)
edge(node2.pos,(0.55, 0.00),decoration:"coil",angle:4.53rad)
edge(node2.pos,(-0.55, 0.55),decoration:"arrow",angle:2.21rad)
edge(node4.pos,(0.55, 0.55),decoration:"arrow",angle:4.22rad)
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node1.pos,(0.64, 0.67),node0.pos,decoration:"arrow",angle:0.69rad)
cetz.draw.content((0.72, 0.57),angle:0.69rad,[q])
cetz.draw.hobby((5.25, 7.11),(-17.22, 24.72),(-9.61, -2.80),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
cetz.draw.content((0.33, 0.92),angle:2.75rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((-0.87, 0.10),(0.51, 0.75),(0.21, -0.75),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.50, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
cetz.draw.content((0.52, -0.73),angle:0.17rad,[-p-2 q-k[3]])
cetz.draw.hobby((1.23, 0.70),(0.92, -0.49),(-0.30, -0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
cetz.draw.content((0.15, 0.91),angle:-0.17rad,[k[3]])
cetz.draw.hobby((-0.56, 0.68),(0.63, 0.60),(0.69, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
cetz.draw.content((-0.98, -0.51),angle:5.71rad,[-p-q-k[3]])
cetz.draw.hobby((1.62, -0.32),(0.40, 3.59),(-1.37, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.54, 0.79),node2.pos,decoration:"arrow",angle:4.13rad)
cetz.draw.content((-0.64, 0.86),angle:4.13rad,[q+k[3]])
cetz.draw.hobby((0.69, 1.22),(-0.70, 0.59),(-0.00, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.55, -0.55),decoration:"arrow",angle:-0.94rad)
cetz.draw.content((-0.53, -0.36),angle:-0.94rad,[-q])
cetz.draw.hobby((-0.56, -0.43),(-0.60, -0.37),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.55, -0.55),decoration:"arrow",angle:2.77rad)
cetz.draw.content((0.09, -0.24),angle:2.77rad,[-q])
cetz.draw.hobby((-0.35, -0.14),(0.48, -0.45),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.55, 0.00),decoration:"arrow",angle:1.99rad)
cetz.draw.content((-0.50, -0.40),angle:1.99rad,[-Q[7]])
cetz.draw.hobby((-0.56, -0.12),(-0.33, -0.63),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.55, 0.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((-0.05, 0.32),angle:2.83rad,[-Q[7]])
cetz.draw.hobby((-0.60, 0.43),(0.47, 0.09),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.71, 0.57),angle:0.70rad,[-Q[8]])
cetz.draw.hobby((-0.66, 0.53),(-0.68, 0.51),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
cetz.draw.content((0.85, 0.65),angle:0.71rad,[-Q[8]])
cetz.draw.hobby((0.96, 0.82),(0.66, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding16f0=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.12, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.72rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node5.pos,(-0.92, -0.38),node2.pos,decoration:"arrow",angle:5.38rad)
edge(node4.pos,(-0.54, 0.79),node3.pos,decoration:"arrow",angle:4.05rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node2.pos,(-0.55, 0.00),decoration:"arrow",angle:2.48rad)
edge(node4.pos,(0.55, 0.00),decoration:"arrow",angle:3.95rad)
edge(node3.pos,(-0.55, 0.55),decoration:"arrow",angle:0.70rad)
edge(node5.pos,(0.55, 0.55),decoration:"arrow",angle:0.71rad)
})
let embedding16f1=cetz.canvas(length:50%,{
let node0= (pos:(-0.71, -0.32))
node(node0.pos)
let node1= (pos:(-0.46, -0.16))
node(node1.pos)
let node2= (pos:(0.41, -0.74))
node(node2.pos)
let node3= (pos:(-0.72, 0.40))
node(node3.pos)
let node4= (pos:(-0.24, -0.69))
node(node4.pos)
let node5= (pos:(1.00, 0.94))
node(node5.pos)
edge(node0.pos,(0.64, 0.67),node1.pos,decoration:"arrow",angle:-2.45rad)
edge(node0.pos,(0.28, 0.81),node4.pos,decoration:"wave",angle:2.75rad)
edge(node5.pos,(0.49, -0.61),node1.pos,decoration:"wave",angle:0.17rad)
edge(node3.pos,(0.13, 0.79),node2.pos,decoration:"coil",angle:-0.17rad)
edge(node2.pos,(-0.92, -0.41),node4.pos,decoration:"arrow",angle:5.71rad)
edge(node3.pos,(-0.54, 0.79),node5.pos,decoration:"arrow",angle:0.93rad)
edge(node1.pos,(-0.55, -0.55),decoration:"arrow",angle:-1.79rad)
edge(node0.pos,(0.55, -0.55),decoration:"arrow",angle:2.97rad)
edge(node5.pos,(-0.55, 0.00),decoration:"arrow",angle:-2.60rad)
edge(node2.pos,(0.55, 0.00),decoration:"arrow",angle:4.53rad)
edge(node4.pos,(-0.55, 0.55),decoration:"arrow",angle:1.82rad)
edge(node3.pos,(0.55, 0.55),decoration:"arrow",angle:3.25rad)
})
[= embedding 1 [1, -1, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+1/4 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,q]^-1
	-1/4 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 dot[p,q]^-1
	-1/4 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 dot[p,q]^-1
	+1/4 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 -3+11+17],box[#embedding1i1 -3+13+15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-2 q-k[3]]^-1 prop[0,p-2 q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 -1+15+17],)
pagebreak()
[= embedding 2 [1, 0, -2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-4 (-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 dot[p,p]^-1
	+4 (-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
	-2 (-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
	-(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 -3+9+11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 -1+9+15],)
pagebreak()
[= embedding 3 [1, 0, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p+q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 -3+11+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 -1+11+17],box[#embedding3f1 -1+13+15],)
pagebreak()
[= embedding 4 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 -3+9+13],box[#embedding4i1 -3+11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 -1+9+17],box[#embedding4f1 -1+15],)
pagebreak()
[= embedding 5 [1, 0, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	-1/2 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	-1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	+1/2 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 -3+9],box[#embedding5i1 -3+15-17],box[#embedding5i2 -3+11-13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 -1-13+15],)
pagebreak()
[= embedding 6 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 -3-9+11],box[#embedding6i1 -3+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,p-q]^-1 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 -1-9+15],box[#embedding6f1 -1+17],)
pagebreak()
[= embedding 7 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 -3-9+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 -1-9+17],)
pagebreak()
[= embedding 8 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	+1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	+1/2 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	-1/2 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 -3-9],box[#embedding8i1 -3-15+17],box[#embedding8i2 -3-11+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 -1-11+17],)
pagebreak()
[= embedding 9 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 -3+11-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 -1+11-13],box[#embedding9f1 -1+9],box[#embedding9f2 -1+15-17],)
pagebreak()
[= embedding 10 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	+1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	-(-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+1/2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 -3+9-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 -1+9-13],)
pagebreak()
[= embedding 11 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,-p+k[2]]^-1 prop[0,-p-q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11i0 -3+9-15],box[#embedding11i1 -3-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,-p+q]^-1 prop[0,-p+k[2]]^-1 prop[0,-p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11f0 -1+9-11],box[#embedding11f1 -1-13],)
pagebreak()
[= embedding 12 [1, 1, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12i0 -3+13-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12f0 -1-11+13],box[#embedding12f1 -1-9],box[#embedding12f2 -1-15+17],)
pagebreak()
[= embedding 13 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13i0 -3-9-17],box[#embedding13i1 -3-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13f0 -1-9-13],box[#embedding13f1 -1-11],)
pagebreak()
[= embedding 14 [1, 1, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/2 (1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+(1/2 dot[p,p]-dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-1/4 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 dot[p,q]^-1
	+1/4 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,q]^-1
	+1/4 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,q]^-1
	-1/4 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14i0 -3-11-17],box[#embedding14i1 -3-13-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1 prop[0,-p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14f0 -1-11-13],)
pagebreak()
[= embedding 15 [1, 1, 2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1
	+4 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+2 (2 dot[p,q]+dot[q,q])^-1 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	-(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding15i0 -3-9-15],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p+q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding15f0 -1-9-11],)
pagebreak()
[= embedding 16 [1, 2, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+1/2 (-2 dot[p,q]-2 dot[q,q])^-1 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	-(1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (1/2 dot[p,p]+2 dot[p,q]+2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16i0 -3-15-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16f0 -1-11-17],box[#embedding16f1 -1-13-15],)
pagebreak()
}