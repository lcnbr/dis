#set page(width: 35cm, height: auto)
#import "@preview/cetz:0.3.1"
#{
let cols = (30%,30%,30%)

let node(pos)=cetz.draw.circle(pos,radius:0.02,fill: black)
let stroke = 0.7pt
let amplitude = 0.051
let arrow-scale = 0.8
let segment-length = 0.0521
let edge(..points,decoration:"",angle:0deg)={
    if decoration == "coil"{
    cetz.decorations.coil(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke,align:"MID")
    } else if decoration == "wave" {
        cetz.decorations.wave(cetz.draw.hobby(..points),amplitude:amplitude,stroke:stroke)
    }  else if decoration == "arrow"{
        let points = points.pos()
        if points.len()==2{
          let center = (0.5*(points.at(0).at(0)+points.at(1).at(0)),0.5*(points.at(0).at(1)+points.at(1).at(1)))
          cetz.draw.hobby(..points,stroke:stroke)
          cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        } else {
          let (first,center,..other)=points
          cetz.draw.hobby(first,center,..other,stroke:stroke)
            cetz.draw.mark(center,angle,symbol: ">", fill: black,anchor: "center",scale:arrow-scale)
        }

    }else {
            cetz.draw.hobby(..points,stroke:stroke)
    }
}
let embedding1i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.82))
node(node0.pos)
let node1= (pos:(0.54, -0.81))
node(node1.pos)
let node2= (pos:(-0.45, -0.02))
node(node2.pos)
let node3= (pos:(0.56, -0.03))
node(node3.pos)
let node4= (pos:(-0.53, 0.61))
node(node4.pos)
let node5= (pos:(-0.03, 0.53))
node(node5.pos)
edge(node1.pos,(0.02, -0.84),node0.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((0.02, -0.96),angle:-3.13rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.88),(0.01, -0.90),(-0.41, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, -0.42),node1.pos,decoration:"wave",angle:-1.59rad)
cetz.draw.content((0.69, -0.43),angle:-1.59rad,[q])
cetz.draw.hobby((0.62, -0.10),(0.63, -0.42),(0.61, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.43),node2.pos,decoration:"wave",angle:4.64rad)
cetz.draw.content((-0.62, -0.42),angle:4.64rad,[q])
cetz.draw.hobby((-0.57, -0.74),(-0.56, -0.41),(-0.53, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.21, 0.24),node5.pos,decoration:"arrow",angle:-2.23rad)
cetz.draw.content((-0.12, 0.16),angle:-2.23rad,[q+k[3]])
cetz.draw.hobby((-0.36, -0.02),(-0.17, 0.20),(-0.01, 0.43),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.06, 0.24),node3.pos,decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.00, 0.14),angle:5.76rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.46, 0.49),(-0.03, 0.22),(0.42, -0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.58, 0.29),node2.pos,decoration:"arrow",angle:1.68rad)
cetz.draw.content((-0.70, 0.28),angle:1.68rad,[k[3]])
cetz.draw.hobby((-0.61, 0.56),(-0.63, 0.28),(-0.54, 0.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.71, -1.02),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.58, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.82, -0.79),angle:2.75rad,[-k[0]])
cetz.draw.hobby((0.66, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.07rad)
cetz.draw.content((0.77, 0.10),angle:0.07rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.65, 0.04),(0.90, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.46, 0.16),angle:0.50rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.09, 0.43),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.43rad)
cetz.draw.content((0.43, 0.87),angle:0.43rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((0.04, 0.62),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.58rad)
cetz.draw.content((-0.84, 0.71),angle:5.58rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.65, 0.63),stroke:stroke,mark: (end: ">"))
})
let embedding1i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.65))
node(node0.pos)
let node1= (pos:(0.42, -0.81))
node(node1.pos)
let node2= (pos:(-0.83, 0.53))
node(node2.pos)
let node3= (pos:(0.09, -0.13))
node(node3.pos)
let node4= (pos:(0.70, 0.60))
node(node4.pos)
let node5= (pos:(-0.44, 0.11))
node(node5.pos)
edge(node1.pos,(-0.12, -0.77),node0.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.14, -0.89),angle:3.00rad,[q+k[0]])
cetz.draw.hobby((0.31, -0.87),(-0.13, -0.83),(-0.55, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, -0.47),node1.pos,decoration:"wave",angle:-1.12rad)
cetz.draw.content((0.38, -0.42),angle:-1.12rad,[q])
cetz.draw.hobby((0.18, -0.17),(0.33, -0.44),(0.45, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.08),node2.pos,decoration:"wave",angle:4.87rad)
cetz.draw.content((-0.91, -0.10),angle:4.87rad,[q])
cetz.draw.hobby((-0.74, -0.56),(-0.85, -0.08),(-0.89, 0.41),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.61, 0.36),node5.pos,decoration:"arrow",angle:2.32rad)
cetz.draw.content((-0.53, 0.44),angle:2.32rad,[q+k[3]])
cetz.draw.hobby((-0.75, 0.55),(-0.56, 0.39),(-0.42, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.14, 0.39),node4.pos,decoration:"coil",angle:0.40rad)
cetz.draw.content((0.09, 0.50),angle:0.40rad,[1/2 p+1/2 q+1/2 k[3]])
cetz.draw.hobby((-0.36, 0.22),(0.10, 0.44),(0.57, 0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.37rad)
cetz.draw.content((-0.74, -0.91),angle:-2.37rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.67, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
cetz.draw.content((0.75, -0.79),angle:2.82rad,[-k[0]])
cetz.draw.hobby((0.53, -0.78),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.22rad)
cetz.draw.content((0.57, -0.12),angle:-0.22rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.20, -0.10),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:0.67rad)
cetz.draw.content((-0.65, -0.21),angle:0.67rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.49, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.74rad)
cetz.draw.content((0.93, 0.56),angle:-0.74rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.82, 0.58),(0.97, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.50, -0.01),angle:5.88rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.93, 0.24),(-0.02, -0.15),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.07rad)
cetz.draw.content((0.76, 0.87),angle:4.07rad,[k[3]])
cetz.draw.hobby((0.72, 0.72),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.92rad)
cetz.draw.content((-1.03, 0.73),angle:1.92rad,[k[3]])
cetz.draw.hobby((-1.02, 0.89),(-0.92, 0.61),stroke:stroke,mark: (end: ">"))
})
let embedding1f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.81))
node(node0.pos)
let node1= (pos:(-0.54, -0.81))
node(node1.pos)
let node2= (pos:(0.46, -0.02))
node(node2.pos)
let node3= (pos:(-0.56, -0.03))
node(node3.pos)
let node4= (pos:(0.03, 0.53))
node(node4.pos)
let node5= (pos:(0.53, 0.61))
node(node5.pos)
edge(node0.pos,(-0.02, -0.84),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.57, -0.43),node1.pos,decoration:"wave",angle:4.73rad)
edge(node0.pos,(0.50, -0.43),node2.pos,decoration:"wave",angle:-1.50rad)
edge(node2.pos,(0.58, 0.29),node5.pos,decoration:"arrow",angle:-1.68rad)
edge(node3.pos,(-0.06, 0.24),node5.pos,decoration:"arrow",angle:0.52rad)
edge(node4.pos,(0.22, 0.24),node2.pos,decoration:"arrow",angle:2.23rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.50rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.21rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.70rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.85rad)
})
let embedding1f1=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.84))
node(node0.pos)
let node1= (pos:(-0.42, -0.65))
node(node1.pos)
let node2= (pos:(0.76, -0.19))
node(node2.pos)
let node3= (pos:(-0.09, 0.51))
node(node3.pos)
let node4= (pos:(0.51, 0.54))
node(node4.pos)
let node5= (pos:(-0.71, 0.08))
node(node5.pos)
edge(node0.pos,(0.06, -0.77),node1.pos,decoration:"arrow",angle:2.95rad)
edge(node3.pos,(-0.25, -0.07),node1.pos,decoration:"wave",angle:-1.85rad)
edge(node0.pos,(0.66, -0.53),node2.pos,decoration:"wave",angle:-1.87rad)
edge(node4.pos,(0.65, 0.19),node2.pos,decoration:"arrow",angle:1.90rad)
edge(node5.pos,(-0.11, 0.25),node4.pos,decoration:"coil",angle:0.35rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.60rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.80rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.61rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.17rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:-0.16rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:5.56rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.75rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.79rad)
})
let embedding2i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.81))
node(node0.pos)
let node1= (pos:(0.51, -0.81))
node(node1.pos)
let node2= (pos:(-0.56, -0.03))
node(node2.pos)
let node3= (pos:(0.46, -0.02))
node(node3.pos)
let node4= (pos:(0.03, 0.53))
node(node4.pos)
let node5= (pos:(0.54, 0.61))
node(node5.pos)
edge(node1.pos,(-0.02, -0.84),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.02, -0.96),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.88),(-0.01, -0.90),(-0.44, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.50, -0.43),node1.pos,decoration:"wave",angle:-1.50rad)
cetz.draw.content((0.62, -0.42),angle:-1.50rad,[q])
cetz.draw.hobby((0.53, -0.09),(0.56, -0.41),(0.57, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.57, -0.42),node2.pos,decoration:"wave",angle:4.74rad)
cetz.draw.content((-0.69, -0.43),angle:4.74rad,[q])
cetz.draw.hobby((-0.61, -0.74),(-0.63, -0.42),(-0.62, -0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.05, 0.25),node5.pos,decoration:"arrow",angle:-2.62rad)
cetz.draw.content((0.01, 0.14),angle:-2.62rad,[q+k[3]])
cetz.draw.hobby((-0.42, -0.02),(0.03, 0.22),(0.46, 0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.58, 0.29),node5.pos,decoration:"arrow",angle:1.46rad)
cetz.draw.content((0.70, 0.28),angle:1.46rad,[p-q-2 k[3]])
cetz.draw.hobby((0.54, 0.00),(0.64, 0.28),(0.61, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.21, 0.24),node3.pos,decoration:"arrow",angle:5.37rad)
cetz.draw.content((0.12, 0.17),angle:5.37rad,[p-2 k[3]])
cetz.draw.hobby((0.01, 0.44),(0.17, 0.20),(0.36, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.72, -1.01),angle:-2.75rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.61, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((0.80, -0.79),angle:2.78rad,[-k[0]])
cetz.draw.hobby((0.63, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:2.64rad)
cetz.draw.content((0.57, 0.37),angle:2.64rad,[k[3]])
cetz.draw.hobby((0.15, 0.53),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:3.08rad)
cetz.draw.content((-0.79, -0.13),angle:3.08rad,[k[3]])
cetz.draw.hobby((-0.90, -0.07),(-0.66, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.70rad)
cetz.draw.content((0.69, 0.90),angle:0.70rad,[p-k[3]])
cetz.draw.hobby((0.57, 0.72),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.85rad)
cetz.draw.content((-0.53, 0.65),angle:5.85rad,[p-k[3]])
cetz.draw.hobby((-0.93, 0.90),(-0.09, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding2i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.75))
node(node1.pos)
let node2= (pos:(-0.08, 0.12))
node(node2.pos)
let node3= (pos:(0.79, 0.11))
node(node3.pos)
let node4= (pos:(0.48, 0.72))
node(node4.pos)
let node5= (pos:(-0.71, 0.17))
node(node5.pos)
edge(node1.pos,(0.09, -0.78),node0.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((0.09, -0.90),angle:3.13rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.82),(0.09, -0.84),(-0.32, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, -0.33),node1.pos,decoration:"wave",angle:-1.79rad)
cetz.draw.content((0.82, -0.36),angle:-1.79rad,[q])
cetz.draw.hobby((0.83, 0.01),(0.76, -0.34),(0.68, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.26, -0.32),node2.pos,decoration:"wave",angle:4.35rad)
cetz.draw.content((-0.37, -0.27),angle:4.35rad,[q])
cetz.draw.hobby((-0.44, -0.64),(-0.31, -0.29),(-0.17, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.63, 0.42),node3.pos,decoration:"arrow",angle:-1.10rad)
cetz.draw.content((0.74, 0.48),angle:-1.10rad,[p-2 k[3]])
cetz.draw.hobby((0.56, 0.69),(0.69, 0.44),(0.81, 0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.13, 0.50),node4.pos,decoration:"coil",angle:0.44rad)
cetz.draw.content((-0.18, 0.61),angle:0.44rad,[p-k[3]])
cetz.draw.hobby((-0.63, 0.29),(-0.17, 0.55),(0.33, 0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.66, -0.98),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.49, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.59rad)
cetz.draw.content((0.86, -0.77),angle:2.59rad,[-k[0]])
cetz.draw.hobby((0.71, -0.75),(0.95, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.74rad)
cetz.draw.content((0.51, 0.01),angle:2.74rad,[q+k[3]])
cetz.draw.hobby((0.03, 0.14),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.10rad)
cetz.draw.content((-0.75, -0.14),angle:-2.10rad,[q+k[3]])
cetz.draw.hobby((-0.90, -0.28),(-0.71, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:0.82rad)
cetz.draw.content((0.81, 0.30),angle:0.82rad,[p-q-2 k[3]])
cetz.draw.hobby((0.81, 0.22),(0.89, 0.30),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.91, 0.15),angle:5.76rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.94, 0.23),(-0.82, 0.16),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.68, 0.97),angle:3.63rad,[k[3]])
cetz.draw.hobby((0.54, 0.82),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
cetz.draw.content((-0.62, 0.48),angle:2.38rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.20, 0.15),stroke:stroke,mark: (end: ">"))
})
let embedding2f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.81))
node(node0.pos)
let node1= (pos:(-0.51, -0.81))
node(node1.pos)
let node2= (pos:(0.56, -0.03))
node(node2.pos)
let node3= (pos:(-0.46, -0.02))
node(node3.pos)
let node4= (pos:(-0.53, 0.61))
node(node4.pos)
let node5= (pos:(-0.03, 0.53))
node(node5.pos)
edge(node0.pos,(0.02, -0.84),node1.pos,decoration:"arrow",angle:-3.13rad)
edge(node3.pos,(-0.50, -0.43),node1.pos,decoration:"wave",angle:4.65rad)
edge(node0.pos,(0.57, -0.42),node2.pos,decoration:"wave",angle:-1.59rad)
edge(node3.pos,(-0.21, 0.24),node5.pos,decoration:"arrow",angle:0.91rad)
edge(node4.pos,(-0.58, 0.29),node3.pos,decoration:"arrow",angle:4.82rad)
edge(node4.pos,(0.06, 0.25),node2.pos,decoration:"arrow",angle:2.62rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.20rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.64rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.43rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.59rad)
})
let embedding2f1=cetz.canvas(length:50%,{
let node0= (pos:(0.43, -0.75))
node(node0.pos)
let node1= (pos:(-0.61, -0.80))
node(node1.pos)
let node2= (pos:(0.09, 0.12))
node(node2.pos)
let node3= (pos:(-0.92, -0.00))
node(node3.pos)
let node4= (pos:(0.71, 0.62))
node(node4.pos)
let node5= (pos:(-0.44, 0.08))
node(node5.pos)
edge(node0.pos,(-0.09, -0.81),node1.pos,decoration:"arrow",angle:-3.10rad)
edge(node3.pos,(-0.78, -0.42),node1.pos,decoration:"wave",angle:5.08rad)
edge(node0.pos,(0.28, -0.32),node2.pos,decoration:"wave",angle:-1.21rad)
edge(node3.pos,(-0.69, 0.13),node5.pos,decoration:"arrow",angle:0.16rad)
edge(node5.pos,(0.14, 0.43),node4.pos,decoration:"coil",angle:0.43rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.73rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.68rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.51rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.77rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.96rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.06rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.46rad)
})
let embedding3i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.73))
node(node0.pos)
let node1= (pos:(0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.27, 0.15))
node(node2.pos)
let node3= (pos:(0.27, 0.15))
node(node3.pos)
let node4= (pos:(-0.59, 0.71))
node(node4.pos)
let node5= (pos:(0.59, 0.71))
node(node5.pos)
edge(node1.pos,(-0.00, -0.76),node0.pos,decoration:"arrow",angle:-3.14rad)
cetz.draw.content((-0.00, -0.88),angle:-3.14rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.80),(-0.00, -0.82),(-0.41, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.41, -0.30),node1.pos,decoration:"wave",angle:-1.31rad)
cetz.draw.content((0.52, -0.27),angle:-1.31rad,[q])
cetz.draw.hobby((0.35, 0.08),(0.46, -0.27),(0.54, -0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, -0.30),node2.pos,decoration:"wave",angle:4.46rad)
cetz.draw.content((-0.53, -0.27),angle:4.46rad,[q])
cetz.draw.hobby((-0.54, -0.63),(-0.46, -0.27),(-0.36, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.14, 0.49),node5.pos,decoration:"arrow",angle:3.71rad)
cetz.draw.content((0.08, 0.59),angle:3.71rad,[q+k[3]])
cetz.draw.hobby((-0.24, 0.27),(0.09, 0.53),(0.47, 0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.49, 0.41),node5.pos,decoration:"arrow",angle:1.06rad)
cetz.draw.content((0.59, 0.35),angle:1.06rad,[p-q-k[3]])
cetz.draw.hobby((0.36, 0.15),(0.53, 0.37),(0.64, 0.63),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.14, 0.49),node3.pos,decoration:"arrow",angle:-0.57rad)
cetz.draw.content((-0.08, 0.59),angle:-0.57rad,[p-k[3]])
cetz.draw.hobby((-0.47, 0.73),(-0.10, 0.53),(0.24, 0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.41),node2.pos,decoration:"arrow",angle:2.08rad)
cetz.draw.content((-0.60, 0.35),angle:2.08rad,[k[3]])
cetz.draw.hobby((-0.64, 0.63),(-0.54, 0.37),(-0.36, 0.15),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.69, -0.97),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.56, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.81, -0.76),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.61, -0.72),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.62rad)
cetz.draw.content((0.73, 0.95),angle:0.62rad,[p])
cetz.draw.hobby((0.64, 0.81),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.66rad)
cetz.draw.content((-0.87, 0.76),angle:5.66rad,[p])
cetz.draw.hobby((-0.95, 0.89),(-0.71, 0.72),stroke:stroke,mark: (end: ">"))
})
let embedding3i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, -0.78))
node(node0.pos)
let node1= (pos:(0.69, -0.64))
node(node1.pos)
let node2= (pos:(0.42, -0.13))
node(node2.pos)
let node3= (pos:(0.78, 0.52))
node(node3.pos)
let node4= (pos:(0.02, 0.44))
node(node4.pos)
let node5= (pos:(-0.85, 0.51))
node(node5.pos)
edge(node1.pos,(0.20, -0.76),node0.pos,decoration:"arrow",angle:-3.00rad)
cetz.draw.content((0.21, -0.88),angle:-3.00rad,[q+k[0]])
cetz.draw.hobby((0.61, -0.73),(0.21, -0.82),(-0.21, -0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.79, -0.06),node1.pos,decoration:"wave",angle:-1.65rad)
cetz.draw.content((0.91, -0.07),angle:-1.65rad,[q])
cetz.draw.hobby((0.85, 0.41),(0.85, -0.07),(0.78, -0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.03, -0.45),node2.pos,decoration:"wave",angle:3.87rad)
cetz.draw.content((-0.05, -0.36),angle:3.87rad,[q])
cetz.draw.hobby((-0.28, -0.67),(0.00, -0.39),(0.31, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.40, 0.53),node3.pos,decoration:"arrow",angle:0.10rad)
cetz.draw.content((0.39, 0.65),angle:0.10rad,[p-k[3]])
cetz.draw.hobby((0.07, 0.52),(0.39, 0.59),(0.71, 0.59),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.20, 0.15),node2.pos,decoration:"arrow",angle:2.18rad)
cetz.draw.content((0.10, 0.08),angle:2.18rad,[k[3]])
cetz.draw.hobby((-0.00, 0.35),(0.15, 0.11),(0.33, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.43, 0.49),node4.pos,decoration:"coil",angle:-0.08rad)
cetz.draw.content((-0.42, 0.61),angle:-0.08rad,[p])
cetz.draw.hobby((-0.77, 0.57),(-0.41, 0.55),(-0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.62, -1.00),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.38, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.28rad)
cetz.draw.content((0.94, -0.74),angle:2.28rad,[-k[0]])
cetz.draw.hobby((0.80, -0.67),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.37rad)
cetz.draw.content((0.68, 0.05),angle:3.37rad,[q+k[3]])
cetz.draw.hobby((0.50, -0.05),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.85rad)
cetz.draw.content((-0.81, 0.22),angle:-1.85rad,[q+k[3]])
cetz.draw.hobby((-0.91, 0.08),(-0.82, 0.40),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.15rad)
cetz.draw.content((0.78, 0.81),angle:1.15rad,[p-q-k[3]])
cetz.draw.hobby((0.77, 0.64),(0.90, 0.93),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.00rad)
cetz.draw.content((-1.04, 0.72),angle:5.00rad,[p-q-k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.94, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding3i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.69, -0.64))
node(node0.pos)
let node1= (pos:(0.31, -0.78))
node(node1.pos)
let node2= (pos:(-0.78, 0.52))
node(node2.pos)
let node3= (pos:(-0.42, -0.13))
node(node3.pos)
let node4= (pos:(0.86, 0.51))
node(node4.pos)
let node5= (pos:(-0.01, 0.44))
node(node5.pos)
edge(node1.pos,(-0.20, -0.76),node0.pos,decoration:"arrow",angle:3.00rad)
cetz.draw.content((-0.21, -0.88),angle:3.00rad,[q+k[0]])
cetz.draw.hobby((0.21, -0.84),(-0.21, -0.82),(-0.61, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.03, -0.45),node1.pos,decoration:"wave",angle:-0.73rad)
cetz.draw.content((0.05, -0.36),angle:-0.73rad,[q])
cetz.draw.hobby((-0.30, -0.14),(-0.00, -0.39),(0.28, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.06),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.91, -0.07),angle:4.79rad,[q])
cetz.draw.hobby((-0.78, -0.54),(-0.85, -0.06),(-0.85, 0.41),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.40, 0.54),node5.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.39, 0.65),angle:3.04rad,[q+k[3]])
cetz.draw.hobby((-0.71, 0.59),(-0.39, 0.59),(-0.07, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.14),node5.pos,decoration:"arrow",angle:0.96rad)
cetz.draw.content((-0.10, 0.07),angle:0.96rad,[p-q-k[3]])
cetz.draw.hobby((-0.33, -0.12),(-0.15, 0.11),(0.00, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.43, 0.49),node4.pos,decoration:"coil",angle:0.08rad)
cetz.draw.content((0.42, 0.61),angle:0.08rad,[p])
cetz.draw.hobby((0.07, 0.51),(0.42, 0.55),(0.77, 0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.28rad)
cetz.draw.content((-0.75, -0.90),angle:-2.28rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.96),(-0.71, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.69, -0.77),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.42, -0.75),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.29rad)
cetz.draw.content((1.04, 0.29),angle:-1.29rad,[p-k[3]])
cetz.draw.hobby((0.94, 0.43),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.74, -0.18),angle:6.06rad,[p-k[3]])
cetz.draw.hobby((-0.92, -0.08),(-0.53, -0.17),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.43rad)
cetz.draw.content((0.81, 0.79),angle:4.43rad,[k[3]])
cetz.draw.hobby((0.83, 0.62),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
cetz.draw.content((-1.00, 0.71),angle:2.00rad,[k[3]])
cetz.draw.hobby((-1.01, 0.88),(-0.88, 0.59),stroke:stroke,mark: (end: ">"))
})
let embedding3f0=cetz.canvas(length:50%,{
let node0= (pos:(0.58, -0.81))
node(node0.pos)
let node1= (pos:(-0.50, -0.81))
node(node1.pos)
let node2= (pos:(0.92, -0.08))
node(node2.pos)
let node3= (pos:(-0.52, -0.01))
node(node3.pos)
let node4= (pos:(-0.93, 0.63))
node(node4.pos)
let node5= (pos:(-0.02, 0.34))
node(node5.pos)
edge(node0.pos,(0.04, -0.84),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.52, -0.42),node1.pos,decoration:"wave",angle:4.74rad)
edge(node0.pos,(0.73, -0.45),node2.pos,decoration:"wave",angle:4.28rad)
edge(node3.pos,(-0.25, 0.16),node5.pos,decoration:"arrow",angle:0.60rad)
edge(node4.pos,(-0.71, 0.32),node3.pos,decoration:"arrow",angle:-1.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.79rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.86rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.54rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:1.34rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.39rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.58rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.90rad)
})
let embedding3f1=cetz.canvas(length:50%,{
let node0= (pos:(0.46, -0.83))
node(node0.pos)
let node1= (pos:(-0.59, -0.82))
node(node1.pos)
let node2= (pos:(0.35, -0.04))
node(node2.pos)
let node3= (pos:(-0.93, -0.08))
node(node3.pos)
let node4= (pos:(0.02, 0.62))
node(node4.pos)
let node5= (pos:(0.82, 0.32))
node(node5.pos)
edge(node0.pos,(-0.07, -0.85),node1.pos,decoration:"arrow",angle:3.13rad)
edge(node3.pos,(-0.74, -0.46),node1.pos,decoration:"wave",angle:-1.15rad)
edge(node0.pos,(0.42, -0.44),node2.pos,decoration:"wave",angle:-1.43rad)
edge(node2.pos,(0.60, 0.13),node5.pos,decoration:"arrow",angle:-2.49rad)
edge(node4.pos,(0.16, 0.29),node2.pos,decoration:"arrow",angle:2.03rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.85rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:1.84rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.28rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.89rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.31rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.92rad)
})
let embedding3f2=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.77))
node(node0.pos)
let node1= (pos:(-0.62, -0.63))
node(node1.pos)
let node2= (pos:(0.74, -0.05))
node(node2.pos)
let node3= (pos:(-0.93, 0.49))
node(node3.pos)
let node4= (pos:(0.57, 0.66))
node(node4.pos)
let node5= (pos:(-0.48, 0.29))
node(node5.pos)
edge(node0.pos,(-0.05, -0.72),node1.pos,decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.79, -0.10),node1.pos,decoration:"wave",angle:4.98rad)
edge(node0.pos,(0.64, -0.43),node2.pos,decoration:"wave",angle:-1.87rad)
edge(node3.pos,(-0.67, 0.47),node5.pos,decoration:"arrow",angle:-0.41rad)
edge(node4.pos,(0.67, 0.32),node2.pos,decoration:"arrow",angle:1.81rad)
edge(node5.pos,(0.05, 0.49),node4.pos,decoration:"coil",angle:0.34rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.37rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.35rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.64rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.67rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.85rad)
})
let embedding4i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.33, -0.78))
node(node0.pos)
let node1= (pos:(0.49, -0.75))
node(node1.pos)
let node2= (pos:(0.62, -0.08))
node(node2.pos)
let node3= (pos:(0.03, 0.18))
node(node3.pos)
let node4= (pos:(-0.84, 0.47))
node(node4.pos)
let node5= (pos:(0.71, 0.65))
node(node5.pos)
edge(node1.pos,(0.07, -0.83),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((0.08, -0.95),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.83),(0.09, -0.89),(-0.26, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.25, -0.29),node1.pos,decoration:"wave",angle:5.17rad)
cetz.draw.content((0.14, -0.34),angle:5.17rad,[q])
cetz.draw.hobby((0.02, 0.06),(0.20, -0.31),(0.39, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.43),node2.pos,decoration:"wave",angle:3.78rad)
cetz.draw.content((0.05, -0.34),angle:3.78rad,[q])
cetz.draw.hobby((-0.27, -0.66),(0.10, -0.37),(0.49, -0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.70, 0.29),node5.pos,decoration:"arrow",angle:-1.68rad)
cetz.draw.content((0.82, 0.28),angle:-1.68rad,[q+k[3]])
cetz.draw.hobby((0.70, -0.02),(0.76, 0.28),(0.77, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.34, 0.46),node5.pos,decoration:"arrow",angle:0.60rad)
cetz.draw.content((0.28, 0.56),angle:0.60rad,[p-q])
cetz.draw.hobby((0.04, 0.29),(0.31, 0.51),(0.61, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.42, 0.34),node3.pos,decoration:"arrow",angle:-0.32rad)
cetz.draw.content((-0.38, 0.45),angle:-0.32rad,[p])
cetz.draw.hobby((-0.74, 0.50),(-0.38, 0.39),(-0.04, 0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.63, -1.01),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.40, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.80, -0.77),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.60, -0.74),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:1.25rad)
cetz.draw.content((-0.81, 0.20),angle:1.25rad,[-k[3]])
cetz.draw.hobby((-0.91, 0.08),(-0.82, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.21rad)
cetz.draw.content((0.79, 0.08),angle:0.21rad,[-k[3]])
cetz.draw.hobby((0.71, -0.00),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.87rad)
cetz.draw.content((0.76, 0.90),angle:0.87rad,[p+k[3]])
cetz.draw.hobby((0.73, 0.77),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.00rad)
cetz.draw.content((-1.04, 0.70),angle:5.00rad,[p+k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.93, 0.55),stroke:stroke,mark: (end: ">"))
})
let embedding4i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.24, -0.71))
node(node0.pos)
let node1= (pos:(0.59, -0.72))
node(node1.pos)
let node2= (pos:(0.78, 0.13))
node(node2.pos)
let node3= (pos:(0.46, 0.23))
node(node3.pos)
let node4= (pos:(-0.57, 0.68))
node(node4.pos)
let node5= (pos:(-0.94, 0.06))
node(node5.pos)
edge(node1.pos,(0.17, -0.76),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((0.17, -0.88),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.52, -0.80),(0.17, -0.82),(-0.17, -0.78),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.53, -0.26),node1.pos,decoration:"wave",angle:-1.43rad)
cetz.draw.content((0.65, -0.24),angle:-1.43rad,[q])
cetz.draw.hobby((0.53, 0.15),(0.59, -0.24),(0.64, -0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.28),node2.pos,decoration:"wave",angle:3.83rad)
cetz.draw.content((0.17, -0.19),angle:3.83rad,[q])
cetz.draw.hobby((-0.19, -0.57),(0.22, -0.22),(0.64, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.05, 0.48),node3.pos,decoration:"arrow",angle:-0.41rad)
cetz.draw.content((-0.01, 0.59),angle:-0.41rad,[p])
cetz.draw.hobby((-0.45, 0.70),(-0.03, 0.53),(0.39, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.73, 0.37),node4.pos,decoration:"coil",angle:1.05rad)
cetz.draw.content((-0.63, 0.31),angle:1.05rad,[p+k[3]])
cetz.draw.hobby((-0.85, 0.08),(-0.68, 0.33),(-0.55, 0.59),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.77rad)
cetz.draw.content((-0.58, -0.97),angle:-2.77rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.31, -0.80),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.54rad)
cetz.draw.content((0.86, -0.76),angle:2.54rad,[-k[0]])
cetz.draw.hobby((0.71, -0.73),(0.95, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.01rad)
cetz.draw.content((1.00, -0.05),angle:2.01rad,[q+k[3]])
cetz.draw.hobby((0.88, 0.07),(1.01, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.73rad)
cetz.draw.content((-0.85, -0.16),angle:-1.73rad,[q+k[3]])
cetz.draw.hobby((-0.93, -0.24),(-0.89, -0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:0.18rad)
cetz.draw.content((0.71, 0.40),angle:0.18rad,[p-q])
cetz.draw.hobby((0.55, 0.31),(0.89, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:4.93rad)
cetz.draw.content((-1.09, 0.17),angle:4.93rad,[p-q])
cetz.draw.hobby((-1.04, 0.22),(-1.02, 0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.64rad)
cetz.draw.content((-0.86, 0.75),angle:5.64rad,[-k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.69, 0.69),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.32rad)
cetz.draw.content((0.77, 0.60),angle:1.32rad,[-k[3]])
cetz.draw.hobby((0.75, 0.25),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding4i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.73))
node(node0.pos)
let node1= (pos:(0.31, -0.63))
node(node1.pos)
let node2= (pos:(0.20, 0.07))
node(node2.pos)
let node3= (pos:(-0.57, 0.52))
node(node3.pos)
let node4= (pos:(0.71, 0.74))
node(node4.pos)
let node5= (pos:(0.05, 0.68))
node(node5.pos)
edge(node1.pos,(-0.07, -0.73),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((-0.06, -0.85),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.26, -0.72),(-0.07, -0.79),(-0.40, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.17, -0.07),node1.pos,decoration:"wave",angle:5.36rad)
cetz.draw.content((-0.27, -0.14),angle:5.36rad,[q])
cetz.draw.hobby((-0.55, 0.36),(-0.21, -0.12),(0.17, -0.56),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.33),node2.pos,decoration:"wave",angle:4.02rad)
cetz.draw.content((-0.25, -0.25),angle:4.02rad,[q])
cetz.draw.hobby((-0.45, -0.61),(-0.19, -0.28),(0.08, 0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.11, 0.37),node5.pos,decoration:"arrow",angle:4.94rad)
cetz.draw.content((-0.01, 0.34),angle:4.94rad,[q+k[3]])
cetz.draw.hobby((0.12, 0.11),(0.05, 0.36),(0.00, 0.61),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.29, 0.65),node5.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.32, 0.77),angle:0.26rad,[p-q])
cetz.draw.hobby((-0.55, 0.61),(-0.29, 0.71),(-0.01, 0.74),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.51, 0.37),node2.pos,decoration:"arrow",angle:0.92rad)
cetz.draw.content((0.61, 0.30),angle:0.92rad,[k[3]])
cetz.draw.hobby((0.73, 0.63),(0.55, 0.33),(0.30, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, 0.78),node4.pos,decoration:"coil",angle:0.08rad)
cetz.draw.content((0.37, 0.90),angle:0.08rad,[p+k[3]])
cetz.draw.hobby((0.09, 0.76),(0.37, 0.84),(0.66, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.67rad)
cetz.draw.content((-0.68, -0.97),angle:-2.67rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.53, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.71, -0.71),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.43, -0.62),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.73rad)
cetz.draw.content((0.77, 0.96),angle:0.73rad,[p])
cetz.draw.hobby((0.74, 0.85),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.44rad)
cetz.draw.content((-0.88, 0.68),angle:5.44rad,[p])
cetz.draw.hobby((-0.98, 0.89),(-0.68, 0.55),stroke:stroke,mark: (end: ">"))
})
let embedding4f0=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.74))
node(node0.pos)
let node1= (pos:(-0.58, -0.80))
node(node1.pos)
let node2= (pos:(0.90, 0.11))
node(node2.pos)
let node3= (pos:(-1.00, -0.02))
node(node3.pos)
let node4= (pos:(-0.07, 0.60))
node(node4.pos)
let node5= (pos:(-0.61, -0.01))
node(node5.pos)
edge(node0.pos,(-0.00, -0.79),node1.pos,decoration:"arrow",angle:-3.09rad)
edge(node3.pos,(-0.80, -0.44),node1.pos,decoration:"wave",angle:5.22rad)
edge(node0.pos,(0.71, -0.31),node2.pos,decoration:"wave",angle:4.34rad)
edge(node3.pos,(-0.80, 0.13),node5.pos,decoration:"arrow",angle:0.01rad)
edge(node5.pos,(-0.33, 0.31),node4.pos,decoration:"coil",angle:0.85rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.60rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.79rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.45rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.25rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.72rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.88rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.46rad)
})
let embedding5i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, -0.63))
node(node0.pos)
let node1= (pos:(0.47, -0.72))
node(node1.pos)
let node2= (pos:(0.58, 0.52))
node(node2.pos)
let node3= (pos:(-0.18, 0.09))
node(node3.pos)
let node4= (pos:(-0.03, 0.70))
node(node4.pos)
let node5= (pos:(-0.69, 0.75))
node(node5.pos)
edge(node1.pos,(0.08, -0.73),node0.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((0.06, -0.84),angle:3.03rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.79),(0.07, -0.78),(-0.25, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.17, -0.32),node1.pos,decoration:"wave",angle:-0.89rad)
cetz.draw.content((0.26, -0.24),angle:-0.89rad,[q])
cetz.draw.hobby((-0.07, 0.05),(0.20, -0.27),(0.46, -0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.18, -0.06),node2.pos,decoration:"wave",angle:-2.23rad)
cetz.draw.content((0.27, -0.14),angle:-2.23rad,[q])
cetz.draw.hobby((-0.16, -0.56),(0.22, -0.11),(0.55, 0.36),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.49, 0.39),node5.pos,decoration:"arrow",angle:2.22rad)
cetz.draw.content((-0.59, 0.31),angle:2.22rad,[k[2]])
cetz.draw.hobby((-0.29, 0.09),(-0.53, 0.34),(-0.72, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.09, 0.38),node3.pos,decoration:"arrow",angle:-1.81rad)
cetz.draw.content((0.03, 0.36),angle:-1.81rad,[q+k[2]])
cetz.draw.hobby((0.02, 0.63),(-0.03, 0.37),(-0.10, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.30, 0.66),node2.pos,decoration:"arrow",angle:2.85rad)
cetz.draw.content((0.33, 0.78),angle:2.85rad,[p-q])
cetz.draw.hobby((0.03, 0.76),(0.31, 0.72),(0.56, 0.61),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, 0.80),node4.pos,decoration:"coil",angle:-0.07rad)
cetz.draw.content((-0.36, 0.91),angle:-0.07rad,[p+k[2]])
cetz.draw.hobby((-0.64, 0.83),(-0.35, 0.85),(-0.07, 0.78),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.60, -0.92),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.37, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.79, -0.75),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.59, -0.71),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:3.99rad)
cetz.draw.content((0.70, 0.84),angle:3.99rad,[p])
cetz.draw.hobby((0.60, 0.63),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.92, 0.78),angle:2.45rad,[p])
cetz.draw.hobby((-0.96, 0.89),(-0.81, 0.77),stroke:stroke,mark: (end: ">"))
})
let embedding5i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.75))
node(node0.pos)
let node1= (pos:(0.33, -0.78))
node(node1.pos)
let node2= (pos:(-0.03, 0.18))
node(node2.pos)
let node3= (pos:(-0.62, -0.08))
node(node3.pos)
let node4= (pos:(-0.71, 0.66))
node(node4.pos)
let node5= (pos:(0.84, 0.47))
node(node5.pos)
edge(node1.pos,(-0.08, -0.83),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((-0.08, -0.95),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.26, -0.86),(-0.09, -0.89),(-0.43, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.12, -0.43),node1.pos,decoration:"wave",angle:-0.64rad)
cetz.draw.content((-0.05, -0.34),angle:-0.64rad,[q])
cetz.draw.hobby((-0.49, -0.10),(-0.10, -0.37),(0.27, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.25, -0.28),node2.pos,decoration:"wave",angle:-2.03rad)
cetz.draw.content((-0.14, -0.34),angle:-2.03rad,[q])
cetz.draw.hobby((-0.39, -0.69),(-0.20, -0.31),(-0.02, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.42, 0.34),node5.pos,decoration:"arrow",angle:3.46rad)
cetz.draw.content((0.38, 0.45),angle:3.46rad,[p])
cetz.draw.hobby((0.04, 0.27),(0.38, 0.39),(0.74, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.70, 0.29),node3.pos,decoration:"arrow",angle:4.82rad)
cetz.draw.content((-0.82, 0.28),angle:4.82rad,[q+k[2]])
cetz.draw.hobby((-0.77, 0.58),(-0.76, 0.28),(-0.70, -0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.34, 0.47),node2.pos,decoration:"arrow",angle:2.54rad)
cetz.draw.content((-0.28, 0.56),angle:2.54rad,[p-q])
cetz.draw.hobby((-0.61, 0.68),(-0.31, 0.51),(-0.04, 0.29),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.69, -0.98),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.55, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.70, -0.78),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.44, -0.76),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.93rad)
cetz.draw.content((-0.84, -0.16),angle:2.93rad,[-k[2]])
cetz.draw.hobby((-0.91, -0.08),(-0.73, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.89rad)
cetz.draw.content((1.03, 0.27),angle:1.89rad,[-k[2]])
cetz.draw.hobby((0.93, 0.40),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.28rad)
cetz.draw.content((0.81, 0.77),angle:1.28rad,[p+k[2]])
cetz.draw.hobby((0.81, 0.58),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.41rad)
cetz.draw.content((-0.95, 0.75),angle:5.41rad,[p+k[2]])
cetz.draw.hobby((-0.98, 0.88),(-0.82, 0.69),stroke:stroke,mark: (end: ">"))
})
let embedding5i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.68))
node(node0.pos)
let node1= (pos:(0.25, -0.76))
node(node1.pos)
let node2= (pos:(-0.48, 0.44))
node(node2.pos)
let node3= (pos:(-0.79, -0.11))
node(node3.pos)
let node4= (pos:(0.94, 0.64))
node(node4.pos)
let node5= (pos:(0.58, 0.06))
node(node5.pos)
edge(node1.pos,(-0.16, -0.77),node0.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.17, -0.89),angle:3.04rad,[q+k[0]])
cetz.draw.hobby((0.17, -0.83),(-0.18, -0.83),(-0.52, -0.76),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.25, -0.41),node1.pos,decoration:"wave",angle:-0.57rad)
cetz.draw.content((-0.18, -0.31),angle:-0.57rad,[q])
cetz.draw.hobby((-0.65, -0.11),(-0.22, -0.36),(0.19, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.48, -0.12),node2.pos,decoration:"wave",angle:-1.66rad)
cetz.draw.content((-0.36, -0.13),angle:-1.66rad,[q])
cetz.draw.hobby((-0.50, -0.58),(-0.42, -0.13),(-0.41, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.05, 0.26),node5.pos,decoration:"arrow",angle:2.80rad)
cetz.draw.content((0.09, 0.38),angle:2.80rad,[p])
cetz.draw.hobby((-0.36, 0.46),(0.07, 0.32),(0.50, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.72, 0.37),node4.pos,decoration:"coil",angle:1.02rad)
cetz.draw.content((0.62, 0.43),angle:1.02rad,[p+k[2]])
cetz.draw.hobby((0.55, 0.14),(0.67, 0.40),(0.85, 0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.48rad)
cetz.draw.content((-0.72, -0.93),angle:-2.48rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.99),(-0.62, -0.79),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.66, -0.77),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.36, -0.74),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.33rad)
cetz.draw.content((-0.81, -0.30),angle:-2.33rad,[-k[2]])
cetz.draw.hobby((-0.89, -0.30),(-0.81, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.39rad)
cetz.draw.content((0.87, -0.05),angle:2.39rad,[-k[2]])
cetz.draw.hobby((0.69, 0.03),(0.97, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.37rad)
cetz.draw.content((1.09, 0.51),angle:-1.37rad,[q+k[2]])
cetz.draw.hobby((1.02, 0.55),(1.04, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.17rad)
cetz.draw.content((-1.00, 0.06),angle:5.17rad,[q+k[2]])
cetz.draw.hobby((-1.01, 0.22),(-0.88, -0.04),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.85, 0.84),angle:4.54rad,[p-q])
cetz.draw.hobby((0.90, 0.75),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.31rad)
cetz.draw.content((-0.83, 0.64),angle:2.31rad,[p-q])
cetz.draw.hobby((-0.98, 0.89),(-0.59, 0.47),stroke:stroke,mark: (end: ">"))
})
let embedding5f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.83))
node(node0.pos)
let node1= (pos:(-0.60, -0.63))
node(node1.pos)
let node2= (pos:(0.79, -0.18))
node(node2.pos)
let node3= (pos:(-0.88, 0.52))
node(node3.pos)
let node4= (pos:(0.72, 0.62))
node(node4.pos)
let node5= (pos:(0.08, 0.12))
node(node5.pos)
edge(node0.pos,(-0.05, -0.75),node1.pos,decoration:"arrow",angle:2.97rad)
edge(node3.pos,(-0.75, -0.06),node1.pos,decoration:"wave",angle:4.95rad)
edge(node0.pos,(0.65, -0.51),node2.pos,decoration:"wave",angle:-1.98rad)
edge(node4.pos,(0.78, 0.23),node2.pos,decoration:"arrow",angle:1.66rad)
edge(node5.pos,(0.37, 0.40),node4.pos,decoration:"coil",angle:0.66rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.39rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.80rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.50rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.74rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.16rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.37rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.93rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.96rad)
})
let embedding6i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.55, -0.84))
node(node0.pos)
let node1= (pos:(0.46, -0.68))
node(node1.pos)
let node2= (pos:(-0.60, -0.15))
node(node2.pos)
let node3= (pos:(0.07, 0.49))
node(node3.pos)
let node4= (pos:(0.44, 0.60))
node(node4.pos)
let node5= (pos:(0.08, 0.06))
node(node5.pos)
edge(node1.pos,(-0.04, -0.80),node0.pos,decoration:"arrow",angle:-2.98rad)
cetz.draw.content((-0.02, -0.92),angle:-2.98rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.77),(-0.03, -0.86),(-0.44, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.32, -0.14),node1.pos,decoration:"wave",angle:-1.26rad)
cetz.draw.content((0.44, -0.10),angle:-1.26rad,[q])
cetz.draw.hobby((0.18, 0.41),(0.36, -0.06),(0.49, -0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.59, -0.51),node2.pos,decoration:"wave",angle:4.79rad)
cetz.draw.content((-0.71, -0.52),angle:4.79rad,[q])
cetz.draw.hobby((-0.62, -0.78),(-0.65, -0.51),(-0.66, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.17, 0.25),node2.pos,decoration:"arrow",angle:0.65rad)
cetz.draw.content((-0.24, 0.34),angle:0.65rad,[k[3]])
cetz.draw.hobby((0.30, 0.60),(-0.16, 0.33),(-0.56, -0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.35, 0.29),node4.pos,decoration:"coil",angle:1.01rad)
cetz.draw.content((0.45, 0.23),angle:1.01rad,[1/2 p+q+3/2 k[3]])
cetz.draw.hobby((0.18, 0.04),(0.39, 0.25),(0.50, 0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.73, -1.04),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.62, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.61rad)
cetz.draw.content((0.79, -0.74),angle:2.61rad,[-k[0]])
cetz.draw.hobby((0.57, -0.68),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.42rad)
cetz.draw.content((-0.75, -0.35),angle:0.42rad,[-q-k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.67, -0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.40rad)
cetz.draw.content((0.59, -0.03),angle:-0.40rad,[-q-k[3]])
cetz.draw.hobby((0.20, 0.07),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:-0.17rad)
cetz.draw.content((0.55, 0.53),angle:-0.17rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.18, 0.53),(0.91, 0.41),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:6.04rad)
cetz.draw.content((-0.49, 0.08),angle:6.04rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.92, 0.25),(-0.03, 0.03),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.62rad)
cetz.draw.content((0.65, 0.90),angle:0.62rad,[1/2 p+q+1/2 k[3]])
cetz.draw.hobby((0.49, 0.71),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.84rad)
cetz.draw.content((-0.52, 0.64),angle:5.84rad,[1/2 p+q+1/2 k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.05, 0.48),stroke:stroke,mark: (end: ">"))
})
let embedding6f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.68))
node(node0.pos)
let node1= (pos:(-0.43, -0.84))
node(node1.pos)
let node2= (pos:(0.59, 0.42))
node(node2.pos)
let node3= (pos:(-0.07, -0.17))
node(node3.pos)
let node4= (pos:(-0.08, 0.67))
node(node4.pos)
let node5= (pos:(-0.47, 0.10))
node(node5.pos)
edge(node0.pos,(0.09, -0.80),node1.pos,decoration:"arrow",angle:-2.98rad)
edge(node3.pos,(-0.26, -0.51),node1.pos,decoration:"wave",angle:4.22rad)
edge(node0.pos,(0.62, -0.13),node2.pos,decoration:"wave",angle:-1.57rad)
edge(node2.pos,(0.08, 0.26),node5.pos,decoration:"arrow",angle:0.30rad)
edge(node5.pos,(-0.32, 0.42),node4.pos,decoration:"coil",angle:0.98rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.48rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.15rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:0.68rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.30rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.79rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.94rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.95rad)
})
let embedding7i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.81))
node(node0.pos)
let node1= (pos:(0.58, -0.81))
node(node1.pos)
let node2= (pos:(-0.52, -0.01))
node(node2.pos)
let node3= (pos:(0.93, -0.08))
node(node3.pos)
let node4= (pos:(-0.93, 0.63))
node(node4.pos)
let node5= (pos:(-0.02, 0.34))
node(node5.pos)
edge(node1.pos,(0.04, -0.84),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.04, -0.96),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.88),(0.04, -0.90),(-0.40, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.73, -0.45),node1.pos,decoration:"wave",angle:4.27rad)
cetz.draw.content((0.63, -0.40),angle:4.27rad,[q])
cetz.draw.hobby((0.83, -0.12),(0.69, -0.41),(0.55, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.52, -0.42),node2.pos,decoration:"wave",angle:4.74rad)
cetz.draw.content((-0.64, -0.42),angle:4.74rad,[q])
cetz.draw.hobby((-0.57, -0.74),(-0.58, -0.41),(-0.58, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.25, 0.16),node5.pos,decoration:"arrow",angle:-2.54rad)
cetz.draw.content((-0.19, 0.06),angle:-2.54rad,[q+k[3]])
cetz.draw.hobby((-0.44, -0.03),(-0.23, 0.11),(-0.03, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.71, 0.32),node2.pos,decoration:"arrow",angle:2.15rad)
cetz.draw.content((-0.61, 0.39),angle:2.15rad,[k[3]])
cetz.draw.hobby((-0.84, 0.60),(-0.66, 0.35),(-0.50, 0.09),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.71, -1.02),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.57, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
cetz.draw.content((0.84, -0.80),angle:2.72rad,[-k[0]])
cetz.draw.hobby((0.70, -0.80),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.29rad)
cetz.draw.content((1.08, -0.17),angle:-1.29rad,[p-k[3]])
cetz.draw.hobby((1.01, -0.16),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:0.60rad)
cetz.draw.content((-0.44, -0.10),angle:0.60rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.33),(-0.07, 0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.81rad)
cetz.draw.content((-0.85, 0.45),angle:-1.81rad,[-p-q+k[3]])
cetz.draw.hobby((-0.92, 0.42),(-0.89, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.84, 0.15),angle:4.53rad,[-p-q+k[3]])
cetz.draw.hobby((0.88, 0.03),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.58rad)
cetz.draw.content((0.43, 0.77),angle:0.58rad,[p+q])
cetz.draw.hobby((0.03, 0.44),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.90rad)
cetz.draw.content((-1.08, 0.79),angle:4.90rad,[p+q])
cetz.draw.hobby((-1.04, 0.89),(-1.01, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding7i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.82))
node(node0.pos)
let node1= (pos:(0.47, -0.82))
node(node1.pos)
let node2= (pos:(-0.93, -0.08))
node(node2.pos)
let node3= (pos:(0.35, -0.03))
node(node3.pos)
let node4= (pos:(0.02, 0.62))
node(node4.pos)
let node5= (pos:(0.82, 0.33))
node(node5.pos)
edge(node1.pos,(-0.06, -0.85),node0.pos,decoration:"arrow",angle:3.13rad)
cetz.draw.content((-0.06, -0.97),angle:3.13rad,[q+k[0]])
cetz.draw.hobby((0.36, -0.89),(-0.06, -0.91),(-0.49, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.42, -0.44),node1.pos,decoration:"wave",angle:-1.43rad)
cetz.draw.content((0.54, -0.42),angle:-1.43rad,[q])
cetz.draw.hobby((0.43, -0.10),(0.47, -0.42),(0.52, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.74, -0.45),node2.pos,decoration:"wave",angle:-1.15rad)
cetz.draw.content((-0.63, -0.41),angle:-1.15rad,[q])
cetz.draw.hobby((-0.56, -0.72),(-0.69, -0.42),(-0.84, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.60, 0.14),node5.pos,decoration:"arrow",angle:0.66rad)
cetz.draw.content((0.68, 0.05),angle:0.66rad,[p-k[3]])
cetz.draw.hobby((0.44, -0.05),(0.63, 0.09),(0.82, 0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.16, 0.30),node3.pos,decoration:"arrow",angle:5.18rad)
cetz.draw.content((0.05, 0.24),angle:5.18rad,[p+q-k[3]])
cetz.draw.hobby((-0.01, 0.53),(0.12, 0.26),(0.26, -0.00),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
cetz.draw.content((-0.75, -1.02),angle:-2.72rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.66, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
cetz.draw.content((0.77, -0.80),angle:2.82rad,[-k[0]])
cetz.draw.hobby((0.58, -0.80),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.29rad)
cetz.draw.content((-0.85, -0.24),angle:1.29rad,[-q-k[3]])
cetz.draw.hobby((-0.91, -0.25),(-0.90, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.30rad)
cetz.draw.content((1.03, 0.03),angle:-1.30rad,[-q-k[3]])
cetz.draw.hobby((0.90, 0.24),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.54, 0.59),angle:2.86rad,[k[3]])
cetz.draw.hobby((0.13, 0.65),(0.92, 0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:1.75rad)
cetz.draw.content((-1.08, 0.11),angle:1.75rad,[k[3]])
cetz.draw.hobby((-1.04, 0.22),(-1.00, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.31rad)
cetz.draw.content((0.79, 0.69),angle:1.31rad,[p+q])
cetz.draw.hobby((0.79, 0.44),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.92rad)
cetz.draw.content((-0.53, 0.70),angle:5.92rad,[p+q])
cetz.draw.hobby((-0.93, 0.91),(-0.09, 0.60),stroke:stroke,mark: (end: ">"))
})
let embedding7i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.64))
node(node0.pos)
let node1= (pos:(0.52, -0.78))
node(node1.pos)
let node2= (pos:(-0.93, 0.49))
node(node2.pos)
let node3= (pos:(0.74, -0.05))
node(node3.pos)
let node4= (pos:(0.57, 0.66))
node(node4.pos)
let node5= (pos:(-0.48, 0.29))
node(node5.pos)
edge(node1.pos,(-0.06, -0.73),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.07, -0.85),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.83),(-0.06, -0.79),(-0.52, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.43),node1.pos,decoration:"wave",angle:-1.87rad)
cetz.draw.content((0.75, -0.46),angle:-1.87rad,[q])
cetz.draw.hobby((0.78, -0.14),(0.70, -0.44),(0.60, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.79, -0.10),node2.pos,decoration:"wave",angle:4.98rad)
cetz.draw.content((-0.91, -0.13),angle:4.98rad,[q])
cetz.draw.hobby((-0.72, -0.54),(-0.86, -0.09),(-0.97, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.67, 0.47),node5.pos,decoration:"arrow",angle:2.73rad)
cetz.draw.content((-0.63, 0.58),angle:2.73rad,[q+k[3]])
cetz.draw.hobby((-0.88, 0.56),(-0.65, 0.52),(-0.46, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.67, 0.32),node3.pos,decoration:"arrow",angle:-1.34rad)
cetz.draw.content((0.79, 0.35),angle:-1.34rad,[p+q-k[3]])
cetz.draw.hobby((0.65, 0.61),(0.73, 0.32),(0.79, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.05, 0.49),node4.pos,decoration:"coil",angle:0.34rad)
cetz.draw.content((0.01, 0.60),angle:0.34rad,[p+q])
cetz.draw.hobby((-0.40, 0.38),(0.02, 0.55),(0.45, 0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.37rad)
cetz.draw.content((-0.73, -0.90),angle:-2.37rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.65, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.81, -0.78),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.64, -0.76),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.20rad)
cetz.draw.content((0.85, 0.09),angle:0.20rad,[p-k[3]])
cetz.draw.hobby((0.83, 0.02),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.50rad)
cetz.draw.content((-0.68, 0.04),angle:0.50rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.54, 0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.81rad)
cetz.draw.content((0.71, 0.93),angle:3.81rad,[k[3]])
cetz.draw.hobby((0.61, 0.77),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.71rad)
cetz.draw.content((-1.08, 0.73),angle:1.71rad,[k[3]])
cetz.draw.hobby((-1.05, 0.89),(-1.00, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding7f0=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.63))
node(node0.pos)
let node1= (pos:(-0.61, -0.81))
node(node1.pos)
let node2= (pos:(-0.52, 0.54))
node(node2.pos)
let node3= (pos:(-0.68, -0.11))
node(node3.pos)
let node4= (pos:(0.87, 0.50))
node(node4.pos)
let node5= (pos:(0.03, 0.39))
node(node5.pos)
edge(node0.pos,(-0.14, -0.76),node1.pos,decoration:"arrow",angle:-2.95rad)
edge(node3.pos,(-0.67, -0.47),node1.pos,decoration:"wave",angle:4.82rad)
edge(node0.pos,(-0.09, -0.07),node2.pos,decoration:"wave",angle:-0.96rad)
edge(node2.pos,(-0.23, 0.55),node5.pos,decoration:"arrow",angle:2.88rad)
edge(node3.pos,(-0.32, 0.12),node5.pos,decoration:"arrow",angle:0.61rad)
edge(node5.pos,(0.46, 0.46),node4.pos,decoration:"coil",angle:0.13rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.32rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.94rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.46rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
})
let embedding7f1=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.82))
node(node0.pos)
let node1= (pos:(-0.30, -0.63))
node(node1.pos)
let node2= (pos:(0.68, -0.12))
node(node2.pos)
let node3= (pos:(0.52, 0.54))
node(node3.pos)
let node4= (pos:(-0.03, 0.39))
node(node4.pos)
let node5= (pos:(-0.87, 0.50))
node(node5.pos)
edge(node0.pos,(0.14, -0.76),node1.pos,decoration:"arrow",angle:2.94rad)
edge(node3.pos,(0.09, -0.07),node1.pos,decoration:"wave",angle:4.10rad)
edge(node0.pos,(0.67, -0.48),node2.pos,decoration:"wave",angle:-1.68rad)
edge(node4.pos,(0.23, 0.54),node3.pos,decoration:"arrow",angle:0.26rad)
edge(node4.pos,(0.32, 0.12),node2.pos,decoration:"arrow",angle:2.53rad)
edge(node5.pos,(-0.46, 0.46),node4.pos,decoration:"coil",angle:-0.13rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.49rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.83rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.77rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:4.97rad)
})
let embedding7f2=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.74))
node(node0.pos)
let node1= (pos:(-0.48, -0.69))
node(node1.pos)
let node2= (pos:(0.19, 0.08))
node(node2.pos)
let node3= (pos:(-0.12, 0.27))
node(node3.pos)
let node4= (pos:(-0.65, 0.68))
node(node4.pos)
let node5= (pos:(0.63, 0.69))
node(node5.pos)
edge(node0.pos,(0.00, -0.76),node1.pos,decoration:"arrow",angle:3.09rad)
edge(node3.pos,(-0.33, -0.22),node1.pos,decoration:"wave",angle:4.36rad)
edge(node0.pos,(0.36, -0.34),node2.pos,decoration:"wave",angle:-1.23rad)
edge(node2.pos,(0.47, 0.36),node5.pos,decoration:"arrow",angle:-2.18rad)
edge(node3.pos,(0.24, 0.55),node5.pos,decoration:"arrow",angle:0.51rad)
edge(node4.pos,(-0.38, 0.56),node3.pos,decoration:"arrow",angle:-0.60rad)
edge(node4.pos,(-0.34, 0.35),node2.pos,decoration:"arrow",angle:2.48rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.61rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.69rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.54rad)
})
let embedding8i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.82))
node(node0.pos)
let node1= (pos:(0.46, -0.74))
node(node1.pos)
let node2= (pos:(-0.77, -0.09))
node(node2.pos)
let node3= (pos:(0.23, 0.15))
node(node3.pos)
let node4= (pos:(-0.65, 0.63))
node(node4.pos)
let node5= (pos:(0.91, 0.48))
node(node5.pos)
edge(node1.pos,(-0.05, -0.81),node0.pos,decoration:"arrow",angle:-3.07rad)
cetz.draw.content((-0.05, -0.93),angle:-3.07rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.82),(-0.05, -0.87),(-0.47, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, -0.30),node1.pos,decoration:"wave",angle:-1.32rad)
cetz.draw.content((0.47, -0.27),angle:-1.32rad,[q])
cetz.draw.hobby((0.31, 0.08),(0.41, -0.28),(0.50, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.68, -0.46),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.80, -0.49),angle:4.97rad,[q])
cetz.draw.hobby((-0.66, -0.76),(-0.74, -0.47),(-0.81, -0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, 0.33),node5.pos,decoration:"arrow",angle:0.44rad)
cetz.draw.content((0.52, 0.44),angle:0.44rad,[p])
cetz.draw.hobby((0.26, 0.24),(0.54, 0.39),(0.82, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.20, 0.42),node3.pos,decoration:"arrow",angle:-0.50rad)
cetz.draw.content((-0.14, 0.52),angle:-0.50rad,[p+q])
cetz.draw.hobby((-0.53, 0.65),(-0.17, 0.47),(0.18, 0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.72, 0.28),node2.pos,decoration:"arrow",angle:1.40rad)
cetz.draw.content((-0.84, 0.30),angle:1.40rad,[k[3]])
cetz.draw.hobby((-0.72, 0.58),(-0.78, 0.28),(-0.82, -0.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.74, -1.02),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.64, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.78, -0.76),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.58, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.91rad)
cetz.draw.content((-0.93, -0.16),angle:5.91rad,[-q-k[3]])
cetz.draw.hobby((-0.93, -0.09),(-0.88, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.39rad)
cetz.draw.content((1.07, 0.26),angle:-1.39rad,[-q-k[3]])
cetz.draw.hobby((0.99, 0.39),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.40rad)
cetz.draw.content((0.84, 0.76),angle:1.40rad,[p+q+k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.48rad)
cetz.draw.content((-0.91, 0.73),angle:5.48rad,[p+q+k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.76, 0.66),stroke:stroke,mark: (end: ">"))
})
let embedding8i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.65, -0.75))
node(node0.pos)
let node1= (pos:(0.32, -0.77))
node(node1.pos)
let node2= (pos:(-0.94, 0.11))
node(node2.pos)
let node3= (pos:(-0.29, 0.03))
node(node3.pos)
let node4= (pos:(0.94, 0.63))
node(node4.pos)
let node5= (pos:(0.65, -0.03))
node(node5.pos)
edge(node1.pos,(-0.17, -0.80),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((-0.17, -0.92),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.23, -0.84),(-0.17, -0.86),(-0.56, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.01, -0.38),node1.pos,decoration:"wave",angle:5.36rad)
cetz.draw.content((-0.08, -0.45),angle:5.36rad,[q])
cetz.draw.hobby((-0.28, -0.08),(-0.04, -0.41),(0.21, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.76, -0.32),node2.pos,decoration:"wave",angle:-1.25rad)
cetz.draw.content((-0.65, -0.28),angle:-1.25rad,[q])
cetz.draw.hobby((-0.61, -0.65),(-0.71, -0.29),(-0.85, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.18, 0.03),node5.pos,decoration:"arrow",angle:-0.07rad)
cetz.draw.content((0.19, 0.15),angle:-0.07rad,[p])
cetz.draw.hobby((-0.20, 0.10),(0.18, 0.09),(0.56, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.75, 0.32),node4.pos,decoration:"coil",angle:1.16rad)
cetz.draw.content((0.64, 0.36),angle:1.16rad,[p+q+k[3]])
cetz.draw.hobby((0.60, 0.05),(0.69, 0.34),(0.84, 0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.52rad)
cetz.draw.content((-0.75, -0.97),angle:-2.52rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.99),(-0.70, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.82rad)
cetz.draw.content((0.70, -0.77),angle:2.82rad,[-k[0]])
cetz.draw.hobby((0.43, -0.75),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.43rad)
cetz.draw.content((-0.85, -0.13),angle:1.43rad,[-q-k[3]])
cetz.draw.hobby((-0.93, -0.24),(-0.89, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.71rad)
cetz.draw.content((0.90, -0.09),angle:-0.71rad,[-q-k[3]])
cetz.draw.hobby((0.76, -0.05),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.36rad)
cetz.draw.content((1.09, 0.51),angle:-1.36rad,[p+q])
cetz.draw.hobby((1.02, 0.54),(1.04, 0.44),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.69, 0.07),angle:5.88rad,[p+q])
cetz.draw.hobby((-0.93, 0.24),(-0.41, 0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.85, 0.83),angle:4.54rad,[k[3]])
cetz.draw.hobby((0.89, 0.74),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.64rad)
cetz.draw.content((-1.09, 0.55),angle:1.64rad,[k[3]])
cetz.draw.hobby((-1.05, 0.90),(-1.01, 0.20),stroke:stroke,mark: (end: ">"))
})
let embedding8i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.60))
node(node1.pos)
let node2= (pos:(-0.53, 0.06))
node(node2.pos)
let node3= (pos:(0.74, 0.50))
node(node3.pos)
let node4= (pos:(-0.05, 0.55))
node(node4.pos)
let node5= (pos:(-0.74, 0.75))
node(node5.pos)
edge(node1.pos,(0.06, -0.69),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.07, -0.81),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.68),(0.06, -0.75),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, -0.05),node1.pos,decoration:"wave",angle:-1.70rad)
cetz.draw.content((0.82, -0.07),angle:-1.70rad,[q])
cetz.draw.hobby((0.80, 0.39),(0.76, -0.06),(0.69, -0.50),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.53, -0.35),node2.pos,decoration:"wave",angle:4.75rad)
cetz.draw.content((-0.65, -0.35),angle:4.75rad,[q])
cetz.draw.hobby((-0.57, -0.66),(-0.60, -0.34),(-0.59, -0.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.70, 0.40),node5.pos,decoration:"arrow",angle:5.00rad)
cetz.draw.content((-0.81, 0.36),angle:5.00rad,[q+k[3]])
cetz.draw.hobby((-0.62, 0.09),(-0.75, 0.37),(-0.80, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.36, 0.55),node3.pos,decoration:"arrow",angle:-0.06rad)
cetz.draw.content((0.37, 0.67),angle:-0.06rad,[p+q])
cetz.draw.hobby((0.03, 0.62),(0.35, 0.61),(0.67, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.26, 0.28),node2.pos,decoration:"arrow",angle:0.79rad)
cetz.draw.content((-0.17, 0.20),angle:0.79rad,[k[3]])
cetz.draw.hobby((-0.03, 0.46),(-0.22, 0.24),(-0.44, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.38, 0.72),node4.pos,decoration:"coil",angle:-0.27rad)
cetz.draw.content((-0.35, 0.83),angle:-0.27rad,[p+q+k[3]])
cetz.draw.hobby((-0.66, 0.81),(-0.36, 0.77),(-0.07, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.70, -0.97),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.56, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.89, -0.72),angle:2.35rad,[-k[0]])
cetz.draw.hobby((0.72, -0.63),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.09rad)
cetz.draw.content((0.77, 0.81),angle:1.09rad,[p])
cetz.draw.hobby((0.74, 0.62),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.53rad)
cetz.draw.content((-0.95, 0.79),angle:5.53rad,[p])
cetz.draw.hobby((-0.97, 0.89),(-0.85, 0.78),stroke:stroke,mark: (end: ">"))
})
let embedding8f0=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.74))
node(node0.pos)
let node1= (pos:(-0.60, -0.60))
node(node1.pos)
let node2= (pos:(0.55, 0.05))
node(node2.pos)
let node3= (pos:(-0.74, 0.50))
node(node3.pos)
let node4= (pos:(0.75, 0.74))
node(node4.pos)
let node5= (pos:(0.06, 0.54))
node(node5.pos)
edge(node0.pos,(-0.06, -0.69),node1.pos,decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.69, -0.06),node1.pos,decoration:"wave",angle:4.83rad)
edge(node0.pos,(0.55, -0.35),node2.pos,decoration:"wave",angle:-1.63rad)
edge(node2.pos,(0.28, 0.27),node5.pos,decoration:"arrow",angle:5.50rad)
edge(node3.pos,(-0.35, 0.54),node5.pos,decoration:"arrow",angle:0.05rad)
edge(node4.pos,(0.71, 0.39),node2.pos,decoration:"arrow",angle:1.30rad)
edge(node5.pos,(0.39, 0.70),node4.pos,decoration:"coil",angle:0.28rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.80rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.20rad)
})
let embedding8f1=cetz.canvas(length:50%,{
let node0= (pos:(0.58, -0.81))
node(node0.pos)
let node1= (pos:(-0.46, -0.74))
node(node1.pos)
let node2= (pos:(0.77, -0.09))
node(node2.pos)
let node3= (pos:(-0.23, 0.16))
node(node3.pos)
let node4= (pos:(-0.91, 0.48))
node(node4.pos)
let node5= (pos:(0.65, 0.63))
node(node5.pos)
edge(node0.pos,(0.05, -0.80),node1.pos,decoration:"arrow",angle:3.07rad)
edge(node3.pos,(-0.36, -0.30),node1.pos,decoration:"wave",angle:4.46rad)
edge(node0.pos,(0.68, -0.46),node2.pos,decoration:"wave",angle:-1.83rad)
edge(node2.pos,(0.72, 0.29),node5.pos,decoration:"arrow",angle:-1.40rad)
edge(node3.pos,(0.20, 0.42),node5.pos,decoration:"arrow",angle:0.50rad)
edge(node4.pos,(-0.57, 0.34),node3.pos,decoration:"arrow",angle:-0.44rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:1.39rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.36rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.80rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.88rad)
})
let embedding8f2=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.73))
node(node0.pos)
let node1= (pos:(-0.32, -0.70))
node(node1.pos)
let node2= (pos:(0.94, 0.11))
node(node2.pos)
let node3= (pos:(0.29, 0.21))
node(node3.pos)
let node4= (pos:(-0.62, 0.69))
node(node4.pos)
let node5= (pos:(-0.95, 0.06))
node(node5.pos)
edge(node0.pos,(0.15, -0.75),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node3.pos,(-0.02, -0.24),node1.pos,decoration:"wave",angle:4.12rad)
edge(node0.pos,(0.76, -0.31),node2.pos,decoration:"wave",angle:4.37rad)
edge(node4.pos,(-0.16, 0.47),node3.pos,decoration:"arrow",angle:-0.48rad)
edge(node5.pos,(-0.75, 0.37),node4.pos,decoration:"coil",angle:1.09rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.50rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.71rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.70rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:0.17rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:4.89rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.60rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.50rad)
})
let embedding9i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.48, -0.76))
node(node0.pos)
let node1= (pos:(0.47, -0.84))
node(node1.pos)
let node2= (pos:(-0.15, 0.16))
node(node2.pos)
let node3= (pos:(0.12, -0.15))
node(node3.pos)
let node4= (pos:(0.77, 0.62))
node(node4.pos)
let node5= (pos:(-0.80, 0.36))
node(node5.pos)
edge(node1.pos,(-0.01, -0.85),node0.pos,decoration:"arrow",angle:3.06rad)
cetz.draw.content((-0.02, -0.97),angle:3.06rad,[q+k[0]])
cetz.draw.hobby((0.38, -0.91),(-0.01, -0.91),(-0.40, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.32, -0.49),node1.pos,decoration:"wave",angle:-1.10rad)
cetz.draw.content((0.42, -0.44),angle:-1.10rad,[q])
cetz.draw.hobby((0.21, -0.18),(0.37, -0.46),(0.50, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.35, -0.31),node2.pos,decoration:"wave",angle:4.37rad)
cetz.draw.content((-0.46, -0.27),angle:4.37rad,[q])
cetz.draw.hobby((-0.52, -0.65),(-0.40, -0.27),(-0.25, 0.10),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.48, 0.29),node5.pos,decoration:"arrow",angle:-0.29rad)
cetz.draw.content((-0.44, 0.41),angle:-0.29rad,[q+k[3]])
cetz.draw.hobby((-0.19, 0.25),(-0.45, 0.35),(-0.72, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.32, 0.42),node2.pos,decoration:"arrow",angle:0.46rad)
cetz.draw.content((0.26, 0.53),angle:0.46rad,[k[3]])
cetz.draw.hobby((0.65, 0.64),(0.27, 0.47),(-0.09, 0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.69, -0.99),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.55, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
cetz.draw.content((0.77, -0.80),angle:2.85rad,[-k[0]])
cetz.draw.hobby((0.58, -0.81),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.21rad)
cetz.draw.content((0.58, -0.12),angle:-0.21rad,[p+k[3]])
cetz.draw.hobby((0.23, -0.11),(0.91, -0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:1.29rad)
cetz.draw.content((-0.78, -0.02),angle:1.29rad,[p+k[3]])
cetz.draw.hobby((-0.91, -0.25),(-0.77, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.90rad)
cetz.draw.content((0.98, 0.55),angle:-0.90rad,[p+q+k[3]])
cetz.draw.hobby((0.88, 0.58),(0.99, 0.45),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.88rad)
cetz.draw.content((-0.49, -0.02),angle:5.88rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.24),(0.00, -0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.88rad)
cetz.draw.content((-1.01, 0.64),angle:1.88rad,[-p-q-2 k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.89, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.17rad)
cetz.draw.content((0.78, 0.87),angle:4.17rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.77, 0.74),(0.90, 0.95),stroke:stroke,mark: (end: ">"))
})
let embedding9i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.84))
node(node0.pos)
let node1= (pos:(0.48, -0.76))
node(node1.pos)
let node2= (pos:(-0.12, -0.15))
node(node2.pos)
let node3= (pos:(0.15, 0.16))
node(node3.pos)
let node4= (pos:(-0.77, 0.62))
node(node4.pos)
let node5= (pos:(0.80, 0.36))
node(node5.pos)
edge(node1.pos,(0.01, -0.85),node0.pos,decoration:"arrow",angle:-3.06rad)
cetz.draw.content((0.02, -0.97),angle:-3.06rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.85),(0.01, -0.91),(-0.38, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, -0.31),node1.pos,decoration:"wave",angle:-1.23rad)
cetz.draw.content((0.46, -0.27),angle:-1.23rad,[q])
cetz.draw.hobby((0.25, 0.10),(0.40, -0.27),(0.52, -0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.32, -0.49),node2.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.42, -0.44),angle:4.24rad,[q])
cetz.draw.hobby((-0.50, -0.74),(-0.37, -0.46),(-0.21, -0.18),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.48, 0.29),node5.pos,decoration:"arrow",angle:0.30rad)
cetz.draw.content((0.44, 0.41),angle:0.30rad,[p+k[3]])
cetz.draw.hobby((0.19, 0.24),(0.45, 0.35),(0.72, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.32, 0.42),node3.pos,decoration:"arrow",angle:-0.46rad)
cetz.draw.content((-0.26, 0.53),angle:-0.46rad,[p+q+k[3]])
cetz.draw.hobby((-0.65, 0.64),(-0.27, 0.46),(0.09, 0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.70, -1.03),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.55, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.79, -0.77),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.60, -0.75),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.21rad)
cetz.draw.content((-0.53, -0.36),angle:0.21rad,[-q-k[3]])
cetz.draw.hobby((-0.89, -0.37),(-0.20, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.29rad)
cetz.draw.content((1.01, 0.05),angle:-1.29rad,[-q-k[3]])
cetz.draw.hobby((0.88, 0.28),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:0.90rad)
cetz.draw.content((-0.79, 0.40),angle:0.90rad,[-k[3]])
cetz.draw.hobby((-0.89, 0.37),(-0.79, 0.51),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.41rad)
cetz.draw.content((0.39, 0.20),angle:0.41rad,[-k[3]])
cetz.draw.hobby((-0.05, -0.05),(0.88, 0.35),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.26rad)
cetz.draw.content((0.78, 0.72),angle:1.26rad,[p+q+2 k[3]])
cetz.draw.hobby((0.77, 0.47),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.26rad)
cetz.draw.content((-0.99, 0.75),angle:5.26rad,[p+q+2 k[3]])
cetz.draw.hobby((-1.00, 0.88),(-0.87, 0.68),stroke:stroke,mark: (end: ">"))
})
let embedding9i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.76))
node(node0.pos)
let node1= (pos:(0.33, -0.65))
node(node1.pos)
let node2= (pos:(-0.55, 0.04))
node(node2.pos)
let node3= (pos:(-0.34, 0.47))
node(node3.pos)
let node4= (pos:(0.54, 0.74))
node(node4.pos)
let node5= (pos:(0.63, 0.22))
node(node5.pos)
edge(node1.pos,(-0.12, -0.74),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((-0.11, -0.86),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.26, -0.73),(-0.12, -0.80),(-0.50, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.00, -0.10),node1.pos,decoration:"wave",angle:5.25rad)
cetz.draw.content((-0.10, -0.16),angle:5.25rad,[q])
cetz.draw.hobby((-0.33, 0.33),(-0.06, -0.12),(0.21, -0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.59, -0.37),node2.pos,decoration:"wave",angle:4.66rad)
cetz.draw.content((-0.71, -0.36),angle:4.66rad,[q])
cetz.draw.hobby((-0.66, -0.68),(-0.65, -0.36),(-0.62, -0.04),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, 0.34),node5.pos,decoration:"arrow",angle:-0.25rad)
cetz.draw.content((0.19, 0.46),angle:-0.25rad,[p+k[3]])
cetz.draw.hobby((-0.23, 0.50),(0.16, 0.40),(0.55, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.00, 0.40),node2.pos,decoration:"arrow",angle:0.57rad)
cetz.draw.content((-0.07, 0.50),angle:0.57rad,[k[3]])
cetz.draw.hobby((0.39, 0.72),(-0.05, 0.44),(-0.48, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, 0.50),node4.pos,decoration:"coil",angle:1.76rad)
cetz.draw.content((0.78, 0.52),angle:1.76rad,[p+q+2 k[3]])
cetz.draw.hobby((0.71, 0.25),(0.72, 0.50),(0.62, 0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((-0.73, -0.98),angle:-2.60rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.00),(-0.65, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.72, -0.72),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.45, -0.64),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:0.08rad)
cetz.draw.content((-0.77, -0.10),angle:0.08rad,[-q-k[3]])
cetz.draw.hobby((-0.90, -0.05),(-0.65, -0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.53rad)
cetz.draw.content((0.88, 0.21),angle:-0.53rad,[-q-k[3]])
cetz.draw.hobby((0.75, 0.22),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.52rad)
cetz.draw.content((0.71, 0.97),angle:0.52rad,[p+q+k[3]])
cetz.draw.hobby((0.59, 0.84),(0.88, 1.00),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.61rad)
cetz.draw.content((-0.75, 0.64),angle:5.61rad,[p+q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.46, 0.49),stroke:stroke,mark: (end: ">"))
})
let embedding9i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.33, -0.64))
node(node0.pos)
let node1= (pos:(0.59, -0.75))
node(node1.pos)
let node2= (pos:(0.34, 0.47))
node(node2.pos)
let node3= (pos:(0.55, 0.03))
node(node3.pos)
let node4= (pos:(-0.54, 0.73))
node(node4.pos)
let node5= (pos:(-0.63, 0.22))
node(node5.pos)
edge(node1.pos,(0.12, -0.74),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((0.11, -0.85),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.82),(0.12, -0.79),(-0.26, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.59, -0.37),node1.pos,decoration:"wave",angle:-1.53rad)
cetz.draw.content((0.71, -0.36),angle:-1.53rad,[q])
cetz.draw.hobby((0.62, -0.04),(0.65, -0.36),(0.65, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.00, -0.10),node2.pos,decoration:"wave",angle:-2.11rad)
cetz.draw.content((0.10, -0.16),angle:-2.11rad,[q])
cetz.draw.hobby((-0.21, -0.56),(0.06, -0.12),(0.33, 0.33),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.16, 0.35),node5.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((-0.19, 0.46),angle:0.26rad,[q+k[3]])
cetz.draw.hobby((0.23, 0.51),(-0.16, 0.41),(-0.55, 0.30),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.40),node3.pos,decoration:"arrow",angle:-0.57rad)
cetz.draw.content((0.07, 0.50),angle:-0.57rad,[p+q+k[3]])
cetz.draw.hobby((-0.39, 0.72),(0.05, 0.44),(0.48, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.66, 0.49),node4.pos,decoration:"coil",angle:1.38rad)
cetz.draw.content((-0.78, 0.52),angle:1.38rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.71, 0.25),(-0.72, 0.50),(-0.62, 0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.61, -0.93),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.39, -0.74),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.60rad)
cetz.draw.content((0.86, -0.77),angle:2.60rad,[-k[0]])
cetz.draw.hobby((0.71, -0.75),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:-0.08rad)
cetz.draw.content((0.78, 0.14),angle:-0.08rad,[p+k[3]])
cetz.draw.hobby((0.66, 0.09),(0.90, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.53rad)
cetz.draw.content((-0.75, 0.00),angle:0.53rad,[p+k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.69, 0.11),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.76rad)
cetz.draw.content((-0.83, 0.76),angle:5.76rad,[-k[3]])
cetz.draw.hobby((-0.94, 0.90),(-0.65, 0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.60, 0.83),angle:0.68rad,[-k[3]])
cetz.draw.hobby((0.38, 0.58),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding9f0=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.66))
node(node0.pos)
let node1= (pos:(-0.52, -0.83))
node(node1.pos)
let node2= (pos:(0.76, 0.44))
node(node2.pos)
let node3= (pos:(-0.69, -0.16))
node(node3.pos)
let node4= (pos:(-0.02, 0.60))
node(node4.pos)
let node5= (pos:(0.02, 0.16))
node(node5.pos)
edge(node0.pos,(0.05, -0.78),node1.pos,decoration:"arrow",angle:-2.99rad)
edge(node3.pos,(-0.63, -0.51),node1.pos,decoration:"wave",angle:4.97rad)
edge(node0.pos,(0.70, -0.13),node2.pos,decoration:"wave",angle:-1.72rad)
edge(node2.pos,(0.41, 0.30),node5.pos,decoration:"arrow",angle:0.36rad)
edge(node3.pos,(-0.35, -0.01),node5.pos,decoration:"arrow",angle:0.43rad)
edge(node5.pos,(-0.11, 0.39),node4.pos,decoration:"coil",angle:1.60rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.45rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-0.53rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.79rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.90rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.17rad)
})
let embedding10i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.32, -0.80))
node(node0.pos)
let node1= (pos:(0.68, -0.64))
node(node1.pos)
let node2= (pos:(0.28, -0.17))
node(node2.pos)
let node3= (pos:(0.92, 0.53))
node(node3.pos)
let node4= (pos:(-0.60, 0.59))
node(node4.pos)
let node5= (pos:(-0.96, 0.04))
node(node5.pos)
edge(node1.pos,(0.19, -0.77),node0.pos,decoration:"arrow",angle:-2.98rad)
cetz.draw.content((0.21, -0.89),angle:-2.98rad,[q+k[0]])
cetz.draw.hobby((0.61, -0.73),(0.20, -0.83),(-0.22, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.82, -0.05),node1.pos,decoration:"wave",angle:-1.77rad)
cetz.draw.content((0.94, -0.08),angle:-1.77rad,[q])
cetz.draw.hobby((0.96, 0.41),(0.88, -0.07),(0.77, -0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.48),node2.pos,decoration:"wave",angle:3.94rad)
cetz.draw.content((-0.13, -0.39),angle:3.94rad,[q])
cetz.draw.hobby((-0.31, -0.69),(-0.08, -0.43),(0.18, -0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.15, 0.23),node2.pos,decoration:"arrow",angle:2.43rad)
cetz.draw.content((-0.07, 0.32),angle:2.43rad,[p])
cetz.draw.hobby((-0.47, 0.57),(-0.11, 0.27),(0.24, -0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.74, 0.31),node4.pos,decoration:"coil",angle:0.99rad)
cetz.draw.content((-0.64, 0.24),angle:0.99rad,[p+q+k[2]])
cetz.draw.hobby((-0.87, 0.05),(-0.70, 0.26),(-0.57, 0.51),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
cetz.draw.content((-0.63, -1.01),angle:-2.85rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.40, -0.88),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.29rad)
cetz.draw.content((0.93, -0.74),angle:2.29rad,[-k[0]])
cetz.draw.hobby((0.80, -0.67),(0.98, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.92rad)
cetz.draw.content((0.67, -0.14),angle:2.92rad,[p+q])
cetz.draw.hobby((0.39, -0.14),(0.92, -0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.67rad)
cetz.draw.content((-0.86, -0.16),angle:-1.67rad,[p+q])
cetz.draw.hobby((-0.93, -0.24),(-0.91, -0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:-1.19rad)
cetz.draw.content((1.07, 0.48),angle:-1.19rad,[k[2]])
cetz.draw.hobby((1.01, 0.46),(1.02, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:4.84rad)
cetz.draw.content((-1.10, 0.17),angle:4.84rad,[k[2]])
cetz.draw.hobby((-1.05, 0.23),(-1.03, 0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.35rad)
cetz.draw.content((-0.89, 0.71),angle:2.35rad,[-q-k[2]])
cetz.draw.hobby((-0.97, 0.89),(-0.71, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.84, 0.79),angle:4.54rad,[-q-k[2]])
cetz.draw.hobby((0.88, 0.64),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding10i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.60))
node(node0.pos)
let node1= (pos:(0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.74, 0.51))
node(node2.pos)
let node3= (pos:(0.54, 0.06))
node(node3.pos)
let node4= (pos:(0.74, 0.75))
node(node4.pos)
let node5= (pos:(0.06, 0.55))
node(node5.pos)
edge(node1.pos,(-0.06, -0.69),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.07, -0.81),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.50, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, -0.35),node1.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((0.66, -0.35),angle:-1.62rad,[q])
cetz.draw.hobby((0.61, -0.01),(0.60, -0.34),(0.57, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.69, -0.05),node2.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.81, -0.07),angle:4.83rad,[q])
cetz.draw.hobby((-0.68, -0.50),(-0.75, -0.06),(-0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.35, 0.55),node5.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.36, 0.67),angle:3.20rad,[p+q])
cetz.draw.hobby((-0.67, 0.58),(-0.35, 0.61),(-0.02, 0.62),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.27, 0.28),node5.pos,decoration:"arrow",angle:2.35rad)
cetz.draw.content((0.19, 0.20),angle:2.35rad,[k[2]])
cetz.draw.hobby((0.45, 0.06),(0.23, 0.24),(0.05, 0.46),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.40),node3.pos,decoration:"arrow",angle:-1.85rad)
cetz.draw.content((0.82, 0.36),angle:-1.85rad,[q+k[2]])
cetz.draw.hobby((0.81, 0.68),(0.76, 0.37),(0.64, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.72),node4.pos,decoration:"coil",angle:0.28rad)
cetz.draw.content((0.35, 0.83),angle:0.28rad,[p+q+k[2]])
cetz.draw.hobby((0.08, 0.65),(0.36, 0.77),(0.67, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.35rad)
cetz.draw.content((-0.72, -0.88),angle:-2.35rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.63, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.81, -0.76),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.62, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.90rad)
cetz.draw.content((0.79, 0.96),angle:3.90rad,[p])
cetz.draw.hobby((0.77, 0.87),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.06rad)
cetz.draw.content((-0.97, 0.70),angle:2.06rad,[p])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding10i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.46, -0.74))
node(node0.pos)
let node1= (pos:(0.57, -0.81))
node(node1.pos)
let node2= (pos:(-0.23, 0.16))
node(node2.pos)
let node3= (pos:(0.77, -0.09))
node(node3.pos)
let node4= (pos:(-0.91, 0.48))
node(node4.pos)
let node5= (pos:(0.65, 0.64))
node(node5.pos)
edge(node1.pos,(0.05, -0.80),node0.pos,decoration:"arrow",angle:3.07rad)
cetz.draw.content((0.04, -0.92),angle:3.07rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.87),(0.05, -0.86),(-0.37, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, -0.46),node1.pos,decoration:"wave",angle:-1.83rad)
cetz.draw.content((0.80, -0.49),angle:-1.83rad,[q])
cetz.draw.hobby((0.81, -0.17),(0.74, -0.47),(0.66, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.36, -0.30),node2.pos,decoration:"wave",angle:4.46rad)
cetz.draw.content((-0.47, -0.27),angle:4.46rad,[q])
cetz.draw.hobby((-0.50, -0.64),(-0.41, -0.27),(-0.31, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.20, 0.42),node5.pos,decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.14, 0.53),angle:3.64rad,[p+q])
cetz.draw.hobby((-0.18, 0.27),(0.17, 0.47),(0.53, 0.65),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, 0.29),node5.pos,decoration:"arrow",angle:1.74rad)
cetz.draw.content((0.84, 0.31),angle:1.74rad,[k[2]])
cetz.draw.hobby((0.82, -0.01),(0.78, 0.29),(0.72, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.57, 0.34),node2.pos,decoration:"arrow",angle:2.70rad)
cetz.draw.content((-0.52, 0.45),angle:2.70rad,[p])
cetz.draw.hobby((-0.82, 0.51),(-0.54, 0.39),(-0.26, 0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.68, -0.98),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.53, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
cetz.draw.content((0.84, -0.80),angle:2.72rad,[-k[0]])
cetz.draw.hobby((0.69, -0.80),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.75rad)
cetz.draw.content((-0.84, 0.22),angle:-1.75rad,[-q-k[2]])
cetz.draw.hobby((-0.92, 0.09),(-0.87, 0.37),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.50rad)
cetz.draw.content((0.84, 0.07),angle:3.50rad,[-q-k[2]])
cetz.draw.hobby((0.84, 0.00),(0.89, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.80rad)
cetz.draw.content((0.74, 0.90),angle:0.80rad,[p+q+k[2]])
cetz.draw.hobby((0.67, 0.75),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.88rad)
cetz.draw.content((-1.07, 0.72),angle:4.88rad,[p+q+k[2]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.57),stroke:stroke,mark: (end: ">"))
})
let embedding10f0=cetz.canvas(length:50%,{
let node0= (pos:(0.46, -0.74))
node(node0.pos)
let node1= (pos:(-0.58, -0.81))
node(node1.pos)
let node2= (pos:(0.23, 0.16))
node(node2.pos)
let node3= (pos:(-0.77, -0.09))
node(node3.pos)
let node4= (pos:(-0.65, 0.64))
node(node4.pos)
let node5= (pos:(0.91, 0.48))
node(node5.pos)
edge(node0.pos,(-0.06, -0.80),node1.pos,decoration:"arrow",angle:-3.07rad)
edge(node3.pos,(-0.68, -0.46),node1.pos,decoration:"wave",angle:4.97rad)
edge(node0.pos,(0.36, -0.29),node2.pos,decoration:"wave",angle:-1.32rad)
edge(node2.pos,(0.57, 0.34),node5.pos,decoration:"arrow",angle:3.58rad)
edge(node4.pos,(-0.72, 0.29),node3.pos,decoration:"arrow",angle:4.54rad)
edge(node4.pos,(-0.20, 0.42),node2.pos,decoration:"arrow",angle:2.64rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.78rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:1.75rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.40rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.49rad)
})
let embedding10f1=cetz.canvas(length:50%,{
let node0= (pos:(0.61, -0.60))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(0.74, 0.51))
node(node2.pos)
let node3= (pos:(-0.54, 0.07))
node(node3.pos)
let node4= (pos:(-0.05, 0.56))
node(node4.pos)
let node5= (pos:(-0.74, 0.75))
node(node5.pos)
edge(node0.pos,(0.06, -0.69),node1.pos,decoration:"arrow",angle:-3.02rad)
edge(node3.pos,(-0.54, -0.34),node1.pos,decoration:"wave",angle:4.76rad)
edge(node0.pos,(0.70, -0.05),node2.pos,decoration:"wave",angle:-1.69rad)
edge(node3.pos,(-0.70, 0.40),node5.pos,decoration:"arrow",angle:1.85rad)
edge(node4.pos,(-0.27, 0.29),node3.pos,decoration:"arrow",angle:-2.35rad)
edge(node4.pos,(0.36, 0.55),node2.pos,decoration:"arrow",angle:3.07rad)
edge(node5.pos,(-0.38, 0.72),node4.pos,decoration:"coil",angle:-0.27rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.35rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:4.23rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:2.38rad)
})
let embedding10f2=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.66))
node(node0.pos)
let node1= (pos:(-0.63, -0.79))
node(node1.pos)
let node2= (pos:(-0.31, 0.42))
node(node2.pos)
let node3= (pos:(-0.95, -0.07))
node(node3.pos)
let node4= (pos:(0.95, 0.64))
node(node4.pos)
let node5= (pos:(0.63, 0.05))
node(node5.pos)
edge(node0.pos,(-0.15, -0.75),node1.pos,decoration:"arrow",angle:-3.00rad)
edge(node3.pos,(-0.77, -0.44),node1.pos,decoration:"wave",angle:-1.16rad)
edge(node0.pos,(-0.01, -0.13),node2.pos,decoration:"wave",angle:5.23rad)
edge(node2.pos,(0.16, 0.26),node5.pos,decoration:"arrow",angle:2.77rad)
edge(node5.pos,(0.75, 0.37),node4.pos,decoration:"coil",angle:1.07rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.62rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.77rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.33rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.42rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.84rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.58rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.44rad)
})
let embedding11i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, 0.02))
node(node0.pos)
let node1= (pos:(0.52, 0.04))
node(node1.pos)
let node2= (pos:(-0.46, -0.62))
node(node2.pos)
let node3= (pos:(0.59, -0.56))
node(node3.pos)
let node4= (pos:(0.06, -0.51))
node(node4.pos)
let node5= (pos:(0.09, -1.00))
node(node5.pos)
edge(node1.pos,(-0.00, 0.08),node0.pos,decoration:"arrow",angle:3.17rad)
cetz.draw.content((-0.01, 0.20),angle:3.17rad,[q+k[0]])
cetz.draw.hobby((0.43, 0.12),(-0.00, 0.14),(-0.43, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.62, -0.25),node1.pos,decoration:"wave",angle:1.68rad)
cetz.draw.content((0.74, -0.24),angle:1.68rad,[q])
cetz.draw.hobby((0.67, -0.52),(0.68, -0.25),(0.61, 0.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.56, -0.29),node2.pos,decoration:"wave",angle:1.65rad)
cetz.draw.content((-0.67, -0.30),angle:1.65rad,[q])
cetz.draw.hobby((-0.60, -0.03),(-0.61, -0.31),(-0.54, -0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.25, -0.90),node5.pos,decoration:"arrow",angle:2.54rad)
cetz.draw.content((-0.31, -1.00),angle:2.54rad,[q+k[3]])
cetz.draw.hobby((-0.49, -0.71),(-0.28, -0.95),(0.01, -1.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.42, -0.87),node5.pos,decoration:"arrow",angle:-2.43rad)
cetz.draw.content((0.50, -0.96),angle:-2.43rad,[k[2]])
cetz.draw.hobby((0.63, -0.65),(0.46, -0.92),(0.17, -1.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.34, -0.49),node3.pos,decoration:"arrow",angle:-0.11rad)
cetz.draw.content((0.35, -0.37),angle:-0.11rad,[q+k[2]])
cetz.draw.hobby((0.10, -0.44),(0.34, -0.43),(0.56, -0.48),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.22, -0.50),node2.pos,decoration:"arrow",angle:0.22rad)
cetz.draw.content((-0.24, -0.39),angle:0.22rad,[k[3]])
cetz.draw.hobby((0.02, -0.44),(-0.22, -0.44),(-0.45, -0.54),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.08, -0.77),node4.pos,decoration:"coil",angle:1.63rad)
cetz.draw.content((0.20, -0.76),angle:1.63rad,[q+k[2]+k[3]])
cetz.draw.hobby((0.14, -0.95),(0.13, -0.75),(0.12, -0.56),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.95, 0.00),decoration:"arrow",angle:-3.10rad)
cetz.draw.content((-0.73, -0.11),angle:-3.10rad,[-k[0]])
cetz.draw.hobby((-0.85, -0.06),(-0.62, -0.04),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.95, 0.00),decoration:"arrow",angle:3.04rad)
cetz.draw.content((0.75, 0.14),angle:3.04rad,[-k[0]])
cetz.draw.hobby((0.63, 0.09),(0.86, 0.07),stroke:stroke,mark: (end: ">"))
})
let embedding11f0=cetz.canvas(length:50%,{
let node0= (pos:(0.53, -0.85))
node(node0.pos)
let node1= (pos:(-0.56, -0.80))
node(node1.pos)
let node2= (pos:(0.78, -0.18))
node(node2.pos)
let node3= (pos:(-0.82, 0.01))
node(node3.pos)
let node4= (pos:(0.94, 0.60))
node(node4.pos)
let node5= (pos:(-0.88, 0.48))
node(node5.pos)
edge(node0.pos,(-0.02, -0.85),node1.pos,decoration:"arrow",angle:3.09rad)
edge(node3.pos,(-0.69, -0.40),node1.pos,decoration:"wave",angle:5.02rad)
edge(node0.pos,(0.65, -0.53),node2.pos,decoration:"wave",angle:4.35rad)
edge(node3.pos,(-0.72, 0.26),node5.pos,decoration:"arrow",angle:1.72rad)
edge(node4.pos,(0.81, 0.20),node2.pos,decoration:"arrow",angle:1.38rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.54rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.71rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.35rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.23rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.79rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.56rad)
})
let embedding11f1=cetz.canvas(length:50%,{
let node0= (pos:(0.44, -0.70))
node(node0.pos)
let node1= (pos:(-0.57, -0.60))
node(node1.pos)
let node2= (pos:(0.51, 0.02))
node(node2.pos)
let node3= (pos:(-0.85, 0.31))
node(node3.pos)
let node4= (pos:(0.78, 0.66))
node(node4.pos)
let node5= (pos:(1.00, 0.22))
node(node5.pos)
edge(node0.pos,(-0.07, -0.66),node1.pos,decoration:"arrow",angle:3.04rad)
edge(node3.pos,(-0.70, -0.16),node1.pos,decoration:"wave",angle:-1.27rad)
edge(node0.pos,(0.47, -0.35),node2.pos,decoration:"wave",angle:4.61rad)
edge(node2.pos,(0.74, 0.13),node5.pos,decoration:"arrow",angle:3.53rad)
edge(node4.pos,(0.58, 0.38),node2.pos,decoration:"arrow",angle:1.16rad)
edge(node5.pos,(0.98, 0.49),node4.pos,decoration:"coil",angle:2.04rad)
edge(node1.pos,(-0.91, -0.91),decoration:"arrow",angle:-2.40rad)
edge(node0.pos,(0.91, -0.91),decoration:"arrow",angle:2.72rad)
edge(node3.pos,(-0.91, 0.00),decoration:"arrow",angle:-1.76rad)
edge(node5.pos,(0.91, 0.00),decoration:"arrow",angle:1.19rad)
edge(node4.pos,(0.91, 0.91),decoration:"arrow",angle:1.10rad)
edge(node3.pos,(-0.91, 0.91),decoration:"arrow",angle:4.81rad)
})
let embedding11f2=cetz.canvas(length:50%,{
let node0= (pos:(0.56, -0.79))
node(node0.pos)
let node1= (pos:(-0.53, -0.85))
node(node1.pos)
let node2= (pos:(0.81, 0.01))
node(node2.pos)
let node3= (pos:(-0.78, -0.18))
node(node3.pos)
let node4= (pos:(-0.94, 0.60))
node(node4.pos)
let node5= (pos:(0.89, 0.48))
node(node5.pos)
edge(node0.pos,(0.02, -0.84),node1.pos,decoration:"arrow",angle:-3.09rad)
edge(node3.pos,(-0.65, -0.52),node1.pos,decoration:"wave",angle:-1.21rad)
edge(node0.pos,(0.69, -0.40),node2.pos,decoration:"wave",angle:-1.88rad)
edge(node2.pos,(0.73, 0.27),node5.pos,decoration:"arrow",angle:4.54rad)
edge(node4.pos,(-0.81, 0.20),node3.pos,decoration:"arrow",angle:-1.38rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.53rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:1.70rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:1.35rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.04rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.36rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.86rad)
})
let embedding11f3=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.60))
node(node0.pos)
let node1= (pos:(-0.44, -0.70))
node(node1.pos)
let node2= (pos:(0.85, 0.31))
node(node2.pos)
let node3= (pos:(-0.51, 0.02))
node(node3.pos)
let node4= (pos:(-0.78, 0.66))
node(node4.pos)
let node5= (pos:(-1.00, 0.22))
node(node5.pos)
edge(node0.pos,(0.07, -0.67),node1.pos,decoration:"arrow",angle:-3.04rad)
edge(node3.pos,(-0.47, -0.35),node1.pos,decoration:"wave",angle:-1.47rad)
edge(node0.pos,(0.70, -0.16),node2.pos,decoration:"wave",angle:4.41rad)
edge(node3.pos,(-0.74, 0.13),node5.pos,decoration:"arrow",angle:2.75rad)
edge(node4.pos,(-0.58, 0.38),node3.pos,decoration:"arrow",angle:-1.16rad)
edge(node5.pos,(-0.98, 0.49),node4.pos,decoration:"coil",angle:1.10rad)
edge(node1.pos,(-0.91, -0.91),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(0.91, -0.91),decoration:"arrow",angle:2.41rad)
edge(node2.pos,(0.91, 0.00),decoration:"arrow",angle:1.76rad)
edge(node5.pos,(-0.91, 0.00),decoration:"arrow",angle:-1.20rad)
edge(node4.pos,(-0.91, 0.91),decoration:"arrow",angle:5.20rad)
edge(node2.pos,(0.91, 0.91),decoration:"arrow",angle:1.47rad)
})
let embedding12i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.84))
node(node0.pos)
let node1= (pos:(0.26, -0.64))
node(node1.pos)
let node2= (pos:(-0.54, -0.16))
node(node2.pos)
let node3= (pos:(-0.70, 0.47))
node(node3.pos)
let node4= (pos:(0.54, 0.58))
node(node4.pos)
let node5= (pos:(0.95, 0.05))
node(node5.pos)
edge(node1.pos,(-0.15, -0.78),node0.pos,decoration:"arrow",angle:-2.91rad)
cetz.draw.content((-0.12, -0.89),angle:-2.91rad,[q+k[0]])
cetz.draw.hobby((0.21, -0.73),(-0.14, -0.84),(-0.50, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.18, -0.07),node1.pos,decoration:"wave",angle:-0.85rad)
cetz.draw.content((-0.09, 0.01),angle:-0.85rad,[q])
cetz.draw.hobby((-0.55, 0.41),(-0.14, -0.02),(0.23, -0.48),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.58, -0.50),node2.pos,decoration:"wave",angle:4.65rad)
cetz.draw.content((-0.70, -0.50),angle:4.65rad,[q])
cetz.draw.hobby((-0.65, -0.77),(-0.64, -0.50),(-0.61, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.00, 0.23),node2.pos,decoration:"arrow",angle:0.60rad)
cetz.draw.content((-0.07, 0.33),angle:0.60rad,[-p])
cetz.draw.hobby((0.40, 0.56),(-0.04, 0.27),(-0.47, -0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.72, 0.31),node4.pos,decoration:"coil",angle:2.21rad)
cetz.draw.content((0.62, 0.24),angle:2.21rad,[-p+q+k[2]])
cetz.draw.hobby((0.86, 0.05),(0.68, 0.26),(0.52, 0.49),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.76rad)
cetz.draw.content((-0.75, -1.03),angle:-2.76rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.66, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.69, -0.71),angle:2.68rad,[-k[0]])
cetz.draw.hobby((0.38, -0.63),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.36rad)
cetz.draw.content((-0.73, -0.36),angle:0.36rad,[p-q])
cetz.draw.hobby((-0.89, -0.35),(-0.62, -0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.44rad)
cetz.draw.content((1.09, -0.13),angle:-1.44rad,[p-q])
cetz.draw.hobby((1.02, -0.05),(1.05, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.72rad)
cetz.draw.content((-0.80, 0.29),angle:-2.72rad,[-k[2]])
cetz.draw.hobby((-0.88, 0.32),(-0.77, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:4.54rad)
cetz.draw.content((0.86, 0.21),angle:4.54rad,[-k[2]])
cetz.draw.hobby((0.91, 0.15),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.74rad)
cetz.draw.content((0.69, 0.88),angle:0.74rad,[q+k[2]])
cetz.draw.hobby((0.58, 0.70),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.22rad)
cetz.draw.content((-0.96, 0.67),angle:5.22rad,[q+k[2]])
cetz.draw.hobby((-1.00, 0.88),(-0.80, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding12i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, -0.63))
node(node0.pos)
let node1= (pos:(0.47, -0.72))
node(node1.pos)
let node2= (pos:(0.58, 0.52))
node(node2.pos)
let node3= (pos:(-0.18, 0.08))
node(node3.pos)
let node4= (pos:(-0.70, 0.74))
node(node4.pos)
let node5= (pos:(-0.04, 0.69))
node(node5.pos)
edge(node1.pos,(0.08, -0.73),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((0.06, -0.85),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.79),(0.07, -0.79),(-0.25, -0.71),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.16, -0.32),node1.pos,decoration:"wave",angle:-0.89rad)
cetz.draw.content((0.26, -0.25),angle:-0.89rad,[q])
cetz.draw.hobby((-0.07, 0.04),(0.20, -0.27),(0.46, -0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.18, -0.06),node2.pos,decoration:"wave",angle:-2.22rad)
cetz.draw.content((0.27, -0.14),angle:-2.22rad,[q])
cetz.draw.hobby((-0.16, -0.56),(0.22, -0.12),(0.55, 0.36),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.30, 0.66),node5.pos,decoration:"arrow",angle:-0.28rad)
cetz.draw.content((0.33, 0.77),angle:-0.28rad,[-p+q])
cetz.draw.hobby((0.56, 0.61),(0.30, 0.72),(0.02, 0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.09, 0.37),node5.pos,decoration:"arrow",angle:1.33rad)
cetz.draw.content((0.02, 0.35),angle:1.33rad,[k[2]])
cetz.draw.hobby((-0.11, 0.12),(-0.03, 0.36),(0.01, 0.62),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.50, 0.38),node3.pos,decoration:"arrow",angle:5.36rad)
cetz.draw.content((-0.60, 0.31),angle:5.36rad,[q+k[2]])
cetz.draw.hobby((-0.72, 0.64),(-0.54, 0.33),(-0.29, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, 0.79),node4.pos,decoration:"coil",angle:3.07rad)
cetz.draw.content((-0.36, 0.91),angle:3.07rad,[-p+q+k[2]])
cetz.draw.hobby((-0.08, 0.77),(-0.36, 0.84),(-0.65, 0.82),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.60, -0.92),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.37, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.79, -0.75),angle:2.66rad,[-k[0]])
cetz.draw.hobby((0.59, -0.71),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.58rad)
cetz.draw.content((-0.93, 0.78),angle:5.58rad,[p])
cetz.draw.hobby((-0.96, 0.89),(-0.81, 0.76),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.85rad)
cetz.draw.content((0.70, 0.84),angle:0.85rad,[p])
cetz.draw.hobby((0.60, 0.63),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding12i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.75))
node(node0.pos)
let node1= (pos:(0.33, -0.78))
node(node1.pos)
let node2= (pos:(-0.03, 0.18))
node(node2.pos)
let node3= (pos:(-0.62, -0.08))
node(node3.pos)
let node4= (pos:(0.84, 0.47))
node(node4.pos)
let node5= (pos:(-0.71, 0.65))
node(node5.pos)
edge(node1.pos,(-0.08, -0.83),node0.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((-0.08, -0.95),angle:3.11rad,[q+k[0]])
cetz.draw.hobby((0.26, -0.86),(-0.09, -0.89),(-0.43, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.12, -0.44),node1.pos,decoration:"wave",angle:-0.64rad)
cetz.draw.content((-0.05, -0.34),angle:-0.64rad,[q])
cetz.draw.hobby((-0.49, -0.10),(-0.10, -0.37),(0.27, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.25, -0.29),node2.pos,decoration:"wave",angle:-2.03rad)
cetz.draw.content((-0.14, -0.34),angle:-2.03rad,[q])
cetz.draw.hobby((-0.39, -0.69),(-0.20, -0.31),(-0.02, 0.06),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.35, 0.46),node5.pos,decoration:"arrow",angle:-0.60rad)
cetz.draw.content((-0.28, 0.56),angle:-0.60rad,[-p+q])
cetz.draw.hobby((-0.04, 0.29),(-0.31, 0.51),(-0.61, 0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.70, 0.29),node5.pos,decoration:"arrow",angle:1.68rad)
cetz.draw.content((-0.82, 0.28),angle:1.68rad,[k[2]])
cetz.draw.hobby((-0.70, -0.03),(-0.76, 0.28),(-0.77, 0.58),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.42, 0.34),node2.pos,decoration:"arrow",angle:0.32rad)
cetz.draw.content((0.38, 0.45),angle:0.32rad,[-p])
cetz.draw.hobby((0.74, 0.50),(0.39, 0.39),(0.04, 0.27),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
cetz.draw.content((-0.69, -0.98),angle:-2.69rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.55, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
cetz.draw.content((0.70, -0.78),angle:2.83rad,[-k[0]])
cetz.draw.hobby((0.44, -0.76),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.25rad)
cetz.draw.content((1.04, 0.27),angle:-1.25rad,[q+k[2]])
cetz.draw.hobby((0.93, 0.39),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:6.07rad)
cetz.draw.content((-0.84, -0.16),angle:6.07rad,[q+k[2]])
cetz.draw.hobby((-0.91, -0.08),(-0.73, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.27rad)
cetz.draw.content((-0.95, 0.75),angle:2.27rad,[p-q-k[2]])
cetz.draw.hobby((-0.98, 0.88),(-0.82, 0.69),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.42rad)
cetz.draw.content((0.81, 0.77),angle:4.42rad,[p-q-k[2]])
cetz.draw.hobby((0.81, 0.58),(0.91, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding12f0=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.67))
node(node0.pos)
let node1= (pos:(-0.57, -0.78))
node(node1.pos)
let node2= (pos:(0.78, 0.52))
node(node2.pos)
let node3= (pos:(-0.92, -0.07))
node(node3.pos)
let node4= (pos:(0.08, 0.60))
node(node4.pos)
let node5= (pos:(0.78, 0.03))
node(node5.pos)
edge(node0.pos,(-0.03, -0.74),node1.pos,decoration:"arrow",angle:-3.04rad)
edge(node3.pos,(-0.72, -0.43),node1.pos,decoration:"wave",angle:-1.11rad)
edge(node0.pos,(0.57, -0.13),node2.pos,decoration:"wave",angle:4.52rad)
edge(node2.pos,(0.84, 0.28),node5.pos,decoration:"arrow",angle:1.58rad)
edge(node5.pos,(0.39, 0.30),node4.pos,decoration:"coil",angle:2.45rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.54rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.87rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.12rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.28rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.91rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.92rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
})
let embedding13i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.42, -0.77))
node(node0.pos)
let node1= (pos:(0.57, -0.81))
node(node1.pos)
let node2= (pos:(-0.06, 0.17))
node(node2.pos)
let node3= (pos:(0.60, -0.01))
node(node3.pos)
let node4= (pos:(-0.09, 0.65))
node(node4.pos)
let node5= (pos:(-0.48, -0.03))
node(node5.pos)
edge(node1.pos,(0.08, -0.83),node0.pos,decoration:"arrow",angle:3.10rad)
cetz.draw.content((0.07, -0.95),angle:3.10rad,[q+k[0]])
cetz.draw.hobby((0.48, -0.88),(0.07, -0.89),(-0.33, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.61, -0.42),node1.pos,decoration:"wave",angle:-1.60rad)
cetz.draw.content((0.73, -0.42),angle:-1.60rad,[q])
cetz.draw.hobby((0.66, -0.09),(0.67, -0.41),(0.64, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.23, -0.33),node2.pos,decoration:"wave",angle:-1.94rad)
cetz.draw.content((-0.12, -0.37),angle:-1.94rad,[q])
cetz.draw.hobby((-0.32, -0.70),(-0.17, -0.33),(-0.03, 0.05),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.09, -0.08),node5.pos,decoration:"arrow",angle:-3.12rad)
cetz.draw.content((0.10, -0.20),angle:-3.12rad,[-p+2 k[3]])
cetz.draw.hobby((0.50, -0.10),(0.06, -0.14),(-0.39, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.35, 0.36),node4.pos,decoration:"coil",angle:1.03rad)
cetz.draw.content((-0.46, 0.43),angle:1.03rad,[-p+q+3 k[3]])
cetz.draw.hobby((-0.53, 0.06),(-0.41, 0.38),(-0.19, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.77rad)
cetz.draw.content((-0.67, -1.00),angle:-2.77rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.49, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
cetz.draw.content((0.84, -0.79),angle:2.72rad,[-k[0]])
cetz.draw.hobby((0.69, -0.79),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.52, 0.02),angle:2.70rad,[q+k[3]])
cetz.draw.hobby((0.06, 0.18),(0.94, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.61rad)
cetz.draw.content((-0.68, -0.28),angle:-2.61rad,[q+k[3]])
cetz.draw.hobby((-0.88, -0.33),(-0.54, -0.13),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.51, 0.38),angle:-2.81rad,[p-q-2 k[3]])
cetz.draw.hobby((-0.89, 0.31),(-0.17, 0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.85rad)
cetz.draw.content((0.72, 0.25),angle:3.85rad,[p-q-2 k[3]])
cetz.draw.hobby((0.63, 0.10),(0.89, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.45rad)
cetz.draw.content((0.42, 0.94),angle:3.45rad,[k[3]])
cetz.draw.hobby((-0.01, 0.74),(0.89, 1.03),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.42rad)
cetz.draw.content((-0.61, 0.49),angle:2.42rad,[k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.17, 0.19),stroke:stroke,mark: (end: ">"))
})
let embedding13f0=cetz.canvas(length:50%,{
let node0= (pos:(0.40, -0.76))
node(node0.pos)
let node1= (pos:(-0.58, -0.72))
node(node1.pos)
let node2= (pos:(-0.03, 0.10))
node(node2.pos)
let node3= (pos:(-0.58, 0.25))
node(node3.pos)
let node4= (pos:(0.45, 0.76))
node(node4.pos)
let node5= (pos:(0.20, 0.13))
node(node5.pos)
edge(node0.pos,(-0.09, -0.78),node1.pos,decoration:"arrow",angle:3.10rad)
edge(node3.pos,(-0.61, -0.24),node1.pos,decoration:"wave",angle:4.72rad)
edge(node0.pos,(0.20, -0.35),node2.pos,decoration:"wave",angle:-1.11rad)
edge(node4.pos,(-0.10, 0.57),node3.pos,decoration:"arrow",angle:3.60rad)
edge(node5.pos,(0.36, 0.45),node4.pos,decoration:"coil",angle:1.20rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.54rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.74rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.77rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:2.94rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.39rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.56rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.40rad)
})
let embedding14i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.76))
node(node0.pos)
let node1= (pos:(0.46, -0.84))
node(node1.pos)
let node2= (pos:(-0.22, 0.15))
node(node2.pos)
let node3= (pos:(0.11, -0.15))
node(node3.pos)
let node4= (pos:(-0.86, 0.63))
node(node4.pos)
let node5= (pos:(0.74, 0.34))
node(node5.pos)
edge(node1.pos,(-0.02, -0.85),node0.pos,decoration:"arrow",angle:3.06rad)
cetz.draw.content((-0.03, -0.97),angle:3.06rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.91),(-0.03, -0.91),(-0.42, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.31, -0.50),node1.pos,decoration:"wave",angle:-1.10rad)
cetz.draw.content((0.41, -0.44),angle:-1.10rad,[q])
cetz.draw.hobby((0.20, -0.19),(0.36, -0.46),(0.49, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.40, -0.31),node2.pos,decoration:"wave",angle:4.42rad)
cetz.draw.content((-0.51, -0.27),angle:4.42rad,[q])
cetz.draw.hobby((-0.54, -0.66),(-0.45, -0.28),(-0.32, 0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.27, 0.29),node5.pos,decoration:"arrow",angle:3.33rad)
cetz.draw.content((0.25, 0.41),angle:3.33rad,[q+k[3]])
cetz.draw.hobby((-0.15, 0.24),(0.24, 0.34),(0.64, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.54, 0.41),node2.pos,decoration:"arrow",angle:2.50rad)
cetz.draw.content((-0.47, 0.51),angle:2.50rad,[k[3]])
cetz.draw.hobby((-0.76, 0.64),(-0.50, 0.46),(-0.25, 0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.70, -0.99),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.57, -0.86),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.86rad)
cetz.draw.content((0.77, -0.81),angle:2.86rad,[-k[0]])
cetz.draw.hobby((0.58, -0.81),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.98rad)
cetz.draw.content((-0.43, -0.36),angle:-2.98rad,[p-k[3]])
cetz.draw.hobby((-0.89, -0.38),(0.02, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:1.94rad)
cetz.draw.content((0.98, 0.05),angle:1.94rad,[p-k[3]])
cetz.draw.hobby((0.83, 0.27),(1.02, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.99rad)
cetz.draw.content((-0.82, 0.44),angle:-1.99rad,[p-q-k[3]])
cetz.draw.hobby((-0.90, 0.40),(-0.85, 0.52),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.50, 0.19),angle:3.64rad,[p-q-k[3]])
cetz.draw.hobby((0.17, -0.05),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.19rad)
cetz.draw.content((0.76, 0.72),angle:1.19rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.72, 0.46),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.07rad)
cetz.draw.content((-1.04, 0.78),angle:5.07rad,[-p+q+2 k[3]])
cetz.draw.hobby((-1.02, 0.89),(-0.96, 0.71),stroke:stroke,mark: (end: ">"))
})
let embedding14i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.46, -0.84))
node(node0.pos)
let node1= (pos:(0.50, -0.76))
node(node1.pos)
let node2= (pos:(-0.11, -0.16))
node(node2.pos)
let node3= (pos:(0.22, 0.15))
node(node3.pos)
let node4= (pos:(0.86, 0.64))
node(node4.pos)
let node5= (pos:(-0.74, 0.34))
node(node5.pos)
edge(node1.pos,(0.02, -0.85),node0.pos,decoration:"arrow",angle:-3.06rad)
cetz.draw.content((0.03, -0.97),angle:-3.06rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.85),(0.03, -0.91),(-0.37, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.40, -0.31),node1.pos,decoration:"wave",angle:-1.28rad)
cetz.draw.content((0.51, -0.28),angle:-1.28rad,[q])
cetz.draw.hobby((0.32, 0.09),(0.45, -0.28),(0.54, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.31, -0.50),node2.pos,decoration:"wave",angle:4.24rad)
cetz.draw.content((-0.41, -0.44),angle:4.24rad,[q])
cetz.draw.hobby((-0.49, -0.75),(-0.36, -0.46),(-0.20, -0.19),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.27, 0.29),node5.pos,decoration:"arrow",angle:2.95rad)
cetz.draw.content((-0.25, 0.41),angle:2.95rad,[-p+k[3]])
cetz.draw.hobby((0.15, 0.24),(-0.24, 0.35),(-0.64, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.54, 0.41),node3.pos,decoration:"arrow",angle:3.79rad)
cetz.draw.content((0.47, 0.51),angle:3.79rad,[-p+q+k[3]])
cetz.draw.hobby((0.76, 0.64),(0.50, 0.46),(0.24, 0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.70, -1.04),angle:-2.86rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.54, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.80, -0.77),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.62, -0.75),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.98rad)
cetz.draw.content((0.47, -0.13),angle:2.98rad,[q+k[3]])
cetz.draw.hobby((0.00, -0.11),(0.91, -0.26),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.94rad)
cetz.draw.content((-0.76, -0.04),angle:-1.94rad,[q+k[3]])
cetz.draw.hobby((-0.91, -0.26),(-0.72, 0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:1.99rad)
cetz.draw.content((1.04, 0.53),angle:1.99rad,[k[3]])
cetz.draw.hobby((0.96, 0.57),(1.01, 0.45),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.61, -0.02),angle:2.64rad,[k[3]])
cetz.draw.hobby((-0.94, 0.23),(-0.22, -0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.95rad)
cetz.draw.content((-0.98, 0.63),angle:1.95rad,[p-q-2 k[3]])
cetz.draw.hobby((-1.02, 0.88),(-0.83, 0.41),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.36rad)
cetz.draw.content((0.82, 0.86),angle:4.36rad,[p-q-2 k[3]])
cetz.draw.hobby((0.84, 0.75),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
})
let embedding14i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.34, -0.75))
node(node0.pos)
let node1= (pos:(0.64, -0.64))
node(node1.pos)
let node2= (pos:(0.28, 0.00))
node(node2.pos)
let node3= (pos:(0.60, 0.47))
node(node3.pos)
let node4= (pos:(-0.60, 0.73))
node(node4.pos)
let node5= (pos:(-0.55, 0.21))
node(node5.pos)
edge(node1.pos,(0.16, -0.74),node0.pos,decoration:"arrow",angle:-3.03rad)
cetz.draw.content((0.17, -0.86),angle:-3.03rad,[q+k[0]])
cetz.draw.hobby((0.56, -0.72),(0.16, -0.80),(-0.24, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.68, -0.09),node1.pos,decoration:"wave",angle:-1.54rad)
cetz.draw.content((0.80, -0.09),angle:-1.54rad,[q])
cetz.draw.hobby((0.69, 0.38),(0.74, -0.08),(0.71, -0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.04, -0.37),node2.pos,decoration:"wave",angle:4.02rad)
cetz.draw.content((-0.13, -0.30),angle:4.02rad,[q])
cetz.draw.hobby((-0.33, -0.64),(-0.08, -0.33),(0.17, -0.03),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, 0.38),node5.pos,decoration:"arrow",angle:3.36rad)
cetz.draw.content((0.02, 0.49),angle:3.36rad,[-p+k[3]])
cetz.draw.hobby((0.48, 0.52),(0.01, 0.43),(-0.45, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.15, 0.39),node2.pos,decoration:"arrow",angle:2.45rad)
cetz.draw.content((-0.08, 0.48),angle:2.45rad,[k[3]])
cetz.draw.hobby((-0.47, 0.71),(-0.11, 0.43),(0.24, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.65, 0.47),node4.pos,decoration:"coil",angle:1.66rad)
cetz.draw.content((-0.77, 0.46),angle:1.66rad,[-p+q+2 k[3]])
cetz.draw.hobby((-0.63, 0.22),(-0.71, 0.46),(-0.68, 0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.63, -0.99),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.41, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((0.90, -0.73),angle:2.36rad,[-k[0]])
cetz.draw.hobby((0.75, -0.67),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((0.64, 0.12),angle:3.14rad,[q+k[3]])
cetz.draw.hobby((0.38, 0.06),(0.90, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.72, -0.00),angle:-2.70rad,[q+k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.61, 0.12),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.55rad)
cetz.draw.content((-0.87, 0.76),angle:2.55rad,[p-q-k[3]])
cetz.draw.hobby((-0.95, 0.89),(-0.72, 0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.07rad)
cetz.draw.content((0.71, 0.81),angle:4.07rad,[p-q-k[3]])
cetz.draw.hobby((0.62, 0.59),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding14i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.64))
node(node0.pos)
let node1= (pos:(0.34, -0.75))
node(node1.pos)
let node2= (pos:(-0.60, 0.47))
node(node2.pos)
let node3= (pos:(-0.28, -0.00))
node(node3.pos)
let node4= (pos:(0.60, 0.73))
node(node4.pos)
let node5= (pos:(0.55, 0.21))
node(node5.pos)
edge(node1.pos,(-0.16, -0.74),node0.pos,decoration:"arrow",angle:3.03rad)
cetz.draw.content((-0.17, -0.86),angle:3.03rad,[q+k[0]])
cetz.draw.hobby((0.24, -0.82),(-0.16, -0.80),(-0.56, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.04, -0.38),node1.pos,decoration:"wave",angle:-0.88rad)
cetz.draw.content((0.13, -0.30),angle:-0.88rad,[q])
cetz.draw.hobby((-0.17, -0.04),(0.08, -0.33),(0.32, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.68, -0.09),node2.pos,decoration:"wave",angle:4.68rad)
cetz.draw.content((-0.80, -0.09),angle:4.68rad,[q])
cetz.draw.hobby((-0.71, -0.54),(-0.73, -0.08),(-0.69, 0.38),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.04, 0.38),node5.pos,decoration:"arrow",angle:2.92rad)
cetz.draw.content((-0.02, 0.50),angle:2.92rad,[q+k[3]])
cetz.draw.hobby((-0.48, 0.52),(-0.01, 0.43),(0.45, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.39),node3.pos,decoration:"arrow",angle:3.83rad)
cetz.draw.content((0.08, 0.48),angle:3.83rad,[-p+q+k[3]])
cetz.draw.hobby((0.47, 0.71),(0.11, 0.43),(-0.24, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.66, 0.47),node4.pos,decoration:"coil",angle:1.47rad)
cetz.draw.content((0.78, 0.46),angle:1.47rad,[-p+q+2 k[3]])
cetz.draw.hobby((0.63, 0.22),(0.72, 0.45),(0.68, 0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
cetz.draw.content((-0.73, -0.90),angle:-2.36rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.67, -0.75),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((0.71, -0.76),angle:2.78rad,[-k[0]])
cetz.draw.hobby((0.45, -0.73),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.64, -0.12),angle:3.14rad,[p-k[3]])
cetz.draw.hobby((-0.90, -0.06),(-0.38, -0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.82, 0.22),angle:2.70rad,[p-k[3]])
cetz.draw.hobby((0.66, 0.23),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.75rad)
cetz.draw.content((0.73, 0.96),angle:3.75rad,[k[3]])
cetz.draw.hobby((0.65, 0.83),(0.88, 0.99),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.22rad)
cetz.draw.content((-0.90, 0.67),angle:2.22rad,[k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.71, 0.52),stroke:stroke,mark: (end: ">"))
})
let embedding14f0=cetz.canvas(length:50%,{
let node0= (pos:(0.52, -0.83))
node(node0.pos)
let node1= (pos:(-0.60, -0.66))
node(node1.pos)
let node2= (pos:(0.69, -0.17))
node(node2.pos)
let node3= (pos:(-0.76, 0.44))
node(node3.pos)
let node4= (pos:(-0.02, 0.16))
node(node4.pos)
let node5= (pos:(0.02, 0.60))
node(node5.pos)
edge(node0.pos,(-0.05, -0.77),node1.pos,decoration:"arrow",angle:2.99rad)
edge(node3.pos,(-0.70, -0.13),node1.pos,decoration:"wave",angle:4.86rad)
edge(node0.pos,(0.63, -0.51),node2.pos,decoration:"wave",angle:-1.83rad)
edge(node4.pos,(-0.41, 0.30),node3.pos,decoration:"arrow",angle:2.78rad)
edge(node4.pos,(0.35, -0.01),node2.pos,decoration:"arrow",angle:2.71rad)
edge(node5.pos,(0.11, 0.38),node4.pos,decoration:"coil",angle:-1.60rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.44rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.64rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.61rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:1.97rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.53rad)
})
let embedding15i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.33, -0.79))
node(node0.pos)
let node1= (pos:(0.49, -0.76))
node(node1.pos)
let node2= (pos:(0.62, -0.08))
node(node2.pos)
let node3= (pos:(0.03, 0.18))
node(node3.pos)
let node4= (pos:(0.71, 0.65))
node(node4.pos)
let node5= (pos:(-0.84, 0.47))
node(node5.pos)
edge(node1.pos,(0.08, -0.83),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((0.08, -0.95),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.43, -0.84),(0.09, -0.89),(-0.26, -0.86),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.26, -0.29),node1.pos,decoration:"wave",angle:5.17rad)
cetz.draw.content((0.15, -0.34),angle:5.17rad,[q])
cetz.draw.hobby((0.02, 0.06),(0.20, -0.32),(0.39, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.12, -0.44),node2.pos,decoration:"wave",angle:3.78rad)
cetz.draw.content((0.05, -0.34),angle:3.78rad,[q])
cetz.draw.hobby((-0.27, -0.67),(0.10, -0.37),(0.49, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.41, 0.34),node5.pos,decoration:"arrow",angle:2.82rad)
cetz.draw.content((-0.37, 0.45),angle:2.82rad,[-p])
cetz.draw.hobby((-0.03, 0.27),(-0.38, 0.39),(-0.74, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.46),node3.pos,decoration:"arrow",angle:3.75rad)
cetz.draw.content((0.28, 0.56),angle:3.75rad,[-p+q])
cetz.draw.hobby((0.61, 0.68),(0.31, 0.51),(0.05, 0.28),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.29),node2.pos,decoration:"arrow",angle:1.46rad)
cetz.draw.content((0.83, 0.28),angle:1.46rad,[k[3]])
cetz.draw.hobby((0.78, 0.58),(0.77, 0.27),(0.70, -0.03),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.63, -1.01),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.40, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.80, -0.77),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.61, -0.74),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.35rad)
cetz.draw.content((0.79, 0.08),angle:3.35rad,[q+k[3]])
cetz.draw.hobby((0.71, -0.00),(0.89, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.90rad)
cetz.draw.content((-0.81, 0.20),angle:-1.90rad,[q+k[3]])
cetz.draw.hobby((-0.91, 0.08),(-0.82, 0.36),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.86rad)
cetz.draw.content((-1.04, 0.70),angle:1.86rad,[p-q-k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.93, 0.55),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.02rad)
cetz.draw.content((0.76, 0.90),angle:4.02rad,[p-q-k[3]])
cetz.draw.hobby((0.73, 0.77),(0.89, 0.96),stroke:stroke,mark: (end: ">"))
})
let embedding15i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.25, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.79))
node(node1.pos)
let node2= (pos:(0.77, 0.15))
node(node2.pos)
let node3= (pos:(0.48, 0.03))
node(node3.pos)
let node4= (pos:(-0.93, 0.62))
node(node4.pos)
let node5= (pos:(-0.60, -0.03))
node(node5.pos)
edge(node1.pos,(0.17, -0.81),node0.pos,decoration:"arrow",angle:3.07rad)
cetz.draw.content((0.16, -0.93),angle:3.07rad,[q+k[0]])
cetz.draw.hobby((0.52, -0.86),(0.17, -0.87),(-0.18, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.56, -0.39),node1.pos,decoration:"wave",angle:-1.42rad)
cetz.draw.content((0.68, -0.37),angle:-1.42rad,[q])
cetz.draw.hobby((0.55, -0.04),(0.61, -0.37),(0.65, -0.71),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.24, -0.30),node2.pos,decoration:"wave",angle:3.86rad)
cetz.draw.content((0.16, -0.21),angle:3.86rad,[q])
cetz.draw.hobby((-0.19, -0.60),(0.22, -0.24),(0.63, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.07, 0.01),node5.pos,decoration:"arrow",angle:3.20rad)
cetz.draw.content((-0.07, 0.13),angle:3.20rad,[-p])
cetz.draw.hobby((0.37, 0.09),(-0.06, 0.07),(-0.50, 0.04),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.73, 0.31),node4.pos,decoration:"coil",angle:2.04rad)
cetz.draw.content((-0.62, 0.36),angle:2.04rad,[-p+q+k[3]])
cetz.draw.hobby((-0.56, 0.06),(-0.67, 0.34),(-0.83, 0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.58, -0.98),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.32, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.67rad)
cetz.draw.content((0.85, -0.79),angle:2.67rad,[-k[0]])
cetz.draw.hobby((0.72, -0.79),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.01rad)
cetz.draw.content((0.99, -0.04),angle:2.01rad,[q+k[3]])
cetz.draw.hobby((0.87, 0.09),(1.01, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.50rad)
cetz.draw.content((-0.73, -0.28),angle:-2.50rad,[q+k[3]])
cetz.draw.hobby((-0.88, -0.32),(-0.64, -0.14),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.82rad)
cetz.draw.content((-0.85, 0.45),angle:-1.82rad,[p-q])
cetz.draw.hobby((-0.92, 0.42),(-0.89, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.67rad)
cetz.draw.content((0.68, 0.29),angle:3.67rad,[p-q])
cetz.draw.hobby((0.53, 0.13),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.90rad)
cetz.draw.content((-1.08, 0.79),angle:4.90rad,[-k[3]])
cetz.draw.hobby((-1.04, 0.89),(-1.00, 0.71),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.31rad)
cetz.draw.content((0.77, 0.61),angle:1.31rad,[-k[3]])
cetz.draw.hobby((0.74, 0.27),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding15i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.72))
node(node0.pos)
let node1= (pos:(0.31, -0.63))
node(node1.pos)
let node2= (pos:(0.20, 0.08))
node(node2.pos)
let node3= (pos:(-0.57, 0.52))
node(node3.pos)
let node4= (pos:(0.05, 0.68))
node(node4.pos)
let node5= (pos:(0.71, 0.74))
node(node5.pos)
edge(node1.pos,(-0.07, -0.73),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((-0.06, -0.85),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.26, -0.71),(-0.06, -0.79),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.17, -0.07),node1.pos,decoration:"wave",angle:5.37rad)
cetz.draw.content((-0.27, -0.14),angle:5.37rad,[q])
cetz.draw.hobby((-0.55, 0.36),(-0.21, -0.11),(0.17, -0.56),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.16, -0.32),node2.pos,decoration:"wave",angle:4.02rad)
cetz.draw.content((-0.25, -0.25),angle:4.02rad,[q])
cetz.draw.hobby((-0.45, -0.60),(-0.19, -0.27),(0.08, 0.04),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.51, 0.38),node5.pos,decoration:"arrow",angle:-2.22rad)
cetz.draw.content((0.61, 0.30),angle:-2.22rad,[q+k[3]])
cetz.draw.hobby((0.30, 0.08),(0.55, 0.33),(0.73, 0.64),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.29, 0.66),node3.pos,decoration:"arrow",angle:3.41rad)
cetz.draw.content((-0.32, 0.77),angle:3.41rad,[-p+q])
cetz.draw.hobby((-0.01, 0.75),(-0.29, 0.72),(-0.55, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.11, 0.37),node2.pos,decoration:"arrow",angle:1.81rad)
cetz.draw.content((-0.01, 0.34),angle:1.81rad,[k[3]])
cetz.draw.hobby((-0.00, 0.61),(0.05, 0.36),(0.12, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.38, 0.78),node4.pos,decoration:"coil",angle:3.22rad)
cetz.draw.content((0.37, 0.90),angle:3.22rad,[-p+q+k[3]])
cetz.draw.hobby((0.66, 0.82),(0.37, 0.84),(0.09, 0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
cetz.draw.content((-0.68, -0.97),angle:-2.66rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.53, -0.82),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.71, -0.71),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.43, -0.62),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.30rad)
cetz.draw.content((-0.88, 0.68),angle:2.30rad,[p])
cetz.draw.hobby((-0.98, 0.89),(-0.68, 0.55),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.87rad)
cetz.draw.content((0.77, 0.96),angle:3.87rad,[p])
cetz.draw.hobby((0.74, 0.85),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding15f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.73))
node(node0.pos)
let node1= (pos:(-0.55, -0.76))
node(node1.pos)
let node2= (pos:(0.90, 0.11))
node(node2.pos)
let node3= (pos:(-0.83, 0.07))
node(node3.pos)
let node4= (pos:(-0.69, 0.71))
node(node4.pos)
let node5= (pos:(-0.08, 0.14))
node(node5.pos)
edge(node0.pos,(0.01, -0.77),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node3.pos,(-0.70, -0.35),node1.pos,decoration:"wave",angle:5.03rad)
edge(node0.pos,(0.71, -0.30),node2.pos,decoration:"wave",angle:4.34rad)
edge(node4.pos,(-0.75, 0.41),node3.pos,decoration:"arrow",angle:-1.78rad)
edge(node5.pos,(-0.35, 0.46),node4.pos,decoration:"coil",angle:2.39rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.58rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.78rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.67rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:2.16rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.32rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.54rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.46rad)
})
let embedding16i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.73))
node(node0.pos)
let node1= (pos:(0.55, -0.76))
node(node1.pos)
let node2= (pos:(-0.90, 0.11))
node(node2.pos)
let node3= (pos:(0.83, 0.07))
node(node3.pos)
let node4= (pos:(0.69, 0.71))
node(node4.pos)
let node5= (pos:(0.07, 0.14))
node(node5.pos)
edge(node1.pos,(-0.01, -0.77),node0.pos,decoration:"arrow",angle:3.12rad)
cetz.draw.content((-0.02, -0.89),angle:3.12rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.82),(-0.01, -0.83),(-0.47, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, -0.35),node1.pos,decoration:"wave",angle:-1.89rad)
cetz.draw.content((0.81, -0.39),angle:-1.89rad,[q])
cetz.draw.hobby((0.86, -0.03),(0.76, -0.36),(0.64, -0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.72, -0.30),node2.pos,decoration:"wave",angle:-1.20rad)
cetz.draw.content((-0.60, -0.26),angle:-1.20rad,[q])
cetz.draw.hobby((-0.54, -0.63),(-0.66, -0.28),(-0.81, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.75, 0.40),node3.pos,decoration:"arrow",angle:4.93rad)
cetz.draw.content((0.63, 0.38),angle:4.93rad,[p+2 q])
cetz.draw.hobby((0.64, 0.64),(0.69, 0.38),(0.75, 0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.34, 0.46),node4.pos,decoration:"coil",angle:0.75rad)
cetz.draw.content((0.26, 0.55),angle:0.75rad,[p+2 q+k[3]])
cetz.draw.hobby((0.07, 0.25),(0.31, 0.51),(0.58, 0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.58rad)
cetz.draw.content((-0.72, -0.97),angle:-2.58rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.00),(-0.62, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.83, -0.77),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.67, -0.75),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.36rad)
cetz.draw.content((-0.83, -0.13),angle:1.36rad,[-q-k[3]])
cetz.draw.hobby((-0.92, -0.25),(-0.87, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.47rad)
cetz.draw.content((0.59, 0.01),angle:-0.47rad,[-q-k[3]])
cetz.draw.hobby((0.19, 0.15),(0.94, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:0.98rad)
cetz.draw.content((0.81, 0.27),angle:0.98rad,[p+q])
cetz.draw.hobby((0.83, 0.19),(0.89, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:6.11rad)
cetz.draw.content((-0.48, 0.12),angle:6.11rad,[p+q])
cetz.draw.hobby((-0.91, 0.26),(-0.03, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.88rad)
cetz.draw.content((0.76, 0.95),angle:3.88rad,[k[3]])
cetz.draw.hobby((0.72, 0.83),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.68rad)
cetz.draw.content((-1.07, 0.54),angle:1.68rad,[k[3]])
cetz.draw.hobby((-1.05, 0.89),(-0.97, 0.21),stroke:stroke,mark: (end: ">"))
})
let embedding16f0=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.79))
node(node0.pos)
let node1= (pos:(-0.49, -0.75))
node(node1.pos)
let node2= (pos:(-0.63, -0.08))
node(node2.pos)
let node3= (pos:(-0.03, 0.18))
node(node3.pos)
let node4= (pos:(-0.71, 0.66))
node(node4.pos)
let node5= (pos:(0.84, 0.47))
node(node5.pos)
edge(node0.pos,(-0.08, -0.83),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node3.pos,(-0.25, -0.29),node1.pos,decoration:"wave",angle:-2.03rad)
edge(node0.pos,(-0.12, -0.44),node2.pos,decoration:"wave",angle:-0.64rad)
edge(node3.pos,(0.41, 0.34),node5.pos,decoration:"arrow",angle:0.32rad)
edge(node4.pos,(-0.35, 0.46),node3.pos,decoration:"arrow",angle:-0.60rad)
edge(node4.pos,(-0.71, 0.29),node2.pos,decoration:"arrow",angle:1.68rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.07rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.25rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.28rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.41rad)
})
let embedding16f1=cetz.canvas(length:50%,{
let node0= (pos:(0.24, -0.74))
node(node0.pos)
let node1= (pos:(-0.60, -0.79))
node(node1.pos)
let node2= (pos:(-0.77, 0.16))
node(node2.pos)
let node3= (pos:(-0.48, 0.03))
node(node3.pos)
let node4= (pos:(0.93, 0.62))
node(node4.pos)
let node5= (pos:(0.60, -0.03))
node(node5.pos)
edge(node0.pos,(-0.17, -0.81),node1.pos,decoration:"arrow",angle:-3.07rad)
edge(node3.pos,(-0.56, -0.39),node1.pos,decoration:"wave",angle:4.56rad)
edge(node0.pos,(-0.24, -0.30),node2.pos,decoration:"wave",angle:-0.72rad)
edge(node3.pos,(0.07, 0.01),node5.pos,decoration:"arrow",angle:-0.06rad)
edge(node5.pos,(0.73, 0.31),node4.pos,decoration:"coil",angle:1.11rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.67rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.14rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.64rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.32rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.76rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:4.52rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.83rad)
})
let embedding16f2=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.72))
node(node0.pos)
let node1= (pos:(-0.31, -0.63))
node(node1.pos)
let node2= (pos:(-0.18, 0.09))
node(node2.pos)
let node3= (pos:(0.58, 0.52))
node(node3.pos)
let node4= (pos:(-0.03, 0.69))
node(node4.pos)
let node5= (pos:(-0.69, 0.75))
node(node5.pos)
edge(node0.pos,(0.08, -0.73),node1.pos,decoration:"arrow",angle:3.03rad)
edge(node3.pos,(0.18, -0.07),node1.pos,decoration:"wave",angle:-2.23rad)
edge(node0.pos,(0.17, -0.32),node2.pos,decoration:"wave",angle:-0.89rad)
edge(node2.pos,(-0.49, 0.39),node5.pos,decoration:"arrow",angle:5.36rad)
edge(node4.pos,(0.30, 0.66),node3.pos,decoration:"arrow",angle:-0.29rad)
edge(node4.pos,(-0.09, 0.38),node2.pos,decoration:"arrow",angle:1.33rad)
edge(node5.pos,(-0.37, 0.79),node4.pos,decoration:"coil",angle:-0.07rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:0.85rad)
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.59rad)
})
let embedding17i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.83))
node(node0.pos)
let node1= (pos:(0.59, -0.66))
node(node1.pos)
let node2= (pos:(-0.70, -0.17))
node(node2.pos)
let node3= (pos:(0.76, 0.44))
node(node3.pos)
let node4= (pos:(0.01, 0.17))
node(node4.pos)
let node5= (pos:(-0.01, 0.60))
node(node5.pos)
edge(node1.pos,(0.04, -0.77),node0.pos,decoration:"arrow",angle:-2.99rad)
cetz.draw.content((0.06, -0.89),angle:-2.99rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.75),(0.05, -0.83),(-0.40, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, -0.13),node1.pos,decoration:"wave",angle:-1.72rad)
cetz.draw.content((0.82, -0.14),angle:-1.72rad,[q])
cetz.draw.hobby((0.81, 0.32),(0.76, -0.12),(0.68, -0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.51),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.75, -0.54),angle:4.97rad,[q])
cetz.draw.hobby((-0.60, -0.79),(-0.69, -0.52),(-0.75, -0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.40, 0.31),node3.pos,decoration:"arrow",angle:0.34rad)
cetz.draw.content((0.44, 0.19),angle:0.34rad,[p+2 q+k[3]])
cetz.draw.hobby((0.10, 0.14),(0.40, 0.24),(0.70, 0.35),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.36, -0.00),node2.pos,decoration:"arrow",angle:0.44rad)
cetz.draw.content((-0.41, 0.11),angle:0.44rad,[k[3]])
cetz.draw.hobby((-0.09, 0.19),(-0.37, 0.06),(-0.65, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.13, 0.39),node4.pos,decoration:"coil",angle:4.71rad)
cetz.draw.content((-0.25, 0.39),angle:4.71rad,[p+2 q+2 k[3]])
cetz.draw.hobby((-0.10, 0.61),(-0.19, 0.38),(-0.07, 0.15),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.81rad)
cetz.draw.content((-0.72, -1.03),angle:-2.81rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.60, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.45rad)
cetz.draw.content((0.87, -0.74),angle:2.45rad,[-k[0]])
cetz.draw.hobby((0.71, -0.68),(0.96, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.78rad)
cetz.draw.content((-0.91, -0.19),angle:5.78rad,[-q-k[3]])
cetz.draw.hobby((-0.94, -0.10),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.54rad)
cetz.draw.content((0.55, 0.40),angle:-0.54rad,[-q-k[3]])
cetz.draw.hobby((0.10, 0.60),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:1.16rad)
cetz.draw.content((0.77, 0.77),angle:1.16rad,[p+q+k[3]])
cetz.draw.hobby((0.74, 0.55),(0.91, 0.93),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"arrow",angle:5.90rad)
cetz.draw.content((-0.55, 0.69),angle:5.90rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.91),(-0.13, 0.58),stroke:stroke,mark: (end: ">"))
})
let embedding17f0=cetz.canvas(length:50%,{
let node0= (pos:(0.46, -0.84))
node(node0.pos)
let node1= (pos:(-0.50, -0.76))
node(node1.pos)
let node2= (pos:(0.11, -0.16))
node(node2.pos)
let node3= (pos:(-0.22, 0.16))
node(node3.pos)
let node4= (pos:(-0.86, 0.64))
node(node4.pos)
let node5= (pos:(0.74, 0.34))
node(node5.pos)
edge(node0.pos,(-0.03, -0.85),node1.pos,decoration:"arrow",angle:3.06rad)
edge(node3.pos,(-0.40, -0.31),node1.pos,decoration:"wave",angle:4.42rad)
edge(node0.pos,(0.31, -0.50),node2.pos,decoration:"wave",angle:-1.09rad)
edge(node3.pos,(0.27, 0.29),node5.pos,decoration:"arrow",angle:0.19rad)
edge(node4.pos,(-0.54, 0.42),node3.pos,decoration:"arrow",angle:-0.64rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.16rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.20rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:1.15rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:0.50rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.19rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.07rad)
})
let embedding17f1=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.76))
node(node0.pos)
let node1= (pos:(-0.46, -0.84))
node(node1.pos)
let node2= (pos:(0.23, 0.15))
node(node2.pos)
let node3= (pos:(-0.11, -0.15))
node(node3.pos)
let node4= (pos:(0.86, 0.64))
node(node4.pos)
let node5= (pos:(-0.74, 0.34))
node(node5.pos)
edge(node0.pos,(0.02, -0.85),node1.pos,decoration:"arrow",angle:-3.06rad)
edge(node3.pos,(-0.31, -0.50),node1.pos,decoration:"wave",angle:4.24rad)
edge(node0.pos,(0.40, -0.31),node2.pos,decoration:"wave",angle:-1.28rad)
edge(node2.pos,(-0.27, 0.29),node5.pos,decoration:"arrow",angle:-0.19rad)
edge(node4.pos,(0.54, 0.41),node2.pos,decoration:"arrow",angle:0.65rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.16rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:1.20rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.15rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.78rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.95rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.36rad)
})
let embedding17f2=cetz.canvas(length:50%,{
let node0= (pos:(0.34, -0.75))
node(node0.pos)
let node1= (pos:(-0.64, -0.64))
node(node1.pos)
let node2= (pos:(-0.28, -0.00))
node(node2.pos)
let node3= (pos:(-0.60, 0.47))
node(node3.pos)
let node4= (pos:(0.60, 0.72))
node(node4.pos)
let node5= (pos:(0.55, 0.21))
node(node5.pos)
edge(node0.pos,(-0.16, -0.74),node1.pos,decoration:"arrow",angle:3.03rad)
edge(node3.pos,(-0.67, -0.09),node1.pos,decoration:"wave",angle:4.68rad)
edge(node0.pos,(0.04, -0.38),node2.pos,decoration:"wave",angle:-0.88rad)
edge(node3.pos,(-0.04, 0.38),node5.pos,decoration:"arrow",angle:-0.22rad)
edge(node4.pos,(0.15, 0.39),node2.pos,decoration:"arrow",angle:0.69rad)
edge(node5.pos,(0.66, 0.47),node4.pos,decoration:"coil",angle:1.48rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.28rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.44rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.60rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:5.36rad)
})
let embedding17f3=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.64))
node(node0.pos)
let node1= (pos:(-0.34, -0.75))
node(node1.pos)
let node2= (pos:(0.60, 0.47))
node(node2.pos)
let node3= (pos:(0.28, -0.00))
node(node3.pos)
let node4= (pos:(-0.60, 0.73))
node(node4.pos)
let node5= (pos:(-0.55, 0.21))
node(node5.pos)
edge(node0.pos,(0.16, -0.74),node1.pos,decoration:"arrow",angle:-3.03rad)
edge(node3.pos,(-0.04, -0.38),node1.pos,decoration:"wave",angle:4.02rad)
edge(node0.pos,(0.68, -0.09),node2.pos,decoration:"wave",angle:-1.54rad)
edge(node2.pos,(0.04, 0.38),node5.pos,decoration:"arrow",angle:0.22rad)
edge(node4.pos,(-0.15, 0.39),node3.pos,decoration:"arrow",angle:-0.69rad)
edge(node5.pos,(-0.65, 0.47),node4.pos,decoration:"coil",angle:1.66rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.00rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:0.44rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.68rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.93rad)
})
let embedding18i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.40, -0.75))
node(node0.pos)
let node1= (pos:(0.58, -0.72))
node(node1.pos)
let node2= (pos:(0.03, 0.11))
node(node2.pos)
let node3= (pos:(0.58, 0.25))
node(node3.pos)
let node4= (pos:(-0.45, 0.76))
node(node4.pos)
let node5= (pos:(-0.20, 0.13))
node(node5.pos)
edge(node1.pos,(0.09, -0.78),node0.pos,decoration:"arrow",angle:-3.10rad)
cetz.draw.content((0.10, -0.90),angle:-3.10rad,[q+k[0]])
cetz.draw.hobby((0.50, -0.79),(0.09, -0.84),(-0.31, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.61, -0.24),node1.pos,decoration:"wave",angle:-1.57rad)
cetz.draw.content((0.73, -0.24),angle:-1.57rad,[q])
cetz.draw.hobby((0.65, 0.16),(0.67, -0.23),(0.65, -0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.20, -0.34),node2.pos,decoration:"wave",angle:-2.04rad)
cetz.draw.content((-0.09, -0.40),angle:-2.04rad,[q])
cetz.draw.hobby((-0.31, -0.70),(-0.13, -0.35),(0.04, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.10, 0.57),node3.pos,decoration:"arrow",angle:-0.46rad)
cetz.draw.content((0.15, 0.68),angle:-0.46rad,[p+2 q+2 k[3]])
cetz.draw.hobby((-0.32, 0.79),(0.12, 0.62),(0.53, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.36, 0.45),node4.pos,decoration:"coil",angle:1.94rad)
cetz.draw.content((-0.47, 0.40),angle:1.94rad,[p+2 q+3 k[3]])
cetz.draw.hobby((-0.29, 0.16),(-0.41, 0.41),(-0.49, 0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.66, -0.99),angle:-2.75rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.47, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.54rad)
cetz.draw.content((0.86, -0.76),angle:2.54rad,[-k[0]])
cetz.draw.hobby((0.70, -0.72),(0.95, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.40rad)
cetz.draw.content((-0.44, -0.22),angle:0.40rad,[-q-k[3]])
cetz.draw.hobby((-0.88, -0.35),(-0.04, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.37rad)
cetz.draw.content((0.44, 0.01),angle:-0.37rad,[-q-k[3]])
cetz.draw.hobby((-0.08, 0.15),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:0.20rad)
cetz.draw.content((0.77, 0.41),angle:0.20rad,[p+q+2 k[3]])
cetz.draw.hobby((0.67, 0.33),(0.89, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:6.03rad)
cetz.draw.content((-0.63, 0.12),angle:6.03rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.92, 0.25),(-0.31, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.87rad)
cetz.draw.content((-0.77, 0.77),angle:5.87rad,[-k[3]])
cetz.draw.hobby((-0.93, 0.90),(-0.57, 0.74),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.74rad)
cetz.draw.content((0.43, 0.64),angle:0.74rad,[-k[3]])
cetz.draw.hobby((0.06, 0.22),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding18f0=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.77))
node(node0.pos)
let node1= (pos:(-0.57, -0.81))
node(node1.pos)
let node2= (pos:(0.06, 0.17))
node(node2.pos)
let node3= (pos:(-0.60, -0.01))
node(node3.pos)
let node4= (pos:(0.09, 0.65))
node(node4.pos)
let node5= (pos:(0.48, -0.03))
node(node5.pos)
edge(node0.pos,(-0.08, -0.83),node1.pos,decoration:"arrow",angle:-3.10rad)
edge(node3.pos,(-0.61, -0.42),node1.pos,decoration:"wave",angle:4.74rad)
edge(node0.pos,(0.23, -0.33),node2.pos,decoration:"wave",angle:5.08rad)
edge(node3.pos,(-0.09, -0.08),node5.pos,decoration:"arrow",angle:6.26rad)
edge(node5.pos,(0.36, 0.37),node4.pos,decoration:"coil",angle:2.11rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.44rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.54rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-0.33rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:5.57rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.97rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.73rad)
})
let embedding19i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.62, -0.66))
node(node0.pos)
let node1= (pos:(0.54, -0.77))
node(node1.pos)
let node2= (pos:(-0.89, 0.54))
node(node2.pos)
let node3= (pos:(0.91, -0.07))
node(node3.pos)
let node4= (pos:(-0.05, 0.61))
node(node4.pos)
let node5= (pos:(-0.62, 0.06))
node(node5.pos)
edge(node1.pos,(-0.04, -0.73),node0.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.05, -0.85),angle:3.04rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.83),(-0.05, -0.79),(-0.51, -0.73),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.71, -0.43),node1.pos,decoration:"wave",angle:4.23rad)
cetz.draw.content((0.60, -0.37),angle:4.23rad,[q])
cetz.draw.hobby((0.82, -0.11),(0.66, -0.39),(0.52, -0.68),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.83, -0.11),node2.pos,decoration:"wave",angle:4.96rad)
cetz.draw.content((-0.95, -0.14),angle:4.96rad,[q])
cetz.draw.hobby((-0.73, -0.57),(-0.90, -0.09),(-0.95, 0.42),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.76, 0.31),node5.pos,decoration:"arrow",angle:2.08rad)
cetz.draw.content((-0.65, 0.37),angle:2.08rad,[p+2 q])
cetz.draw.hobby((-0.81, 0.53),(-0.70, 0.33),(-0.59, 0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.31, 0.33),node4.pos,decoration:"coil",angle:0.78rad)
cetz.draw.content((-0.22, 0.25),angle:0.78rad,[p+2 q+k[2]])
cetz.draw.hobby((-0.52, 0.06),(-0.28, 0.28),(-0.06, 0.51),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.41rad)
cetz.draw.content((-0.73, -0.92),angle:-2.41rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.98),(-0.65, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.68rad)
cetz.draw.content((0.82, -0.78),angle:2.68rad,[-k[0]])
cetz.draw.hobby((0.66, -0.76),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.25rad)
cetz.draw.content((1.07, -0.17),angle:-1.25rad,[k[2]])
cetz.draw.hobby((1.00, -0.15),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:0.80rad)
cetz.draw.content((-0.72, -0.22),angle:0.80rad,[k[2]])
cetz.draw.hobby((-0.89, -0.30),(-0.65, -0.05),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.85rad)
cetz.draw.content((-0.49, 0.36),angle:-2.85rad,[-q-k[2]])
cetz.draw.hobby((-0.89, 0.30),(-0.13, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.50rad)
cetz.draw.content((0.84, 0.15),angle:4.50rad,[-q-k[2]])
cetz.draw.hobby((0.88, 0.04),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.43, 0.92),angle:3.49rad,[p+q])
cetz.draw.hobby((0.02, 0.70),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.81rad)
cetz.draw.content((-1.06, 0.74),angle:1.81rad,[p+q])
cetz.draw.hobby((-1.03, 0.89),(-0.97, 0.63),stroke:stroke,mark: (end: ">"))
})
let embedding19f0=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.75))
node(node0.pos)
let node1= (pos:(-0.33, -0.79))
node(node1.pos)
let node2= (pos:(0.03, 0.18))
node(node2.pos)
let node3= (pos:(0.62, -0.08))
node(node3.pos)
let node4= (pos:(-0.84, 0.47))
node(node4.pos)
let node5= (pos:(0.71, 0.65))
node(node5.pos)
edge(node0.pos,(0.08, -0.83),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node3.pos,(0.12, -0.44),node1.pos,decoration:"wave",angle:3.78rad)
edge(node0.pos,(0.25, -0.29),node2.pos,decoration:"wave",angle:5.17rad)
edge(node2.pos,(0.35, 0.46),node5.pos,decoration:"arrow",angle:3.75rad)
edge(node3.pos,(0.70, 0.29),node5.pos,decoration:"arrow",angle:1.46rad)
edge(node4.pos,(-0.41, 0.34),node2.pos,decoration:"arrow",angle:2.82rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.89rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.36rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:0.87rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.00rad)
})
let embedding19f1=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.84))
node(node0.pos)
let node1= (pos:(-0.27, -0.64))
node(node1.pos)
let node2= (pos:(0.54, -0.16))
node(node2.pos)
let node3= (pos:(0.70, 0.47))
node(node3.pos)
let node4= (pos:(-0.54, 0.59))
node(node4.pos)
let node5= (pos:(-0.95, 0.05))
node(node5.pos)
edge(node0.pos,(0.15, -0.78),node1.pos,decoration:"arrow",angle:2.91rad)
edge(node3.pos,(0.18, -0.07),node1.pos,decoration:"wave",angle:3.99rad)
edge(node0.pos,(0.58, -0.50),node2.pos,decoration:"wave",angle:-1.51rad)
edge(node4.pos,(-0.00, 0.23),node2.pos,decoration:"arrow",angle:2.54rad)
edge(node5.pos,(-0.72, 0.31),node4.pos,decoration:"coil",angle:0.93rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.68rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.77rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.78rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.70rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:-0.42rad)
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:4.89rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.40rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.20rad)
})
let embedding19f2=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.63))
node(node0.pos)
let node1= (pos:(-0.47, -0.72))
node(node1.pos)
let node2= (pos:(-0.57, 0.52))
node(node2.pos)
let node3= (pos:(0.20, 0.08))
node(node3.pos)
let node4= (pos:(0.70, 0.74))
node(node4.pos)
let node5= (pos:(0.05, 0.68))
node(node5.pos)
edge(node0.pos,(-0.08, -0.73),node1.pos,decoration:"arrow",angle:-3.03rad)
edge(node3.pos,(-0.16, -0.32),node1.pos,decoration:"wave",angle:4.02rad)
edge(node0.pos,(-0.17, -0.07),node2.pos,decoration:"wave",angle:5.36rad)
edge(node2.pos,(-0.29, 0.66),node5.pos,decoration:"arrow",angle:3.42rad)
edge(node3.pos,(0.10, 0.37),node5.pos,decoration:"arrow",angle:1.81rad)
edge(node4.pos,(0.51, 0.38),node3.pos,decoration:"arrow",angle:-2.21rad)
edge(node5.pos,(0.38, 0.79),node4.pos,decoration:"coil",angle:0.08rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.86rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.30rad)
})
let embedding20i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.80))
node(node0.pos)
let node1= (pos:(0.58, -0.64))
node(node1.pos)
let node2= (pos:(-0.78, -0.21))
node(node2.pos)
let node3= (pos:(0.89, 0.32))
node(node3.pos)
let node4= (pos:(-0.99, 0.61))
node(node4.pos)
let node5= (pos:(-0.71, 0.21))
node(node5.pos)
edge(node1.pos,(0.06, -0.74),node0.pos,decoration:"arrow",angle:-2.99rad)
cetz.draw.content((0.07, -0.85),angle:-2.99rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.72),(0.06, -0.80),(-0.37, -0.85),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.72, -0.17),node1.pos,decoration:"wave",angle:4.41rad)
cetz.draw.content((0.61, -0.13),angle:4.41rad,[q])
cetz.draw.hobby((0.80, 0.24),(0.67, -0.14),(0.55, -0.52),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.52),node2.pos,decoration:"wave",angle:5.18rad)
cetz.draw.content((-0.75, -0.57),angle:5.18rad,[q])
cetz.draw.hobby((-0.57, -0.77),(-0.70, -0.54),(-0.81, -0.29),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.60, -0.02),node5.pos,decoration:"arrow",angle:-1.74rad)
cetz.draw.content((-0.48, -0.04),angle:-1.74rad,[q+k[3]])
cetz.draw.hobby((-0.71, -0.24),(-0.54, -0.04),(-0.62, 0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.20),node2.pos,decoration:"arrow",angle:1.79rad)
cetz.draw.content((-1.12, 0.17),angle:1.79rad,[k[3]])
cetz.draw.hobby((-1.07, 0.54),(-1.05, 0.16),(-0.89, -0.18),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.77, 0.48),node4.pos,decoration:"coil",angle:2.22rad)
cetz.draw.content((-0.67, 0.55),angle:2.22rad,[q+k[2]+k[3]])
cetz.draw.hobby((-0.64, 0.26),(-0.71, 0.51),(-0.92, 0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.95, -0.95),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.68, -0.99),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.84, -0.98),(-0.56, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.95, -0.95),decoration:"arrow",angle:2.43rad)
cetz.draw.content((0.85, -0.70),angle:2.43rad,[-k[0]])
cetz.draw.hobby((0.70, -0.66),(0.91, -0.84),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.95, 0.00),decoration:"arrow",angle:-1.37rad)
cetz.draw.content((1.04, 0.18),angle:-1.37rad,[k[2]])
cetz.draw.hobby((0.96, 0.23),(0.99, 0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.95, 0.00),decoration:"arrow",angle:0.70rad)
cetz.draw.content((-0.75, 0.01),angle:0.70rad,[k[2]])
cetz.draw.hobby((-0.84, 0.02),(-0.74, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.95, 0.95),decoration:"arrow",angle:1.46rad)
cetz.draw.content((-1.09, 0.79),angle:1.46rad,[-q-k[2]])
cetz.draw.hobby((-1.02, 0.86),(-1.04, 0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.95, 0.95),decoration:"arrow",angle:4.61rad)
cetz.draw.content((0.80, 0.65),angle:4.61rad,[-q-k[2]])
cetz.draw.hobby((0.84, 0.42),(0.88, 0.86),stroke:stroke,mark: (end: ">"))
})
let embedding20i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.57, -0.60))
node(node0.pos)
let node1= (pos:(0.44, -0.69))
node(node1.pos)
let node2= (pos:(-0.85, 0.31))
node(node2.pos)
let node3= (pos:(0.51, 0.02))
node(node3.pos)
let node4= (pos:(0.78, 0.66))
node(node4.pos)
let node5= (pos:(1.00, 0.22))
node(node5.pos)
edge(node1.pos,(-0.07, -0.66),node0.pos,decoration:"arrow",angle:3.04rad)
cetz.draw.content((-0.08, -0.78),angle:3.04rad,[q+k[0]])
cetz.draw.hobby((0.33, -0.75),(-0.07, -0.72),(-0.48, -0.67),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.47, -0.35),node1.pos,decoration:"wave",angle:4.61rad)
cetz.draw.content((0.35, -0.33),angle:4.61rad,[q])
cetz.draw.hobby((0.44, -0.04),(0.41, -0.33),(0.38, -0.62),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.16),node2.pos,decoration:"wave",angle:-1.27rad)
cetz.draw.content((-0.58, -0.12),angle:-1.27rad,[q])
cetz.draw.hobby((-0.53, -0.49),(-0.64, -0.12),(-0.76, 0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, 0.13),node5.pos,decoration:"arrow",angle:0.39rad)
cetz.draw.content((0.70, 0.24),angle:0.39rad,[k[2]])
cetz.draw.hobby((0.53, 0.10),(0.73, 0.19),(0.93, 0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.58, 0.38),node3.pos,decoration:"arrow",angle:4.29rad)
cetz.draw.content((0.47, 0.43),angle:4.29rad,[q+k[2]])
cetz.draw.hobby((0.69, 0.65),(0.52, 0.40),(0.45, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.99, 0.49),node4.pos,decoration:"coil",angle:2.03rad)
cetz.draw.content((1.09, 0.55),angle:2.03rad,[q+k[2]+k[3]])
cetz.draw.hobby((1.07, 0.26),(1.04, 0.52),(0.86, 0.70),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.91, -0.91),decoration:"arrow",angle:-2.40rad)
cetz.draw.content((-0.66, -0.84),angle:-2.40rad,[-k[0]])
cetz.draw.hobby((-0.80, -0.89),(-0.60, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.91, -0.91),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.72, -0.69),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.55, -0.68),(0.85, -0.82),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.91, 0.00),decoration:"arrow",angle:1.38rad)
cetz.draw.content((-0.76, 0.13),angle:1.38rad,[-q-k[3]])
cetz.draw.hobby((-0.83, 0.09),(-0.81, 0.20),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.91, 0.00),decoration:"arrow",angle:-1.95rad)
cetz.draw.content((1.07, 0.07),angle:-1.95rad,[-q-k[3]])
cetz.draw.hobby((1.02, 0.11),(1.00, 0.07),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.91, 0.91),decoration:"arrow",angle:4.24rad)
cetz.draw.content((0.74, 0.84),angle:4.24rad,[k[3]])
cetz.draw.hobby((0.78, 0.78),(0.81, 0.85),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.91, 0.91),decoration:"arrow",angle:1.67rad)
cetz.draw.content((-1.00, 0.60),angle:1.67rad,[k[3]])
cetz.draw.hobby((-0.96, 0.81),(-0.92, 0.40),stroke:stroke,mark: (end: ">"))
})
let embedding20i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.53, -0.85))
node(node0.pos)
let node1= (pos:(0.56, -0.79))
node(node1.pos)
let node2= (pos:(-0.78, -0.18))
node(node2.pos)
let node3= (pos:(0.81, 0.01))
node(node3.pos)
let node4= (pos:(-0.94, 0.60))
node(node4.pos)
let node5= (pos:(0.89, 0.48))
node(node5.pos)
edge(node1.pos,(0.02, -0.84),node0.pos,decoration:"arrow",angle:-3.09rad)
cetz.draw.content((0.02, -0.96),angle:-3.09rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.87),(0.02, -0.90),(-0.42, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, -0.40),node1.pos,decoration:"wave",angle:-1.88rad)
cetz.draw.content((0.80, -0.44),angle:-1.88rad,[q])
cetz.draw.hobby((0.85, -0.09),(0.75, -0.41),(0.64, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.52),node2.pos,decoration:"wave",angle:-1.21rad)
cetz.draw.content((-0.53, -0.48),angle:-1.21rad,[q])
cetz.draw.hobby((-0.49, -0.77),(-0.59, -0.49),(-0.70, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.73, 0.27),node5.pos,decoration:"arrow",angle:1.40rad)
cetz.draw.content((0.61, 0.29),angle:1.40rad,[k[2]])
cetz.draw.hobby((0.73, 0.02),(0.67, 0.28),(0.81, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.81, 0.20),node2.pos,decoration:"arrow",angle:1.76rad)
cetz.draw.content((-0.69, 0.23),angle:1.76rad,[k[3]])
cetz.draw.hobby((-0.85, 0.55),(-0.76, 0.23),(-0.72, -0.10),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.73, -1.04),angle:-2.84rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.60, -0.94),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
cetz.draw.content((0.83, -0.79),angle:2.71rad,[-k[0]])
cetz.draw.hobby((0.67, -0.78),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.61rad)
cetz.draw.content((-0.82, -0.36),angle:0.61rad,[-q-k[3]])
cetz.draw.hobby((-0.88, -0.33),(-0.83, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.44rad)
cetz.draw.content((1.07, 0.09),angle:-1.44rad,[-q-k[3]])
cetz.draw.hobby((0.96, 0.39),(1.05, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.80rad)
cetz.draw.content((-0.85, 0.44),angle:-1.80rad,[-q-k[2]])
cetz.draw.hobby((-0.92, 0.42),(-0.90, 0.49),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.19rad)
cetz.draw.content((0.80, 0.23),angle:4.19rad,[-q-k[2]])
cetz.draw.hobby((0.81, 0.13),(0.90, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.37rad)
cetz.draw.content((0.83, 0.77),angle:1.37rad,[q+k[2]+k[3]])
cetz.draw.hobby((0.85, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:4.86rad)
cetz.draw.content((-1.09, 0.78),angle:4.86rad,[q+k[2]+k[3]])
cetz.draw.hobby((-1.04, 0.89),(-1.01, 0.69),stroke:stroke,mark: (end: ">"))
})
let embedding20i3=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.80))
node(node0.pos)
let node1= (pos:(0.53, -0.85))
node(node1.pos)
let node2= (pos:(-0.81, 0.01))
node(node2.pos)
let node3= (pos:(0.78, -0.18))
node(node3.pos)
let node4= (pos:(0.94, 0.60))
node(node4.pos)
let node5= (pos:(-0.88, 0.48))
node(node5.pos)
edge(node1.pos,(-0.02, -0.85),node0.pos,decoration:"arrow",angle:3.09rad)
cetz.draw.content((-0.02, -0.96),angle:3.09rad,[q+k[0]])
cetz.draw.hobby((0.42, -0.92),(-0.02, -0.90),(-0.46, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.65, -0.53),node1.pos,decoration:"wave",angle:4.35rad)
cetz.draw.content((0.53, -0.48),angle:4.35rad,[q])
cetz.draw.hobby((0.70, -0.23),(0.59, -0.50),(0.49, -0.77),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.69, -0.40),node2.pos,decoration:"wave",angle:5.02rad)
cetz.draw.content((-0.80, -0.44),angle:5.02rad,[q])
cetz.draw.hobby((-0.64, -0.74),(-0.75, -0.41),(-0.85, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.72, 0.26),node5.pos,decoration:"arrow",angle:-1.41rad)
cetz.draw.content((-0.60, 0.28),angle:-1.41rad,[q+k[3]])
cetz.draw.hobby((-0.73, 0.01),(-0.66, 0.27),(-0.80, 0.50),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.81, 0.20),node3.pos,decoration:"arrow",angle:4.52rad)
cetz.draw.content((0.69, 0.23),angle:4.52rad,[q+k[2]])
cetz.draw.hobby((0.85, 0.55),(0.76, 0.23),(0.72, -0.10),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
cetz.draw.content((-0.73, -1.01),angle:-2.71rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.62, -0.89),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.84rad)
cetz.draw.content((0.80, -0.81),angle:2.84rad,[-k[0]])
cetz.draw.hobby((0.64, -0.83),(0.92, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.60rad)
cetz.draw.content((0.96, -0.16),angle:-0.60rad,[k[2]])
cetz.draw.hobby((0.90, -0.19),(0.95, -0.23),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:1.43rad)
cetz.draw.content((-0.82, 0.06),angle:1.43rad,[k[2]])
cetz.draw.hobby((-0.93, -0.24),(-0.84, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:1.79rad)
cetz.draw.content((1.09, 0.49),angle:1.79rad,[k[3]])
cetz.draw.hobby((1.02, 0.51),(1.04, 0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.09rad)
cetz.draw.content((-1.01, 0.11),angle:2.09rad,[k[3]])
cetz.draw.hobby((-1.00, 0.22),(-0.91, 0.06),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.79rad)
cetz.draw.content((-1.06, 0.71),angle:1.79rad,[-q-k[2]-k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.96, 0.56),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.57rad)
cetz.draw.content((0.85, 0.82),angle:4.57rad,[-q-k[2]-k[3]])
cetz.draw.hobby((0.90, 0.71),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding20f0=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.00))
node(node0.pos)
let node1= (pos:(-0.47, 0.03))
node(node1.pos)
let node2= (pos:(0.60, 0.58))
node(node2.pos)
let node3= (pos:(-0.36, 0.62))
node(node3.pos)
let node4= (pos:(0.13, 0.55))
node(node4.pos)
let node5= (pos:(0.14, 1.00))
node(node5.pos)
edge(node0.pos,(0.01, -0.03),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node3.pos,(-0.47, 0.33),node1.pos,decoration:"wave",angle:4.54rad)
edge(node0.pos,(0.61, 0.27),node2.pos,decoration:"wave",angle:-1.77rad)
edge(node2.pos,(0.45, 0.86),node5.pos,decoration:"arrow",angle:-0.75rad)
edge(node3.pos,(-0.17, 0.89),node5.pos,decoration:"arrow",angle:0.64rad)
edge(node4.pos,(-0.13, 0.53),node3.pos,decoration:"arrow",angle:2.98rad)
edge(node4.pos,(0.38, 0.52),node2.pos,decoration:"arrow",angle:-3.06rad)
edge(node5.pos,(0.14, 0.79),node4.pos,decoration:"coil",angle:-1.61rad)
edge(node1.pos,(-0.88, 0.00),decoration:"arrow",angle:-3.07rad)
edge(node0.pos,(0.88, 0.00),decoration:"arrow",angle:3.15rad)
})
let embedding21i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.60))
node(node0.pos)
let node1= (pos:(0.50, -0.73))
node(node1.pos)
let node2= (pos:(-0.74, 0.51))
node(node2.pos)
let node3= (pos:(0.54, 0.07))
node(node3.pos)
let node4= (pos:(0.05, 0.56))
node(node4.pos)
let node5= (pos:(0.74, 0.75))
node(node5.pos)
edge(node1.pos,(-0.06, -0.69),node0.pos,decoration:"arrow",angle:3.02rad)
cetz.draw.content((-0.07, -0.81),angle:3.02rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.79),(-0.06, -0.75),(-0.50, -0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.54, -0.34),node1.pos,decoration:"wave",angle:-1.62rad)
cetz.draw.content((0.66, -0.35),angle:-1.62rad,[q])
cetz.draw.hobby((0.60, -0.01),(0.60, -0.34),(0.57, -0.66),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.69, -0.05),node2.pos,decoration:"wave",angle:4.83rad)
cetz.draw.content((-0.81, -0.07),angle:4.83rad,[q])
cetz.draw.hobby((-0.68, -0.50),(-0.75, -0.06),(-0.79, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, 0.40),node5.pos,decoration:"arrow",angle:1.29rad)
cetz.draw.content((0.82, 0.36),angle:1.29rad,[k[2]])
cetz.draw.hobby((0.63, 0.09),(0.76, 0.37),(0.80, 0.68),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.27, 0.29),node3.pos,decoration:"arrow",angle:5.49rad)
cetz.draw.content((0.18, 0.20),angle:5.49rad,[q+k[2]])
cetz.draw.hobby((0.04, 0.47),(0.23, 0.25),(0.45, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.35, 0.55),node2.pos,decoration:"arrow",angle:0.07rad)
cetz.draw.content((-0.36, 0.67),angle:0.07rad,[-p-q])
cetz.draw.hobby((-0.02, 0.62),(-0.35, 0.61),(-0.67, 0.58),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.39, 0.72),node4.pos,decoration:"coil",angle:3.41rad)
cetz.draw.content((0.36, 0.83),angle:3.41rad,[-p+k[2]])
cetz.draw.hobby((0.67, 0.81),(0.37, 0.77),(0.08, 0.65),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
cetz.draw.content((-0.72, -0.89),angle:-2.36rad,[-k[0]])
cetz.draw.hobby((-0.89, -0.97),(-0.63, -0.71),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
cetz.draw.content((0.81, -0.76),angle:2.65rad,[-k[0]])
cetz.draw.hobby((0.62, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.20rad)
cetz.draw.content((-0.98, 0.70),angle:5.20rad,[p])
cetz.draw.hobby((-1.01, 0.88),(-0.84, 0.57),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((0.79, 0.96),angle:0.77rad,[p])
cetz.draw.hobby((0.77, 0.86),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding21i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.46, -0.74))
node(node0.pos)
let node1= (pos:(0.58, -0.82))
node(node1.pos)
let node2= (pos:(-0.22, 0.16))
node(node2.pos)
let node3= (pos:(0.77, -0.09))
node(node3.pos)
let node4= (pos:(0.65, 0.64))
node(node4.pos)
let node5= (pos:(-0.91, 0.48))
node(node5.pos)
edge(node1.pos,(0.06, -0.81),node0.pos,decoration:"arrow",angle:3.07rad)
cetz.draw.content((0.05, -0.93),angle:3.07rad,[q+k[0]])
cetz.draw.hobby((0.47, -0.88),(0.05, -0.87),(-0.37, -0.82),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, -0.47),node1.pos,decoration:"wave",angle:-1.83rad)
cetz.draw.content((0.80, -0.50),angle:-1.83rad,[q])
cetz.draw.hobby((0.81, -0.18),(0.75, -0.47),(0.66, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.35, -0.30),node2.pos,decoration:"wave",angle:4.46rad)
cetz.draw.content((-0.47, -0.27),angle:4.46rad,[q])
cetz.draw.hobby((-0.50, -0.64),(-0.41, -0.28),(-0.31, 0.08),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.57, 0.34),node5.pos,decoration:"arrow",angle:-0.44rad)
cetz.draw.content((-0.51, 0.44),angle:-0.44rad,[-p])
cetz.draw.hobby((-0.26, 0.25),(-0.53, 0.39),(-0.82, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.72, 0.28),node3.pos,decoration:"arrow",angle:-1.40rad)
cetz.draw.content((0.84, 0.30),angle:-1.40rad,[q+k[2]])
cetz.draw.hobby((0.72, 0.58),(0.78, 0.28),(0.82, -0.01),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.20, 0.42),node2.pos,decoration:"arrow",angle:0.50rad)
cetz.draw.content((0.14, 0.52),angle:0.50rad,[-p-q])
cetz.draw.hobby((0.53, 0.65),(0.17, 0.47),(-0.17, 0.26),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.68, -0.98),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.52, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.73rad)
cetz.draw.content((0.84, -0.80),angle:2.73rad,[-k[0]])
cetz.draw.hobby((0.69, -0.80),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.39rad)
cetz.draw.content((0.84, 0.06),angle:0.39rad,[k[2]])
cetz.draw.hobby((0.84, -0.00),(0.88, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.38rad)
cetz.draw.content((-0.84, 0.22),angle:1.38rad,[k[2]])
cetz.draw.hobby((-0.92, 0.09),(-0.87, 0.37),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.74rad)
cetz.draw.content((-1.07, 0.72),angle:1.74rad,[p-k[2]])
cetz.draw.hobby((-1.04, 0.89),(-0.99, 0.57),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.94rad)
cetz.draw.content((0.74, 0.90),angle:3.94rad,[p-k[2]])
cetz.draw.hobby((0.67, 0.75),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding21i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.31, -0.66))
node(node0.pos)
let node1= (pos:(0.63, -0.79))
node(node1.pos)
let node2= (pos:(0.31, 0.42))
node(node2.pos)
let node3= (pos:(0.95, -0.07))
node(node3.pos)
let node4= (pos:(-0.95, 0.64))
node(node4.pos)
let node5= (pos:(-0.63, 0.05))
node(node5.pos)
edge(node1.pos,(0.15, -0.75),node0.pos,decoration:"arrow",angle:3.01rad)
cetz.draw.content((0.14, -0.87),angle:3.01rad,[q+k[0]])
cetz.draw.hobby((0.53, -0.85),(0.15, -0.81),(-0.23, -0.74),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.76, -0.44),node1.pos,decoration:"wave",angle:4.30rad)
cetz.draw.content((0.65, -0.39),angle:4.30rad,[q])
cetz.draw.hobby((0.86, -0.11),(0.72, -0.40),(0.60, -0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.01, -0.13),node2.pos,decoration:"wave",angle:-2.09rad)
cetz.draw.content((0.11, -0.19),angle:-2.09rad,[q])
cetz.draw.hobby((-0.19, -0.59),(0.06, -0.16),(0.30, 0.28),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.16, 0.26),node5.pos,decoration:"arrow",angle:0.37rad)
cetz.draw.content((-0.20, 0.37),angle:0.37rad,[-p])
cetz.draw.hobby((0.19, 0.45),(-0.19, 0.31),(-0.57, 0.15),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.75, 0.37),node4.pos,decoration:"coil",angle:2.07rad)
cetz.draw.content((-0.64, 0.43),angle:2.07rad,[-p+k[2]])
cetz.draw.hobby((-0.59, 0.13),(-0.69, 0.40),(-0.86, 0.63),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.68rad)
cetz.draw.content((-0.60, -0.94),angle:-2.68rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.37, -0.76),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.62rad)
cetz.draw.content((0.87, -0.79),angle:2.62rad,[-k[0]])
cetz.draw.hobby((0.75, -0.79),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.37rad)
cetz.draw.content((1.09, -0.18),angle:-1.37rad,[k[2]])
cetz.draw.hobby((1.03, -0.16),(1.04, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:0.81rad)
cetz.draw.content((-0.73, -0.22),angle:0.81rad,[k[2]])
cetz.draw.hobby((-0.89, -0.30),(-0.66, -0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.72rad)
cetz.draw.content((-0.86, 0.47),angle:-1.72rad,[-q-k[2]])
cetz.draw.hobby((-0.93, 0.42),(-0.91, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.59rad)
cetz.draw.content((0.85, 0.14),angle:4.59rad,[-q-k[2]])
cetz.draw.hobby((0.90, 0.03),(0.93, 0.24),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.84rad)
cetz.draw.content((-1.10, 0.81),angle:4.84rad,[p+q])
cetz.draw.hobby((-1.05, 0.89),(-1.03, 0.73),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.70rad)
cetz.draw.content((0.58, 0.80),angle:0.70rad,[p+q])
cetz.draw.hobby((0.35, 0.53),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding21f0=cetz.canvas(length:50%,{
let node0= (pos:(0.46, -0.74))
node(node0.pos)
let node1= (pos:(-0.58, -0.81))
node(node1.pos)
let node2= (pos:(0.23, 0.16))
node(node2.pos)
let node3= (pos:(-0.77, -0.09))
node(node3.pos)
let node4= (pos:(0.91, 0.48))
node(node4.pos)
let node5= (pos:(-0.65, 0.64))
node(node5.pos)
edge(node0.pos,(-0.06, -0.80),node1.pos,decoration:"arrow",angle:-3.08rad)
edge(node3.pos,(-0.68, -0.46),node1.pos,decoration:"wave",angle:4.97rad)
edge(node0.pos,(0.36, -0.30),node2.pos,decoration:"wave",angle:-1.32rad)
edge(node2.pos,(-0.20, 0.42),node5.pos,decoration:"arrow",angle:-0.50rad)
edge(node3.pos,(-0.73, 0.29),node5.pos,decoration:"arrow",angle:1.40rad)
edge(node4.pos,(0.57, 0.34),node2.pos,decoration:"arrow",angle:0.44rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:-1.39rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:5.92rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.34rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.54rad)
})
let embedding21f1=cetz.canvas(length:50%,{
let node0= (pos:(0.32, -0.80))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(-0.29, -0.17))
node(node2.pos)
let node3= (pos:(-0.92, 0.53))
node(node3.pos)
let node4= (pos:(0.60, 0.59))
node(node4.pos)
let node5= (pos:(0.96, 0.04))
node(node5.pos)
edge(node0.pos,(-0.19, -0.77),node1.pos,decoration:"arrow",angle:2.98rad)
edge(node3.pos,(-0.82, -0.05),node1.pos,decoration:"wave",angle:4.91rad)
edge(node0.pos,(0.04, -0.48),node2.pos,decoration:"wave",angle:-0.80rad)
edge(node4.pos,(0.15, 0.22),node2.pos,decoration:"arrow",angle:0.71rad)
edge(node5.pos,(0.74, 0.31),node4.pos,decoration:"coil",angle:2.15rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.29rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.22rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.47rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.95rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:4.58rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:0.80rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
})
let embedding21f2=cetz.canvas(length:50%,{
let node0= (pos:(0.60, -0.60))
node(node0.pos)
let node1= (pos:(-0.50, -0.74))
node(node1.pos)
let node2= (pos:(0.74, 0.51))
node(node2.pos)
let node3= (pos:(-0.54, 0.06))
node(node3.pos)
let node4= (pos:(-0.74, 0.75))
node(node4.pos)
let node5= (pos:(-0.05, 0.55))
node(node5.pos)
edge(node0.pos,(0.06, -0.69),node1.pos,decoration:"arrow",angle:-3.02rad)
edge(node3.pos,(-0.54, -0.35),node1.pos,decoration:"wave",angle:4.76rad)
edge(node0.pos,(0.69, -0.05),node2.pos,decoration:"wave",angle:-1.69rad)
edge(node2.pos,(0.36, 0.55),node5.pos,decoration:"arrow",angle:-0.06rad)
edge(node3.pos,(-0.27, 0.28),node5.pos,decoration:"arrow",angle:0.79rad)
edge(node4.pos,(-0.70, 0.39),node3.pos,decoration:"arrow",angle:4.99rad)
edge(node5.pos,(-0.38, 0.71),node4.pos,decoration:"coil",angle:2.87rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.52rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.08rad)
})
let embedding22i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.60, -0.66))
node(node0.pos)
let node1= (pos:(0.52, -0.83))
node(node1.pos)
let node2= (pos:(-0.76, 0.44))
node(node2.pos)
let node3= (pos:(0.69, -0.17))
node(node3.pos)
let node4= (pos:(0.02, 0.60))
node(node4.pos)
let node5= (pos:(-0.01, 0.16))
node(node5.pos)
edge(node1.pos,(-0.04, -0.78),node0.pos,decoration:"arrow",angle:2.99rad)
cetz.draw.content((-0.06, -0.89),angle:2.99rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.89),(-0.05, -0.84),(-0.50, -0.75),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.64, -0.51),node1.pos,decoration:"wave",angle:-1.83rad)
cetz.draw.content((0.75, -0.54),angle:-1.83rad,[q])
cetz.draw.hobby((0.75, -0.24),(0.70, -0.52),(0.60, -0.79),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.13),node2.pos,decoration:"wave",angle:4.86rad)
cetz.draw.content((-0.82, -0.14),angle:4.86rad,[q])
cetz.draw.hobby((-0.68, -0.57),(-0.76, -0.13),(-0.81, 0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.41, 0.30),node5.pos,decoration:"arrow",angle:2.79rad)
cetz.draw.content((-0.45, 0.19),angle:2.79rad,[q+k[3]])
cetz.draw.hobby((-0.71, 0.35),(-0.41, 0.24),(-0.11, 0.13),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, -0.01),node5.pos,decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.30, -0.12),angle:2.70rad,[-p-q+k[3]])
cetz.draw.hobby((0.60, -0.19),(0.32, -0.06),(0.03, 0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.12, 0.39),node4.pos,decoration:"coil",angle:1.56rad)
cetz.draw.content((0.24, 0.39),angle:1.56rad,[-p+2 k[3]])
cetz.draw.hobby((0.07, 0.15),(0.18, 0.37),(0.10, 0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.45rad)
cetz.draw.content((-0.72, -0.92),angle:-2.45rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.98),(-0.63, -0.77),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
cetz.draw.content((0.80, -0.80),angle:2.81rad,[-k[0]])
cetz.draw.hobby((0.64, -0.81),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.61rad)
cetz.draw.content((-0.43, 0.20),angle:-2.61rad,[p-k[3]])
cetz.draw.hobby((-0.88, -0.00),(-0.04, 0.50),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.79, 0.02),angle:3.64rad,[p-k[3]])
cetz.draw.hobby((0.75, -0.07),(0.88, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.53rad)
cetz.draw.content((0.46, 0.91),angle:3.53rad,[k[3]])
cetz.draw.hobby((0.09, 0.69),(0.88, 1.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.98rad)
cetz.draw.content((-0.99, 0.67),angle:1.98rad,[k[3]])
cetz.draw.hobby((-1.02, 0.88),(-0.85, 0.51),stroke:stroke,mark: (end: ">"))
})
let embedding22f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.84))
node(node0.pos)
let node1= (pos:(-0.48, -0.76))
node(node1.pos)
let node2= (pos:(0.12, -0.15))
node(node2.pos)
let node3= (pos:(-0.15, 0.16))
node(node3.pos)
let node4= (pos:(0.77, 0.62))
node(node4.pos)
let node5= (pos:(-0.80, 0.36))
node(node5.pos)
edge(node0.pos,(-0.01, -0.85),node1.pos,decoration:"arrow",angle:3.06rad)
edge(node3.pos,(-0.35, -0.31),node1.pos,decoration:"wave",angle:4.37rad)
edge(node0.pos,(0.32, -0.49),node2.pos,decoration:"wave",angle:-1.10rad)
edge(node3.pos,(-0.48, 0.29),node5.pos,decoration:"arrow",angle:2.85rad)
edge(node4.pos,(0.32, 0.42),node3.pos,decoration:"arrow",angle:3.60rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.71rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.85rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.93rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.85rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:2.24rad)
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:2.74rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.87rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.17rad)
})
let embedding22f1=cetz.canvas(length:50%,{
let node0= (pos:(0.48, -0.76))
node(node0.pos)
let node1= (pos:(-0.47, -0.84))
node(node1.pos)
let node2= (pos:(0.15, 0.16))
node(node2.pos)
let node3= (pos:(-0.12, -0.15))
node(node3.pos)
let node4= (pos:(-0.77, 0.62))
node(node4.pos)
let node5= (pos:(0.80, 0.36))
node(node5.pos)
edge(node0.pos,(0.01, -0.85),node1.pos,decoration:"arrow",angle:-3.06rad)
edge(node3.pos,(-0.31, -0.49),node1.pos,decoration:"wave",angle:4.24rad)
edge(node0.pos,(0.35, -0.31),node2.pos,decoration:"wave",angle:-1.23rad)
edge(node2.pos,(0.48, 0.29),node5.pos,decoration:"arrow",angle:3.44rad)
edge(node4.pos,(-0.31, 0.42),node2.pos,decoration:"arrow",angle:2.68rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.85rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.71rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.93rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:1.85rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.24rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.55rad)
edge(node5.pos,(1.00, 1.00),decoration:"coil",angle:1.27rad)
edge(node4.pos,(-1.00, 1.00),decoration:"coil",angle:5.26rad)
})
let embedding22f2=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.76))
node(node0.pos)
let node1= (pos:(-0.33, -0.64))
node(node1.pos)
let node2= (pos:(0.55, 0.03))
node(node2.pos)
let node3= (pos:(0.34, 0.47))
node(node3.pos)
let node4= (pos:(-0.53, 0.74))
node(node4.pos)
let node5= (pos:(-0.63, 0.22))
node(node5.pos)
edge(node0.pos,(0.12, -0.74),node1.pos,decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.00, -0.10),node1.pos,decoration:"wave",angle:-2.11rad)
edge(node0.pos,(0.59, -0.37),node2.pos,decoration:"wave",angle:-1.52rad)
edge(node3.pos,(-0.16, 0.35),node5.pos,decoration:"arrow",angle:3.40rad)
edge(node4.pos,(0.01, 0.40),node2.pos,decoration:"arrow",angle:2.57rad)
edge(node5.pos,(-0.66, 0.49),node4.pos,decoration:"coil",angle:1.38rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.60rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.07rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.61rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.62rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.82rad)
})
let embedding22f3=cetz.canvas(length:50%,{
let node0= (pos:(0.33, -0.64))
node(node0.pos)
let node1= (pos:(-0.59, -0.76))
node(node1.pos)
let node2= (pos:(-0.34, 0.47))
node(node2.pos)
let node3= (pos:(-0.55, 0.03))
node(node3.pos)
let node4= (pos:(0.54, 0.73))
node(node4.pos)
let node5= (pos:(0.63, 0.22))
node(node5.pos)
edge(node0.pos,(-0.12, -0.74),node1.pos,decoration:"arrow",angle:-3.02rad)
edge(node3.pos,(-0.59, -0.37),node1.pos,decoration:"wave",angle:4.66rad)
edge(node0.pos,(0.00, -0.10),node2.pos,decoration:"wave",angle:5.26rad)
edge(node2.pos,(0.16, 0.35),node5.pos,decoration:"arrow",angle:2.89rad)
edge(node4.pos,(-0.00, 0.40),node3.pos,decoration:"arrow",angle:3.71rad)
edge(node5.pos,(0.67, 0.50),node4.pos,decoration:"coil",angle:1.76rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.60rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:-3.07rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.61rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.66rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.47rad)
})
let embedding23i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.81))
node(node0.pos)
let node1= (pos:(0.46, -0.74))
node(node1.pos)
let node2= (pos:(-0.77, -0.09))
node(node2.pos)
let node3= (pos:(0.23, 0.16))
node(node3.pos)
let node4= (pos:(0.91, 0.48))
node(node4.pos)
let node5= (pos:(-0.65, 0.64))
node(node5.pos)
edge(node1.pos,(-0.05, -0.80),node0.pos,decoration:"arrow",angle:-3.07rad)
cetz.draw.content((-0.05, -0.92),angle:-3.07rad,[q+k[0]])
cetz.draw.hobby((0.37, -0.82),(-0.05, -0.86),(-0.47, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.36, -0.29),node1.pos,decoration:"wave",angle:-1.32rad)
cetz.draw.content((0.47, -0.26),angle:-1.32rad,[q])
cetz.draw.hobby((0.31, 0.09),(0.41, -0.27),(0.50, -0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.68, -0.46),node2.pos,decoration:"wave",angle:4.97rad)
cetz.draw.content((-0.80, -0.49),angle:4.97rad,[q])
cetz.draw.hobby((-0.66, -0.76),(-0.74, -0.47),(-0.81, -0.17),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.72, 0.29),node5.pos,decoration:"arrow",angle:4.55rad)
cetz.draw.content((-0.84, 0.31),angle:4.55rad,[q+k[3]])
cetz.draw.hobby((-0.82, -0.01),(-0.78, 0.29),(-0.72, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.20, 0.42),node5.pos,decoration:"arrow",angle:2.64rad)
cetz.draw.content((-0.14, 0.53),angle:2.64rad,[-p-q])
cetz.draw.hobby((0.18, 0.27),(-0.17, 0.47),(-0.53, 0.65),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.57, 0.34),node3.pos,decoration:"arrow",angle:3.58rad)
cetz.draw.content((0.52, 0.45),angle:3.58rad,[-p])
cetz.draw.hobby((0.82, 0.51),(0.54, 0.39),(0.27, 0.25),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
cetz.draw.content((-0.74, -1.01),angle:-2.72rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.64, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.78, -0.76),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.58, -0.73),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:1.75rad)
cetz.draw.content((1.07, 0.26),angle:1.75rad,[k[3]])
cetz.draw.hobby((0.99, 0.39),(1.04, 0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.79rad)
cetz.draw.content((-0.92, -0.16),angle:2.79rad,[k[3]])
cetz.draw.hobby((-0.93, -0.09),(-0.88, -0.11),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.34rad)
cetz.draw.content((-0.91, 0.73),angle:2.34rad,[p-k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.76, 0.67),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.55rad)
cetz.draw.content((0.84, 0.76),angle:4.55rad,[p-k[3]])
cetz.draw.hobby((0.87, 0.59),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding23i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.64, -0.73))
node(node0.pos)
let node1= (pos:(0.32, -0.70))
node(node1.pos)
let node2= (pos:(-0.94, 0.11))
node(node2.pos)
let node3= (pos:(-0.29, 0.21))
node(node3.pos)
let node4= (pos:(0.62, 0.69))
node(node4.pos)
let node5= (pos:(0.95, 0.06))
node(node5.pos)
edge(node1.pos,(-0.16, -0.75),node0.pos,decoration:"arrow",angle:-3.11rad)
cetz.draw.content((-0.15, -0.87),angle:-3.11rad,[q+k[0]])
cetz.draw.hobby((0.24, -0.77),(-0.16, -0.81),(-0.55, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.02, -0.24),node1.pos,decoration:"wave",angle:-0.98rad)
cetz.draw.content((0.12, -0.18),angle:-0.98rad,[q])
cetz.draw.hobby((-0.18, 0.16),(0.07, -0.21),(0.31, -0.57),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.76, -0.30),node2.pos,decoration:"wave",angle:-1.23rad)
cetz.draw.content((-0.64, -0.26),angle:-1.23rad,[q])
cetz.draw.hobby((-0.60, -0.63),(-0.70, -0.28),(-0.84, 0.06),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.15, 0.47),node3.pos,decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.10, 0.58),angle:3.63rad,[-p])
cetz.draw.hobby((0.50, 0.70),(0.12, 0.52),(-0.23, 0.32),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.75, 0.37),node4.pos,decoration:"coil",angle:2.05rad)
cetz.draw.content((0.65, 0.32),angle:2.05rad,[-p+k[3]])
cetz.draw.hobby((0.86, 0.08),(0.71, 0.33),(0.59, 0.60),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.50rad)
cetz.draw.content((-0.75, -0.96),angle:-2.50rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.99),(-0.68, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
cetz.draw.content((0.71, -0.74),angle:2.72rad,[-k[0]])
cetz.draw.hobby((0.44, -0.68),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.43rad)
cetz.draw.content((-0.85, -0.13),angle:1.43rad,[-q-k[3]])
cetz.draw.hobby((-0.93, -0.24),(-0.89, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.44rad)
cetz.draw.content((1.09, -0.12),angle:-1.44rad,[-q-k[3]])
cetz.draw.hobby((1.02, -0.03),(1.05, -0.23),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:2.97rad)
cetz.draw.content((-0.66, 0.15),angle:2.97rad,[p+q])
cetz.draw.hobby((-0.91, 0.26),(-0.40, 0.17),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.86, 0.22),angle:4.53rad,[p+q])
cetz.draw.hobby((0.91, 0.17),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.83rad)
cetz.draw.content((0.73, 0.94),angle:3.83rad,[k[3]])
cetz.draw.hobby((0.66, 0.80),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.64rad)
cetz.draw.content((-1.09, 0.55),angle:1.64rad,[k[3]])
cetz.draw.hobby((-1.05, 0.90),(-1.01, 0.20),stroke:stroke,mark: (end: ">"))
})
let embedding23i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.50, -0.74))
node(node0.pos)
let node1= (pos:(0.60, -0.60))
node(node1.pos)
let node2= (pos:(-0.54, 0.06))
node(node2.pos)
let node3= (pos:(0.74, 0.50))
node(node3.pos)
let node4= (pos:(-0.74, 0.75))
node(node4.pos)
let node5= (pos:(-0.05, 0.55))
node(node5.pos)
edge(node1.pos,(0.06, -0.69),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.07, -0.81),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.68),(0.06, -0.75),(-0.39, -0.79),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.70, -0.06),node1.pos,decoration:"wave",angle:-1.69rad)
cetz.draw.content((0.81, -0.07),angle:-1.69rad,[q])
cetz.draw.hobby((0.79, 0.39),(0.76, -0.06),(0.68, -0.51),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.54, -0.35),node2.pos,decoration:"wave",angle:4.76rad)
cetz.draw.content((-0.66, -0.36),angle:4.76rad,[q])
cetz.draw.hobby((-0.58, -0.67),(-0.60, -0.34),(-0.60, -0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.27, 0.28),node5.pos,decoration:"arrow",angle:-2.35rad)
cetz.draw.content((-0.19, 0.19),angle:-2.35rad,[q+k[3]])
cetz.draw.hobby((-0.45, 0.05),(-0.23, 0.23),(-0.04, 0.46),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.35, 0.54),node5.pos,decoration:"arrow",angle:3.08rad)
cetz.draw.content((0.36, 0.66),angle:3.08rad,[-p-q])
cetz.draw.hobby((0.67, 0.57),(0.35, 0.60),(0.02, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.70, 0.39),node2.pos,decoration:"arrow",angle:1.85rad)
cetz.draw.content((-0.82, 0.36),angle:1.85rad,[k[3]])
cetz.draw.hobby((-0.80, 0.67),(-0.76, 0.37),(-0.63, 0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.39, 0.71),node4.pos,decoration:"coil",angle:2.87rad)
cetz.draw.content((-0.35, 0.83),angle:2.87rad,[-p+k[3]])
cetz.draw.hobby((-0.08, 0.64),(-0.36, 0.77),(-0.67, 0.81),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.70, -0.97),angle:-2.65rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.56, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((0.89, -0.72),angle:2.36rad,[-k[0]])
cetz.draw.hobby((0.72, -0.63),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.36rad)
cetz.draw.content((-0.96, 0.79),angle:2.36rad,[p])
cetz.draw.hobby((-0.97, 0.89),(-0.86, 0.77),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.23rad)
cetz.draw.content((0.76, 0.81),angle:4.23rad,[p])
cetz.draw.hobby((0.73, 0.62),(0.90, 0.94),stroke:stroke,mark: (end: ">"))
})
let embedding23f0=cetz.canvas(length:50%,{
let node0= (pos:(0.57, -0.82))
node(node0.pos)
let node1= (pos:(-0.46, -0.74))
node(node1.pos)
let node2= (pos:(0.77, -0.09))
node(node2.pos)
let node3= (pos:(-0.23, 0.15))
node(node3.pos)
let node4= (pos:(0.65, 0.63))
node(node4.pos)
let node5= (pos:(-0.91, 0.48))
node(node5.pos)
edge(node0.pos,(0.05, -0.81),node1.pos,decoration:"arrow",angle:3.07rad)
edge(node3.pos,(-0.36, -0.30),node1.pos,decoration:"wave",angle:4.46rad)
edge(node0.pos,(0.69, -0.46),node2.pos,decoration:"wave",angle:-1.84rad)
edge(node3.pos,(-0.57, 0.34),node5.pos,decoration:"arrow",angle:2.70rad)
edge(node4.pos,(0.20, 0.42),node3.pos,decoration:"arrow",angle:3.64rad)
edge(node4.pos,(0.73, 0.29),node2.pos,decoration:"arrow",angle:1.74rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:3.52rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.76rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.74rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.95rad)
})
let embedding23f1=cetz.canvas(length:50%,{
let node0= (pos:(0.65, -0.75))
node(node0.pos)
let node1= (pos:(-0.32, -0.77))
node(node1.pos)
let node2= (pos:(0.94, 0.11))
node(node2.pos)
let node3= (pos:(0.29, 0.03))
node(node3.pos)
let node4= (pos:(-0.94, 0.63))
node(node4.pos)
let node5= (pos:(-0.65, -0.03))
node(node5.pos)
edge(node0.pos,(0.16, -0.80),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node3.pos,(-0.01, -0.38),node1.pos,decoration:"wave",angle:-2.22rad)
edge(node0.pos,(0.76, -0.32),node2.pos,decoration:"wave",angle:4.39rad)
edge(node3.pos,(-0.18, 0.03),node5.pos,decoration:"arrow",angle:3.20rad)
edge(node5.pos,(-0.75, 0.32),node4.pos,decoration:"coil",angle:1.99rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.82rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.53rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.71rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.43rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.78rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.54rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.50rad)
})
let embedding23f2=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.74))
node(node0.pos)
let node1= (pos:(-0.60, -0.60))
node(node1.pos)
let node2= (pos:(0.55, 0.06))
node(node2.pos)
let node3= (pos:(-0.73, 0.50))
node(node3.pos)
let node4= (pos:(0.06, 0.54))
node(node4.pos)
let node5= (pos:(0.75, 0.74))
node(node5.pos)
edge(node0.pos,(-0.05, -0.69),node1.pos,decoration:"arrow",angle:3.02rad)
edge(node3.pos,(-0.69, -0.06),node1.pos,decoration:"wave",angle:4.83rad)
edge(node0.pos,(0.55, -0.35),node2.pos,decoration:"wave",angle:-1.63rad)
edge(node2.pos,(0.71, 0.39),node5.pos,decoration:"arrow",angle:-1.84rad)
edge(node4.pos,(-0.35, 0.54),node3.pos,decoration:"arrow",angle:3.19rad)
edge(node4.pos,(0.28, 0.27),node2.pos,decoration:"arrow",angle:2.36rad)
edge(node5.pos,(0.39, 0.71),node4.pos,decoration:"coil",angle:3.42rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.36rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.06rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:3.94rad)
})
let embedding24i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.49, -0.74))
node(node0.pos)
let node1= (pos:(0.48, -0.69))
node(node1.pos)
let node2= (pos:(-0.18, 0.08))
node(node2.pos)
let node3= (pos:(0.12, 0.28))
node(node3.pos)
let node4= (pos:(0.66, 0.68))
node(node4.pos)
let node5= (pos:(-0.62, 0.69))
node(node5.pos)
edge(node1.pos,(0.00, -0.76),node0.pos,decoration:"arrow",angle:-3.09rad)
cetz.draw.content((0.01, -0.88),angle:-3.09rad,[q+k[0]])
cetz.draw.hobby((0.40, -0.77),(0.00, -0.82),(-0.39, -0.81),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.33, -0.22),node1.pos,decoration:"wave",angle:-1.22rad)
cetz.draw.content((0.44, -0.17),angle:-1.22rad,[q])
cetz.draw.hobby((0.22, 0.21),(0.38, -0.18),(0.51, -0.58),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.36, -0.34),node2.pos,decoration:"wave",angle:4.36rad)
cetz.draw.content((-0.47, -0.30),angle:4.36rad,[q])
cetz.draw.hobby((-0.52, -0.64),(-0.41, -0.31),(-0.27, 0.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.47, 0.36),node5.pos,decoration:"arrow",angle:5.32rad)
cetz.draw.content((-0.57, 0.29),angle:5.32rad,[q+k[3]])
cetz.draw.hobby((-0.28, 0.08),(-0.51, 0.31),(-0.66, 0.60),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.23, 0.55),node5.pos,decoration:"arrow",angle:2.65rad)
cetz.draw.content((-0.18, 0.66),angle:2.65rad,[-p-q-k[3]])
cetz.draw.hobby((0.10, 0.39),(-0.19, 0.60),(-0.52, 0.73),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.38, 0.56),node3.pos,decoration:"arrow",angle:3.73rad)
cetz.draw.content((0.31, 0.66),angle:3.73rad,[-p-k[3]])
cetz.draw.hobby((0.58, 0.72),(0.31, 0.59),(0.11, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.35, 0.34),node2.pos,decoration:"arrow",angle:0.67rad)
cetz.draw.content((0.42, 0.24),angle:0.67rad,[k[3]])
cetz.draw.hobby((0.65, 0.56),(0.33, 0.25),(-0.06, 0.05),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.68rad)
cetz.draw.content((-0.69, -0.98),angle:-2.68rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.55, -0.84),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.61rad)
cetz.draw.content((0.80, -0.74),angle:2.61rad,[-k[0]])
cetz.draw.hobby((0.60, -0.69),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.46rad)
cetz.draw.content((-0.89, 0.75),angle:2.46rad,[p])
cetz.draw.hobby((-0.96, 0.89),(-0.74, 0.71),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.90rad)
cetz.draw.content((0.75, 0.93),angle:3.90rad,[p])
cetz.draw.hobby((0.69, 0.79),(0.89, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding24i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.61, -0.81))
node(node0.pos)
let node1= (pos:(0.30, -0.63))
node(node1.pos)
let node2= (pos:(-0.68, -0.12))
node(node2.pos)
let node3= (pos:(-0.52, 0.54))
node(node3.pos)
let node4= (pos:(0.03, 0.39))
node(node4.pos)
let node5= (pos:(0.87, 0.50))
node(node5.pos)
edge(node1.pos,(-0.14, -0.76),node0.pos,decoration:"arrow",angle:-2.94rad)
cetz.draw.content((-0.12, -0.88),angle:-2.94rad,[q+k[0]])
cetz.draw.hobby((0.23, -0.72),(-0.14, -0.82),(-0.51, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-0.09, -0.07),node1.pos,decoration:"wave",angle:-0.96rad)
cetz.draw.content((0.00, -0.00),angle:-0.96rad,[q])
cetz.draw.hobby((-0.39, 0.45),(-0.06, -0.01),(0.27, -0.48),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.67, -0.48),node2.pos,decoration:"wave",angle:4.82rad)
cetz.draw.content((-0.79, -0.49),angle:4.82rad,[q])
cetz.draw.hobby((-0.68, -0.76),(-0.73, -0.48),(-0.75, -0.19),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.23, 0.55),node3.pos,decoration:"arrow",angle:2.89rad)
cetz.draw.content((-0.20, 0.66),angle:2.89rad,[-p-k[3]])
cetz.draw.hobby((0.03, 0.47),(-0.21, 0.60),(-0.48, 0.61),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.32, 0.11),node2.pos,decoration:"arrow",angle:0.61rad)
cetz.draw.content((-0.25, 0.02),angle:0.61rad,[k[3]])
cetz.draw.hobby((0.00, 0.28),(-0.28, 0.07),(-0.58, -0.12),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.46, 0.46),node4.pos,decoration:"coil",angle:3.28rad)
cetz.draw.content((0.45, 0.58),angle:3.28rad,[-p])
cetz.draw.hobby((0.78, 0.55),(0.44, 0.51),(0.10, 0.46),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.75, -1.02),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.67, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
cetz.draw.content((0.70, -0.71),angle:2.66rad,[-k[0]])
cetz.draw.hobby((0.41, -0.63),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:5.93rad)
cetz.draw.content((-0.88, -0.17),angle:5.93rad,[-q-k[3]])
cetz.draw.hobby((-0.93, -0.09),(-0.80, -0.14),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.31rad)
cetz.draw.content((1.05, 0.28),angle:-1.31rad,[-q-k[3]])
cetz.draw.hobby((0.95, 0.42),(1.03, 0.11),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((-0.84, 0.68),angle:2.37rad,[p+q+k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.64, 0.56),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.45rad)
cetz.draw.content((0.82, 0.78),angle:4.45rad,[p+q+k[3]])
cetz.draw.hobby((0.84, 0.61),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding24i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.30, -0.63))
node(node0.pos)
let node1= (pos:(0.61, -0.81))
node(node1.pos)
let node2= (pos:(0.52, 0.54))
node(node2.pos)
let node3= (pos:(0.68, -0.12))
node(node3.pos)
let node4= (pos:(-0.87, 0.50))
node(node4.pos)
let node5= (pos:(-0.03, 0.39))
node(node5.pos)
edge(node1.pos,(0.14, -0.76),node0.pos,decoration:"arrow",angle:2.94rad)
cetz.draw.content((0.12, -0.87),angle:2.94rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.87),(0.14, -0.82),(-0.23, -0.72),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, -0.48),node1.pos,decoration:"wave",angle:-1.68rad)
cetz.draw.content((0.79, -0.49),angle:-1.68rad,[q])
cetz.draw.hobby((0.75, -0.18),(0.73, -0.47),(0.68, -0.76),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(0.09, -0.07),node2.pos,decoration:"wave",angle:4.10rad)
cetz.draw.content((-0.01, -0.00),angle:4.10rad,[q])
cetz.draw.hobby((-0.27, -0.48),(0.06, -0.01),(0.39, 0.46),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(0.23, 0.55),node5.pos,decoration:"arrow",angle:0.26rad)
cetz.draw.content((0.20, 0.66),angle:0.26rad,[q+k[3]])
cetz.draw.hobby((0.47, 0.61),(0.21, 0.60),(-0.03, 0.48),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.32, 0.11),node5.pos,decoration:"arrow",angle:2.53rad)
cetz.draw.content((0.25, 0.02),angle:2.53rad,[-p-q-k[3]])
cetz.draw.hobby((0.58, -0.12),(0.28, 0.07),(-0.00, 0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.46, 0.46),node4.pos,decoration:"coil",angle:3.01rad)
cetz.draw.content((-0.44, 0.58),angle:3.01rad,[-p])
cetz.draw.hobby((-0.10, 0.46),(-0.44, 0.52),(-0.78, 0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.66rad)
cetz.draw.content((-0.59, -0.92),angle:-2.66rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.36, -0.73),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.70rad)
cetz.draw.content((0.86, -0.80),angle:2.70rad,[-k[0]])
cetz.draw.hobby((0.72, -0.80),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.83rad)
cetz.draw.content((-0.82, 0.22),angle:-1.83rad,[p+k[3]])
cetz.draw.hobby((-0.92, 0.08),(-0.83, 0.39),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.80, 0.05),angle:3.49rad,[p+k[3]])
cetz.draw.hobby((0.76, -0.03),(0.89, 0.02),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.97rad)
cetz.draw.content((-1.05, 0.72),angle:4.97rad,[-k[3]])
cetz.draw.hobby((-1.03, 0.89),(-0.95, 0.58),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.77rad)
cetz.draw.content((0.68, 0.86),angle:0.77rad,[-k[3]])
cetz.draw.hobby((0.55, 0.65),(0.89, 0.97),stroke:stroke,mark: (end: ">"))
})
let embedding24f0=cetz.canvas(length:50%,{
let node0= (pos:(0.59, -0.82))
node(node0.pos)
let node1= (pos:(-0.47, -0.82))
node(node1.pos)
let node2= (pos:(0.93, -0.08))
node(node2.pos)
let node3= (pos:(-0.35, -0.03))
node(node3.pos)
let node4= (pos:(-0.02, 0.62))
node(node4.pos)
let node5= (pos:(-0.82, 0.32))
node(node5.pos)
edge(node0.pos,(0.06, -0.85),node1.pos,decoration:"arrow",angle:-3.13rad)
edge(node3.pos,(-0.42, -0.44),node1.pos,decoration:"wave",angle:4.57rad)
edge(node0.pos,(0.74, -0.46),node2.pos,decoration:"wave",angle:4.29rad)
edge(node3.pos,(-0.61, 0.14),node5.pos,decoration:"arrow",angle:2.48rad)
edge(node4.pos,(-0.16, 0.30),node3.pos,decoration:"arrow",angle:-2.04rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.82rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:1.85rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.84rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:0.28rad)
edge(node2.pos,(1.00, 0.33),decoration:"arrow",angle:1.39rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.83rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.50rad)
})
let embedding24f1=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.81))
node(node0.pos)
let node1= (pos:(-0.58, -0.81))
node(node1.pos)
let node2= (pos:(0.52, -0.00))
node(node2.pos)
let node3= (pos:(-0.92, -0.08))
node(node3.pos)
let node4= (pos:(0.93, 0.63))
node(node4.pos)
let node5= (pos:(0.02, 0.34))
node(node5.pos)
edge(node0.pos,(-0.04, -0.84),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.73, -0.45),node1.pos,decoration:"wave",angle:-1.14rad)
edge(node0.pos,(0.52, -0.42),node2.pos,decoration:"wave",angle:-1.60rad)
edge(node2.pos,(0.25, 0.17),node5.pos,decoration:"arrow",angle:5.68rad)
edge(node4.pos,(0.71, 0.32),node2.pos,decoration:"arrow",angle:1.00rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-1.86rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.54rad)
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:-1.33rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:4.90rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.56rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.52rad)
})
let embedding24f2=cetz.canvas(length:50%,{
let node0= (pos:(0.62, -0.64))
node(node0.pos)
let node1= (pos:(-0.52, -0.77))
node(node1.pos)
let node2= (pos:(0.93, 0.49))
node(node2.pos)
let node3= (pos:(-0.74, -0.06))
node(node3.pos)
let node4= (pos:(-0.57, 0.66))
node(node4.pos)
let node5= (pos:(0.48, 0.29))
node(node5.pos)
edge(node0.pos,(0.05, -0.73),node1.pos,decoration:"arrow",angle:-3.02rad)
edge(node3.pos,(-0.64, -0.43),node1.pos,decoration:"wave",angle:5.01rad)
edge(node0.pos,(0.79, -0.10),node2.pos,decoration:"wave",angle:-1.84rad)
edge(node2.pos,(0.68, 0.47),node5.pos,decoration:"arrow",angle:0.41rad)
edge(node4.pos,(-0.67, 0.32),node3.pos,decoration:"arrow",angle:4.48rad)
edge(node5.pos,(-0.04, 0.49),node4.pos,decoration:"coil",angle:2.80rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.37rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:2.93rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.64rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.62rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.44rad)
})
let embedding25i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.59, -0.68))
node(node0.pos)
let node1= (pos:(0.42, -0.84))
node(node1.pos)
let node2= (pos:(-0.59, 0.42))
node(node2.pos)
let node3= (pos:(0.07, -0.17))
node(node3.pos)
let node4= (pos:(0.09, 0.67))
node(node4.pos)
let node5= (pos:(0.47, 0.10))
node(node5.pos)
edge(node1.pos,(-0.10, -0.80),node0.pos,decoration:"arrow",angle:2.98rad)
cetz.draw.content((-0.11, -0.92),angle:2.98rad,[q+k[0]])
cetz.draw.hobby((0.32, -0.90),(-0.10, -0.86),(-0.51, -0.77),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.26, -0.51),node1.pos,decoration:"wave",angle:-1.08rad)
cetz.draw.content((0.37, -0.46),angle:-1.08rad,[q])
cetz.draw.hobby((0.16, -0.20),(0.31, -0.47),(0.44, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.62, -0.13),node2.pos,decoration:"wave",angle:4.71rad)
cetz.draw.content((-0.74, -0.13),angle:4.71rad,[q])
cetz.draw.hobby((-0.66, -0.57),(-0.68, -0.13),(-0.66, 0.32),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.08, 0.26),node5.pos,decoration:"arrow",angle:2.84rad)
cetz.draw.content((-0.12, 0.15),angle:2.84rad,[q+k[3]])
cetz.draw.hobby((-0.50, 0.33),(-0.08, 0.20),(0.34, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.32, 0.42),node4.pos,decoration:"coil",angle:2.16rad)
cetz.draw.content((0.42, 0.49),angle:2.16rad,[-1/2 p+1/2 q+3/2 k[3]])
cetz.draw.hobby((0.50, 0.18),(0.38, 0.45),(0.18, 0.67),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.47rad)
cetz.draw.content((-0.72, -0.93),angle:-2.47rad,[-k[0]])
cetz.draw.hobby((-0.88, -0.99),(-0.63, -0.78),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.87rad)
cetz.draw.content((0.74, -0.80),angle:2.87rad,[-k[0]])
cetz.draw.hobby((0.54, -0.81),(0.92, -0.92),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.99rad)
cetz.draw.content((-0.45, -0.37),angle:-2.99rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, -0.38),(-0.02, -0.24),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.46rad)
cetz.draw.content((0.81, -0.02),angle:2.46rad,[1/2 p+1/2 q-1/2 k[3]])
cetz.draw.hobby((0.58, 0.08),(0.96, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.84rad)
cetz.draw.content((-0.42, 0.39),angle:-2.84rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((-0.89, 0.31),(0.01, 0.58),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.64rad)
cetz.draw.content((0.48, 0.19),angle:3.64rad,[1/2 p-1/2 q-1/2 k[3]])
cetz.draw.hobby((0.13, -0.07),(0.88, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.49rad)
cetz.draw.content((0.50, 0.95),angle:3.49rad,[k[3]])
cetz.draw.hobby((0.16, 0.76),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:2.19rad)
cetz.draw.content((-0.89, 0.64),angle:2.19rad,[k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.69, 0.47),stroke:stroke,mark: (end: ">"))
})
let embedding25f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.84))
node(node0.pos)
let node1= (pos:(-0.46, -0.68))
node(node1.pos)
let node2= (pos:(0.60, -0.15))
node(node2.pos)
let node3= (pos:(-0.07, 0.49))
node(node3.pos)
let node4= (pos:(-0.44, 0.61))
node(node4.pos)
let node5= (pos:(-0.08, 0.06))
node(node5.pos)
edge(node0.pos,(0.03, -0.80),node1.pos,decoration:"arrow",angle:2.98rad)
edge(node3.pos,(-0.32, -0.13),node1.pos,decoration:"wave",angle:4.41rad)
edge(node0.pos,(0.58, -0.51),node2.pos,decoration:"wave",angle:-1.65rad)
edge(node4.pos,(0.17, 0.25),node2.pos,decoration:"arrow",angle:2.49rad)
edge(node5.pos,(-0.35, 0.29),node4.pos,decoration:"coil",angle:2.13rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.61rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.81rad)
edge(node2.pos,(1.00, -0.33),decoration:"arrow",angle:2.72rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.74rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.97rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.39rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.53rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.58rad)
})
let embedding26i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.83))
node(node0.pos)
let node1= (pos:(0.60, -0.63))
node(node1.pos)
let node2= (pos:(-0.79, -0.18))
node(node2.pos)
let node3= (pos:(0.88, 0.52))
node(node3.pos)
let node4= (pos:(-0.72, 0.62))
node(node4.pos)
let node5= (pos:(-0.08, 0.12))
node(node5.pos)
edge(node1.pos,(0.05, -0.75),node0.pos,decoration:"arrow",angle:-2.97rad)
cetz.draw.content((0.07, -0.87),angle:-2.97rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.72),(0.06, -0.81),(-0.39, -0.87),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.75, -0.06),node1.pos,decoration:"wave",angle:-1.81rad)
cetz.draw.content((0.87, -0.09),angle:-1.81rad,[q])
cetz.draw.hobby((0.91, 0.39),(0.81, -0.07),(0.69, -0.53),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.65, -0.51),node2.pos,decoration:"wave",angle:5.12rad)
cetz.draw.content((-0.76, -0.56),angle:5.12rad,[q])
cetz.draw.hobby((-0.60, -0.79),(-0.71, -0.53),(-0.82, -0.26),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.78, 0.23),node2.pos,decoration:"arrow",angle:1.48rad)
cetz.draw.content((-0.90, 0.24),angle:1.48rad,[-p-2 q])
cetz.draw.hobby((-0.79, 0.55),(-0.84, 0.23),(-0.85, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.37, 0.40),node4.pos,decoration:"coil",angle:2.48rad)
cetz.draw.content((-0.30, 0.50),angle:2.48rad,[-p-q+k[2]])
cetz.draw.hobby((-0.09, 0.23),(-0.34, 0.45),(-0.62, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
cetz.draw.content((-0.72, -1.03),angle:-2.80rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.59, -0.92),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.39rad)
cetz.draw.content((0.88, -0.73),angle:2.39rad,[-k[0]])
cetz.draw.hobby((0.72, -0.65),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.65rad)
cetz.draw.content((-0.82, -0.35),angle:0.65rad,[p+q])
cetz.draw.hobby((-0.88, -0.32),(-0.84, -0.28),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.40rad)
cetz.draw.content((0.51, 0.01),angle:-0.40rad,[p+q])
cetz.draw.hobby((0.04, 0.14),(0.93, -0.24),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:-0.98rad)
cetz.draw.content((1.04, 0.49),angle:-0.98rad,[k[2]])
cetz.draw.hobby((0.98, 0.47),(0.99, 0.45),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 0.33),decoration:"arrow",angle:6.06rad)
cetz.draw.content((-0.57, 0.11),angle:6.06rad,[k[2]])
cetz.draw.hobby((-0.92, 0.25),(-0.19, 0.09),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.21rad)
cetz.draw.content((-0.96, 0.74),angle:2.21rad,[-q-k[2]])
cetz.draw.hobby((-0.99, 0.88),(-0.83, 0.67),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.46rad)
cetz.draw.content((0.82, 0.79),angle:4.46rad,[-q-k[2]])
cetz.draw.hobby((0.84, 0.63),(0.92, 0.92),stroke:stroke,mark: (end: ">"))
})
let embedding26f0=cetz.canvas(length:50%,{
let node0= (pos:(0.49, -0.75))
node(node0.pos)
let node1= (pos:(-0.33, -0.79))
node(node1.pos)
let node2= (pos:(0.04, 0.18))
node(node2.pos)
let node3= (pos:(0.63, -0.08))
node(node3.pos)
let node4= (pos:(0.72, 0.65))
node(node4.pos)
let node5= (pos:(-0.84, 0.47))
node(node5.pos)
edge(node0.pos,(0.08, -0.83),node1.pos,decoration:"arrow",angle:-3.11rad)
edge(node3.pos,(0.12, -0.44),node1.pos,decoration:"wave",angle:3.78rad)
edge(node0.pos,(0.26, -0.29),node2.pos,decoration:"wave",angle:5.16rad)
edge(node2.pos,(-0.41, 0.34),node5.pos,decoration:"arrow",angle:-0.32rad)
edge(node4.pos,(0.71, 0.29),node3.pos,decoration:"arrow",angle:-1.69rad)
edge(node4.pos,(0.35, 0.46),node2.pos,decoration:"arrow",angle:0.60rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.69rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:0.22rad)
edge(node5.pos,(-1.00, 0.00),decoration:"arrow",angle:1.24rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.86rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.03rad)
})
let embedding26f1=cetz.canvas(length:50%,{
let node0= (pos:(0.31, -0.63))
node(node0.pos)
let node1= (pos:(-0.47, -0.72))
node(node1.pos)
let node2= (pos:(-0.58, 0.52))
node(node2.pos)
let node3= (pos:(0.18, 0.08))
node(node3.pos)
let node4= (pos:(0.04, 0.69))
node(node4.pos)
let node5= (pos:(0.70, 0.74))
node(node5.pos)
edge(node0.pos,(-0.08, -0.73),node1.pos,decoration:"arrow",angle:-3.02rad)
edge(node3.pos,(-0.16, -0.32),node1.pos,decoration:"wave",angle:4.03rad)
edge(node0.pos,(-0.18, -0.06),node2.pos,decoration:"wave",angle:5.37rad)
edge(node3.pos,(0.50, 0.38),node5.pos,decoration:"arrow",angle:0.92rad)
edge(node4.pos,(0.09, 0.38),node3.pos,decoration:"arrow",angle:4.95rad)
edge(node4.pos,(-0.30, 0.66),node2.pos,decoration:"arrow",angle:0.28rad)
edge(node5.pos,(0.37, 0.79),node4.pos,decoration:"coil",angle:3.21rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:5.43rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:0.70rad)
})
let embedding26f2=cetz.canvas(length:50%,{
let node0= (pos:(0.58, -0.68))
node(node0.pos)
let node1= (pos:(-0.25, -0.76))
node(node1.pos)
let node2= (pos:(0.48, 0.44))
node(node2.pos)
let node3= (pos:(0.79, -0.11))
node(node3.pos)
let node4= (pos:(-0.94, 0.64))
node(node4.pos)
let node5= (pos:(-0.58, 0.06))
node(node5.pos)
edge(node0.pos,(0.16, -0.77),node1.pos,decoration:"arrow",angle:-3.05rad)
edge(node3.pos,(0.25, -0.41),node1.pos,decoration:"wave",angle:3.71rad)
edge(node0.pos,(0.48, -0.12),node2.pos,decoration:"wave",angle:4.80rad)
edge(node2.pos,(-0.05, 0.26),node5.pos,decoration:"arrow",angle:0.34rad)
edge(node5.pos,(-0.72, 0.37),node4.pos,decoration:"coil",angle:2.12rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.84rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.49rad)
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-0.82rad)
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:0.75rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-1.76rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.26rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:4.88rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.83rad)
})
let embedding27i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.73))
node(node0.pos)
let node1= (pos:(0.58, -0.79))
node(node1.pos)
let node2= (pos:(-0.89, 0.11))
node(node2.pos)
let node3= (pos:(1.00, -0.02))
node(node3.pos)
let node4= (pos:(0.07, 0.60))
node(node4.pos)
let node5= (pos:(0.61, -0.01))
node(node5.pos)
edge(node1.pos,(0.00, -0.78),node0.pos,decoration:"arrow",angle:3.09rad)
cetz.draw.content((-0.00, -0.90),angle:3.09rad,[q+k[0]])
cetz.draw.hobby((0.46, -0.85),(0.00, -0.84),(-0.45, -0.80),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.80, -0.44),node1.pos,decoration:"wave",angle:-2.08rad)
cetz.draw.content((0.91, -0.50),angle:-2.08rad,[q])
cetz.draw.hobby((1.02, -0.13),(0.87, -0.45),(0.68, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.70, -0.30),node2.pos,decoration:"wave",angle:-1.19rad)
cetz.draw.content((-0.59, -0.26),angle:-1.19rad,[q])
cetz.draw.hobby((-0.53, -0.63),(-0.65, -0.28),(-0.80, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.81, 0.12),node5.pos,decoration:"arrow",angle:3.11rad)
cetz.draw.content((0.81, 0.24),angle:3.11rad,[-p-2 q])
cetz.draw.hobby((1.03, 0.06),(0.81, 0.18),(0.59, 0.07),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.33, 0.31),node4.pos,decoration:"coil",angle:2.30rad)
cetz.draw.content((0.24, 0.23),angle:2.30rad,[-p-q+k[3]])
cetz.draw.hobby((0.51, 0.01),(0.29, 0.25),(0.08, 0.50),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.99, -0.99),decoration:"arrow",angle:-2.60rad)
cetz.draw.content((-0.71, -0.96),angle:-2.60rad,[-k[0]])
cetz.draw.hobby((-0.87, -0.99),(-0.61, -0.83),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(0.99, -0.99),decoration:"arrow",angle:2.69rad)
cetz.draw.content((0.84, -0.78),angle:2.69rad,[-k[0]])
cetz.draw.hobby((0.69, -0.78),(0.93, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.99, -0.33),decoration:"arrow",angle:1.35rad)
cetz.draw.content((-0.82, -0.14),angle:1.35rad,[-q-k[3]])
cetz.draw.hobby((-0.91, -0.25),(-0.86, 0.00),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.99, -0.33),decoration:"arrow",angle:-0.70rad)
cetz.draw.content((0.88, -0.08),angle:-0.70rad,[-q-k[3]])
cetz.draw.hobby((0.72, -0.02),(0.95, -0.22),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.99, 0.33),decoration:"arrow",angle:-2.90rad)
cetz.draw.content((-0.43, 0.35),angle:-2.90rad,[p+q])
cetz.draw.hobby((-0.88, 0.30),(-0.01, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.99, 0.33),decoration:"arrow",angle:4.74rad)
cetz.draw.content((0.88, 0.15),angle:4.74rad,[p+q])
cetz.draw.hobby((0.94, 0.08),(0.93, 0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.99, 0.99),decoration:"arrow",angle:3.55rad)
cetz.draw.content((0.48, 0.90),angle:3.55rad,[k[3]])
cetz.draw.hobby((0.14, 0.69),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.99, 0.99),decoration:"arrow",angle:1.68rad)
cetz.draw.content((-1.06, 0.54),angle:1.68rad,[k[3]])
cetz.draw.hobby((-1.04, 0.89),(-0.96, 0.20),stroke:stroke,mark: (end: ">"))
})
let embedding27f0=cetz.canvas(length:50%,{
let node0= (pos:(0.47, -0.72))
node(node0.pos)
let node1= (pos:(-0.31, -0.63))
node(node1.pos)
let node2= (pos:(-0.19, 0.08))
node(node2.pos)
let node3= (pos:(0.57, 0.52))
node(node3.pos)
let node4= (pos:(-0.70, 0.74))
node(node4.pos)
let node5= (pos:(-0.04, 0.69))
node(node5.pos)
edge(node0.pos,(0.08, -0.73),node1.pos,decoration:"arrow",angle:3.02rad)
edge(node3.pos,(0.18, -0.07),node1.pos,decoration:"wave",angle:-2.22rad)
edge(node0.pos,(0.17, -0.32),node2.pos,decoration:"wave",angle:-0.89rad)
edge(node2.pos,(-0.10, 0.37),node5.pos,decoration:"arrow",angle:-1.80rad)
edge(node3.pos,(0.29, 0.66),node5.pos,decoration:"arrow",angle:2.87rad)
edge(node4.pos,(-0.50, 0.38),node2.pos,decoration:"arrow",angle:2.22rad)
edge(node5.pos,(-0.38, 0.79),node4.pos,decoration:"coil",angle:3.07rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.66rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.44rad)
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.99rad)
})
let embedding27f1=cetz.canvas(length:50%,{
let node0= (pos:(0.33, -0.79))
node(node0.pos)
let node1= (pos:(-0.49, -0.75))
node(node1.pos)
let node2= (pos:(-0.62, -0.08))
node(node2.pos)
let node3= (pos:(-0.03, 0.18))
node(node3.pos)
let node4= (pos:(0.84, 0.47))
node(node4.pos)
let node5= (pos:(-0.71, 0.65))
node(node5.pos)
edge(node0.pos,(-0.08, -0.83),node1.pos,decoration:"arrow",angle:3.11rad)
edge(node3.pos,(-0.25, -0.29),node1.pos,decoration:"wave",angle:-2.03rad)
edge(node0.pos,(-0.12, -0.44),node2.pos,decoration:"wave",angle:-0.64rad)
edge(node2.pos,(-0.71, 0.29),node5.pos,decoration:"arrow",angle:4.82rad)
edge(node3.pos,(-0.35, 0.46),node5.pos,decoration:"arrow",angle:2.54rad)
edge(node4.pos,(0.42, 0.34),node3.pos,decoration:"arrow",angle:3.46rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.69rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node4.pos,(1.00, 0.00),decoration:"arrow",angle:1.89rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:2.93rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.27rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.42rad)
})
let embedding27f2=cetz.canvas(length:50%,{
let node0= (pos:(0.24, -0.71))
node(node0.pos)
let node1= (pos:(-0.59, -0.72))
node(node1.pos)
let node2= (pos:(-0.78, 0.13))
node(node2.pos)
let node3= (pos:(-0.46, 0.23))
node(node3.pos)
let node4= (pos:(0.57, 0.68))
node(node4.pos)
let node5= (pos:(0.94, 0.06))
node(node5.pos)
edge(node0.pos,(-0.17, -0.76),node1.pos,decoration:"arrow",angle:-3.12rad)
edge(node3.pos,(-0.53, -0.26),node1.pos,decoration:"wave",angle:4.57rad)
edge(node0.pos,(-0.25, -0.28),node2.pos,decoration:"wave",angle:-0.69rad)
edge(node4.pos,(0.05, 0.48),node3.pos,decoration:"arrow",angle:3.55rad)
edge(node5.pos,(0.73, 0.37),node4.pos,decoration:"coil",angle:2.09rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.55rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.14rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.41rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:2.96rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:4.49rad)
edge(node4.pos,(1.00, 1.00),decoration:"arrow",angle:3.78rad)
edge(node2.pos,(-1.00, 1.00),decoration:"arrow",angle:1.82rad)
})
let embedding28i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.47, -0.83))
node(node0.pos)
let node1= (pos:(0.59, -0.82))
node(node1.pos)
let node2= (pos:(-0.35, -0.04))
node(node2.pos)
let node3= (pos:(0.93, -0.08))
node(node3.pos)
let node4= (pos:(-0.02, 0.62))
node(node4.pos)
let node5= (pos:(-0.82, 0.32))
node(node5.pos)
edge(node1.pos,(0.07, -0.85),node0.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((0.07, -0.97),angle:-3.13rad,[q+k[0]])
cetz.draw.hobby((0.49, -0.89),(0.06, -0.91),(-0.36, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.74, -0.46),node1.pos,decoration:"wave",angle:4.29rad)
cetz.draw.content((0.63, -0.41),angle:4.29rad,[q])
cetz.draw.hobby((0.83, -0.12),(0.69, -0.42),(0.56, -0.72),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.41, -0.44),node2.pos,decoration:"wave",angle:4.57rad)
cetz.draw.content((-0.53, -0.43),angle:4.57rad,[q])
cetz.draw.hobby((-0.51, -0.74),(-0.47, -0.42),(-0.42, -0.11),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.60, 0.13),node5.pos,decoration:"arrow",angle:5.63rad)
cetz.draw.content((-0.68, 0.04),angle:5.63rad,[q+k[3]])
cetz.draw.hobby((-0.43, -0.06),(-0.63, 0.08),(-0.82, 0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.16, 0.30),node2.pos,decoration:"arrow",angle:1.11rad)
cetz.draw.content((-0.05, 0.24),angle:1.11rad,[k[3]])
cetz.draw.hobby((0.01, 0.53),(-0.11, 0.25),(-0.26, -0.01),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
cetz.draw.content((-0.70, -1.03),angle:-2.83rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.03),(-0.54, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.72rad)
cetz.draw.content((0.84, -0.80),angle:2.72rad,[-k[0]])
cetz.draw.hobby((0.71, -0.80),(0.93, -0.90),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, -0.33),decoration:"arrow",angle:-1.29rad)
cetz.draw.content((1.08, -0.17),angle:-1.29rad,[-p-2 q-k[3]])
cetz.draw.hobby((1.01, -0.16),(1.03, -0.22),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, -0.33),decoration:"arrow",angle:1.30rad)
cetz.draw.content((-0.80, -0.04),angle:1.30rad,[-p-2 q-k[3]])
cetz.draw.hobby((-0.92, -0.25),(-0.79, 0.21),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.86rad)
cetz.draw.content((-0.48, 0.36),angle:-2.86rad,[p+q+k[3]])
cetz.draw.hobby((-0.89, 0.30),(-0.10, 0.53),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.53rad)
cetz.draw.content((0.84, 0.15),angle:4.53rad,[p+q+k[3]])
cetz.draw.hobby((0.88, 0.03),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:1.83rad)
cetz.draw.content((-1.03, 0.63),angle:1.83rad,[p+q])
cetz.draw.hobby((-1.03, 0.89),(-0.90, 0.40),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.50rad)
cetz.draw.content((0.45, 0.92),angle:3.50rad,[p+q])
cetz.draw.hobby((0.05, 0.71),(0.89, 1.02),stroke:stroke,mark: (end: ">"))
})
let embedding28i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.58, -0.81))
node(node0.pos)
let node1= (pos:(0.50, -0.81))
node(node1.pos)
let node2= (pos:(-0.92, -0.08))
node(node2.pos)
let node3= (pos:(0.52, -0.01))
node(node3.pos)
let node4= (pos:(0.93, 0.63))
node(node4.pos)
let node5= (pos:(0.02, 0.34))
node(node5.pos)
edge(node1.pos,(-0.05, -0.84),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.05, -0.96),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.39, -0.88),(-0.04, -0.90),(-0.48, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.52, -0.42),node1.pos,decoration:"wave",angle:-1.60rad)
cetz.draw.content((0.64, -0.42),angle:-1.60rad,[q])
cetz.draw.hobby((0.58, -0.09),(0.58, -0.41),(0.56, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.73, -0.45),node2.pos,decoration:"wave",angle:-1.14rad)
cetz.draw.content((-0.63, -0.40),angle:-1.14rad,[q])
cetz.draw.hobby((-0.56, -0.71),(-0.69, -0.41),(-0.83, -0.12),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.25, 0.17),node5.pos,decoration:"arrow",angle:2.54rad)
cetz.draw.content((0.19, 0.07),angle:2.54rad,[-p-2 q-k[3]])
cetz.draw.hobby((0.43, -0.02),(0.23, 0.11),(0.03, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.71, 0.32),node3.pos,decoration:"arrow",angle:4.14rad)
cetz.draw.content((0.61, 0.39),angle:4.14rad,[-p-q-k[3]])
cetz.draw.hobby((0.84, 0.60),(0.66, 0.35),(0.50, 0.09),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.72rad)
cetz.draw.content((-0.74, -1.01),angle:-2.72rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.65, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((0.79, -0.79),angle:2.78rad,[-k[0]])
cetz.draw.hobby((0.61, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:1.28rad)
cetz.draw.content((-0.85, -0.24),angle:1.28rad,[-q-k[3]])
cetz.draw.hobby((-0.91, -0.25),(-0.89, -0.19),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.60rad)
cetz.draw.content((0.58, 0.10),angle:-0.60rad,[-q-k[3]])
cetz.draw.hobby((0.13, 0.33),(0.95, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 0.33),decoration:"arrow",angle:1.81rad)
cetz.draw.content((1.08, 0.51),angle:1.81rad,[k[3]])
cetz.draw.hobby((1.01, 0.55),(1.03, 0.44),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.33),decoration:"arrow",angle:1.75rad)
cetz.draw.content((-1.08, 0.11),angle:1.75rad,[k[3]])
cetz.draw.hobby((-1.04, 0.22),(-1.00, 0.01),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.56rad)
cetz.draw.content((-0.56, 0.57),angle:2.56rad,[p+q])
cetz.draw.hobby((-0.95, 0.90),(-0.10, 0.34),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:4.52rad)
cetz.draw.content((0.85, 0.84),angle:4.52rad,[p+q])
cetz.draw.hobby((0.89, 0.74),(0.92, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding28i2=cetz.canvas(length:50%,{
let node0= (pos:(-0.52, -0.77))
node(node0.pos)
let node1= (pos:(0.62, -0.63))
node(node1.pos)
let node2= (pos:(-0.74, -0.05))
node(node2.pos)
let node3= (pos:(0.93, 0.49))
node(node3.pos)
let node4= (pos:(-0.57, 0.67))
node(node4.pos)
let node5= (pos:(0.48, 0.29))
node(node5.pos)
edge(node1.pos,(0.05, -0.73),node0.pos,decoration:"arrow",angle:-3.02rad)
cetz.draw.content((0.07, -0.85),angle:-3.02rad,[q+k[0]])
cetz.draw.hobby((0.52, -0.72),(0.06, -0.79),(-0.40, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.79, -0.10),node1.pos,decoration:"wave",angle:-1.84rad)
cetz.draw.content((0.91, -0.13),angle:-1.84rad,[q])
cetz.draw.hobby((0.97, 0.36),(0.86, -0.09),(0.72, -0.54),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.64, -0.42),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.76, -0.46),angle:5.00rad,[q])
cetz.draw.hobby((-0.61, -0.72),(-0.70, -0.43),(-0.78, -0.14),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.67, 0.47),node5.pos,decoration:"arrow",angle:3.55rad)
cetz.draw.content((0.63, 0.58),angle:3.55rad,[-p-2 q-k[3]])
cetz.draw.hobby((0.88, 0.56),(0.64, 0.52),(0.46, 0.37),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.67, 0.32),node2.pos,decoration:"arrow",angle:1.34rad)
cetz.draw.content((-0.78, 0.35),angle:1.34rad,[k[3]])
cetz.draw.hobby((-0.65, 0.61),(-0.73, 0.32),(-0.79, 0.03),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.04, 0.49),node4.pos,decoration:"coil",angle:2.80rad)
cetz.draw.content((-0.00, 0.60),angle:2.80rad,[-p-q])
cetz.draw.hobby((0.40, 0.39),(-0.02, 0.55),(-0.44, 0.69),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.70rad)
cetz.draw.content((-0.71, -1.00),angle:-2.70rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.01),(-0.59, -0.87),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.37rad)
cetz.draw.content((0.89, -0.73),angle:2.37rad,[-k[0]])
cetz.draw.hobby((0.74, -0.66),(0.97, -0.89),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.09rad)
cetz.draw.content((-0.89, -0.14),angle:6.09rad,[-q-k[3]])
cetz.draw.hobby((-0.91, -0.08),(-0.85, -0.09),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.50rad)
cetz.draw.content((0.80, 0.25),angle:-0.50rad,[-q-k[3]])
cetz.draw.hobby((0.60, 0.29),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.48rad)
cetz.draw.content((-0.86, 0.74),angle:2.48rad,[p+q+k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.69, 0.68),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:4.57rad)
cetz.draw.content((0.85, 0.76),angle:4.57rad,[p+q+k[3]])
cetz.draw.hobby((0.88, 0.60),(0.93, 0.91),stroke:stroke,mark: (end: ">"))
})
let embedding28f0=cetz.canvas(length:50%,{
let node0= (pos:(0.69, -0.64))
node(node0.pos)
let node1= (pos:(-0.31, -0.78))
node(node1.pos)
let node2= (pos:(0.78, 0.53))
node(node2.pos)
let node3= (pos:(0.42, -0.13))
node(node3.pos)
let node4= (pos:(-0.85, 0.51))
node(node4.pos)
let node5= (pos:(0.02, 0.44))
node(node5.pos)
edge(node0.pos,(0.19, -0.76),node1.pos,decoration:"arrow",angle:-3.00rad)
edge(node3.pos,(0.03, -0.45),node1.pos,decoration:"wave",angle:3.87rad)
edge(node0.pos,(0.79, -0.06),node2.pos,decoration:"wave",angle:-1.65rad)
edge(node2.pos,(0.40, 0.53),node5.pos,decoration:"arrow",angle:0.10rad)
edge(node3.pos,(0.20, 0.15),node5.pos,decoration:"arrow",angle:2.18rad)
edge(node5.pos,(-0.43, 0.49),node4.pos,decoration:"coil",angle:3.06rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.83rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.28rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-1.85rad)
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.36rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.00rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.14rad)
})
let embedding28f1=cetz.canvas(length:50%,{
let node0= (pos:(0.30, -0.78))
node(node0.pos)
let node1= (pos:(-0.69, -0.64))
node(node1.pos)
let node2= (pos:(-0.42, -0.13))
node(node2.pos)
let node3= (pos:(-0.78, 0.52))
node(node3.pos)
let node4= (pos:(-0.02, 0.44))
node(node4.pos)
let node5= (pos:(0.85, 0.51))
node(node5.pos)
edge(node0.pos,(-0.20, -0.76),node1.pos,decoration:"arrow",angle:3.00rad)
edge(node3.pos,(-0.79, -0.06),node1.pos,decoration:"wave",angle:4.79rad)
edge(node0.pos,(-0.03, -0.45),node2.pos,decoration:"wave",angle:-0.73rad)
edge(node4.pos,(-0.40, 0.53),node3.pos,decoration:"arrow",angle:3.04rad)
edge(node4.pos,(-0.20, 0.15),node2.pos,decoration:"arrow",angle:0.96rad)
edge(node5.pos,(0.43, 0.49),node4.pos,decoration:"coil",angle:3.22rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.28rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.83rad)
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.06rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-1.29rad)
edge(node3.pos,(-1.00, 1.00),decoration:"arrow",angle:2.00rad)
edge(node5.pos,(1.00, 1.00),decoration:"arrow",angle:4.42rad)
})
let embedding28f2=cetz.canvas(length:50%,{
let node0= (pos:(0.50, -0.73))
node(node0.pos)
let node1= (pos:(-0.50, -0.73))
node(node1.pos)
let node2= (pos:(0.27, 0.15))
node(node2.pos)
let node3= (pos:(-0.27, 0.15))
node(node3.pos)
let node4= (pos:(0.60, 0.71))
node(node4.pos)
let node5= (pos:(-0.59, 0.71))
node(node5.pos)
edge(node0.pos,(0.00, -0.76),node1.pos,decoration:"arrow",angle:3.14rad)
edge(node3.pos,(-0.41, -0.29),node1.pos,decoration:"wave",angle:4.45rad)
edge(node0.pos,(0.41, -0.30),node2.pos,decoration:"wave",angle:-1.32rad)
edge(node2.pos,(-0.14, 0.49),node5.pos,decoration:"arrow",angle:-0.57rad)
edge(node3.pos,(-0.49, 0.41),node5.pos,decoration:"arrow",angle:2.08rad)
edge(node4.pos,(0.14, 0.49),node3.pos,decoration:"arrow",angle:3.71rad)
edge(node4.pos,(0.50, 0.41),node2.pos,decoration:"arrow",angle:1.07rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.65rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.65rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.52rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.77rad)
})
let embedding29i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.54, -0.81))
node(node0.pos)
let node1= (pos:(0.51, -0.81))
node(node1.pos)
let node2= (pos:(-0.56, -0.03))
node(node2.pos)
let node3= (pos:(0.45, -0.02))
node(node3.pos)
let node4= (pos:(0.53, 0.61))
node(node4.pos)
let node5= (pos:(0.03, 0.53))
node(node5.pos)
edge(node1.pos,(-0.02, -0.84),node0.pos,decoration:"arrow",angle:3.14rad)
cetz.draw.content((-0.02, -0.96),angle:3.14rad,[q+k[0]])
cetz.draw.hobby((0.41, -0.88),(-0.02, -0.90),(-0.44, -0.88),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.50, -0.43),node1.pos,decoration:"wave",angle:-1.50rad)
cetz.draw.content((0.62, -0.42),angle:-1.50rad,[q])
cetz.draw.hobby((0.52, -0.09),(0.56, -0.41),(0.57, -0.73),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.57, -0.42),node2.pos,decoration:"wave",angle:4.73rad)
cetz.draw.content((-0.69, -0.43),angle:4.73rad,[q])
cetz.draw.hobby((-0.61, -0.74),(-0.63, -0.42),(-0.62, -0.10),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.21, 0.24),node5.pos,decoration:"arrow",angle:2.23rad)
cetz.draw.content((0.12, 0.17),angle:2.23rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((0.36, -0.02),(0.17, 0.20),(0.01, 0.44),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(0.58, 0.29),node3.pos,decoration:"arrow",angle:-1.68rad)
cetz.draw.content((0.70, 0.28),angle:-1.68rad,[-p-q-2 k[3]])
cetz.draw.hobby((0.61, 0.56),(0.64, 0.28),(0.54, 0.00),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.06, 0.25),node2.pos,decoration:"arrow",angle:0.53rad)
cetz.draw.content((0.00, 0.14),angle:0.53rad,[k[3]])
cetz.draw.hobby((0.46, 0.49),(0.03, 0.23),(-0.42, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
cetz.draw.content((-0.72, -1.02),angle:-2.75rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.61, -0.90),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.78rad)
cetz.draw.content((0.80, -0.79),angle:2.78rad,[-k[0]])
cetz.draw.hobby((0.62, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, 0.00),decoration:"arrow",angle:6.22rad)
cetz.draw.content((-0.79, -0.13),angle:6.22rad,[-q-k[3]])
cetz.draw.hobby((-0.90, -0.07),(-0.66, -0.08),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:-0.50rad)
cetz.draw.content((0.57, 0.37),angle:-0.50rad,[-q-k[3]])
cetz.draw.hobby((0.15, 0.53),(0.94, 0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.71rad)
cetz.draw.content((-0.54, 0.65),angle:2.71rad,[p+q+k[3]])
cetz.draw.hobby((-0.93, 0.90),(-0.09, 0.51),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.84rad)
cetz.draw.content((0.69, 0.90),angle:3.84rad,[p+q+k[3]])
cetz.draw.hobby((0.57, 0.72),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding29i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.43, -0.75))
node(node0.pos)
let node1= (pos:(0.61, -0.80))
node(node1.pos)
let node2= (pos:(-0.09, 0.12))
node(node2.pos)
let node3= (pos:(0.92, -0.00))
node(node3.pos)
let node4= (pos:(-0.71, 0.62))
node(node4.pos)
let node5= (pos:(0.44, 0.08))
node(node5.pos)
edge(node1.pos,(0.09, -0.81),node0.pos,decoration:"arrow",angle:3.09rad)
cetz.draw.content((0.08, -0.93),angle:3.09rad,[q+k[0]])
cetz.draw.hobby((0.51, -0.87),(0.09, -0.87),(-0.33, -0.83),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.78, -0.42),node1.pos,decoration:"wave",angle:-1.94rad)
cetz.draw.content((0.89, -0.47),angle:-1.94rad,[q])
cetz.draw.hobby((0.95, -0.10),(0.84, -0.43),(0.70, -0.75),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.28, -0.32),node2.pos,decoration:"wave",angle:4.35rad)
cetz.draw.content((-0.39, -0.27),angle:4.35rad,[q])
cetz.draw.hobby((-0.45, -0.64),(-0.33, -0.29),(-0.19, 0.06),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.69, 0.13),node5.pos,decoration:"arrow",angle:2.98rad)
cetz.draw.content((0.71, 0.24),angle:2.98rad,[-p-2 q-2 k[3]])
cetz.draw.hobby((0.92, 0.08),(0.70, 0.18),(0.46, 0.16),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-0.14, 0.43),node4.pos,decoration:"coil",angle:2.72rad)
cetz.draw.content((-0.09, 0.54),angle:2.72rad,[-p-q-k[3]])
cetz.draw.hobby((0.37, 0.20),(-0.08, 0.46),(-0.57, 0.64),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.73rad)
cetz.draw.content((-0.66, -0.99),angle:-2.73rad,[-k[0]])
cetz.draw.hobby((-0.88, -1.02),(-0.49, -0.85),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.67rad)
cetz.draw.content((0.86, -0.79),angle:2.67rad,[-k[0]])
cetz.draw.hobby((0.73, -0.79),(0.94, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.46rad)
cetz.draw.content((-0.49, -0.22),angle:0.46rad,[-q-k[3]])
cetz.draw.hobby((-0.88, -0.34),(-0.16, 0.02),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.63rad)
cetz.draw.content((0.79, -0.03),angle:-0.63rad,[-q-k[3]])
cetz.draw.hobby((0.55, 0.07),(0.96, -0.23),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.36rad)
cetz.draw.content((-0.77, 0.39),angle:-2.36rad,[p+q+2 k[3]])
cetz.draw.hobby((-0.89, 0.36),(-0.74, 0.51),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:4.47rad)
cetz.draw.content((0.84, 0.19),angle:4.47rad,[p+q+2 k[3]])
cetz.draw.hobby((0.88, 0.11),(0.92, 0.25),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.36rad)
cetz.draw.content((-0.95, 0.74),angle:5.36rad,[-k[3]])
cetz.draw.hobby((-0.99, 0.88),(-0.82, 0.66),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.68rad)
cetz.draw.content((0.38, 0.65),angle:0.68rad,[-k[3]])
cetz.draw.hobby((-0.05, 0.23),(0.88, 0.98),stroke:stroke,mark: (end: ">"))
})
let embedding29f0=cetz.canvas(length:50%,{
let node0= (pos:(0.54, -0.81))
node(node0.pos)
let node1= (pos:(-0.51, -0.81))
node(node1.pos)
let node2= (pos:(0.56, -0.03))
node(node2.pos)
let node3= (pos:(-0.46, -0.02))
node(node3.pos)
let node4= (pos:(-0.03, 0.53))
node(node4.pos)
let node5= (pos:(-0.53, 0.61))
node(node5.pos)
edge(node0.pos,(0.02, -0.84),node1.pos,decoration:"arrow",angle:-3.14rad)
edge(node3.pos,(-0.50, -0.43),node1.pos,decoration:"wave",angle:4.65rad)
edge(node0.pos,(0.57, -0.43),node2.pos,decoration:"wave",angle:-1.59rad)
edge(node2.pos,(0.06, 0.25),node5.pos,decoration:"arrow",angle:5.76rad)
edge(node3.pos,(-0.58, 0.29),node5.pos,decoration:"arrow",angle:1.68rad)
edge(node4.pos,(-0.21, 0.24),node3.pos,decoration:"arrow",angle:-2.23rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.74rad)
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:0.50rad)
edge(node2.pos,(1.00, 0.00),decoration:"arrow",angle:0.07rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.44rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.57rad)
})
let embedding29f1=cetz.canvas(length:50%,{
let node0= (pos:(0.42, -0.74))
node(node0.pos)
let node1= (pos:(-0.60, -0.75))
node(node1.pos)
let node2= (pos:(0.08, 0.13))
node(node2.pos)
let node3= (pos:(-0.79, 0.11))
node(node3.pos)
let node4= (pos:(-0.48, 0.72))
node(node4.pos)
let node5= (pos:(0.71, 0.17))
node(node5.pos)
edge(node0.pos,(-0.09, -0.78),node1.pos,decoration:"arrow",angle:-3.13rad)
edge(node3.pos,(-0.70, -0.33),node1.pos,decoration:"wave",angle:4.93rad)
edge(node0.pos,(0.26, -0.31),node2.pos,decoration:"wave",angle:-1.20rad)
edge(node4.pos,(-0.63, 0.42),node3.pos,decoration:"arrow",angle:4.24rad)
edge(node5.pos,(0.13, 0.50),node4.pos,decoration:"coil",angle:2.71rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.59rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.73rad)
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.40rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-1.04rad)
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:2.32rad)
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.66rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.79rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:0.76rad)
})
let embedding30i0=cetz.canvas(length:50%,{
let node0= (pos:(-0.56, -0.84))
node(node0.pos)
let node1= (pos:(0.42, -0.65))
node(node1.pos)
let node2= (pos:(-0.76, -0.19))
node(node2.pos)
let node3= (pos:(0.09, 0.51))
node(node3.pos)
let node4= (pos:(-0.51, 0.54))
node(node4.pos)
let node5= (pos:(0.72, 0.08))
node(node5.pos)
edge(node1.pos,(-0.06, -0.77),node0.pos,decoration:"arrow",angle:-2.94rad)
cetz.draw.content((-0.04, -0.89),angle:-2.94rad,[q+k[0]])
cetz.draw.hobby((0.34, -0.73),(-0.05, -0.83),(-0.46, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.25, -0.07),node1.pos,decoration:"wave",angle:4.99rad)
cetz.draw.content((0.13, -0.11),angle:4.99rad,[q])
cetz.draw.hobby((0.06, 0.38),(0.19, -0.08),(0.33, -0.55),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.66, -0.53),node2.pos,decoration:"wave",angle:5.00rad)
cetz.draw.content((-0.78, -0.56),angle:5.00rad,[q])
cetz.draw.hobby((-0.64, -0.80),(-0.72, -0.54),(-0.80, -0.27),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.65, 0.19),node2.pos,decoration:"arrow",angle:1.24rad)
cetz.draw.content((-0.76, 0.23),angle:1.24rad,[k[3]])
cetz.draw.hobby((-0.60, 0.50),(-0.71, 0.20),(-0.80, -0.10),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(0.11, 0.25),node4.pos,decoration:"coil",angle:2.79rad)
cetz.draw.content((0.07, 0.13),angle:2.79rad,[-1/2 p+1/2 k[3]])
cetz.draw.hobby((0.57, 0.05),(0.06, 0.20),(-0.42, 0.43),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.80rad)
cetz.draw.content((-0.74, -1.03),angle:-2.80rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.64, -0.93),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.60rad)
cetz.draw.content((0.77, -0.72),angle:2.60rad,[-k[0]])
cetz.draw.hobby((0.54, -0.65),(0.95, -0.90),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-1.00, -0.33),decoration:"arrow",angle:0.54rad)
cetz.draw.content((-0.82, -0.37),angle:0.54rad,[-q-k[3]])
cetz.draw.hobby((-0.88, -0.33),(-0.81, -0.29),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:-0.97rad)
cetz.draw.content((0.96, -0.06),angle:-0.97rad,[-q-k[3]])
cetz.draw.hobby((0.82, 0.03),(0.99, -0.22),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.98rad)
cetz.draw.content((-0.44, 0.31),angle:-2.98rad,[1/2 p+q+1/2 k[3]])
cetz.draw.hobby((-0.89, 0.29),(-0.00, 0.44),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(1.00, 0.33),decoration:"arrow",angle:3.87rad)
cetz.draw.content((0.78, 0.30),angle:3.87rad,[1/2 p+q+1/2 k[3]])
cetz.draw.hobby((0.75, 0.19),(0.89, 0.31),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:2.39rad)
cetz.draw.content((-0.84, 0.68),angle:2.39rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.97, 0.89),(-0.62, 0.57),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 1.00),decoration:"arrow",angle:3.63rad)
cetz.draw.content((0.49, 0.86),angle:3.63rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.15, 0.61),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding30i1=cetz.canvas(length:50%,{
let node0= (pos:(-0.51, -0.82))
node(node0.pos)
let node1= (pos:(0.54, -0.81))
node(node1.pos)
let node2= (pos:(-0.45, -0.02))
node(node2.pos)
let node3= (pos:(0.56, -0.03))
node(node3.pos)
let node4= (pos:(-0.03, 0.53))
node(node4.pos)
let node5= (pos:(-0.53, 0.61))
node(node5.pos)
edge(node1.pos,(0.02, -0.84),node0.pos,decoration:"arrow",angle:-3.13rad)
cetz.draw.content((0.02, -0.96),angle:-3.13rad,[q+k[0]])
cetz.draw.hobby((0.44, -0.88),(0.02, -0.90),(-0.41, -0.89),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.57, -0.43),node1.pos,decoration:"wave",angle:-1.59rad)
cetz.draw.content((0.69, -0.43),angle:-1.59rad,[q])
cetz.draw.hobby((0.62, -0.10),(0.63, -0.42),(0.61, -0.74),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-0.50, -0.43),node2.pos,decoration:"wave",angle:4.64rad)
cetz.draw.content((-0.62, -0.42),angle:4.64rad,[q])
cetz.draw.hobby((-0.57, -0.74),(-0.56, -0.41),(-0.53, -0.09),stroke:stroke,mark: (end: ">"))
edge(node2.pos,(-0.58, 0.29),node5.pos,decoration:"arrow",angle:4.83rad)
cetz.draw.content((-0.70, 0.28),angle:4.83rad,[q+k[3]])
cetz.draw.hobby((-0.54, 0.00),(-0.64, 0.28),(-0.61, 0.56),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(0.06, 0.24),node5.pos,decoration:"arrow",angle:2.62rad)
cetz.draw.content((-0.00, 0.14),angle:2.62rad,[-1/2 p-q-1/2 k[3]])
cetz.draw.hobby((0.42, -0.03),(-0.03, 0.22),(-0.46, 0.49),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-0.21, 0.24),node2.pos,decoration:"arrow",angle:0.91rad)
cetz.draw.content((-0.11, 0.16),angle:0.91rad,[k[3]])
cetz.draw.hobby((-0.01, 0.44),(-0.17, 0.20),(-0.36, -0.02),stroke:stroke,mark: (end: ">"))
edge(node0.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.78rad)
cetz.draw.content((-0.71, -1.02),angle:-2.78rad,[-k[0]])
cetz.draw.hobby((-0.89, -1.02),(-0.58, -0.91),stroke:stroke,mark: (end: ">"))
edge(node1.pos,(1.00, -1.00),decoration:"arrow",angle:2.75rad)
cetz.draw.content((0.82, -0.79),angle:2.75rad,[-k[0]])
cetz.draw.hobby((0.66, -0.79),(0.93, -0.91),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(-1.00, 0.00),decoration:"arrow",angle:-2.65rad)
cetz.draw.content((-0.46, 0.16),angle:-2.65rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((-0.88, -0.01),(-0.09, 0.43),stroke:stroke,mark: (end: ">"))
edge(node3.pos,(1.00, 0.00),decoration:"arrow",angle:3.21rad)
cetz.draw.content((0.77, 0.10),angle:3.21rad,[1/2 p+1/2 k[3]])
cetz.draw.hobby((0.65, 0.04),(0.90, 0.05),stroke:stroke,mark: (end: ">"))
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.44rad)
cetz.draw.content((-0.84, 0.71),angle:2.44rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((-0.96, 0.89),(-0.65, 0.63),stroke:stroke,mark: (end: ">"))
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.57rad)
cetz.draw.content((0.44, 0.87),angle:3.57rad,[1/2 p-1/2 k[3]])
cetz.draw.hobby((0.04, 0.62),(0.88, 1.01),stroke:stroke,mark: (end: ">"))
})
let embedding30f0=cetz.canvas(length:50%,{
let node0= (pos:(0.51, -0.82))
node(node0.pos)
let node1= (pos:(-0.54, -0.81))
node(node1.pos)
let node2= (pos:(0.45, -0.02))
node(node2.pos)
let node3= (pos:(-0.56, -0.03))
node(node3.pos)
let node4= (pos:(0.53, 0.61))
node(node4.pos)
let node5= (pos:(0.03, 0.53))
node(node5.pos)
edge(node0.pos,(-0.02, -0.84),node1.pos,decoration:"arrow",angle:3.13rad)
edge(node3.pos,(-0.57, -0.43),node1.pos,decoration:"wave",angle:4.73rad)
edge(node0.pos,(0.50, -0.43),node2.pos,decoration:"wave",angle:-1.50rad)
edge(node2.pos,(0.21, 0.24),node5.pos,decoration:"arrow",angle:5.37rad)
edge(node4.pos,(-0.06, 0.24),node3.pos,decoration:"arrow",angle:-2.62rad)
edge(node4.pos,(0.58, 0.29),node2.pos,decoration:"arrow",angle:1.46rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.75rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.79rad)
edge(node3.pos,(-1.00, 0.00),decoration:"arrow",angle:3.07rad)
edge(node5.pos,(1.00, 0.00),decoration:"arrow",angle:2.64rad)
edge(node5.pos,(-1.00, 1.00),decoration:"coil",angle:2.71rad)
edge(node4.pos,(1.00, 1.00),decoration:"coil",angle:3.84rad)
})
let embedding30f1=cetz.canvas(length:50%,{
let node0= (pos:(0.64, -0.65))
node(node0.pos)
let node1= (pos:(-0.42, -0.81))
node(node1.pos)
let node2= (pos:(0.83, 0.53))
node(node2.pos)
let node3= (pos:(-0.09, -0.13))
node(node3.pos)
let node4= (pos:(-0.71, 0.61))
node(node4.pos)
let node5= (pos:(0.44, 0.11))
node(node5.pos)
edge(node0.pos,(0.12, -0.77),node1.pos,decoration:"arrow",angle:-2.99rad)
edge(node3.pos,(-0.28, -0.47),node1.pos,decoration:"wave",angle:4.27rad)
edge(node0.pos,(0.79, -0.08),node2.pos,decoration:"wave",angle:-1.73rad)
edge(node2.pos,(0.61, 0.36),node5.pos,decoration:"arrow",angle:0.82rad)
edge(node5.pos,(-0.14, 0.39),node4.pos,decoration:"coil",angle:2.74rad)
edge(node1.pos,(-1.00, -1.00),decoration:"arrow",angle:-2.82rad)
edge(node0.pos,(1.00, -1.00),decoration:"arrow",angle:2.37rad)
edge(node3.pos,(-1.00, -0.33),decoration:"arrow",angle:-2.92rad)
edge(node5.pos,(1.00, -0.33),decoration:"arrow",angle:2.47rad)
edge(node4.pos,(-1.00, 0.33),decoration:"arrow",angle:-2.40rad)
edge(node3.pos,(1.00, 0.33),decoration:"arrow",angle:3.54rad)
edge(node4.pos,(-1.00, 1.00),decoration:"arrow",angle:5.35rad)
edge(node2.pos,(1.00, 1.00),decoration:"arrow",angle:1.22rad)
})
[= embedding 1 [1, -1, -2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
2 (-2 dot[p,q]-dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1
	+2 (-2 dot[p,q]-dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
	-(-2 dot[p,q]-dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-(-2 dot[p,q]-dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-(-2 dot[p,q]-dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1
	+1/2 (-2 dot[p,q]-dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1
	-4 (-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 dot[p,p]^-1
	-4 (-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	+2 (-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
	-(-2 dot[p,q]-dot[q,q])^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,1/2 p-1/2 q-1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1i0 -3+11+17],box[#embedding1i1 -3+11+13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p-1/2 k[3]]^-1 prop[0,1/2 p-q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding1f0 -1+13+17],box[#embedding1f1 -1+8+11+13],)
pagebreak()
[= embedding 2 [1, -1, -1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/4 (-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
	-1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1
	-1/2 (-dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-1
	-2 (-dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 dot[p,p]^-1
	-2 (-dot[p,q]-1/2 dot[q,q])^-1 prop[0,p-k[3]]^-1 prop[0,p-2 k[3]]^-1 prop[0,p-q-2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2i0 -3+14+17],box[#embedding2i1 -3+8+11+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-q-2 k[3]]^-1 prop[0,p-2 q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding2f0 -1+8+17],box[#embedding2f1 -1+8+13+14],)
pagebreak()
[= embedding 3 [1, -1, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	+1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	+1/2 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	-1/2 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3i0 -3+17],box[#embedding3i1 -3+8+11],box[#embedding3i2 -3+13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-q-k[3]]^-1 prop[0,p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding3f0 -1+8-14+17],box[#embedding3f1 -1-11+13+17],box[#embedding3f2 -1+8+13],)
pagebreak()
[= embedding 4 [1, -1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4i0 -3-14+17],box[#embedding4i1 -3+8+11-14],box[#embedding4i2 -3+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q]^-1 prop[0,p-2 q]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding4f0 -1+8+13-14],)
pagebreak()
[= embedding 5 [1, -1, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5i0 -3+8],box[#embedding5i1 -3-11+17],box[#embedding5i2 -3-11+13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,p-q]^-1 prop[0,p-2 q]^-1 prop[0,p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding5f0 -1+8-11+13],)
pagebreak()
[= embedding 6 [1, 0, -2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1
	+6 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	-(2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1
	+3 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	+3 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	+3/2 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	+2 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1
	-6 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	-3 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	+(2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1
	-3 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
	-3/2 (2 dot[p,q]+dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,1/2 p+1/2 k[3]]^-1 prop[0,1/2 p+q+1/2 k[3]]^-1 prop[0,1/2 p+q+3/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6i0 -3-8+11+13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,1/2 p-1/2 q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding6f0 -1+11+13-14],)
pagebreak()
[= embedding 7 [1, 0, -1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q-k[3]]^-1
	-(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7i0 -3+11-13+17],box[#embedding7i1 -3-8+14+17],box[#embedding7i2 -3+11+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-k[3]]^-1 prop[0,p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding7f0 -1+13+14],box[#embedding7f1 -1+8+11],box[#embedding7f2 -1+17],)
pagebreak()
[= embedding 8 [1, 0, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8i0 -3-8+17],box[#embedding8i1 -3-8+13+14],box[#embedding8i2 -3+11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding8f0 -1+13],box[#embedding8f1 -1-14+17],box[#embedding8f2 -1+8+11-14],)
pagebreak()
[= embedding 9 [1, 0, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	-1/2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	+1/2 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	+1/2 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,p+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9i0 -3+11+13-17],box[#embedding9i1 -3-8-14+17],box[#embedding9i2 -3-8+13],box[#embedding9i3 -3+11-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding9f0 -1+13-14],)
pagebreak()
[= embedding 10 [1, 0, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,q+k[2]]^-1 prop[0,p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10i0 -3+8+11-13],box[#embedding10i1 -3+14],box[#embedding10i2 -3-13+17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding10f0 -1-11+17],box[#embedding10f1 -1+8],box[#embedding10f2 -1-11+13+14],)
pagebreak()
[= embedding 11 [1, 0, 0, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-1 prop[0,q+k[3]]^-1 prop[0,q+k[2]+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-1 prop[0,q+k[3]]^-1 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11i0 -3],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-1 prop[0,q+k[3]]^-1 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding11f0 -1+8+13-17],box[#embedding11f1 -1-11+13],box[#embedding11f2 -1-11-14+17],box[#embedding11f3 -1+8-14],)
pagebreak()
[= embedding 12 [1, 0, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,-p+q+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12i0 -3-8-11+13],box[#embedding12i1 -3-14],box[#embedding12i2 -3+13-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,-p+q]^-1 prop[0,-p+2 q]^-1 prop[0,-p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding12f0 -1-11+13-14],)
pagebreak()
[= embedding 13 [1, 0, 1, -2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1
	-3/4 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	-3/2 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	+(-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	-3/2 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	-3 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	-1/2 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	+3/4 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	-(-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
	+3/2 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	+3/2 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
	+3 (-dot[p,q]-1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+q+3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13i0 -3+8-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 prop[0,-p+2 q+2 k[3]]^-1 prop[0,-p+2 q+3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding13f0 -1+8-11+14],)
pagebreak()
[= embedding 14 [1, 0, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	-1/2 (-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	+(-dot[p,p]-2 dot[p,q]-dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	+1/2 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	+1/2 (-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
	-(-dot[p,p]+2 dot[p,q]-dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14i0 -3-11-13+17],box[#embedding14i1 -3+8+14-17],box[#embedding14i2 -3+8-13],box[#embedding14i3 -3-11+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+2 q+k[3]]^-1 prop[0,-p+2 q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding14f0 -1+8-11],)
pagebreak()
[= embedding 15 [1, 0, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]-2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding15i0 -3+8-17],box[#embedding15i1 -3+8-13-14],box[#embedding15i2 -3-11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+2 q]^-1 prop[0,-p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding15f0 -1+8-11-14],)
pagebreak()
[= embedding 16 [1, 1, -1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q]^-1 prop[0,p+2 q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16i0 -3-8+11+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[3]]^-1 prop[0,p+q]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding16f0 -1-8+17],box[#embedding16f1 -1-8+13+14],box[#embedding16f2 -1+11],)
pagebreak()
[= embedding 17 [1, 1, -1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-(2 dot[p,q]+2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 dot[p,p]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 dot[p,p]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
	+2 (2 dot[p,q]+2 dot[q,q])^-1 prop[0,p+q+k[3]]^-1 prop[0,p+2 q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding17i0 -3-8+11],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,p+k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding17f0 -1-8-14+17],box[#embedding17f1 -1+11+13-17],box[#embedding17f2 -1-8+13],box[#embedding17f3 -1+11-14],)
pagebreak()
[= embedding 18 [1, 1, -1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/2 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+3/4 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	-(dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	+3/2 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	+3/2 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	+3 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	+1/2 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1
	-3/4 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	-3/2 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	+(dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1
	-3/2 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
	-3 (dot[p,q]+1/2 dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+2 q+2 k[3]]^-1 prop[0,p+2 q+3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding18i0 -3-8+11-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,p+2 k[3]]^-1 prop[0,p+q+2 k[3]]^-1 prop[0,p+q+3 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding18f0 -1-8+13-14],)
pagebreak()
[= embedding 19 [1, 1, 0, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,q+k[2]]^-1 prop[0,p+2 q]^-1 prop[0,p+2 q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,p+2 q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding19i0 -3+11-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,p]^-1 prop[0,k[2]]^-1 prop[0,p+q]^-1 prop[0,q+k[2]]^-1 prop[0,p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding19f0 -1-13+17],box[#embedding19f1 -1+8+11-13],box[#embedding19f2 -1+14],)
pagebreak()
[= embedding 20 [1, 1, 0, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-1 prop[0,q+k[3]]^-1 prop[0,q+k[2]+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-1 prop[0,q+k[3]]^-1 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding20i0 -3+11-13],box[#embedding20i1 -3-8+14],box[#embedding20i2 -3-8-13+17],box[#embedding20i3 -3+11+14-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,k[3]]^-1 prop[0,q+k[2]]^-1 prop[0,q+k[3]]^-1 prop[0,q+k[2]+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding20f0 -1],)
pagebreak()
[= embedding 21 [1, 1, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-1 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,-p+k[2]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding21i0 -3-8],box[#embedding21i1 -3+11-17],box[#embedding21i2 -3+11-13-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding21f0 -1+13-17],box[#embedding21f1 -1-8-11+13],box[#embedding21f2 -1-14],)
pagebreak()
[= embedding 22 [1, 1, 1, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (-2 dot[p,q]-2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 (-dot[p,p]-4 dot[p,q]-4 dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	+(-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 dot[p,p]^-1
	-2 (-2 dot[p,q]-2 dot[q,q])^-1 prop[0,-p+k[3]]^-1 prop[0,-p+2 k[3]]^-1 prop[0,-p-q+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding22i0 -3-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p+q+k[3]]^-1 prop[0,-p+q+2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding22f0 -1+8+14-17],box[#embedding22f1 -1-11-13+17],box[#embedding22f2 -1+8-13],box[#embedding22f3 -1-11+14],)
pagebreak()
[= embedding 23 [1, 1, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding23i0 -3+14-17],box[#embedding23i1 -3-8-11+14],box[#embedding23i2 -3-13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p+q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding23f0 -1+8-17],box[#embedding23f1 -1+8-13-14],box[#embedding23f2 -1-11],)
pagebreak()
[= embedding 24 [1, 1, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	-1/2 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	-1/2 prop[0,k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
	+1/2 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1 dot[p,q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding24i0 -3-17],box[#embedding24i1 -3-8-11],box[#embedding24i2 -3-13-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p+q]^-1 prop[0,-p-k[3]]^-1 prop[0,-p+q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding24f0 -1+8-14-17],box[#embedding24f1 -1-11+13-17],box[#embedding24f2 -1-11-14],)
pagebreak()
[= embedding 25 [1, 1, 2, -1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-6 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1
	+2 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-3 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-3 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1
	+(-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-3/2 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]-2 dot[p,q]-2 dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	-2 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1
	+6 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1
	-(-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+3 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
	+3 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1
	+3/2 (-2 dot[p,q]-dot[q,q])^-1 (-1/2 dot[p,p]+dot[p,q]-1/2 dot[q,q])^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q+3/2 k[3]]^-1 prop[0,-1/2 p-1/2 q+1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding25i0 -3-11-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p+q+1/2 k[3]]^-1 prop[0,-1/2 p+q+3/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding25f0 -1+8-11-13],)
pagebreak()
[= embedding 26 [1, 2, 0, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,-p-q]^-1 prop[0,-p-2 q]^-1 prop[0,-p-q+k[2]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[2]]^-1 prop[0,q+k[2]]^-1 prop[0,-p-q+k[2]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding26i0 -3-8+11-13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[2]]^-1 prop[0,-p]^-1 prop[0,q+k[2]]^-1 prop[0,-p+k[2]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding26f0 -1+11-17],box[#embedding26f1 -1-8],box[#embedding26f2 -1+11-13-14],)
pagebreak()
[= embedding 27 [1, 2, 1, 0] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-2 q]^-1 prop[0,-p-q+k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(dot[p,p]+2 dot[p,q]+dot[q,q])^-1 (dot[p,p]+4 dot[p,q]+4 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q+k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding27i0 -3-8-13+14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p+k[3]]^-1 prop[0,-p-q]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding27f0 -1-13],box[#embedding27f1 -1+14-17],box[#embedding27f2 -1-8-11+14],)
pagebreak()
[= embedding 28 [1, 2, 1, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	-(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
	+(2 dot[p,q]+2 dot[q,q])^-1 (dot[p,p]+2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding28i0 -3+11-13-17],box[#embedding28i1 -3-8+14-17],box[#embedding28i2 -3-8-13],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,-p]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-q-k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding28f0 -1-13-14],box[#embedding28f1 -1-8-11],box[#embedding28f2 -1-17],)
pagebreak()
[= embedding 29 [1, 2, 1, 2] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-1/4 (dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1
	+1/2 (dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	+1/2 (dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
	-(dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
	+1/2 (dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
	-(dot[p,q]+1/2 dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1
	+1/2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 dot[p,p]^-1
	-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	-(dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 dot[p,p]^-1
	+2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
	+2 (dot[p,q]+1/2 dot[q,q])^-1 prop[0,-p-q-k[3]]^-1 prop[0,-p-q-2 k[3]]^-1 prop[0,-p-2 q-2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding29i0 -3-8-17],box[#embedding29i1 -3-8-13-14],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-p-k[3]]^-1 prop[0,-p-2 k[3]]^-1 prop[0,-p-q-2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding29f0 -1-14-17],box[#embedding29f1 -1-8-11-14],)
pagebreak()
[= embedding 30 [1, 2, 2, 1] 
 == initial
Denominator:
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
```Partial Fractioned Denominator:
```mathematica
-2 (2 dot[p,q]+dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	+(2 dot[p,q]+dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	+(2 dot[p,q]+dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1
	+(2 dot[p,q]+dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	-1/2 (2 dot[p,q]+dot[q,q])^-1 (1/2 dot[p,p]+dot[p,q]+1/2 dot[q,q])^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1
	+4 (2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 dot[p,p]^-1
	+4 (2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 dot[p,p]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 prop[0,k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
	-2 (2 dot[p,q]+dot[q,q])^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 dot[p,p]^-1
	+(2 dot[p,q]+dot[q,q])^-1 prop[0,-1/2 p+1/2 k[3]]^-1 prop[0,-1/2 p-1/2 k[3]]^-1 prop[0,-1/2 p-q-1/2 k[3]]^-1 dot[p,p]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding30i0 -3-8-11-13],box[#embedding30i1 -3-13-17],)
pagebreak()
[== final
Denominator: 
```mathematica
prop[0,k[3]]^-1 prop[0,q+k[3]]^-1 prop[0,-1/2 p+1/2 q+1/2 k[3]]^-1 prop[0,-1/2 p+1/2 q-1/2 k[3]]^-1 prop[0,-1/2 p-1/2 q-1/2 k[3]]^-1
```]
grid(columns: cols,gutter: 20pt,box[#embedding30f0 -1-11-17],box[#embedding30f1 -1-11-13-14],)
pagebreak()
}